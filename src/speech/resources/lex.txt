#imperative
check :- (M/PP)/PP : lambda x:p.(lambda y:l.(searchroom(x,y)))
search :- (M/PP)/PP : lambda x:p.(lambda y:l.(searchroom(x,y)))
look :- (M/PP)/PP : lambda x:p.(lambda y:l.(searchroom(x,y)))
tell me :- (M/PP)/PP : lambda x:p.(lambda y:l.(searchroom(x,y)))

bring :- (M/PP)/NP : lambda y:p.(lambda x:i.(bring(x,y)))
bring :- (M/PP)/NP : lambda y:i.(lambda x:p.(bring(y,x)))
deliver :- (M/PP)/NP : lambda y:i.(lambda x:p.(bring(y,x)))
give :- (M/NP)/NP : lambda x:p.(lambda y:i.(bring(y,x)))
give :- (M/PP)/NP : lambda x:i.(lambda y:p.(bring(x,y)))
would like :- (M\NP)/NP : lambda x:p.(lambda y:i.(bring(y,x)))
bring them :- (M\PP)/NP : lambda x:i.(lambda y:p.(bring(x,y)))
take :- (M/PP)/NP : lambda y:i.(lambda x:p.(bring(y,x)))

walk :- M/PP : lambda x:l.(walk(x))
go :- M/PP : lambda x:l.(walk(x)) 
needed :- M/PP : lambda x:l.(walk(x))

#prepositional arguments to commands
for :- PP/NP : lambda x:p.(x)
whether :- PP/NP : lambda x:p.(x)
in :- PP/NP : lambda x:l.(x)
is :- PP/PP : lambda x:l.(x)
at :- PP/NP : lambda x:l.(x)

to :- PP/NP : lambda x:p.(x)
to :- PP/NP : lambda x:l.(x)
to :- PP\NP : lambda x:p.(x)

#Vaccous statements. 
i :- M/M : lambda x:a.(x)
would like :- M/M : lambda x:a.(x)
i want :- M/M : lambda x:a.(x)
can you :- M/M : lambda x:a.(x)
you to :- M/M : lambda x:a.(x)
for you :- M/M : lambda x:a.(x)
to please :- M/M : lambda x:a.(x)
go and :- M/M : lambda x:a.(x)
go :- M/M : lambda x:a.(x)
you are :- M/M : lambda x:a.(x)
please :- M/M : lambda x:a.(x)

#Semi vaccous statements. 
wants you :- NP\NP : lambda x:p.(x)

#these are weird now bc there's some implicit knowledge in hasoffice that the second arg is an office
's office :- NP\NP : lambda x:p.(the(lambda y:l.(and(office(y), possesses(y,x)))))

#closed category
the :- NP/NP : lambda x:p.(x)
the :- NP/NP : lambda x:i.(x)

a :- NP/NP : lambda P:<i,t>.(a(lambda x:i.(P(x))))

# room atoms
room :- NP/N : lambda x:l.(x) 
				
3516 :- N : l3_516
3508 :- N : l3_508
3512 :- N : l3_512
3510 :- N : l3_510
3402 :- N : l3_402
3418 :- N : l3_418
3420 :- N : l3_420
3432 :- N : l3_432
3502 :- N : l3_502
3414 b :- N : l3_414b

# people atoms
bruce :- NP : bruce
bruce porter :- NP : bruce
stacy :- NP : stacy
dana :- NP : dana
jivko :- NP : jivko
peter :- NP : peter
peter stone :- NP : peter
ray :- NP : ray
mooney :- NP : ray
shiqi :- NP : shiqi
scott :- NP : scott
jesse :- NP : jesse
aishwarya :- NP : aishwarya
rudy :- NP : rodolfo
corona :- NP : rodolfo
rodolfo corona :- NP : rodolfo
niekum :- NP : scott

#People titles. 
mr :- NP/NP : lambda x:p.(x)
professor :- NP/NP : lambda x:p.(x)
doctor :- NP/NP : lambda x:p.(x)
dr :- NP/NP : lambda x:p.(x)

#Particular people titles. 
grad student :- NP : jesse

# item atoms
apple :- NP : apple
basket :- NP : basket
beverage :- NP : beverage
binder :- NP : binder
bread :- NP : bread
cake :- NP : cake
calendar :- NP : calendar
coke :- NP : coke
cupcake :- NP : cupcake
dessert :- NP : dessert
doritos :- NP : doritos
glass :- NP : glass
hamburger :- NP : hamburger
hammer :- NP : hammer
juice :- NP : juice
ledger :- NP : ledger
letter :- NP : letter
milk :- NP : milk
muffin :- NP : muffin
organizer :- NP : organizer
pencil :- NP : pencil
phone :- NP : phone
pillow :- NP : pillow
pizza :- NP : pizza
salad :- NP : salad
sandwich :- NP : sandwich
snack :- NP : snack
tea :- NP : tea
trashcan :- NP : trashcan
watch :- NP : watch

# Adjective predicates.
aerosol :- NP/NP : lambda x:i.(aerosol(x))
aluminum :- NP/NP : lambda x:i.(aluminum(x))
big :- NP/NP : lambda x:i.(big(x))
black :- NP/NP : lambda x:i.(black(x))
blue :- NP/NP : lambda x:i.(blue(x))
bright :- NP/NP : lambda x:i.(bright(x))
brown :- NP/NP : lambda x:i.(brown(x))
cardboard :- NP/NP : lambda x:i.(cardboard(x))
circular :- NP/NP : lambda x:i.(circular(x))
clear :- NP/NP : lambda x:i.(clear(x))
closed :- NP/NP : lambda x:i.(closed(x))
coffee :- NP/NP : lambda x:i.(coffee(x))
colored :- NP/NP : lambda x:i.(colored(x))
cream-colored :- NP/NP : lambda x:i.(cream-colored(x))
curvy :- NP/NP : lambda x:i.(curvy(x))
cylindrical :- NP/NP : lambda x:i.(cylindrical(x))
empty :- NP/NP : lambda x:i.(empty(x))
fat :- NP/NP : lambda x:i.(fat(x))
foam :- NP/NP : lambda x:i.(foam(x))
foamy :- NP/NP : lambda x:i.(foamy(x))
full :- NP/NP : lambda x:i.(full(x))
gray :- NP/NP : lambda x:i.(gray(x))
green :- NP/NP : lambda x:i.(green(x))
half-full :- NP/NP : lambda x:i.(half-full(x))
heavy :- NP/NP : lambda x:i.(heavy(x))
hollow :- NP/NP : lambda x:i.(hollow(x))
large :- NP/NP : lambda x:i.(large(x))
light :- NP/NP : lambda x:i.(light(x))
liquid :- NP/NP : lambda x:i.(liquid(x))
medium-sized :- NP/NP : lambda x:i.(medium-sized(x))
metal :- NP/NP : lambda x:i.(metal(x))
metallic :- NP/NP : lambda x:i.(metallic(x))
narrow :- NP/NP : lambda x:i.(narrow(x))
neon :- NP/NP : lambda x:i.(neon(x))
open :- NP/NP : lambda x:i.(open(x))
orange :- NP/NP : lambda x:i.(orange(x))
orange-topped :- NP/NP : lambda x:i.(orange-topped(x))
paper :- NP/NP : lambda x:i.(paper(x))
pencil-shaped :- NP/NP : lambda x:i.(pencil-shaped(x))
pink :- NP/NP : lambda x:i.(pink(x))
plastic :- NP/NP : lambda x:i.(plastic(x))
pointed :- NP/NP : lambda x:i.(pointed(x))
pointy :- NP/NP : lambda x:i.(pointy(x))
purple :- NP/NP : lambda x:i.(purple(x))
rectangular :- NP/NP : lambda x:i.(rectangular(x))
red :- NP/NP : lambda x:i.(red(x))
rough :- NP/NP : lambda x:i.(rough(x))
round :- NP/NP : lambda x:i.(round(x))
shiny :- NP/NP : lambda x:i.(shiny(x))
short :- NP/NP : lambda x:i.(short(x))
silent :- NP/NP : lambda x:i.(silent(x))
silver :- NP/NP : lambda x:i.(silver(x))
skinny :- NP/NP : lambda x:i.(skinny(x))
small :- NP/NP : lambda x:i.(small(x))
soft :- NP/NP : lambda x:i.(soft(x))
soup :- NP/NP : lambda x:i.(soup(x))
spherical :- NP/NP : lambda x:i.(spherical(x))
spiky :- NP/NP : lambda x:i.(spiky(x))
squishy :- NP/NP : lambda x:i.(squishy(x))
styrofoam :- NP/NP : lambda x:i.(styrofoam(x))
tall :- NP/NP : lambda x:i.(tall(x))
teal :- NP/NP : lambda x:i.(teal(x))
thin :- NP/NP : lambda x:i.(thin(x))
tiny :- NP/NP : lambda x:i.(tiny(x))
top :- NP/NP : lambda x:i.(top(x))
transparent :- NP/NP : lambda x:i.(transparent(x))
water :- NP/NP : lambda x:i.(water(x))
white :- NP/NP : lambda x:i.(white(x))
wide :- NP/NP : lambda x:i.(wide(x))
yellow :- NP/NP : lambda x:i.(yellow(x))

# Predicate adjectival nouns.
prism :- NP : lambda x:i.(prism(x))
ball :- NP : lambda x:i.(ball(x))
beans :- NP : lambda x:i.(beans(x))
book :- NP : lambda x:i.(book(x))
bottle :- NP : lambda x:i.(bottle(x))
box :- NP : lambda x:i.(box(x))
bucket :- NP : lambda x:i.(bucket(x))
can :- NP : lambda x:i.(can(x))
canister :- NP : lambda x:i.(canister(x))
cap :- NP : lambda x:i.(cap(x))
carton :- NP : lambda x:i.(carton(x))
cellphone :- NP : lambda x:i.(cellphone(x))
chips :- NP : lambda x:i.(chips(x))
container :- NP : lambda x:i.(container(x))
crayon :- NP : lambda x:i.(crayon(x))
cup :- NP : lambda x:i.(cup(x))
cylinder :- NP : lambda x:i.(cylinder(x))
diary :- NP : lambda x:i.(diary(x))
drink :- NP : lambda x:i.(drink(x))
flask :- NP : lambda x:i.(flask(x))
floaty :- NP : lambda x:i.(floaty(x))
jar :- NP : lambda x:i.(jar(x))
laptop :- NP : lambda x:i.(laptop(x))
lid :- NP : lambda x:i.(lid(x))
marker :- NP : lambda x:i.(marker(x))
mug :- NP : lambda x:i.(mug(x))
notebook :- NP : lambda x:i.(notebook(x))
object :- NP : lambda x:i.(object(x))
pineapple :- NP : lambda x:i.(pineapple(x))
plush-toy :- NP : lambda x:i.(plush-toy(x))
prism :- NP : lambda x:i.(prism(x))
rectangle :- NP : lambda x:i.(rectangle(x))
roll :- NP : lambda x:i.(roll(x))
shaker :- NP : lambda x:i.(shaker(x))
sphere :- NP : lambda x:i.(sphere(x))
spray :- NP : lambda x:i.(spray(x))
spraycan :- NP : lambda x:i.(spraycan(x))
stuffed-animal :- NP : lambda x:i.(stuffed-animal(x))
thing :- NP : lambda x:i.(thing(x))
tin :- NP : lambda x:i.(tin(x))
tub :- NP : lambda x:i.(tub(x))
tube :- NP : lambda x:i.(tube(x))
wipes :- NP : lambda x:i.(wipes(x))
