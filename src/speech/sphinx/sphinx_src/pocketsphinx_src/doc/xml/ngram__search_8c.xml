<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ngram__search_8c" kind="file">
    <compoundname>ngram_search.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/listelem_alloc.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes refid="pocketsphinx__internal_8h" local="yes">pocketsphinx_internal.h</includes>
    <includes refid="ps__lattice__internal_8h" local="yes">ps_lattice_internal.h</includes>
    <includes refid="ngram__search_8h" local="yes">ngram_search.h</includes>
    <includes refid="ngram__search__fwdtree_8h" local="yes">ngram_search_fwdtree.h</includes>
    <includes refid="ngram__search__fwdflat_8h" local="yes">ngram_search_fwdflat.h</includes>
    <incdepgraph>
      <node id="1451">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="1442">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1463">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
      </node>
      <node id="1434">
        <label>assert.h</label>
      </node>
      <node id="1465">
        <label>float.h</label>
      </node>
      <node id="1448">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
      </node>
      <node id="1439">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1459">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1442" relation="include">
        </childnode>
      </node>
      <node id="1447">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1440">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1462">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1470">
        <label>ngram_search_fwdflat.h</label>
        <link refid="ngram__search__fwdflat_8h"/>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1458">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1435">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1436">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1438">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1445" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1460">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
      </node>
      <node id="1441">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1445">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
      </node>
      <node id="1433">
        <label>string.h</label>
      </node>
      <node id="1450">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1455">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
      </node>
      <node id="1432">
        <label>src/libpocketsphinx/ngram_search.c</label>
        <link refid="ngram_search.c"/>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
      </node>
      <node id="1468">
        <label>ngram_search.h</label>
        <link refid="ngram__search_8h"/>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
      </node>
      <node id="1456">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1453">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
      </node>
      <node id="1469">
        <label>ngram_search_fwdtree.h</label>
        <link refid="ngram__search__fwdtree_8h"/>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1467">
        <label>ps_lattice_internal.h</label>
        <link refid="ps__lattice__internal_8h"/>
      </node>
      <node id="1437">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1454">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="1452">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
      </node>
      <node id="1449">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
      </node>
      <node id="1466">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
      </node>
      <node id="1457">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1443">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1464">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
      </node>
      <node id="1461">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
      </node>
      <node id="1444">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="1446">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ngram__search_8c_1af9ad6b3d4ef3ad501da8e2296b25a131" prot="public" static="no">
        <name>NGRAM_HISTORY_LONG_WORD</name>
        <initializer>2000 /* 20s */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="380" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="380" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ngram__search_8c_1a20b05818cd0bbbdb96b0898dedbba77f" prot="public" static="yes" mutable="no">
        <type><ref refid="pocketsphinx__internal_8h_1a0eae078e32bd5f339792884c68aad8b3" kindref="member">ps_searchfuncs_t</ref></type>
        <definition>ps_searchfuncs_t ngram_funcs</definition>
        <argsstring></argsstring>
        <name>ngram_funcs</name>
        <initializer>= {
      ngram_search_start,
       ngram_search_step,
     ngram_search_finish,
     ngram_search_reinit,
       <ref refid="ngram__search_8h_1a9bafaa4af5a9a4f9e76a8daf54ac4a11" kindref="member">ngram_search_free</ref>,
      <ref refid="ngram__search_8h_1ac30e7dec4bbfeee9f5163abf4bbd1014" kindref="member">ngram_search_lattice</ref>,
          ngram_search_hyp,
         ngram_search_prob,
     ngram_search_seg_iter,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="66" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ngram__search_8c_1a259c010b411c7b809ead9990cffd59bb" prot="public" static="yes" mutable="no">
        <type>ngram_model_t *</type>
        <definition>ngram_model_t* default_lm</definition>
        <argsstring></argsstring>
        <name>default_lm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="78" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ngram__search_8c_1a3639ef3d2b90004d58efdec885f9037a" prot="public" static="yes" mutable="no">
        <type><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref></type>
        <definition>ps_segfuncs_t ngram_bp_segfuncs</definition>
        <argsstring></argsstring>
        <name>ngram_bp_segfuncs</name>
        <initializer>= {
     ngram_bp_seg_next,
     ngram_bp_seg_free
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="959" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="959" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__search_8c_1a758d019535e72bd9e392dc35b8843cf9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_search_start</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>ngram_search_start</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="58" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="730" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1aae8c25b335f9a5ec5d6f1defc7f9fba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_search_step</definition>
        <argsstring>(ps_search_t *search, int frame_idx)</argsstring>
        <name>ngram_search_step</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="59" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="746" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1afa05cef034c5b2d393725ef8ac6a5ef4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_search_finish</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>ngram_search_finish</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="60" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="790" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a4e3bce8ace6c70b6671924bb3b9a5ce4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_search_reinit</definition>
        <argsstring>(ps_search_t *search, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>ngram_search_reinit</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="61" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="240" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a910bd37a7a806629501efe8b370590bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>static char const * ngram_search_hyp</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int32 *out_is_final)</argsstring>
        <name>ngram_search_hyp</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="62" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="852" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1aeea3d8fc9cd284eb900a873e6fcaa133" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 ngram_search_prob</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>ngram_search_prob</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="63" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1051" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1af44cc6b3a4e478dfb982f7e1b00b4308" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t * ngram_search_seg_iter</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>ngram_search_seg_iter</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="64" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1006" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a466d6f31bddf0da19b5d652c9d96a79f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_search_update_widmap</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_search_update_widmap</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="81" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="81" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a5bb6b7a1fae81beee062b5b6a75de089" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_search_calc_beams</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_search_calc_beams</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="97" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="97" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a04f80b377c847026254fb85596e2f43c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
        <definition>ps_search_t* ngram_search_init</definition>
        <argsstring>(const char *name, ngram_model_t *lm, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>ngram_search_init</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ngram_model_t *</type>
          <declname>lm</declname>
        </param>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Initialize the N-Gram search module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="140" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="140" bodyend="237"/>
        <references refid="acmod_8c_1a1555dac8fa27f644d709c5c89bbfa881" compoundref="acmod_8c" startline="412" endline="422">acmod_set_grow</references>
        <references refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" compoundref="pocketsphinx_8c" startline="1406" endline="1434">ps_search_init</references>
        <references refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" compoundref="ngram__search_8h" startline="200">ngram_search_s::hmmctx</references>
        <references refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" compoundref="hmm_8c" startline="56" endline="77">hmm_context_init</references>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" compoundref="acmod_8h" startline="160">acmod_s::tmat</references>
        <references refid="structtmat__t_1a9f518c96b30dab9efdb69bd779a7b5bf" compoundref="tmat_8h" startline="107">tmat_t::tp</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
        <references refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" compoundref="ngram__search_8h" startline="211">ngram_search_s::chan_alloc</references>
        <references refid="structngram__search__s_1a576470858bfa44c671f0e677902ab424" compoundref="ngram__search_8h" startline="212">ngram_search_s::root_chan_alloc</references>
        <references refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" compoundref="ngram__search_8h" startline="213">ngram_search_s::latnode_alloc</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" compoundref="dict_8h" startline="151">dict_size</references>
        <references refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" compoundref="ngram__search_8h" startline="247">ngram_search_s::word_active</references>
        <references refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" compoundref="ngram__search_8h" startline="307">ngram_search_s::n_frame_alloc</references>
        <references refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" compoundref="ngram__search_8h" startline="287">ngram_search_s::active_word_list</references>
        <references refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" compoundref="ngram__search_8h" startline="199">ngram_search_s::lmset</references>
        <references refid="ngram__search__fwdtree_8c_1a72c89a2a1f189495abee00e1853cddcc" compoundref="ngram__search__fwdtree_8c" startline="384" endline="393">ngram_fwdtree_init</references>
        <references refid="ngram__search__fwdflat_8c_1ad4b8ebd904c77f8a28f59cd5ca2c8307" compoundref="ngram__search__fwdflat_8c" startline="145" endline="166">ngram_fwdflat_init</references>
        <references refid="ngram__search_8c_1aeaf140dc2bbeaa5c274f73480b5328f3" compoundref="ngram__search_8c" startline="289" endline="326">ngram_search_free</references>
        <referencedby refid="ps__search_8h_1aa76b495c63c665a21a49d7cb51c66d74" compoundref="pocketsphinx_8c" startline="609" endline="614">ps_set_lm</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1aeaf140dc2bbeaa5c274f73480b5328f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_search_free</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>ngram_search_free</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Finalize the N-Gram search module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="289" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="289" bodyend="326"/>
        <references refid="ngram__search__fwdtree_8c_1a0e0e0436b30e1074114e1d37991c5d6b" compoundref="ngram__search__fwdtree_8c" startline="425" endline="451">ngram_fwdtree_deinit</references>
        <references refid="ngram__search__fwdflat_8c_1a8faf467f90162a7273b23304fc6e8586" compoundref="ngram__search__fwdflat_8c" startline="169" endline="189">ngram_fwdflat_deinit</references>
        <references refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" compoundref="pocketsphinx_8c" startline="1437" endline="1447">ps_search_base_free</references>
        <references refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" compoundref="hmm_8c" startline="80" endline="86">hmm_context_free</references>
        <references refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" compoundref="ngram__search_8h" startline="200">ngram_search_s::hmmctx</references>
        <references refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" compoundref="ngram__search_8h" startline="211">ngram_search_s::chan_alloc</references>
        <references refid="structngram__search__s_1a576470858bfa44c671f0e677902ab424" compoundref="ngram__search_8h" startline="212">ngram_search_s::root_chan_alloc</references>
        <references refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" compoundref="ngram__search_8h" startline="213">ngram_search_s::latnode_alloc</references>
        <references refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" compoundref="ngram__search_8h" startline="199">ngram_search_s::lmset</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" compoundref="ngram__search_8h" startline="247">ngram_search_s::word_active</references>
        <references refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" compoundref="ngram__search_8h" startline="287">ngram_search_s::active_word_list</references>
        <referencedby refid="ngram__search_8h_1a04f80b377c847026254fb85596e2f43c" compoundref="ngram__search_8c" startline="140" endline="237">ngram_search_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_search_mark_bptable</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>ngram_search_mark_bptable</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
<para>Record the current frame&apos;s index in the backpointer table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current backpointer index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="329" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="329" bodyend="345"/>
        <references refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" compoundref="ngram__search_8h" startline="316">ngram_search_s::frm_wordlist</references>
        <references refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" compoundref="ngram__search_8h" startline="307">ngram_search_s::n_frame_alloc</references>
        <referencedby refid="ngram__search__fwdflat_8h_1ac855cf540ac4acdfa320629720ded6fe" compoundref="ngram__search__fwdflat_8c" startline="929" endline="965">ngram_fwdflat_finish</referencedby>
        <referencedby refid="ngram__search__fwdflat_8h_1ae77ef21ae92dbcc4b14f40469fbd4307" compoundref="ngram__search__fwdflat_8c" startline="816" endline="877">ngram_fwdflat_search</referencedby>
        <referencedby refid="ngram__search__fwdtree_8h_1af32a83dbb9187542577a0c500b000840" compoundref="ngram__search__fwdtree_8c" startline="1502" endline="1573">ngram_fwdtree_finish</referencedby>
        <referencedby refid="ngram__search__fwdtree_8h_1a9e2828ba0d249424a234b6cf7d3ee530" compoundref="ngram__search__fwdtree_8c" startline="1458" endline="1499">ngram_fwdtree_search</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a28c6e6d23dfe9c2a094cf1b4e3401eaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_real_wid</definition>
        <argsstring>(ngram_search_t *ngs, int32 bp)</argsstring>
        <name>set_real_wid</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>bp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="348" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="348" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1ae36649be6f5a2190e759e7ed13bd7b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_search_save_bp</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx, int32 w, int32 score, int32 path, int32 rc)</argsstring>
        <name>ngram_search_save_bp</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>score</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
<para>Enter a word in the backpointer table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="383" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="383" bodyend="503"/>
        <references refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" compoundref="ngram__search_8h" startline="110">bptbl_s::frame</references>
        <references refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" compoundref="ngram__search_8h" startline="115">bptbl_s::score</references>
        <references refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" compoundref="hmm_8h" startline="100">WORSE_THAN</references>
        <references refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" compoundref="ngram__search_8h" startline="114">bptbl_s::bp</references>
        <references refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" compoundref="ngram__search_8h" startline="118">bptbl_s::prev_real_wid</references>
        <references refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" compoundref="ngram__search_8h" startline="117">bptbl_s::real_wid</references>
        <references refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" compoundref="ngram__search_8h" startline="116">bptbl_s::s_idx</references>
        <references refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" compoundref="ngram__search_8h" startline="113">bptbl_s::wid</references>
        <references refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" compoundref="ngram__search_8h" startline="111">bptbl_s::valid</references>
        <references refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" compoundref="ngram__search_8h" startline="119">bptbl_s::last_phone</references>
        <references refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" compoundref="ngram__search_8h" startline="120">bptbl_s::last2_phone</references>
        <references refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" compoundref="dict2pid_8h" startline="115">dict2pid_rssid</references>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1ac6a01bb08e7b8d1deb39763a98148cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_search_find_exit</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx, int32 *out_best_score, int32 *out_is_final)</argsstring>
        <name>ngram_search_find_exit</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_best_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
<para>Find the best word exit for the current frame in the backpointer table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the backpointer index of the best word exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="506" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="506" bodyend="550"/>
        <references refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" compoundref="hmm_8h" startline="95">BETTER_THAN</references>
        <references refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" compoundref="ngram__search_8h" startline="308">ngram_search_s::n_frame</references>
        <references refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" compoundref="ngram__search_8h" startline="115">bptbl_s::score</references>
        <references refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" compoundref="ngram__search_8h" startline="113">bptbl_s::wid</references>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1aee393a136f8f7e8b98161e6eed7b1dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const* ngram_search_bp_hyp</definition>
        <argsstring>(ngram_search_t *ngs, int bpidx)</argsstring>
        <name>ngram_search_bp_hyp</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bpidx</declname>
        </param>
        <briefdescription>
<para>Backtrace from a given backpointer index to obtain a word hypothesis. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <bold>read-only</bold> string with the best hypothesis. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="553" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="553" bodyend="598"/>
        <references refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" compoundref="ngram__search_8h" startline="114">bptbl_s::bp</references>
        <references refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" compoundref="dict_8c" startline="427" endline="438">dict_real_word</references>
        <references refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" compoundref="pocketsphinx__internal_8h" startline="109">ps_search_s::hyp_str</references>
        <references refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" compoundref="ngram__search_8h" startline="113">bptbl_s::wid</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a1ddcc1a9cb3e164ceb2140097ed23a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_search_alloc_all_rc</definition>
        <argsstring>(ngram_search_t *ngs, int32 w)</argsstring>
        <name>ngram_search_alloc_all_rc</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Allocate last phone channels for all possible right contexts for word w. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="601" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="601" bodyend="647"/>
        <references refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" compoundref="dict2pid_8h" startline="115">dict2pid_rssid</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" compoundref="ngram__search_8h" startline="65">chan_s::hmm</references>
        <references refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" compoundref="dict2pid_8h" startline="74">xwdssid_t::ssid</references>
        <references refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" compoundref="ngram__search_8h" startline="211">ngram_search_s::chan_alloc</references>
        <references refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" compoundref="ngram__search_8h" startline="68">chan_s::next</references>
        <references refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" compoundref="ngram__search_8h" startline="79">chan_s::rc_id</references>
        <references refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" compoundref="ngram__search_8h" startline="73">chan_s::ciphone</references>
        <references refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" compoundref="hmm_8c" startline="89" endline="108">hmm_init</references>
        <references refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" compoundref="ngram__search_8h" startline="200">ngram_search_s::hmmctx</references>
        <references refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" compoundref="dict2pid_8h" startline="76">xwdssid_t::n_ssid</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a15477192481dffcb29e9c4167eff6c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_search_free_all_rc</definition>
        <argsstring>(ngram_search_t *ngs, int32 w)</argsstring>
        <name>ngram_search_free_all_rc</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Allocate last phone channels for all possible right contexts for word w. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="650" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="650" bodyend="660"/>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" compoundref="ngram__search_8h" startline="68">chan_s::next</references>
        <references refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" compoundref="hmm_8c" startline="111" endline="113">hmm_deinit</references>
        <references refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" compoundref="ngram__search_8h" startline="65">chan_s::hmm</references>
        <references refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" compoundref="ngram__search_8h" startline="211">ngram_search_s::chan_alloc</references>
        <referencedby refid="ngram__search__fwdtree_8h_1af32a83dbb9187542577a0c500b000840" compoundref="ngram__search__fwdtree_8c" startline="1502" endline="1573">ngram_fwdtree_finish</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_search_exit_score</definition>
        <argsstring>(ngram_search_t *ngs, bptbl_t *pbe, int rcphone)</argsstring>
        <name>ngram_search_exit_score</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ngram__search_8h_1a81093c091a82066374627744595840e6" kindref="member">bptbl_t</ref> *</type>
          <declname>pbe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rcphone</declname>
        </param>
        <briefdescription>
<para>Get the exit score for a backpointer entry with a given right context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="663" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="663" bodyend="682"/>
        <references refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" compoundref="ngram__search_8h" startline="120">bptbl_s::last2_phone</references>
        <references refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" compoundref="ngram__search_8h" startline="115">bptbl_s::score</references>
        <references refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" compoundref="dict2pid_8h" startline="115">dict2pid_rssid</references>
        <references refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" compoundref="ngram__search_8h" startline="119">bptbl_s::last_phone</references>
        <references refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" compoundref="ngram__search_8h" startline="116">bptbl_s::s_idx</references>
        <references refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" compoundref="dict2pid_8h" startline="75">xwdssid_t::cimap</references>
        <referencedby refid="ngram__search_8h_1ac30e7dec4bbfeee9f5163abf4bbd1014" compoundref="ngram__search_8c" startline="1218" endline="1404">ngram_search_lattice</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a7526cf720a80052770c5b6f82c93749d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_compute_seg_score</definition>
        <argsstring>(ngram_search_t *ngs, bptbl_t *be, float32 lwf, int32 *out_ascr, int32 *out_lscr)</argsstring>
        <name>ngram_compute_seg_score</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ngram__search_8h_1a81093c091a82066374627744595840e6" kindref="member">bptbl_t</ref> *</type>
          <declname>be</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lwf</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_ascr</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_lscr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="688" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="688" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1ac10e5308e0a48948b3c21bb4c2d80c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dump_bptable</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>dump_bptable</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="759" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="759" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a40480deb5f7ab0788aa7e4dff35c4d55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1a58ba3066b0b611f07c7ae57d77f8e776" kindref="member">ps_latlink_t</ref> *</type>
        <definition>static ps_latlink_t* ngram_search_bestpath</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int backward)</argsstring>
        <name>ngram_search_bestpath</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="830" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="830" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a3d9e699d8b14ba6580588e217a3f1dae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_search_bp2itor</definition>
        <argsstring>(ps_seg_t *seg, int bp)</argsstring>
        <name>ngram_search_bp2itor</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="894" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="894" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1afd39320bbbd7ee86dae9f925096d47bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_bp_seg_free</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>ngram_bp_seg_free</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="937" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="937" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a031109ac49248922b53dc6e44d007e30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* ngram_bp_seg_next</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>ngram_bp_seg_next</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="946" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="946" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a654477fc69043f5885da51ba81d172dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* ngram_search_bp_iter</definition>
        <argsstring>(ngram_search_t *ngs, int bpidx, float32 lwf)</argsstring>
        <name>ngram_search_bp_iter</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bpidx</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lwf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="965" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="965" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1ae4b7f9233efca983f30d38c9b6ec4373" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void create_dag_nodes</definition>
        <argsstring>(ngram_search_t *ngs, ps_lattice_t *dag)</argsstring>
        <name>create_dag_nodes</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="1073" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1073" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a6ba4df60bd17a7da644e36cf92bc2d22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
        <definition>static ps_latnode_t* find_start_node</definition>
        <argsstring>(ngram_search_t *ngs, ps_lattice_t *dag)</argsstring>
        <name>find_start_node</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="1131" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1131" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1ae476eb2dbd2f1192897386e4507f78e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
        <definition>static ps_latnode_t* find_end_node</definition>
        <argsstring>(ngram_search_t *ngs, ps_lattice_t *dag, float32 lwf)</argsstring>
        <name>find_end_node</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lwf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="1149" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1149" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1ac30e7dec4bbfeee9f5163abf4bbd1014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
        <definition>ps_lattice_t* ngram_search_lattice</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>ngram_search_lattice</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Construct a word lattice from the current hypothesis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="1218" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1218" bodyend="1404"/>
        <references refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" compoundref="ngram__search_8h" startline="325">ngram_search_s::best_score</references>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
        <references refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" compoundref="hmm_8h" startline="100">WORSE_THAN</references>
        <references refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" compoundref="pocketsphinx__internal_8h" startline="110">ps_search_s::dag</references>
        <references refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" compoundref="ps__lattice__internal_8h" startline="74">ps_lattice_s::n_frames</references>
        <references refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" compoundref="ngram__search_8h" startline="308">ngram_search_s::n_frame</references>
        <references refid="ps__lattice_8h_1a3f90e846bde47cd1acdff165b92f5c22" compoundref="ps__lattice_8c" startline="665" endline="679">ps_lattice_free</references>
        <references refid="ps__lattice_8c_1a606f6ee0fd569dd5829d7f84ae7e61bd" compoundref="ps__lattice_8c" startline="639" endline="655">ps_lattice_init_search</references>
        <references refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" compoundref="ps__lattice__internal_8h" startline="71">ps_lattice_s::start</references>
        <references refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" compoundref="ps__lattice__internal_8h" startline="72">ps_lattice_s::end</references>
        <references refid="structps__search__s_1a918f243fa966e72c47f697fb9e60089d" compoundref="pocketsphinx__internal_8h" startline="107">ps_search_s::dict</references>
        <references refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" compoundref="ps__lattice__internal_8h" startline="115">ps_latnode_s::wid</references>
        <references refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" compoundref="ps__lattice__internal_8h" startline="120">ps_latnode_s::sf</references>
        <references refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" compoundref="ps__lattice__internal_8h" startline="119">ps_latnode_s::lef</references>
        <references refid="structps__lattice__s_1aba113d4134c72d7405423c77bcc1247e" compoundref="ps__lattice__internal_8h" startline="76">ps_lattice_s::final_node_ascr</references>
        <references refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" compoundref="ps__lattice__internal_8h" startline="70">ps_lattice_s::nodes</references>
        <references refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" compoundref="ps__lattice__internal_8h" startline="133">ps_latnode_s::next</references>
        <references refid="structps__lattice__s_1a14e4e87550647d5119cd1cc48ff4f3f1" compoundref="ps__lattice__internal_8h" startline="80">ps_lattice_s::latnode_alloc</references>
        <references refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" compoundref="ps__lattice__internal_8h" startline="121">ps_latnode_s::reachable</references>
        <references refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" compoundref="ps__lattice__internal_8h" startline="118">ps_latnode_s::fef</references>
        <references refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" compoundref="ngram__search_8h" startline="110">bptbl_s::frame</references>
        <references refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" compoundref="ngram__search_8h" startline="113">bptbl_s::wid</references>
        <references refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" compoundref="ngram__search_8c" startline="663" endline="682">ngram_search_exit_score</references>
        <references refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" compoundref="ngram__search_8h" startline="115">bptbl_s::score</references>
        <references refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" compoundref="hmm_8h" startline="95">BETTER_THAN</references>
        <references refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" compoundref="ps__lattice_8c" startline="65" endline="103">ps_lattice_link</references>
        <references refid="structps__latnode__s_1ae3b3dc7d14347e6380859c74b9a02589" compoundref="ps__lattice__internal_8h" startline="116">ps_latnode_s::basewid</references>
        <references refid="structps__latnode__s_1aa4c0a395c74acbacccde561f92fa89e4" compoundref="ps__lattice__internal_8h" startline="132">ps_latnode_s::alt</references>
        <references refid="structps__lattice__s_1adcc3bdadae1f3e3ace2d36548983ae78" compoundref="ps__lattice__internal_8h" startline="75">ps_lattice_s::n_nodes</references>
        <references refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" compoundref="dict_8c" startline="413" endline="424">dict_filler_word</references>
        <references refid="ps__lattice_8c_1a6da4e36322aaab4d2ebe812bee9a4439" compoundref="ps__lattice_8c" startline="174" endline="207">ps_lattice_delete_unreachable</references>
        <references refid="ps__lattice_8c_1a551b8246b45e8953491a24db438c59c1" compoundref="ps__lattice_8c" startline="106" endline="117">ps_lattice_penalize_fillers</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search_8c_1a0e681022d3fa0e63da066aad123245e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_search_set_lm</definition>
        <argsstring>(ngram_model_t *lm)</argsstring>
        <name>ngram_search_set_lm</name>
        <param>
          <type>ngram_model_t *</type>
          <declname>lm</declname>
        </param>
        <briefdescription>
<para>Sets the global language model. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the language model to use if nothing was passed in configuration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" line="1406" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c" bodystart="1406" bodyend="1409"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>N-Gram based multi-pass search (&quot;FBS&quot;) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/listelem_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pocketsphinx__internal_8h" kindref="compound">pocketsphinx_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ps__lattice__internal_8h" kindref="compound">ps_lattice_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__search_8h" kindref="compound">ngram_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__search__fwdtree_8h" kindref="compound">ngram_search_fwdtree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__search__fwdflat_8h" kindref="compound">ngram_search_fwdflat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngram_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngram_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngram_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngram_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ngram_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/>int32<sp/>*out_is_final);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32<sp/>ngram_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*ngram_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__searchfuncs__s" kindref="compound">ps_searchfuncs_t</ref><sp/>ngram_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start:<sp/>*/</highlight><highlight class="normal"><sp/><sp/>ngram_search_start,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/>ngram_search_step,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish:<sp/>*/</highlight><highlight class="normal"><sp/>ngram_search_finish,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reinit:<sp/>*/</highlight><highlight class="normal"><sp/>ngram_search_reinit,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="ngram__search_8c_1aeaf140dc2bbeaa5c274f73480b5328f3" kindref="member">ngram_search_free</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lattice:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><ref refid="ngram__search_8c_1ac30e7dec4bbfeee9f5163abf4bbd1014" kindref="member">ngram_search_lattice</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hyp:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngram_search_hyp,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prob:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ngram_search_prob,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_iter:<sp/>*/</highlight><highlight class="normal"><sp/>ngram_search_seg_iter,</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ngram_model_t<sp/>*default_lm;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">ngram_search_update_widmap(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**words;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>n_words;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>okay<sp/>to<sp/>include<sp/>fillers<sp/>since<sp/>they<sp/>won&apos;t<sp/>be<sp/>in<sp/>the<sp/>LM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>words<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">**)ckd_calloc(n_words,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*words));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>will<sp/>include<sp/>alternates,<sp/>again,<sp/>that&apos;s<sp/>okay<sp/>since<sp/>they<sp/>aren&apos;t<sp/>in<sp/>the<sp/>LM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_words;<sp/>++i)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words[i]<sp/>=<sp/>dict_wordstr(ps_search_dict(ngs),<sp/>i);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_set_map_words(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,<sp/>words,<sp/>n_words);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(words);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">ngram_search_calc_beams(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd_ln_t<sp/>*config;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>ps_search_config(ngs);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod<sp/>=<sp/>ps_search_acmod(ngs);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log<sp/>beam<sp/>widths.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;beam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-beam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;wbeam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-wbeam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;pbeam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pbeam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;lpbeam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lpbeam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;lponlybeam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lponlybeam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;fwdflatbeam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdflatbeam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;fwdflatwbeam<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdflatwbeam&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Absolute<sp/>pruning<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;maxwpf<sp/>=<sp/>cmd_ln_int32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-maxwpf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;maxhmmpf<sp/>=<sp/>cmd_ln_int32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-maxhmmpf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Various<sp/>penalties<sp/>which<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>useful.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;wip<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-wip&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;nwpen<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-nwpen&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;pip<sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pip&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;silpen<sp/>=<sp/>ngs-&gt;pip</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-silprob&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;fillpen<sp/>=<sp/>ngs-&gt;pip</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fillprob&quot;</highlight><highlight class="normal">))&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Language<sp/>weight<sp/>ratios<sp/>for<sp/>fwdflat<sp/>and<sp/>bestpath<sp/>search.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_fwdtree_lw_ratio<sp/>=</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdflatlw&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_fwdtree_lw_ratio<sp/>=</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-bestpathlw&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acoustic<sp/>score<sp/>scale<sp/>for<sp/>posterior<sp/>probabilities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1e3d4b67e4b11c6c11ebe16552d53d2d" kindref="member">ascale</ref><sp/>=<sp/>1.0<sp/>/<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-ascale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*</highlight></codeline>
<codeline lineno="140" refid="ngram__search_8h_1a04f80b377c847026254fb85596e2f43c" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1a04f80b377c847026254fb85596e2f43c" kindref="member">ngram_search_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_t<sp/>*lm,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_t<sp/>*config,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lmname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>the<sp/>acmod&apos;s<sp/>feature<sp/>buffer<sp/>growable<sp/>if<sp/>we<sp/>are<sp/>doing<sp/>two-pass</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>search.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a1555dac8fa27f644d709c5c89bbfa881" kindref="member">acmod_set_grow</ref>(acmod,<sp/>cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdflat&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdtree&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" kindref="member">ps_search_init</ref>(&amp;ngs-&gt;base,<sp/>&amp;ngram_funcs,<sp/>PS_SEARCH_TYPE_NGRAM,<sp/>name,<sp/>config,<sp/>acmod,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref><sp/>=<sp/><ref refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" kindref="member">hmm_context_init</ref>(bin_mdef_n_emit_state(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>-&gt;<ref refid="structtmat__t_1a9f518c96b30dab9efdb69bd779a7b5bf" kindref="member">tp</ref>,<sp/>NULL,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_free(ps_search_base(ngs));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref><sp/>=<sp/>listelem_alloc_init(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structchan__s" kindref="compound">chan_t</ref>));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a576470858bfa44c671f0e677902ab424" kindref="member">root_chan_alloc</ref><sp/>=<sp/>listelem_alloc_init(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref>));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" kindref="member">latnode_alloc</ref><sp/>=<sp/>listelem_alloc_init(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref>));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>various<sp/>beam<sp/>widths<sp/>and<sp/>such.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_search_calc_beams(ngs);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>a<sp/>billion<sp/>different<sp/>tables<sp/>for<sp/>stuff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref><sp/>=<sp/>ckd_calloc(<ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx<sp/>=<sp/>ckd_calloc(<ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;word_lat_idx));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref><sp/>=<sp/>bitvec_alloc(<ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans<sp/>=<sp/>ckd_calloc(<ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;last_ltrans));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>All<sp/>these<sp/>structures<sp/>need<sp/>to<sp/>be<sp/>made<sp/>dynamic<sp/>with</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>garbage<sp/>collection.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bp_table_size<sp/>=<sp/>cmd_ln_int32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-latsize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bp_table<sp/>=<sp/>ckd_calloc(ngs-&gt;bp_table_size,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bp_table));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>thing<sp/>is<sp/>frickin&apos;<sp/>huge.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack_size<sp/>=<sp/>ngs-&gt;bp_table_size<sp/>*<sp/>20;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack<sp/>=<sp/>ckd_calloc(ngs-&gt;bscore_stack_size,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bscore_stack));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bp_table_idx<sp/>=<sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref><sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bp_table_idx));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>++ngs-&gt;bp_table_idx;<sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>bptableidx[-1]<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>active<sp/>word<sp/>list<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref><sp/>=<sp/>ckd_calloc_2d(2,<sp/><ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref><sp/>=<sp/>ngram_model_set_init(config,<sp/>&amp;lm,<sp/>&amp;lmname,<sp/>NULL,<sp/>1);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngram_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,<sp/>S3_FINISH_WORD)<sp/>==</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_unknown_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Language<sp/>model/set<sp/>does<sp/>not<sp/>contain<sp/>&lt;/s&gt;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;recognition<sp/>will<sp/>fail\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>word<sp/>mappings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_search_update_widmap(ngs);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>fwdtree,<sp/>fwdflat,<sp/>bestpath<sp/>modules<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdtree&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdtree_8c_1a72c89a2a1f189495abee00e1853cddcc" kindref="member">ngram_fwdtree_init</ref>(ngs);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fwdtree&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_init(&amp;ngs-&gt;fwdtree_perf);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fwdflat&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdflat_8c_1ad4b8ebd904c77f8a28f59cd5ca2c8307" kindref="member">ngram_fwdflat_init</ref>(ngs);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fwdflat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_init(&amp;ngs-&gt;fwdflat_perf);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-bestpath&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bestpath&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_init(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)ngs;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1aeaf140dc2bbeaa5c274f73480b5328f3" kindref="member">ngram_search_free</ref>((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)ngs);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">ngram_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_n_words;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>number<sp/>of<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>old_n_words<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_n_words<sp/>!=<sp/><ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref><sp/>=<sp/><ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reallocate<sp/>these<sp/>temporary<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;word_lat_idx);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;last_ltrans);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx<sp/>=<sp/>ckd_calloc(search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;word_lat_idx));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref><sp/>=<sp/>bitvec_alloc(search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans<sp/>=<sp/>ckd_calloc(search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;last_ltrans));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ckd_calloc_2d(2,<sp/>search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref>,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>old<sp/>dict2pid,<sp/>dict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" kindref="member">ps_search_base_reinit</ref>(search,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>beam<sp/>widths.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_search_calc_beams(ngs);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>word<sp/>mappings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_search_update_widmap(ngs);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>rebuild<sp/>lextrees.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdtree)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="ngram__search__fwdtree_8c_1aa53827b47025d4e7a63f3ddce763d84e" kindref="member">ngram_fwdtree_reinit</ref>(ngs))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdflat)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/><ref refid="ngram__search__fwdflat_8c_1aa4879c06ddbc455a6f355084a9c574b4" kindref="member">ngram_fwdflat_reinit</ref>(ngs))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="ngram__search_8h_1a9bafaa4af5a9a4f9e76a8daf54ac4a11" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1aeaf140dc2bbeaa5c274f73480b5328f3" kindref="member">ngram_search_free</ref>(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdtree_8c_1a0e0e0436b30e1074114e1d37991c5d6b" kindref="member">ngram_fwdtree_deinit</ref>(ngs);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdflat)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdflat_8c_1a8faf467f90162a7273b23304fc6e8586" kindref="member">ngram_fwdflat_deinit</ref>(ngs);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bestpath)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)ngs-&gt;n_tot_frame</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>bestpath<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_tot_cpu,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_tot_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>bestpath<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_tot_elapsed,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_tot_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" kindref="member">ps_search_base_free</ref>(search);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>listelem_alloc_free(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>listelem_alloc_free(ngs-&gt;<ref refid="structngram__search__s_1a576470858bfa44c671f0e677902ab424" kindref="member">root_chan_alloc</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>listelem_alloc_free(ngs-&gt;<ref refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" kindref="member">latnode_alloc</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_free(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;word_lat_idx);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;bp_table);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;bscore_stack);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table_idx<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;bp_table_idx<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free_2d(ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;last_ltrans);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="ngram__search_8h_1a7772e007b7d7fdf437c87aeb08b59c71" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" kindref="member">ngram_search_mark_bptable</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_idx<sp/>&gt;=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table_idx<sp/>=<sp/>ckd_realloc(ngs-&gt;bp_table_idx<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref><sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bp_table_idx));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref><sp/>=<sp/>ckd_realloc(ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngs-&gt;bp_table_idx;<sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>bptableidx[-1]<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bp_table_idx[frame_idx]<sp/>=<sp/>ngs-&gt;bpidx;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngs-&gt;bpidx;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">set_real_wid(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/>int32<sp/>bp)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*ent,<sp/>*prev;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(bp<sp/>!=<sp/>NO_BP);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>bp;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ent-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>==<sp/>NO_BP)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>ent-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Propagate<sp/>lm<sp/>state<sp/>for<sp/>fillers,<sp/>rotate<sp/>it<sp/>for<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>ent-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref><sp/>=<sp/>prev-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref><sp/>=<sp/>prev-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref><sp/>=<sp/>dict_basewid(ps_search_dict(ngs),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref><sp/>=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref><sp/>=<sp/>dict_basewid(ps_search_dict(ngs),<sp/>ent-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref><sp/>=<sp/>prev-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref><sp/>=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NGRAM_HISTORY_LONG_WORD<sp/>2000<sp/></highlight><highlight class="comment">/*<sp/>20s<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="ngram__search_8h_1ae36649be6f5a2190e759e7ed13bd7b6b" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1ae36649be6f5a2190e759e7ed13bd7b6b" kindref="member">ngram_search_save_bp</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>w,<sp/>int32<sp/>score,<sp/>int32<sp/>path,<sp/>int32<sp/>rc)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bp;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>an<sp/>existing<sp/>exit<sp/>for<sp/>this<sp/>word<sp/>in<sp/>this<sp/>frame.<sp/><sp/>The</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>only<sp/>reason<sp/>one<sp/>would<sp/>exist<sp/>is<sp/>from<sp/>a<sp/>different<sp/>right<sp/>context</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>triphone,<sp/>but<sp/>of<sp/>course<sp/>that<sp/>happens<sp/>quite<sp/>frequently.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>ngs-&gt;word_lat_idx[w];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bp<sp/>!=<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_idx<sp/>-<sp/>ngs-&gt;bp_table[path].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>&gt;<sp/>NGRAM_HISTORY_LONG_WORD)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Word<sp/>&apos;%s&apos;<sp/>survived<sp/>for<sp/>%d<sp/>frames,<sp/>potential<sp/>overpruning\n&quot;</highlight><highlight class="normal">,<sp/>dict_wordstr(ps_search_dict(ngs),<sp/>w),</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx<sp/>-<sp/>ngs-&gt;bp_table[path].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>only<sp/>the<sp/>best<sp/>scoring<sp/>one,<sp/>we<sp/>will<sp/>reconstruct<sp/>the</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>others<sp/>from<sp/>the<sp/>right<sp/>context<sp/>scores<sp/>-<sp/>usually<sp/>the<sp/>history</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>not<sp/>lost.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>score)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(path<sp/>!=<sp/>bp);<sp/></highlight><highlight class="comment">/*<sp/>Pathological.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>!=<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>bplh[2],<sp/>newlh[2];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>But,<sp/>sometimes,<sp/>the<sp/>history<sp/>*is*<sp/>lost.<sp/><sp/>If<sp/>we<sp/>wanted<sp/>to</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>do<sp/>exact<sp/>language<sp/>model<sp/>scoring<sp/>we&apos;d<sp/>have<sp/>to<sp/>preserve</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>these<sp/>alternate<sp/>histories.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(2,(</highlight><highlight class="stringliteral">&quot;Updating<sp/>path<sp/>history<sp/>%d<sp/>=&gt;<sp/>%d<sp/>frame<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>,<sp/>path,<sp/>frame_idx));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bplh[0]<sp/>=<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-1<sp/>:<sp/>ngs-&gt;bp_table[ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>].<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bplh[1]<sp/>=<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-1<sp/>:<sp/>ngs-&gt;bp_table[ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>].<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newlh[0]<sp/>=<sp/>path<sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-1<sp/>:<sp/>ngs-&gt;bp_table[path].<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newlh[1]<sp/>=<sp/>path<sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-1<sp/>:<sp/>ngs-&gt;bp_table[path].<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Actually<sp/>it&apos;s<sp/>worth<sp/>checking<sp/>how<sp/>often<sp/>the<sp/>actual</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>language<sp/>model<sp/>state<sp/>changes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bplh[0]<sp/>!=<sp/>newlh[0]<sp/>||<sp/>bplh[1]<sp/>!=<sp/>newlh[1])<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>fairly<sp/>rare<sp/>that<sp/>the<sp/>actual<sp/>language<sp/>model</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>state<sp/>changes,<sp/>but<sp/>it<sp/>does<sp/>happen<sp/>some</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>times.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(1,<sp/>(</highlight><highlight class="stringliteral">&quot;Updating<sp/>language<sp/>model<sp/>state<sp/>%s,%s<sp/>=&gt;<sp/>%s,%s<sp/>frame<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),<sp/>bplh[0]),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),<sp/>bplh[1]),</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),<sp/>newlh[0]),</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),<sp/>newlh[1]),</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_real_wid(ngs,<sp/>bp);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>But<sp/>do<sp/>keep<sp/>track<sp/>of<sp/>scores<sp/>for<sp/>all<sp/>right<sp/>contexts,<sp/>since</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>them<sp/>to<sp/>determine<sp/>the<sp/>starting<sp/>path<sp/>scores<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>successors<sp/>of<sp/>this<sp/>word<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack[ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>+<sp/>rc]<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>rcsize;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>might<sp/>happen<sp/>if<sp/>recognition<sp/>fails.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bpidx<sp/>==<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>entries<sp/>in<sp/>backpointer<sp/>table!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>the<sp/>backpointer<sp/>tables<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bpidx<sp/>&gt;=<sp/>ngs-&gt;bp_table_size)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table_size<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table<sp/>=<sp/>ckd_realloc(ngs-&gt;bp_table,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bp_table_size</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bp_table));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Resized<sp/>backpointer<sp/>table<sp/>to<sp/>%d<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;bp_table_size);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bss_head<sp/>&gt;=<sp/>ngs-&gt;bscore_stack_size</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>bin_mdef_n_ciphone(ps_search_acmod(ngs)-&gt;mdef))<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack_size<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack<sp/>=<sp/>ckd_realloc(ngs-&gt;bscore_stack,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack_size</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bscore_stack));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Resized<sp/>score<sp/>stack<sp/>to<sp/>%d<sp/>entries\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;bscore_stack_size);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx[w]<sp/>=<sp/>ngs-&gt;bpidx;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>=<sp/>&amp;(ngs-&gt;bp_table[ngs-&gt;bpidx]);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>=<sp/>ngs-&gt;bss_head;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(path<sp/>!=<sp/>ngs-&gt;bpidx);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>diphone<sp/>ID<sp/>for<sp/>final<sp/>phone<sp/>and<sp/>number<sp/>of<sp/>ssids<sp/>corresponding<sp/>to<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref><sp/>=<sp/>dict_last_phone(ps_search_dict(ngs),w);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(ps_search_dict(ngs),<sp/>w))<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref><sp/>=<sp/>dict_second_last_phone(ps_search_dict(ngs),w);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcsize<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(ps_search_dict2pid(ngs),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>,<sp/>be-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref>)-&gt;n_ssid;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>some<sp/>space<sp/>on<sp/>the<sp/>bscore_stack<sp/>for<sp/>all<sp/>of<sp/>these<sp/>triphones.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rcsize;<sp/>++i)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack[ngs-&gt;bss_head<sp/>+<sp/>i]<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rcsize)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bscore_stack[ngs-&gt;bss_head<sp/>+<sp/>rc]<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_real_wid(ngs,<sp/>ngs-&gt;bpidx);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bpidx++;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bss_head<sp/>+=<sp/>rcsize;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="ngram__search_8h_1ac6a01bb08e7b8d1deb39763a98148cb0" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1ac6a01bb08e7b8d1deb39763a98148cb0" kindref="member">ngram_search_find_exit</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/>int32<sp/>*out_best_score,<sp/>int32<sp/>*out_is_final)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>backpointers<sp/>for<sp/>this<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_bpidx;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_exit,<sp/>bp;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>best_score;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>hypothesis<sp/>means<sp/>no<sp/>exit<sp/>node!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_BP;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_idx<sp/>==<sp/>-1<sp/>||<sp/>frame_idx<sp/>&gt;=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>end_bpidx<sp/>=<sp/>ngs-&gt;bp_table_idx[frame_idx];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>best_score<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>best_exit<sp/>=<sp/>NO_BP;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>back<sp/>to<sp/>find<sp/>a<sp/>frame<sp/>with<sp/>some<sp/>backpointers<sp/>in<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(frame_idx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ngs-&gt;bp_table_idx[frame_idx]<sp/>==<sp/>end_bpidx)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--frame_idx;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>NOT<sp/>an<sp/>error,<sp/>it<sp/>just<sp/>means<sp/>there<sp/>is<sp/>no<sp/>hypothesis<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_BP;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>find<sp/>the<sp/>entry<sp/>for<sp/>&lt;/s&gt;<sp/>OR<sp/>the<sp/>best<sp/>scoring<sp/>entry.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(end_bpidx<sp/>&lt;<sp/>ngs-&gt;bp_table_size);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bp<sp/>=<sp/>ngs-&gt;bp_table_idx[frame_idx];<sp/>bp<sp/>&lt;<sp/>end_bpidx;<sp/>++bp)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>best_score)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_score<sp/>=<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_exit<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs))</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_best_score)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_best_score<sp/>=<sp/>best_score;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_is_final)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_is_final<sp/>=<sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_exit;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="553" refid="ngram__search_8h_1aee393a136f8f7e8b98161e6eed7b1dd9" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1aee393a136f8f7e8b98161e6eed7b1dd9" kindref="member">ngram_search_bp_hyp</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpidx)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*base<sp/>=<sp/>ps_search_base(ngs);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bp;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpidx<sp/>==<sp/>NO_BP)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>!=<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be<sp/>=<sp/>&amp;ngs-&gt;bp_table[bp];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>strlen(dict_basestr(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>ckd_calloc(1,<sp/>len);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>+<sp/>len<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>!=<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be<sp/>=<sp/>&amp;ngs-&gt;bp_table[bp];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(dict_basestr(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(c,<sp/>dict_basestr(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>),<sp/>len);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--c;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="ngram__search_8h_1a1ddcc1a9cb3e164ceb2140097ed23a3e" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1a1ddcc1a9cb3e164ceb2140097ed23a3e" kindref="member">ngram_search_alloc_all_rc</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/>int32<sp/>w)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*thmm;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*rssid;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>tmatid,<sp/>ciphone;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>pointer<sp/>to<sp/>array<sp/>of<sp/>triphones<sp/>for<sp/>final<sp/>diphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!dict_is_single_phone(ps_search_dict(ngs),<sp/>w));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>ciphone<sp/>=<sp/>dict_last_phone(ps_search_dict(ngs),w);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>rssid<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(ps_search_dict2pid(ngs),</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ciphone,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_second_last_phone(ps_search_dict(ngs),w));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>tmatid<sp/>=<sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/>ciphone);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm<sp/>==<sp/>NULL)<sp/>||<sp/>(hmm_nonmpx_ssid(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>!=<sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[0]))<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]<sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref><sp/>=<sp/>ciphone;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>FALSE,<sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[0],<sp/>tmatid);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;allocated<sp/>rc_id<sp/>0<sp/>ssid<sp/>%d<sp/>ciphone<sp/>%d<sp/>lc<sp/>%d<sp/>word<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[0],<sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref>,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_second_last_phone(ps_search_dict(ngs),w),</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),w)));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>rssid-&gt;<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>==<sp/>NULL)<sp/>||<sp/>(hmm_nonmpx_ssid(&amp;hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>!=<sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[i]))<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>thmm;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>thmm;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref><sp/>=<sp/>ciphone;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>FALSE,<sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[i],<sp/>tmatid);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;allocated<sp/>rc_id<sp/>%d<sp/>ssid<sp/>%d<sp/>ciphone<sp/>%d<sp/>lc<sp/>%d<sp/>word<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[i],<sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref>,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_second_last_phone(ps_search_dict(ngs),w),</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),w)));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="ngram__search_8h_1a15477192481dffcb29e9c4167eff6c3c" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1a15477192481dffcb29e9c4167eff6c3c" kindref="member">ngram_search_free_all_rc</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/>int32<sp/>w)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*thmm;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];<sp/>hmm;<sp/>hmm<sp/>=<sp/>thmm)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listelem_free(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>,<sp/>hmm);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="663" refid="ngram__search_8h_1a25a80e488425b2bd4e24eb753c9295a5" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*pbe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rcphone)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>mapping<sp/>from<sp/>right<sp/>context<sp/>phone<sp/>ID<sp/>to<sp/>index<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>right<sp/>context<sp/>table<sp/>and<sp/>the<sp/>bscore_stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pbe-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>right<sp/>context<sp/>for<sp/>single<sp/>phone<sp/>predecessor<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pbe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*rssid;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>index<sp/>for<sp/>the<sp/>last<sp/>diphone<sp/>of<sp/>the<sp/>previous<sp/>word<sp/>+</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>first<sp/>phone<sp/>of<sp/>the<sp/>current<sp/>word.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rssid<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(ps_search_dict2pid(ngs),</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>,<sp/>pbe-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>may<sp/>be<sp/>WORST_SCORE,<sp/>which<sp/>means<sp/>that<sp/>there<sp/>was<sp/>no<sp/>exit</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>rcphone<sp/>as<sp/>right<sp/>context.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngs-&gt;bscore_stack[pbe-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>+<sp/>rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[rcphone]];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>Compute<sp/>acoustic<sp/>and<sp/>LM<sp/>scores<sp/>for<sp/>a<sp/>BPTable<sp/>entry<sp/>(segment).</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">ngram_compute_seg_score(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be,<sp/>float32<sp/>lwf,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*out_ascr,<sp/>int32<sp/>*out_lscr)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*pbe;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>start_score;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>utterance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>==<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ascr<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_lscr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>calculate<sp/>lscr<sp/>and<sp/>ascr.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>pbe<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>start_score<sp/>=<sp/><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref>(ngs,<sp/>pbe,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_first_phone(ps_search_dict(ngs),be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(start_score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>These<sp/>result<sp/>in<sp/>positive<sp/>acoustic<sp/>scores<sp/>when<sp/>filler</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words<sp/>have<sp/>non-filler<sp/>pronunciations.<sp/><sp/>That<sp/>whole<sp/>business</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>still<sp/>pretty<sp/>much<sp/>broken<sp/>but<sp/>at<sp/>least<sp/>it<sp/>doesn&apos;t</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segfault.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_silence_wid(ngs))<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_lscr<sp/>=<sp/>ngs-&gt;silpen;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_lscr<sp/>=<sp/>ngs-&gt;fillpen;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_lscr<sp/>=<sp/>ngram_tg_score(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbe-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbe-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_lscr<sp/>=<sp/>*out_lscr<sp/>*<sp/>lwf;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_ascr<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>-<sp/>start_score<sp/>-<sp/>*out_lscr;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">ngram_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;done<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_flush(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdtree_8c_1af736200cd01a5d743dbab447ecc85d08" kindref="member">ngram_fwdtree_start</ref>(ngs);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdflat)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdflat_8c_1a763c2c7aaa5d7f9c5107af73552a2149" kindref="member">ngram_fwdflat_start</ref>(ngs);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal">ngram_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__search__fwdtree_8c_1a9e2828ba0d249424a234b6cf7d3ee530" kindref="member">ngram_fwdtree_search</ref>(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdflat)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__search__fwdflat_8c_1ae77ef21ae92dbcc4b14f40469fbd4307" kindref="member">ngram_fwdflat_search</ref>(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal">dump_bptable(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Backpointer<sp/>table<sp/>(%d<sp/>entries):\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;bpidx);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bpe<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>rcsize;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO_NOFN(</highlight><highlight class="stringliteral">&quot;%-5d<sp/>%-10s<sp/>start<sp/>%-3d<sp/>end<sp/>%-3d<sp/>score<sp/>%-8d<sp/>bp<sp/>%-3d<sp/>real_wid<sp/>%-5d<sp/>prev_real_wid<sp/>%-5d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>dict_wordstr(ps_search_dict(ngs),<sp/>bpe-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>),</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bpe-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0<sp/>:<sp/>ngs-&gt;bp_table[bpe-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>,<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>,<sp/>bpe-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,<sp/>bpe-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpe-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcsize<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(ps_search_dict2pid(ngs),</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>,<sp/>bpe-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref>)-&gt;n_ssid;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcsize)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFOCONT(</highlight><highlight class="stringliteral">&quot;\tbss&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>rcsize;<sp/>++j)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bscore_stack[bpe-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>+<sp/>j]<sp/>!=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFOCONT(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>-<sp/>ngs-&gt;bscore_stack[bpe-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref><sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFOCONT(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">ngram_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;n_tot_frame<sp/>+=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdtree)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdtree_8c_1af32a83dbb9187542577a0c500b000840" kindref="member">ngram_fwdtree_finish</ref>(ngs);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dump_bptable(ngs);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>do<sp/>fwdflat<sp/>search<sp/>in<sp/>its<sp/>entirety,<sp/>if<sp/>requested.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdflat)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rewind<sp/>the<sp/>acoustic<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="acmod_8c_1a7b5f0b6edac2985b9b56d630cd705b99" kindref="member">acmod_rewind</ref>(ps_search_acmod(ngs))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>redo<sp/>search.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdflat_8c_1a763c2c7aaa5d7f9c5107af73552a2149" kindref="member">ngram_fwdflat_start</ref>(ngs);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ps_search_acmod(ngs)-&gt;n_feat_frame<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfr;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nfr<sp/>=<sp/><ref refid="ngram__search__fwdflat_8c_1ae77ef21ae92dbcc4b14f40469fbd4307" kindref="member">ngram_fwdflat_search</ref>(ngs,<sp/>i))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nfr;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a338971ea0aa27fb4796d224e4767642b" kindref="member">acmod_advance</ref>(ps_search_acmod(ngs));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdflat_8c_1ac855cf540ac4acdfa320629720ded6fe" kindref="member">ngram_fwdflat_finish</ref>(ngs);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>now,<sp/>we<sp/>should<sp/>have<sp/>a<sp/>result...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dump_bptable(ngs);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;fwdflat)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search__fwdflat_8c_1ac855cf540ac4acdfa320629720ded6fe" kindref="member">ngram_fwdflat_finish</ref>(ngs);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>the<sp/>current<sp/>utterance<sp/>as<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;done<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*</highlight></codeline>
<codeline lineno="830"><highlight class="normal">ngram_search_bestpath(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backward)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref><sp/>=<sp/><ref refid="ps__lattice_8h_1af19b8f0749af01d4874595e80fc612ba" kindref="member">ps_lattice_bestpath</ref>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_fwdtree_lw_ratio,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1e3d4b67e4b11c6c11ebe16552d53d2d" kindref="member">ascale</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>calculate<sp/>betas<sp/>so<sp/>we<sp/>can<sp/>fill<sp/>in<sp/>the<sp/>posterior</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>probability<sp/>field<sp/>in<sp/>the<sp/>segmentation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1a721a656d0e34f7604ea8c52a1bdf14ff" kindref="member">post</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a721a656d0e34f7604ea8c52a1bdf14ff" kindref="member">post</ref><sp/>=<sp/><ref refid="ps__lattice_8h_1a8c5c6ef260ab006099ab34d09b5b1d06" kindref="member">ps_lattice_posterior</ref>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1e3d4b67e4b11c6c11ebe16552d53d2d" kindref="member">ascale</ref>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_score)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_score<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref>-&gt;<ref refid="structps__latlink__s_1a704fcfbdb57b1461325544c782289599" kindref="member">path_scr</ref><sp/>+<sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>-&gt;<ref refid="structps__lattice__s_1aba113d4134c72d7405423c77bcc1247e" kindref="member">final_node_ascr</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="852"><highlight class="normal">ngram_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/>int32<sp/>*out_is_final)</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>do<sp/>bestpath<sp/>search<sp/>if<sp/>the<sp/>utterance<sp/>is<sp/>complete.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bestpath<sp/>&amp;&amp;<sp/>ngs-&gt;done)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*link;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hyp;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_reset(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_start(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag<sp/>=<sp/><ref refid="ngram__search_8c_1ac30e7dec4bbfeee9f5163abf4bbd1014" kindref="member">ngram_search_lattice</ref>(search))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((link<sp/>=<sp/>ngram_search_bestpath(search,<sp/>out_score,<sp/>FALSE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyp<sp/>=<sp/><ref refid="ps__lattice_8c_1a02b07c009d23b852bd4db54700dfac5b" kindref="member">ps_lattice_hyp</ref>(dag,<sp/>link);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_stop(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_speech<sp/>=<sp/>(double)dag-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;bestpath<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_cpu,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;bestpath<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_elapsed,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hyp;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>bpidx;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fwdtree<sp/>and<sp/>fwdflat<sp/>use<sp/>same<sp/>backpointer<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpidx<sp/>=<sp/><ref refid="ngram__search_8c_1ac6a01bb08e7b8d1deb39763a98148cb0" kindref="member">ngram_search_find_exit</ref>(ngs,<sp/>-1,<sp/>out_score,<sp/>out_is_final);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpidx<sp/>!=<sp/>NO_BP)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__search_8c_1aee393a136f8f7e8b98161e6eed7b1dd9" kindref="member">ngram_search_bp_hyp</ref>(ngs,<sp/>bpidx);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal">ngram_search_bp2itor(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bp)</highlight></codeline>
<codeline lineno="895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)seg-&gt;<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be,<sp/>*pbe;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>be<sp/>=<sp/>&amp;ngs-&gt;bp_table[bp];</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>pbe<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>==<sp/>-1<sp/>?<sp/>NULL<sp/>:<sp/>&amp;ngs-&gt;bp_table[be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>];</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a97a0dc7db931c7e3f98d23d21ce27f04" kindref="member">word</ref><sp/>=<sp/>dict_wordstr(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1ab25ecc6af8d2695c6097cf7e934eadd4" kindref="member">ef</ref><sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a885a599726cd0efba573d106d016e6e2" kindref="member">sf</ref><sp/>=<sp/>pbe<sp/>?<sp/>pbe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>+<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1ae683244d90d0a5339930b47757778432" kindref="member">prob</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Bogus<sp/>value...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>acoustic<sp/>and<sp/>LM<sp/>scores<sp/>for<sp/>this<sp/>segment.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pbe<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a6f7706ec4c0d0ec8ecafaf0f29f41f4b" kindref="member">ascr</ref><sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a4d86c21f1ed2dc3eb3b1b1b37ce9bb48" kindref="member">lback</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>start_score;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>ending<sp/>path<sp/>score<sp/>of<sp/>previous<sp/>word.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_score<sp/>=<sp/><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref>(ngs,<sp/>pbe,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_first_phone(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(start_score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_silence_wid(ngs))<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>ngs-&gt;silpen;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>be-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>ngs-&gt;fillpen;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>ngram_tg_score(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbe-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbe-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;seg-&gt;<ref refid="structps__seg__s_1a4d86c21f1ed2dc3eb3b1b1b37ce9bb48" kindref="member">lback</ref>)&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>(int32)(seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>*<sp/>seg-&gt;<ref refid="structps__seg__s_1a2249c012b83c902f4f8ed8d98ded7d20" kindref="member">lwf</ref>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a6f7706ec4c0d0ec8ecafaf0f29f41f4b" kindref="member">ascr</ref><sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>-<sp/>start_score<sp/>-<sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal">ngram_bp_seg_free(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg)</highlight></codeline>
<codeline lineno="938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__seg__s" kindref="compound">bptbl_seg_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structbptbl__seg__s" kindref="compound">bptbl_seg_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(itor-&gt;<ref refid="structbptbl__seg__s_1a81e3d422fb2307c1a83e9490525dce7f" kindref="member">bpidx</ref>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(itor);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="946"><highlight class="normal">ngram_bp_seg_next(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__seg__s" kindref="compound">bptbl_seg_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structbptbl__seg__s" kindref="compound">bptbl_seg_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++itor-&gt;<ref refid="structbptbl__seg__s_1a1649196a2c03fb61b31624086ee998b5" kindref="member">cur</ref><sp/>==<sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a8d1f0aa7dd09e2d6321a00b68ab6a051" kindref="member">n_bpidx</ref>)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_bp_seg_free(seg);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_search_bp2itor(seg,<sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a81e3d422fb2307c1a83e9490525dce7f" kindref="member">bpidx</ref>[itor-&gt;<ref refid="structbptbl__seg__s_1a1649196a2c03fb61b31624086ee998b5" kindref="member">cur</ref>]);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg;</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref><sp/>ngram_bp_segfuncs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_next<sp/>*/</highlight><highlight class="normal"><sp/>ngram_bp_seg_next,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_free<sp/>*/</highlight><highlight class="normal"><sp/>ngram_bp_seg_free</highlight></codeline>
<codeline lineno="962"><highlight class="normal">};</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="965"><highlight class="normal">ngram_search_bp_iter(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpidx,<sp/>float32<sp/>lwf)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__seg__s" kindref="compound">bptbl_seg_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bp,<sp/>cur;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calling<sp/>this<sp/>an<sp/>&quot;iterator&quot;<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>misnomer<sp/>since<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>get<sp/>the<sp/>entire<sp/>backtrace<sp/>in<sp/>order<sp/>to<sp/>produce<sp/>it.<sp/><sp/>On<sp/>the</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>hand,<sp/>all<sp/>we<sp/>actually<sp/>need<sp/>is<sp/>the<sp/>bptbl<sp/>IDs,<sp/>and<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>allocate<sp/>a<sp/>fixed-size<sp/>array<sp/>of<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>itor<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structbptbl__seg__s_1ac21f715b189c7e452385252bfcee47fe" kindref="member">base</ref>.<ref refid="structps__seg__s_1a510362a2281e374c839397c3e5488515" kindref="member">vt</ref><sp/>=<sp/>&amp;ngram_bp_segfuncs;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structbptbl__seg__s_1ac21f715b189c7e452385252bfcee47fe" kindref="member">base</ref>.<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref><sp/>=<sp/>ps_search_base(ngs);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structbptbl__seg__s_1ac21f715b189c7e452385252bfcee47fe" kindref="member">base</ref>.<ref refid="structps__seg__s_1a2249c012b83c902f4f8ed8d98ded7d20" kindref="member">lwf</ref><sp/>=<sp/>lwf;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a8d1f0aa7dd09e2d6321a00b68ab6a051" kindref="member">n_bpidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>!=<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be<sp/>=<sp/>&amp;ngs-&gt;bp_table[bp];</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++itor-&gt;<ref refid="structbptbl__seg__s_1a8d1f0aa7dd09e2d6321a00b68ab6a051" kindref="member">n_bpidx</ref>;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structbptbl__seg__s_1a8d1f0aa7dd09e2d6321a00b68ab6a051" kindref="member">n_bpidx</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(itor);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a81e3d422fb2307c1a83e9490525dce7f" kindref="member">bpidx</ref><sp/>=<sp/>ckd_calloc(itor-&gt;<ref refid="structbptbl__seg__s_1a8d1f0aa7dd09e2d6321a00b68ab6a051" kindref="member">n_bpidx</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor-&gt;<ref refid="structbptbl__seg__s_1a81e3d422fb2307c1a83e9490525dce7f" kindref="member">bpidx</ref>));</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a8d1f0aa7dd09e2d6321a00b68ab6a051" kindref="member">n_bpidx</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>!=<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*be<sp/>=<sp/>&amp;ngs-&gt;bp_table[bp];</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a81e3d422fb2307c1a83e9490525dce7f" kindref="member">bpidx</ref>[cur]<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>be-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--cur;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>relevant<sp/>fields<sp/>for<sp/>first<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_search_bp2itor((<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)itor,<sp/>itor-&gt;<ref refid="structbptbl__seg__s_1a81e3d422fb2307c1a83e9490525dce7f" kindref="member">bpidx</ref>[0]);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)itor;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">ngram_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>do<sp/>bestpath<sp/>search<sp/>if<sp/>the<sp/>utterance<sp/>is<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bestpath<sp/>&amp;&amp;<sp/>ngs-&gt;done)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*link;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_reset(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_start(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag<sp/>=<sp/><ref refid="ngram__search_8c_1ac30e7dec4bbfeee9f5163abf4bbd1014" kindref="member">ngram_search_lattice</ref>(search))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((link<sp/>=<sp/>ngram_search_bestpath(search,<sp/>NULL,<sp/>TRUE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor<sp/>=<sp/><ref refid="ps__lattice_8c_1afedbc5558c18f7d029e84a4e27e38187" kindref="member">ps_lattice_seg_iter</ref>(dag,<sp/>link,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_fwdtree_lw_ratio);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptmr_stop(&amp;ngs-&gt;bestpath_perf);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_speech<sp/>=<sp/>(double)dag-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;bestpath<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_cpu,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;bestpath<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_elapsed,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestpath_perf.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>bpidx;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fwdtree<sp/>and<sp/>fwdflat<sp/>use<sp/>same<sp/>backpointer<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpidx<sp/>=<sp/><ref refid="ngram__search_8c_1ac6a01bb08e7b8d1deb39763a98148cb0" kindref="member">ngram_search_find_exit</ref>(ngs,<sp/>-1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngram_search_bp_iter(ngs,<sp/>bpidx,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>but<sp/>different<sp/>language<sp/>weights...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs-&gt;done<sp/>&amp;&amp;<sp/>ngs-&gt;fwdflat)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ngs-&gt;fwdflat_fwdtree_lw_ratio<sp/>:<sp/>1.0);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">ngram_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>do<sp/>bestpath<sp/>search<sp/>if<sp/>the<sp/>utterance<sp/>is<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bestpath<sp/>&amp;&amp;<sp/>ngs-&gt;done)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*link;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag<sp/>=<sp/><ref refid="ngram__search_8c_1ac30e7dec4bbfeee9f5163abf4bbd1014" kindref="member">ngram_search_lattice</ref>(search))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((link<sp/>=<sp/>ngram_search_bestpath(search,<sp/>NULL,<sp/>TRUE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1a721a656d0e34f7604ea8c52a1bdf14ff" kindref="member">post</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Give<sp/>some<sp/>kind<sp/>of<sp/>good<sp/>estimate<sp/>here,<sp/>eventually.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal">create_dag_nodes(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bp_ptr;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>bp_ptr<sp/>=<sp/>ngs-&gt;bp_table;<sp/>i<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>++i,<sp/>++bp_ptr)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>sf,<sp/>ef,<sp/>wid;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>invalid<sp/>backpointers<sp/>(these<sp/>result<sp/>from<sp/>-maxwpf<sp/>pruning)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bp_ptr-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>(bp_ptr-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>&lt;<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>ngs-&gt;bp_table[bp_ptr-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>=<sp/>bp_ptr-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>bp_ptr-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ef<sp/>&lt;<sp/>dag-&gt;n_frames);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>non-final<sp/>&lt;/s&gt;<sp/>entries.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wid<sp/>==<sp/>ps_search_finish_wid(ngs))<sp/>&amp;&amp;<sp/>(ef<sp/>&lt;<sp/>dag-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>if<sp/>word<sp/>not<sp/>in<sp/>LM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>wid))</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!ngram_model_set_known_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basewid(ps_search_dict(ngs),<sp/>wid))))</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>bptbl<sp/>entry<sp/>&lt;wid,sf&gt;<sp/>already<sp/>in<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>==<sp/>wid)<sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>==<sp/>sf))</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>moment,<sp/>store<sp/>bptbl<sp/>indices<sp/>in<sp/>node.{fef,lef}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>node;<sp/>link<sp/>to<sp/>head<sp/>of<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>listelem_malloc(dag-&gt;<ref refid="structps__lattice__s_1a14e4e87550647d5119cd1cc48ff4f3f1" kindref="member">latnode_alloc</ref>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>=<sp/>wid;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>=<sp/>sf;<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>frame<sp/>index.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>i;<sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>backpointer<sp/>indices<sp/>(argh)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a051a7eed31e29dd75151d1b34cc4eefa" kindref="member">entries</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a5232eefbc6e800b77e7a3c8ee3f4135d" kindref="member">exits</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>This<sp/>creates<sp/>the<sp/>list<sp/>of<sp/>nodes<sp/>in<sp/>reverse</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>topological<sp/>order,<sp/>i.e.<sp/>a<sp/>node<sp/>always<sp/>precedes<sp/>its</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>antecedents<sp/>in<sp/>this<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref><sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dag-&gt;<ref refid="structps__lattice__s_1adcc3bdadae1f3e3ace2d36548983ae78" kindref="member">n_nodes</ref>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">find_start_node(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>start<sp/>node<sp/>&lt;s&gt;.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>==<sp/>ps_search_start_wid(ngs))<sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>probably<sp/>impossible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>&lt;s&gt;<sp/>in<sp/>first<sp/>frame\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">find_end_node(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag,<sp/>float32<sp/>lwf)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ef,<sp/>bestbp,<sp/>bp,<sp/>bestscore;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>final<sp/>node<sp/>&lt;/s&gt;.last_frame;<sp/>nothing<sp/>can<sp/>follow<sp/>this<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>lef<sp/>=<sp/>ngs-&gt;bp_table[node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs))</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(lef<sp/>==<sp/>dag-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>quite<sp/>likely<sp/>that<sp/>no<sp/>&lt;/s&gt;<sp/>exited<sp/>in<sp/>the<sp/>last<sp/>frame.<sp/><sp/>So,</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>find<sp/>the<sp/>node<sp/>corresponding<sp/>to<sp/>the<sp/>best<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>last<sp/>frame<sp/>containing<sp/>a<sp/>word<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ef<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ngs-&gt;bp_table_idx[ef]<sp/>==<sp/>ngs-&gt;bpidx;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--ef);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ef<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Empty<sp/>backpointer<sp/>table:<sp/>can<sp/>not<sp/>build<sp/>DAG.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>best<sp/>word<sp/>exit<sp/>in<sp/>that<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>bestbp<sp/>=<sp/>NO_BP;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bp<sp/>=<sp/>ngs-&gt;bp_table_idx[ef];<sp/>bp<sp/>&lt;<sp/>ngs-&gt;bp_table_idx[ef<sp/>+<sp/>1];<sp/>++bp)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used,<sp/>l_scr,<sp/>wid,<sp/>prev_wid;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_wid<sp/>=<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>prefer<sp/>&lt;/s&gt;,<sp/>of<sp/>which<sp/>there<sp/>will<sp/>only<sp/>be<sp/>one<sp/>per<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/>ps_search_finish_wid(ngs))<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestbp<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_scr<sp/>=<sp/>ngram_tg_score(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,<sp/>ps_search_finish_wid(ngs),</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid,<sp/>prev_wid,<sp/>&amp;n_used)<sp/>&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_scr<sp/>=<sp/>l_scr<sp/>*<sp/>lwf;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>+<sp/>l_scr<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>ngs-&gt;bp_table[bp].<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>+<sp/>l_scr;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestbp<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestbp<sp/>==<sp/>NO_BP)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>word<sp/>exits<sp/>found<sp/>in<sp/>last<sp/>frame<sp/>(%d),<sp/>assuming<sp/>no<sp/>recognition\n&quot;</highlight><highlight class="normal">,<sp/>ef);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;&lt;/s&gt;<sp/>not<sp/>found<sp/>in<sp/>last<sp/>frame,<sp/>using<sp/>%s.%d<sp/>instead\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basestr(ps_search_dict(ngs),<sp/>ngs-&gt;bp_table[bestbp].<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>),<sp/>ef);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>find<sp/>the<sp/>node<sp/>that<sp/>corresponds<sp/>to<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>==<sp/>bestbp)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>seems<sp/>to<sp/>happen<sp/>a<sp/>lot!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>DAG<sp/>node<sp/>corresponding<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basestr(ps_search_dict(ngs),<sp/>ngs-&gt;bp_table[bestbp].<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/>*<sp/>Build<sp/>lattice<sp/>from<sp/>bptable.</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1218" refid="ngram__search_8h_1ac30e7dec4bbfeee9f5163abf4bbd1014" refkind="member"><highlight class="normal"><ref refid="ngram__search_8c_1ac30e7dec4bbfeee9f5163abf4bbd1014" kindref="member">ngram_search_lattice</ref>(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>score,<sp/>ascr,<sp/>lscr;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node,<sp/>*from,<sp/>*to;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_endfr,<sp/>nlink;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lwf;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs<sp/>=<sp/>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>min_endfr<sp/>=<sp/>cmd_ln_int32_r(ps_search_config(search),<sp/></highlight><highlight class="stringliteral">&quot;-min_endfr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>best<sp/>score<sp/>is<sp/>WORST_SCORE<sp/>or<sp/>worse,<sp/>there<sp/>is<sp/>no<sp/>way<sp/>to</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>make<sp/>a<sp/>lattice.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>==<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref><sp/>||<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>a<sp/>lattice<sp/>has<sp/>previously<sp/>been<sp/>created<sp/>over<sp/>the</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>same<sp/>number<sp/>of<sp/>frames,<sp/>and<sp/>reuse<sp/>it<sp/>if<sp/>so.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref><sp/>&amp;&amp;<sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref><sp/>==<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nope,<sp/>create<sp/>a<sp/>new<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a3f90e846bde47cd1acdff165b92f5c22" kindref="member">ps_lattice_free</ref>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>dag<sp/>=<sp/><ref refid="ps__lattice_8c_1a606f6ee0fd569dd5829d7f84ae7e61bd" kindref="member">ps_lattice_init_search</ref>(search,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>these<sp/>such<sp/>that<sp/>they<sp/>agree<sp/>with<sp/>the<sp/>fwdtree<sp/>language<sp/>weight.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>lwf<sp/>=<sp/>ngs-&gt;fwdflat<sp/>?<sp/>ngs-&gt;fwdflat_fwdtree_lw_ratio<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>create_dag_nodes(ngs,<sp/>dag);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref><sp/>=<sp/>find_start_node(ngs,<sp/>dag))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref><sp/>=<sp/>find_end_node(ngs,<sp/>dag,<sp/>ngs-&gt;bestpath_fwdtree_lw_ratio))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;lattice<sp/>start<sp/>node<sp/>%s.%d<sp/>end<sp/>node<sp/>%s.%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(search-&gt;<ref refid="structps__search__s_1a918f243fa966e72c47f697fb9e60089d" kindref="member">dict</ref>,<sp/>dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref>-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),<sp/>dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref>-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>,</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(search-&gt;<ref refid="structps__search__s_1a918f243fa966e72c47f697fb9e60089d" kindref="member">dict</ref>,<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_compute_seg_score(ngs,<sp/>ngs-&gt;bp_table<sp/>+<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>,<sp/>lwf,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dag-&gt;<ref refid="structps__lattice__s_1aba113d4134c72d7405423c77bcc1247e" kindref="member">final_node_ascr</ref>,<sp/>&amp;lscr);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>At<sp/>this<sp/>point,<sp/>dag-&gt;nodes<sp/>is<sp/>ordered<sp/>such<sp/>that<sp/>nodes<sp/>earlier<sp/>in</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>list<sp/>can<sp/>follow<sp/>(in<sp/>time)<sp/>those<sp/>later<sp/>in<sp/>the<sp/>list,<sp/>but<sp/>not</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>vice<sp/>versa<sp/>(see<sp/>above<sp/>-<sp/>also<sp/>note<sp/>that<sp/>adjacency<sp/>is<sp/>purely</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>determined<sp/>by<sp/>time<sp/>which<sp/>is<sp/>why<sp/>we<sp/>can<sp/>make<sp/>this<sp/>claim).<sp/><sp/>Now</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>create<sp/>precedence<sp/>links<sp/>and<sp/>simultanesously<sp/>mark<sp/>all<sp/>nodes<sp/>that</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>reach<sp/>dag-&gt;end.<sp/><sp/>(All<sp/>nodes<sp/>are<sp/>reached<sp/>from<sp/>dag-&gt;start</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>simply<sp/>by<sp/>definition<sp/>-<sp/>they<sp/>were<sp/>created<sp/>that<sp/>way).</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>this<sp/>also<sp/>means<sp/>that<sp/>any<sp/>nodes<sp/>before<sp/>dag-&gt;end<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>list<sp/>can<sp/>be<sp/>discarded,<sp/>meaning<sp/>that<sp/>dag-&gt;end<sp/>will<sp/>always<sp/>be</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>equal<sp/>to<sp/>dag-&gt;nodes<sp/>(FIXME:<sp/>except<sp/>when<sp/>loading<sp/>from<sp/>a<sp/>file<sp/>but</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>can<sp/>fix<sp/>that...)</highlight></codeline>
<codeline lineno="1271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref><sp/>&amp;&amp;<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref><sp/>!=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*next<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listelem_free(dag-&gt;<ref refid="structps__lattice__s_1a14e4e87550647d5119cd1cc48ff4f3f1" kindref="member">latnode_alloc</ref>,<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref><sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Eliminated<sp/>%d<sp/>nodes<sp/>before<sp/>end<sp/>node\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>nlink<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(to<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>;<sp/>to;<sp/>to<sp/>=<sp/>to-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fef,<sp/>lef;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>if<sp/>not<sp/>reachable;<sp/>it<sp/>will<sp/>never<sp/>be<sp/>reachable<sp/>from<sp/>dag-&gt;end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!to-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref>)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prune<sp/>nodes<sp/>with<sp/>too<sp/>few<sp/>endpoints<sp/>-<sp/>heuristic</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>borrowed<sp/>from<sp/>Sphinx3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fef<sp/>=<sp/>ngs-&gt;bp_table[to-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lef<sp/>=<sp/>ngs-&gt;bp_table[to-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to<sp/>!=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref><sp/>&amp;&amp;<sp/>lef<sp/>-<sp/>fef<sp/>&lt;<sp/>min_endfr)<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>predecessors<sp/>of<sp/>to<sp/>:<sp/>from-&gt;fef+1<sp/>&lt;=<sp/>to-&gt;sf<sp/>&lt;=<sp/>from-&gt;lef+1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(from<sp/>=<sp/>to-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>;<sp/>from;<sp/>from<sp/>=<sp/>from-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*from_bpe;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fef<sp/>=<sp/>ngs-&gt;bp_table[from-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lef<sp/>=<sp/>ngs-&gt;bp_table[from-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((to-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>&lt;=<sp/>fef)<sp/>||<sp/>(to-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>&gt;<sp/>lef<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lef<sp/>-<sp/>fef<sp/>&lt;<sp/>min_endfr)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!from-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>bptable<sp/>entry<sp/>for<sp/>&quot;from&quot;<sp/>that<sp/>exactly<sp/>precedes<sp/>&quot;to&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>from-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_bpe<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;=<sp/>from-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>;<sp/>i++,<sp/>from_bpe++)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_bpe-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>!=<sp/>from-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>&gt;=<sp/>to-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>&gt;<sp/>from-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>)<sp/>||<sp/>(from_bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>!=<sp/>to-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>acoustic<sp/>score<sp/>from.sf-&gt;to.sf-1<sp/>with<sp/>right<sp/>context<sp/>=<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>gives<sp/>us<sp/>from_bpe&apos;s<sp/>best<sp/>acoustic<sp/>score.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_compute_seg_score(ngs,<sp/>from_bpe,<sp/>lwf,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ascr,<sp/>&amp;lscr);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>find<sp/>the<sp/>exact<sp/>path<sp/>score<sp/>for<sp/>from-&gt;to,<sp/>including</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>appropriate<sp/>final<sp/>triphone.<sp/><sp/>In<sp/>fact<sp/>this<sp/>might<sp/>not</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>exist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref>(ngs,<sp/>from_bpe,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_first_phone(ps_search_dict(ngs),<sp/>to-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Does<sp/>not<sp/>exist.<sp/><sp/>Can&apos;t<sp/>create<sp/>a<sp/>link<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>==<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjust<sp/>the<sp/>arc<sp/>score<sp/>to<sp/>match<sp/>the<sp/>correct<sp/>triphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>ascr<sp/>+<sp/>(score<sp/>-<sp/>from_bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scores<sp/>must<sp/>be<sp/>negative,<sp/>or<sp/>Bad<sp/>Things<sp/>will<sp/>happen.</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>general,<sp/>they<sp/>are,<sp/>except<sp/>in<sp/>corner<sp/>cases</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>involving<sp/>filler<sp/>words.<sp/><sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>throw<sp/>any</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>links<sp/>away<sp/>so<sp/>we&apos;ll<sp/>keep<sp/>these,<sp/>but<sp/>with<sp/>some</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbitrarily<sp/>improbable<sp/>but<sp/>recognizable<sp/>score.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" kindref="member">ps_lattice_link</ref>(dag,<sp/>from,<sp/>to,<sp/>-424242,<sp/>from_bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nlink;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>BETTER_THAN<sp/>WORST_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" kindref="member">ps_lattice_link</ref>(dag,<sp/>from,<sp/>to,<sp/>score,<sp/>from_bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nlink;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>must<sp/>be<sp/>at<sp/>least<sp/>one<sp/>path<sp/>between<sp/>dag-&gt;start<sp/>and<sp/>dag-&gt;end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref>-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;End<sp/>node<sp/>of<sp/>lattice<sp/>isolated;<sp/>unreachable\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>node-&gt;{fef,lef}<sp/>from<sp/>bptbl<sp/>indices<sp/>to<sp/>frames.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>=<sp/>ngs-&gt;bp_table[node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>ngs-&gt;bp_table[node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>base<sp/>wid<sp/>for<sp/>nodes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1ae3b3dc7d14347e6380859c74b9a02589" kindref="member">basewid</ref><sp/>=<sp/>dict_basewid(search-&gt;<ref refid="structps__search__s_1a918f243fa966e72c47f697fb9e60089d" kindref="member">dict</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Link<sp/>nodes<sp/>with<sp/>alternate<sp/>pronunciations<sp/>at<sp/>the<sp/>same<sp/>timepoint.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*alt;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>forward<sp/>to<sp/>find<sp/>the<sp/>next<sp/>alternate,<sp/>then<sp/>stop.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(alt<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>;<sp/>alt<sp/>&amp;&amp;<sp/>alt-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>==<sp/>node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>;<sp/>alt<sp/>=<sp/>alt-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt-&gt;<ref refid="structps__latnode__s_1ae3b3dc7d14347e6380859c74b9a02589" kindref="member">basewid</ref><sp/>==<sp/>node-&gt;<ref refid="structps__latnode__s_1ae3b3dc7d14347e6380859c74b9a02589" kindref="member">basewid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt-&gt;<ref refid="structps__latnode__s_1aa4c0a395c74acbacccde561f92fa89e4" kindref="member">alt</ref><sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aa4c0a395c74acbacccde561f92fa89e4" kindref="member">alt</ref>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1aa4c0a395c74acbacccde561f92fa89e4" kindref="member">alt</ref><sp/>=<sp/>alt;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Lattice<sp/>has<sp/>%d<sp/>nodes,<sp/>%d<sp/>links\n&quot;</highlight><highlight class="normal">,<sp/>dag-&gt;<ref refid="structps__lattice__s_1adcc3bdadae1f3e3ace2d36548983ae78" kindref="member">n_nodes</ref>,<sp/>nlink);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Minor<sp/>hack:<sp/>If<sp/>the<sp/>final<sp/>node<sp/>is<sp/>a<sp/>filler<sp/>word<sp/>and<sp/>not<sp/>&lt;/s&gt;,</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>set<sp/>its<sp/>base<sp/>word<sp/>ID<sp/>to<sp/>&lt;/s&gt;,<sp/>so<sp/>that<sp/>the<sp/>language<sp/>model</highlight></codeline>
<codeline lineno="1388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>scores<sp/>won&apos;t<sp/>be<sp/>screwed<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>))</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1ae3b3dc7d14347e6380859c74b9a02589" kindref="member">basewid</ref><sp/>=<sp/>ps_search_finish_wid(ngs);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>nodes<sp/>unreachable<sp/>from<sp/>dag-&gt;end<sp/>and<sp/>their<sp/>links<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8c_1a6da4e36322aaab4d2ebe812bee9a4439" kindref="member">ps_lattice_delete_unreachable</ref>(dag);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>silprob<sp/>and<sp/>fillprob<sp/>to<sp/>corresponding<sp/>links<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8c_1a551b8246b45e8953491a24db438c59c1" kindref="member">ps_lattice_penalize_fillers</ref>(dag,<sp/>ngs-&gt;silpen,<sp/>ngs-&gt;fillpen);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref><sp/>=<sp/>dag;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dag;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a3f90e846bde47cd1acdff165b92f5c22" kindref="member">ps_lattice_free</ref>(dag);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406" refid="ngram__search_8h_1a0e681022d3fa0e63da066aad123245e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ngram__search_8c_1a0e681022d3fa0e63da066aad123245e7" kindref="member">ngram_search_set_lm</ref>(ngram_model_t<sp/>*lm)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>default_lm<sp/>=<sp/>ngram_model_retain(lm);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search.c"/>
  </compounddef>
</doxygen>
