<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dict2pid_8c" kind="file">
    <compoundname>dict2pid.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="dict2pid_8h" local="yes">dict2pid.h</includes>
    <includes refid="hmm_8h" local="yes">hmm.h</includes>
    <incdepgraph>
      <node id="622">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="623">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>assert.h</label>
      </node>
      <node id="612">
        <label>float.h</label>
      </node>
      <node id="619">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="621">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
      </node>
      <node id="620">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="625">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="618">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="616">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="626">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="606">
        <label>string.h</label>
      </node>
      <node id="614">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="610">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="615">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="605">
        <label>src/libpocketsphinx/dict2pid.c</label>
        <link refid="dict2pid.c"/>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
      </node>
      <node id="607">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
      </node>
      <node id="617">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
      </node>
      <node id="609">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="611">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
      </node>
      <node id="624">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
      </node>
      <node id="608">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compress_table</definition>
        <argsstring>(s3ssid_t *uncomp_tab, s3ssid_t *com_tab, s3cipid_t *ci_map, int32 n_ci)</argsstring>
        <name>compress_table</name>
        <param>
          <type>s3ssid_t *</type>
          <declname>uncomp_tab</declname>
        </param>
        <param>
          <type>s3ssid_t *</type>
          <declname>com_tab</declname>
        </param>
        <param>
          <type><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref> *</type>
          <declname>ci_map</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_ci</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Compress this map </para>        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="49" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="49" bodyend="77"/>
        <references refid="s3types_8h_1af9c51863cdbb10d58b6aad21e896666b" compoundref="s3types_8h" startline="64">BAD_S3CIPID</references>
        <references refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" compoundref="s3types_8h" startline="78">BAD_S3SSID</references>
        <referencedby refid="dict2pid_8h_1aa94120dcea4b17807576e29484b8a008" compoundref="dict2pid_8c" startline="298" endline="364">dict2pid_add_word</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a8b71462588211feded99cb4b1c33c935" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compress_right_context_tree</definition>
        <argsstring>(dict2pid_t *d2p, s3ssid_t ***rdiph_rc)</argsstring>
        <name>compress_right_context_tree</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <param>
          <type>s3ssid_t ***</type>
          <declname>rdiph_rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="81" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="81" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1aeea00c83f5b8ddcfda70f6297205ec54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compress_left_right_context_tree</definition>
        <argsstring>(dict2pid_t *d2p)</argsstring>
        <name>compress_left_right_context_tree</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="138" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="138" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1aa77890032a2c171ed9944b1d81fd5cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 get_rc_nssid</definition>
        <argsstring>(dict2pid_t *d2p, s3wid_t w)</argsstring>
        <name>get_rc_nssid</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
          <briefdescription><para>In: a dict2pid </para></briefdescription>
        </param>
        <param>
          <type>s3wid_t</type>
          <declname>w</declname>
          <briefdescription><para>In: a wid </para></briefdescription>
        </param>
        <briefdescription>
<para>ARCHAN, A duplicate of get_rc_npid in ctxt_table.h. </para>        </briefdescription>
        <detaileddescription>
<para>Get number of rc.</para><para>I doubt whether it is correct because the compressed map has not been checked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="204" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="204" bodyend="226"/>
        <references refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" compoundref="dict_8h" startline="65">dictword_t::ciphone</references>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" compoundref="dict2pid_8h" startline="108">dict2pid_t::lrssid</references>
        <references refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" compoundref="dict2pid_8h" startline="76">xwdssid_t::n_ssid</references>
        <references refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" compoundref="dict_8h" startline="66">dictword_t::pronlen</references>
        <references refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" compoundref="dict2pid_8h" startline="99">dict2pid_t::rssid</references>
        <references refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" compoundref="dict_8h" startline="79">dict_t::word</references>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a34aca68c98588e7e1a3f0e6d0800e1bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref> *</type>
        <definition>s3cipid_t* dict2pid_get_rcmap</definition>
        <argsstring>(dict2pid_t *d2p, s3wid_t w)</argsstring>
        <name>dict2pid_get_rcmap</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
          <briefdescription><para>In: a dict2pid </para></briefdescription>
        </param>
        <param>
          <type>s3wid_t</type>
          <declname>w</declname>
          <briefdescription><para>In: a wid </para></briefdescription>
        </param>
        <briefdescription>
<para>Get RC map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="229" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="229" bodyend="250"/>
        <references refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" compoundref="dict2pid_8h" startline="75">xwdssid_t::cimap</references>
        <references refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" compoundref="dict_8h" startline="65">dictword_t::ciphone</references>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" compoundref="dict2pid_8h" startline="108">dict2pid_t::lrssid</references>
        <references refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" compoundref="dict_8h" startline="66">dictword_t::pronlen</references>
        <references refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" compoundref="dict2pid_8h" startline="99">dict2pid_t::rssid</references>
        <references refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" compoundref="dict_8h" startline="79">dict_t::word</references>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a1f7fb48eebfafa01285db069a25e5130" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_compress_map</definition>
        <argsstring>(xwdssid_t **tree, int32 n_ci)</argsstring>
        <name>free_compress_map</name>
        <param>
          <type><ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref> **</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_ci</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="253" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="253" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a4b6fba8d0ccfdc36a65a4a229ec95afa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void populate_lrdiph</definition>
        <argsstring>(dict2pid_t *d2p, s3ssid_t ***rdiph_rc, s3cipid_t b)</argsstring>
        <name>populate_lrdiph</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <param>
          <type>s3ssid_t ***</type>
          <declname>rdiph_rc</declname>
        </param>
        <param>
          <type><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="267" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="267" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1aa94120dcea4b17807576e29484b8a008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dict2pid_add_word</definition>
        <argsstring>(dict2pid_t *d2p, int32 wid)</argsstring>
        <name>dict2pid_add_word</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <briefdescription>
<para>Add a word to the dict2pid structure (after adding it to dict). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="298" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="298" bodyend="364"/>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" compoundref="dict2pid_8h" startline="95">dict2pid_t::ldiph_lc</references>
        <references refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" compoundref="s3types_8h" startline="78">BAD_S3SSID</references>
        <references refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" compoundref="bin__mdef_8c" startline="737" endline="742">bin_mdef_ciphone_str</references>
        <references refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa8ca058a8d25d38d074e028460833c8a9" compoundref="mdef_8h" startline="74">WORD_POSN_BEGIN</references>
        <references refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" compoundref="dict2pid_8h" startline="99">dict2pid_t::rssid</references>
        <references refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa85b62e42f20399f933b33099290989c3" compoundref="mdef_8h" startline="75">WORD_POSN_END</references>
        <references refid="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" compoundref="dict2pid_8c" startline="49" endline="77">compress_table</references>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" compoundref="dict2pid_8h" startline="74">xwdssid_t::ssid</references>
        <references refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" compoundref="dict2pid_8h" startline="75">xwdssid_t::cimap</references>
        <references refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" compoundref="dict2pid_8h" startline="76">xwdssid_t::n_ssid</references>
        <references refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" compoundref="dict2pid_8h" startline="105">dict2pid_t::lrdiph_rc</references>
        <referencedby refid="pocketsphinx_8h_1a5f3c4fcdbef34915c4e785ac9a1c6005" compoundref="pocketsphinx_8c" startline="815" endline="880">ps_add_word</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s3ssid_t</type>
        <definition>s3ssid_t dict2pid_internal</definition>
        <argsstring>(dict2pid_t *d2p, int32 wid, int pos)</argsstring>
        <name>dict2pid_internal</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Return the senone sequence ID for the given word position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="367" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="367" bodyend="385"/>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" compoundref="s3types_8h" startline="78">BAD_S3SSID</references>
        <references refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" compoundref="dict_8h" startline="165">dict_pron</references>
        <references refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa034bedf5019d94429746634bc0d37464" compoundref="mdef_8h" startline="73">WORD_POSN_INTERNAL</references>
        <referencedby refid="dict2pid_8h_1a32320cd5d020620ac913b46bafeb5cae" compoundref="dict2pid_8c" startline="538" endline="578">dict2pid_dump</referencedby>
        <referencedby refid="ps__alignment_8h_1a59e81853dad3d935755dcb309d8cc926" compoundref="ps__alignment_8c" startline="129" endline="243">ps_alignment_populate</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1addd541f2275b79e284575fb11b7986e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
        <definition>dict2pid_t* dict2pid_build</definition>
        <argsstring>(bin_mdef_t *mdef, dict_t *dict)</argsstring>
        <name>dict2pid_build</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>mdef</declname>
          <briefdescription><para>A model definition </para></briefdescription>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
          <briefdescription><para>An initialized dictionary </para></briefdescription>
        </param>
        <briefdescription>
<para>Build the dict2pid structure for the given model/dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="388" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="388" bodyend="497"/>
        <references refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" compoundref="s3types_8h" startline="78">BAD_S3SSID</references>
        <references refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" compoundref="bin__mdef_8c" startline="737" endline="742">bin_mdef_ciphone_str</references>
        <references refid="bin__mdef_8h_1a297167f03662a9cbd650743d3f4cf8f8" compoundref="bin__mdef_8c" startline="265" endline="269">bin_mdef_retain</references>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="dict2pid_8c_1a36c486f1ac64991c95c4c0ef75ceaa46" compoundref="dict2pid_8c" startline="533" endline="535">dict2pid_report</references>
        <references refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" compoundref="dict_8h" startline="165">dict_pron</references>
        <references refid="dict_8h_1a0edf70be186e8940af9d21243083cb8b" compoundref="dict_8c" startline="461" endline="465">dict_retain</references>
        <references refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" compoundref="dict_8h" startline="151">dict_size</references>
        <references refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" compoundref="dict2pid_8h" startline="95">dict2pid_t::ldiph_lc</references>
        <references refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" compoundref="dict2pid_8h" startline="105">dict2pid_t::lrdiph_rc</references>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa8ca058a8d25d38d074e028460833c8a9" compoundref="mdef_8h" startline="74">WORD_POSN_BEGIN</references>
        <references refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa85b62e42f20399f933b33099290989c3" compoundref="mdef_8h" startline="75">WORD_POSN_END</references>
        <referencedby refid="pocketsphinx_8h_1a824f46e51681d931b7e2706a86c3d86f" compoundref="pocketsphinx_8c" startline="755" endline="805">ps_load_dict</referencedby>
        <referencedby refid="pocketsphinx_8h_1a391679e7edb0de1e324aa302ee820287" compoundref="pocketsphinx_8c" startline="241" endline="408">ps_reinit</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a85a8de8009445e1129766186ddaa949a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
        <definition>dict2pid_t* dict2pid_retain</definition>
        <argsstring>(dict2pid_t *d2p)</argsstring>
        <name>dict2pid_retain</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Retain a pointer to dict2pid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="500" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="500" bodyend="504"/>
        <referencedby refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" compoundref="pocketsphinx_8c" startline="1406" endline="1434">ps_search_init</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" compoundref="pocketsphinx_8c" startline="1450" endline="1472">ps_search_base_reinit</referencedby>
        <referencedby refid="ps__alignment_8h_1abe7668d9a53be1401896623ed42f02be" compoundref="ps__alignment_8c" startline="51" endline="56">ps_alignment_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a293253226550e812c448ae096b364d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dict2pid_free</definition>
        <argsstring>(dict2pid_t *d2p)</argsstring>
        <name>dict2pid_free</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
          <briefdescription><para>In: the d2p </para></briefdescription>
        </param>
        <briefdescription>
<para>Free the memory dict2pid structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="507" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="507" bodyend="530"/>
        <references refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" compoundref="bin__mdef_8c" startline="272" endline="300">bin_mdef_free</references>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" compoundref="dict_8c" startline="468" endline="496">dict_free</references>
        <references refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" compoundref="dict2pid_8h" startline="95">dict2pid_t::ldiph_lc</references>
        <references refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" compoundref="dict2pid_8h" startline="105">dict2pid_t::lrdiph_rc</references>
        <references refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" compoundref="dict2pid_8h" startline="108">dict2pid_t::lrssid</references>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" compoundref="dict2pid_8h" startline="99">dict2pid_t::rssid</references>
        <referencedby refid="ps__alignment_8h_1ab8fa505f155e38d7e6f8b7dbbd070282" compoundref="ps__alignment_8c" startline="59" endline="69">ps_alignment_free</referencedby>
        <referencedby refid="pocketsphinx_8h_1ad8fd9b79ae9f87703af3f4755b3ab567" compoundref="pocketsphinx_8c" startline="443" endline="457">ps_free</referencedby>
        <referencedby refid="pocketsphinx_8h_1a824f46e51681d931b7e2706a86c3d86f" compoundref="pocketsphinx_8c" startline="755" endline="805">ps_load_dict</referencedby>
        <referencedby refid="pocketsphinx_8h_1a391679e7edb0de1e324aa302ee820287" compoundref="pocketsphinx_8c" startline="241" endline="408">ps_reinit</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" compoundref="pocketsphinx_8c" startline="1437" endline="1447">ps_search_base_free</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" compoundref="pocketsphinx_8c" startline="1450" endline="1472">ps_search_base_reinit</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a36c486f1ac64991c95c4c0ef75ceaa46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dict2pid_report</definition>
        <argsstring>(dict2pid_t *d2p)</argsstring>
        <name>dict2pid_report</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
          <briefdescription><para>In: a <ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> structure </para></briefdescription>
        </param>
        <briefdescription>
<para>Report a dict2pid data structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="533" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="533" bodyend="535"/>
        <referencedby refid="dict2pid_8h_1addd541f2275b79e284575fb11b7986e1" compoundref="dict2pid_8c" startline="388" endline="497">dict2pid_build</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict2pid_8c_1a32320cd5d020620ac913b46bafeb5cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dict2pid_dump</definition>
        <argsstring>(FILE *fp, dict2pid_t *d2p)</argsstring>
        <name>dict2pid_dump</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
          <briefdescription><para>In: a file pointer </para></briefdescription>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
          <briefdescription><para>In: a <ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> structure </para></briefdescription>
        </param>
        <briefdescription>
<para>For debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" line="538" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c" bodystart="538" bodyend="578"/>
        <references refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" compoundref="bin__mdef_8c" startline="737" endline="742">bin_mdef_ciphone_str</references>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" compoundref="dict2pid_8c" startline="367" endline="385">dict2pid_internal</references>
        <references refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" compoundref="dict_8h" startline="151">dict_size</references>
        <references refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" compoundref="dict2pid_8h" startline="95">dict2pid_t::ldiph_lc</references>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" compoundref="bin__mdef_8h" startline="125">bin_mdef_s::n_sseq</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><itemizedlist>
<listitem><para>dictionary word to senone sequence mappings </para></listitem></itemizedlist>
</para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict2pid_8h" kindref="compound">dict2pid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hmm_8h" kindref="compound">hmm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" kindref="member">compress_table</ref>(s3ssid_t<sp/>*<sp/>uncomp_tab,<sp/>s3ssid_t<sp/>*<sp/>com_tab,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*<sp/>ci_map,<sp/>int32<sp/>n_ci)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>found;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>r;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>tmp_r;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>n_ci;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>com_tab[r]<sp/>=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci_map[r]<sp/>=<sp/><ref refid="s3types_8h_1af9c51863cdbb10d58b6aad21e896666b" kindref="member">BAD_S3CIPID</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>n_ci;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp_r<sp/>=<sp/>0;<sp/>tmp_r<sp/>&lt;<sp/>r<sp/>&amp;&amp;<sp/>com_tab[tmp_r]<sp/>!=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;<sp/>tmp_r++)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>it<sp/>appears<sp/>before,<sp/>just<sp/>filled<sp/>in<sp/>cimap;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uncomp_tab[r]<sp/>==<sp/>com_tab[tmp_r])<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci_map[r]<sp/>=<sp/>tmp_r;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>com_tab[tmp_r]<sp/>=<sp/>uncomp_tab[r];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci_map[r]<sp/>=<sp/>tmp_r;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">compress_right_context_tree(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3ssid_t<sp/>***rdiph_rc)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_ci;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>b,<sp/>l,<sp/>r;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>s3ssid_t<sp/>*rmap;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>s3ssid_t<sp/>*tmpssid;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*tmpcimap;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>n_ci<sp/>=<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpssid<sp/>=<sp/>ckd_calloc(n_ci,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpcimap<sp/>=<sp/>ckd_calloc(n_ci,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref><sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>**)<sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc<sp/>=<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>n_ci;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b]<sp/>=</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*)<sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref>));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc<sp/>+=<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>n_ci;<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap<sp/>=<sp/>rdiph_rc[b][l];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" kindref="member">compress_table</ref>(rmap,<sp/>tmpssid,<sp/>tmpcimap,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>&amp;&amp;<sp/>tmpssid[r]<sp/>!=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r++);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpssid[0]<sp/>!=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref><sp/>=<sp/>ckd_calloc(r,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>,<sp/>tmpssid,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref><sp/>=</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>,<sp/>tmpcimap,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][l].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allocated<sp/>%d<sp/>bytes<sp/>(%d<sp/>KiB)<sp/>for<sp/>word-final<sp/>triphones\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)alloc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)alloc<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(tmpssid);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(tmpcimap);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">compress_left_right_context_tree(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_ci;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>b,<sp/>l,<sp/>r;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>s3ssid_t<sp/>*rmap;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>s3ssid_t<sp/>*tmpssid;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*tmpcimap;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>n_ci<sp/>=<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpssid<sp/>=<sp/>ckd_calloc(n_ci,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpcimap<sp/>=<sp/>ckd_calloc(n_ci,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(d2p-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref><sp/>=</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>**)<sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc<sp/>=<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>n_ci;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b]<sp/>=</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*)<sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref>));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc<sp/>+=<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>n_ci;<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>[b][l];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" kindref="member">compress_table</ref>(rmap,<sp/>tmpssid,<sp/>tmpcimap,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>&amp;&amp;<sp/>tmpssid[r]<sp/>!=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r++);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpssid[0]<sp/>!=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref><sp/>=<sp/>ckd_calloc(r,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>,<sp/>tmpssid,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref><sp/>=</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>,<sp/>tmpcimap,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][l].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>compress<sp/>lrdiph_rc<sp/>into<sp/>lrdiph_rc_compressed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(tmpssid);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(tmpcimap);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allocated<sp/>%d<sp/>bytes<sp/>(%d<sp/>KiB)<sp/>for<sp/>single-phone<sp/>word<sp/>triphones\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)alloc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)alloc<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="204" refid="dict2pid_8h_1aa77890032a2c171ed9944b1d81fd5cb0" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1aa77890032a2c171ed9944b1d81fd5cb0" kindref="member">get_rc_nssid</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p,<sp/>s3wid_t<sp/>w)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>pronlen;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>b,<sp/>lc;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>pronlen<sp/>=<sp/>dict-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" kindref="member">pronlen</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>dict-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>[pronlen<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pronlen<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>this<sp/>true<sp/>?</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>known<sp/>left<sp/>context.<sp/><sp/>But<sp/>all<sp/>cimaps<sp/>(for<sp/>any<sp/>l)<sp/>are<sp/>identical;<sp/>pick<sp/>one<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*E_INFO(&quot;Single<sp/>phone<sp/>word\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][0].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>E_INFO(&quot;Multiple<sp/>phone<sp/>word\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc<sp/>=<sp/>dict-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>[pronlen<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][lc].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*</highlight></codeline>
<codeline lineno="229" refid="dict2pid_8h_1a34aca68c98588e7e1a3f0e6d0800e1bf" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1a34aca68c98588e7e1a3f0e6d0800e1bf" kindref="member">dict2pid_get_rcmap</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p,<sp/>s3wid_t<sp/>w)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>pronlen;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>b,<sp/>lc;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>pronlen<sp/>=<sp/>dict-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" kindref="member">pronlen</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>dict-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>[pronlen<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pronlen<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>this<sp/>true<sp/>?</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>known<sp/>left<sp/>context.<sp/><sp/>But<sp/>all<sp/>cimaps<sp/>(for<sp/>any<sp/>l)<sp/>are<sp/>identical;<sp/>pick<sp/>one<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*E_INFO(&quot;Single<sp/>phone<sp/>word\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>[b][0].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>E_INFO(&quot;Multiple<sp/>phone<sp/>word\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc<sp/>=<sp/>dict-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>[pronlen<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[b][lc].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">free_compress_map(<ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>**<sp/>tree,<sp/>int32<sp/>n_ci)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>b,<sp/>l;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>n_ci;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>n_ci;<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(tree[b][l].ssid);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(tree[b][l].cimap);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(tree[b]);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(tree);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">populate_lrdiph(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p,<sp/>s3ssid_t<sp/>***rdiph_rc,<sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>b)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>l,<sp/>r;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3pid_t<sp/>p;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>bin_mdef_phone_id_nearest(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>b,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>l,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>r,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa34f808e43d8f6e9312054f34a8bd74ac" kindref="member">WORD_POSN_SINGLE</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>[b][l][r]</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>bin_mdef_silphone(mdef))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[b][r][l]</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rdiph_rc<sp/>&amp;&amp;<sp/>l<sp/>==<sp/>bin_mdef_silphone(mdef))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdiph_rc[b][l][r]</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(IS_S3SSID(bin_mdef_pid2ssid(mdef,<sp/>p)));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(2,(</highlight><highlight class="stringliteral">&quot;%s(%s,%s)<sp/>=&gt;<sp/>%d<sp/>/<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>b),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>l),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>r),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>bin_mdef_pid2ssid(mdef,<sp/>p)));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="dict2pid_8h_1aa94120dcea4b17807576e29484b8a008" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1aa94120dcea4b17807576e29484b8a008" kindref="member">dict2pid_add_word</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*d<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_pronlen(d,<sp/>wid)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>l;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>have<sp/>left<sp/>and<sp/>right<sp/>context<sp/>diphones<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>word.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[dict_first_phone(d,<sp/>wid)][dict_second_phone(d,<sp/>wid)][0]</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(2,<sp/>(</highlight><highlight class="stringliteral">&quot;Filling<sp/>in<sp/>left-context<sp/>diphones<sp/>for<sp/>%s(?,%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>dict_first_phone(d,<sp/>wid)),</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>dict_second_phone(d,<sp/>wid))));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bin_mdef_phone_id_nearest(mdef,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_first_phone(d,<sp/>wid),<sp/>l,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_second_phone(d,<sp/>wid),</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa8ca058a8d25d38d074e028460833c8a9" kindref="member">WORD_POSN_BEGIN</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[dict_first_phone(d,<sp/>wid)][dict_second_phone(d,<sp/>wid)][l]</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[dict_last_phone(d,<sp/>wid)][dict_second_last_phone(d,<sp/>wid)].n_ssid</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3ssid_t<sp/>*rmap;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3ssid_t<sp/>*tmpssid;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*tmpcimap;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>r;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(2,<sp/>(</highlight><highlight class="stringliteral">&quot;Filling<sp/>in<sp/>right-context<sp/>diphones<sp/>for<sp/>%s(%s,?)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>dict_last_phone(d,<sp/>wid)),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>dict_second_last_phone(d,<sp/>wid))));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap<sp/>=<sp/>ckd_calloc(bin_mdef_n_ciphone(mdef),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*rmap));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bin_mdef_phone_id_nearest(mdef,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_last_phone(d,<sp/>wid),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_second_last_phone(d,<sp/>wid),<sp/>r,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa85b62e42f20399f933b33099290989c3" kindref="member">WORD_POSN_END</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmap[r]<sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpssid<sp/>=<sp/>ckd_calloc(bin_mdef_n_ciphone(mdef),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tmpssid));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpcimap<sp/>=<sp/>ckd_calloc(bin_mdef_n_ciphone(mdef),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tmpcimap));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict2pid_8c_1af437f4d3a798db6828c42df69256f762" kindref="member">compress_table</ref>(rmap,<sp/>tmpssid,<sp/>tmpcimap,<sp/>bin_mdef_n_ciphone(mdef));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>&amp;&amp;<sp/>tmpssid[r]<sp/>!=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;<sp/>r++)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[dict_last_phone(d,<sp/>wid)][dict_second_last_phone(d,<sp/>wid)].<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref><sp/>=<sp/>tmpssid;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[dict_last_phone(d,<sp/>wid)][dict_second_last_phone(d,<sp/>wid)].<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref><sp/>=<sp/>tmpcimap;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>[dict_last_phone(d,<sp/>wid)][dict_second_last_phone(d,<sp/>wid)].<ref refid="structxwdssid__t_1ab4443c642c5aff57c35abed070112d6e" kindref="member">n_ssid</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(rmap);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>left-right<sp/>context<sp/>triphone<sp/>entry<sp/>for</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>word.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Filling<sp/>in<sp/>context<sp/>triphones<sp/>for<sp/>%s(?,?)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>dict_first_phone(d,<sp/>wid)));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>[dict_first_phone(d,<sp/>wid)][0][0]<sp/>==<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>populate_lrdiph(d2p,<sp/>NULL,<sp/>dict_first_phone(d,<sp/>wid));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">s3ssid_t</highlight></codeline>
<codeline lineno="367" refid="dict2pid_8h_1a720e15c92ef6930e722bccb014e11b7b" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" kindref="member">dict2pid_internal</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>l,<sp/>r,<sp/>p;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>0<sp/>||<sp/>pos<sp/>==<sp/>dict_pronlen(dict,<sp/>wid))</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>pos);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>pos<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>bin_mdef_phone_id_nearest(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>b,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>l,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>r,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa034bedf5019d94429746634bc0d37464" kindref="member">WORD_POSN_INTERNAL</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*</highlight></codeline>
<codeline lineno="388" refid="dict2pid_8h_1addd541f2275b79e284575fb11b7986e1" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1addd541f2275b79e284575fb11b7986e1" kindref="member">dict2pid_build</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>mdef,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>dict)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*dict2pid;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>s3ssid_t<sp/>***rdiph_rc;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_t<sp/>*ldiph,<sp/>*rdiph,<sp/>*single;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>pronlen;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>b,<sp/>l,<sp/>r,<sp/>w,<sp/>p;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Building<sp/>PID<sp/>tables<sp/>for<sp/>dictionary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mdef);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(dict);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>dict2pid<sp/>=<sp/>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref>));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>dict2pid-&gt;refcount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref><sp/>=<sp/><ref refid="bin__mdef_8h_1a297167f03662a9cbd650743d3f4cf8f8" kindref="member">bin_mdef_retain</ref>(mdef);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref><sp/>=<sp/><ref refid="dict_8h_1a0edf70be186e8940af9d21243083cb8b" kindref="member">dict_retain</ref>(dict);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allocating<sp/>%d^3<sp/>*<sp/>%d<sp/>bytes<sp/>(%d<sp/>KiB)<sp/>for<sp/>word-initial<sp/>triphones\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t),</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t)<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref><sp/>=</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s3ssid_t<sp/>***)<sp/>ckd_calloc_3d(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>used<sp/>internally<sp/>to<sp/>generate<sp/>rssid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>rdiph_rc<sp/>=</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s3ssid_t<sp/>***)<sp/>ckd_calloc_3d(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s3ssid_t));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref><sp/>=<sp/>(s3ssid_t<sp/>***)<sp/>ckd_calloc_3d(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s3ssid_t));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Actually<sp/>could<sp/>use<sp/>memset<sp/>for<sp/>this,<sp/>if<sp/>BAD_S3SSID<sp/>is<sp/>guaranteed</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>65535...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++l)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[b][r][l]<sp/>=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>[b][l][r]<sp/>=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdiph_rc[b][l][r]<sp/>=<sp/><ref refid="s3types_8h_1ade0bee313d69b3d324b5622fa0507ec7" kindref="member">BAD_S3SSID</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Track<sp/>which<sp/>diphones<sp/>/<sp/>ciphones<sp/>have<sp/>been<sp/>seen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>ldiph<sp/>=<sp/>bitvec_alloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>rdiph<sp/>=<sp/>bitvec_alloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>single<sp/>=<sp/>bitvec_alloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/><ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict2pid-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>);<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pronlen<sp/>=<sp/>dict_pronlen(dict,<sp/>w);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pronlen<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>dict_first_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>dict_second_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Populate<sp/>ldiph_lc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(ldiph,<sp/>b<sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>+<sp/>r))<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>this<sp/>diphone<sp/>as<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ldiph,<sp/>b<sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>+<sp/>r);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Record<sp/>all<sp/>possible<sp/>ssids<sp/>for<sp/>b(?,r)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>bin_mdef_phone_id_nearest(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>b,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>l,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>r,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa8ca058a8d25d38d074e028460833c8a9" kindref="member">WORD_POSN_BEGIN</ref>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict2pid-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[b][r][l]<sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Populate<sp/>rdiph_rc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>dict_second_last_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>dict_last_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(rdiph,<sp/>b<sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>+<sp/>l))<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>this<sp/>diphone<sp/>as<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(rdiph,<sp/>b<sp/>*<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>+<sp/>l);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>bin_mdef_phone_id_nearest(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>b,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>l,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>r,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa85b62e42f20399f933b33099290989c3" kindref="member">WORD_POSN_END</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdiph_rc[b][l][r]<sp/>=<sp/>bin_mdef_pid2ssid(mdef,<sp/>p);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pronlen<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>0);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(1,(</highlight><highlight class="stringliteral">&quot;Building<sp/>tables<sp/>for<sp/>single<sp/>phone<sp/>word<sp/>%s<sp/>phone<sp/>%d<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(dict,<sp/>w),<sp/>b,<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>b)));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Populate<sp/>lrdiph_rc<sp/>(and<sp/>also<sp/>ldiph_lc,<sp/>rdiph_rc<sp/>if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(single,<sp/>b))<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>populate_lrdiph(dict2pid,<sp/>rdiph_rc,<sp/>b);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(single,<sp/>b);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(ldiph);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(rdiph);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(single);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>compress<sp/>rdiph_rc<sp/>into<sp/>rdiph_rc_compressed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>compress_right_context_tree(dict2pid,<sp/>rdiph_rc);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>compress_left_right_context_tree(dict2pid);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free_3d(rdiph_rc);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict2pid_8c_1a36c486f1ac64991c95c4c0ef75ceaa46" kindref="member">dict2pid_report</ref>(dict2pid);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict2pid;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*</highlight></codeline>
<codeline lineno="500" refid="dict2pid_8h_1a85a8de8009445e1129766186ddaa949a" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1a85a8de8009445e1129766186ddaa949a" kindref="member">dict2pid_retain</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>++d2p-&gt;refcount;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d2p;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="dict2pid_8h_1a293253226550e812c448ae096b364d0d" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1a293253226550e812c448ae096b364d0d" kindref="member">dict2pid_free</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--d2p-&gt;refcount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d2p-&gt;refcount;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_3d((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>***)<sp/>d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_3d((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>***)<sp/>d2p-&gt;<ref refid="structdict2pid__t_1a4eec4de961e2374a6a4c06bb9dde39d8" kindref="member">lrdiph_rc</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_compress_map(d2p-&gt;<ref refid="structdict2pid__t_1a2cf69a0437b33969d54ef2ae669b90aa" kindref="member">rssid</ref>,<sp/>bin_mdef_n_ciphone(d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_compress_map(d2p-&gt;<ref refid="structdict2pid__t_1a6c1de8a269f6ff37dce3dd8cbec4235a" kindref="member">lrssid</ref>,<sp/>bin_mdef_n_ciphone(d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" kindref="member">bin_mdef_free</ref>(d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" kindref="member">dict_free</ref>(d2p-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(d2p);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="dict2pid_8h_1a36c486f1ac64991c95c4c0ef75ceaa46" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1a36c486f1ac64991c95c4c0ef75ceaa46" kindref="member">dict2pid_report</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="dict2pid_8h_1a32320cd5d020620ac913b46bafeb5cae" refkind="member"><highlight class="normal"><ref refid="dict2pid_8c_1a32320cd5d020620ac913b46bafeb5cae" kindref="member">dict2pid_dump</ref>(FILE<sp/>*<sp/>fp,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>w,<sp/>p,<sp/>pronlen;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j,<sp/>b,<sp/>l,<sp/>r;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>d2p-&gt;<ref refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>INTERNAL<sp/>(wd<sp/>comssid<sp/>ssid<sp/>ssid<sp/>...<sp/>ssid<sp/>comssid)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/><ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict);<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%30s<sp/>&quot;</highlight><highlight class="normal">,<sp/>dict_wordstr(dict,<sp/>w));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pronlen<sp/>=<sp/>dict_pronlen(dict,<sp/>w);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>pronlen;<sp/>p++)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%5d&quot;</highlight><highlight class="normal">,<sp/><ref refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" kindref="member">dict2pid_internal</ref>(d2p,<sp/>w,<sp/>p));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>LDIPH_LC<sp/>(b<sp/>r<sp/>l<sp/>ssid)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_S3SSID(d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[b][r][l]))</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%6s<sp/>%6s<sp/>%6s<sp/>%5d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>b),<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>r),<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>)<sp/>l),<sp/>d2p-&gt;<ref refid="structdict2pid__t_1a609288c1f4cee2ea2e82bc5e391b894a" kindref="member">ldiph_lc</ref>[b][r][l]);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RAH,<sp/>ldiph_lc<sp/>is<sp/>returning<sp/>an<sp/>int32,<sp/>%d<sp/>expects<sp/>an<sp/>int16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>SSEQ<sp/>%d<sp/>(senid<sp/>senid<sp/>...)\n&quot;</highlight><highlight class="normal">,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%5d<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>bin_mdef_n_emit_state(mdef);<sp/>j++)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%5d&quot;</highlight><highlight class="normal">,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[i][j]);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>END\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(fp);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict2pid.c"/>
  </compounddef>
</doxygen>
