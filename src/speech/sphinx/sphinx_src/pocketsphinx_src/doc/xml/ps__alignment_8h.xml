<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ps__alignment_8h" kind="file">
    <compoundname>ps_alignment.h</compoundname>
    <includes local="no">sphinxbase/prim_type.h</includes>
    <includes refid="dict2pid_8h" local="yes">dict2pid.h</includes>
    <includes refid="hmm_8h" local="yes">hmm.h</includes>
    <includedby refid="ps__alignment_8c" local="yes">src/libpocketsphinx/ps_alignment.c</includedby>
    <includedby refid="state__align__search_8h" local="yes">src/libpocketsphinx/state_align_search.h</includedby>
    <incdepgraph>
      <node id="1899">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1900">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1889" relation="include">
        </childnode>
        <childnode refid="1894" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
      </node>
      <node id="1891">
        <label>assert.h</label>
      </node>
      <node id="1890">
        <label>float.h</label>
      </node>
      <node id="1896">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1898">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1899" relation="include">
        </childnode>
      </node>
      <node id="1897">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1902">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1883">
        <label>src/libpocketsphinx/ps_alignment.h</label>
        <link refid="ps_alignment.h"/>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1901" relation="include">
        </childnode>
      </node>
      <node id="1895">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1893">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1903">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1884">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1888">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1892">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1885">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1889" relation="include">
        </childnode>
        <childnode refid="1894" relation="include">
        </childnode>
        <childnode refid="1900" relation="include">
        </childnode>
      </node>
      <node id="1894">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
      </node>
      <node id="1887">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1889">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1891" relation="include">
        </childnode>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1892" relation="include">
        </childnode>
        <childnode refid="1893" relation="include">
        </childnode>
      </node>
      <node id="1901">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1894" relation="include">
        </childnode>
      </node>
      <node id="1886">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1905">
        <label>src/libpocketsphinx/ps_alignment.c</label>
        <link refid="ps__alignment_8c"/>
      </node>
      <node id="1904">
        <label>src/libpocketsphinx/ps_alignment.h</label>
        <link refid="ps_alignment.h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1907">
        <label>src/libpocketsphinx/state_align_search.c</label>
        <link refid="state__align__search_8c"/>
      </node>
      <node id="1906">
        <label>src/libpocketsphinx/state_align_search.h</label>
        <link refid="state__align__search_8h"/>
        <childnode refid="1907" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structps__alignment__entry__s" prot="public">ps_alignment_entry_s</innerclass>
    <innerclass refid="structps__alignment__vector__s" prot="public">ps_alignment_vector_s</innerclass>
    <innerclass refid="structps__alignment__s" prot="public">ps_alignment_s</innerclass>
    <innerclass refid="structps__alignment__iter__s" prot="public">ps_alignment_iter_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ps__alignment_8h_1aa6ddcfcd7598f1b50582dd5489e63e50" prot="public" static="no">
        <name>PS_ALIGNMENT_NONE</name>
        <initializer>((uint16)0xffff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="54" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ps__alignment_8h_1abf89e73906a29024da48581f645e3c98" prot="public" static="no">
        <type>struct <ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_s</ref></type>
        <definition>typedef struct ps_alignment_entry_s ps_alignment_entry_t</definition>
        <argsstring></argsstring>
        <name>ps_alignment_entry_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="481" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ps__alignment_8h_1a57f06576e882630108c834e1a53a46d7" prot="public" static="no">
        <type>struct <ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_s</ref></type>
        <definition>typedef struct ps_alignment_vector_s ps_alignment_vector_t</definition>
        <argsstring></argsstring>
        <name>ps_alignment_vector_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="481" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ps__alignment_8h_1a62983def0c01226bda91e6794a7f61f1" prot="public" static="no">
        <type>struct <ref refid="structps__alignment__s" kindref="compound">ps_alignment_s</ref></type>
        <definition>typedef struct ps_alignment_s ps_alignment_t</definition>
        <argsstring></argsstring>
        <name>ps_alignment_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="481" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ps__alignment_8h_1afe48426a7d6bd0d7af628c4efc877ad8" prot="public" static="no">
        <type>struct <ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_s</ref></type>
        <definition>typedef struct ps_alignment_iter_s ps_alignment_iter_t</definition>
        <argsstring></argsstring>
        <name>ps_alignment_iter_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="481" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ps__alignment_8h_1abe7668d9a53be1401896623ed42f02be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
        <definition>ps_alignment_t* ps_alignment_init</definition>
        <argsstring>(dict2pid_t *d2p)</argsstring>
        <name>ps_alignment_init</name>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Create a new, empty alignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="98" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="51" bodyend="56"/>
        <references refid="dict2pid_8c_1a85a8de8009445e1129766186ddaa949a" compoundref="dict2pid_8c" startline="500" endline="504">dict2pid_retain</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1ab8fa505f155e38d7e6f8b7dbbd070282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_free</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_free</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Release an alignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="103" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="59" bodyend="69"/>
        <references refid="dict2pid_8c_1a293253226550e812c448ae096b364d0d" compoundref="dict2pid_8c" startline="507" endline="530">dict2pid_free</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1ab6264685976a8270971c86deae7a488e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_add_word</definition>
        <argsstring>(ps_alignment_t *al, int32 wid, int duration)</argsstring>
        <name>ps_alignment_add_word</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Append a word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="108" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="108" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a59e81853dad3d935755dcb309d8cc926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_populate</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_populate</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Populate lower layers using available word information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="114" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="129" bodyend="243"/>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" compoundref="bin__mdef_8h" startline="94">BAD_SSID</references>
        <references refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" compoundref="dict_8h" startline="165">dict_pron</references>
        <references refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" compoundref="dict2pid_8c" startline="367" endline="385">dict2pid_internal</references>
        <references refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" compoundref="dict2pid_8h" startline="115">dict2pid_rssid</references>
        <references refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" compoundref="dict2pid_8h" startline="74">xwdssid_t::ssid</references>
        <references refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" compoundref="dict2pid_8h" startline="75">xwdssid_t::cimap</references>
        <references refid="bin__mdef_8h_1ab6c771eca798ab8c94e0933a1f8daafc" compoundref="bin__mdef_8h" startline="98">BAD_SENID</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1ae17f691c36070955e32a2c987910acde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_populate_ci</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_populate_ci</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Populate lower layers using context-independent phones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="119" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="247" bodyend="310"/>
        <references refid="structdict2pid__t_1ae1fecad64884980e9d8355844abc3512" compoundref="dict2pid_8h" startline="89">dict2pid_t::dict</references>
        <references refid="structdict2pid__t_1ab0dcb283a0cf5ad40836bc418fd535b3" compoundref="dict2pid_8h" startline="87">dict2pid_t::mdef</references>
        <references refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" compoundref="dict_8h" startline="165">dict_pron</references>
        <references refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" compoundref="bin__mdef_8h" startline="94">BAD_SSID</references>
        <references refid="bin__mdef_8h_1ab6c771eca798ab8c94e0933a1f8daafc" compoundref="bin__mdef_8h" startline="98">BAD_SENID</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1adc8ea5411f8500a0affcec636d65fa8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_propagate</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_propagate</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Propagate timing information up from state sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="124" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="313" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a89fdf321c5a6ee6edeb9c2757d7509cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_n_words</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_n_words</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Number of words. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="129" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1ab541dcf586611d20e84fd9ec562e7a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_n_phones</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_n_phones</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Number of phones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="134" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1acfed230b07c1e09fae89eeb74c468460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_n_states</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_n_states</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Number of states. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="139" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a8d2b39bad3a4f6018155e9101dee63f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_words</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_words</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Iterate over the alignment starting at the first word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="144" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="369" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a5d4fe03d7eef6a96ca8f1b21b9fd3a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_phones</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_phones</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Iterate over the alignment starting at the first phone. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="149" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="383" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a8c6ba334f7dcf512f8485ca7a0b2d2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_states</definition>
        <argsstring>(ps_alignment_t *al)</argsstring>
        <name>ps_alignment_states</name>
        <param>
          <type><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
<para>Iterate over the alignment starting at the first state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="154" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="397" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1aa2962940b54a4e2b73a9a4937d1b245a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_t</ref> *</type>
        <definition>ps_alignment_entry_t* ps_alignment_iter_get</definition>
        <argsstring>(ps_alignment_iter_t *itor)</argsstring>
        <name>ps_alignment_iter_get</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Get the alignment entry pointed to by an iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="159" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="411" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a7cec3eabbedf8d94295d98541bbbaa10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_iter_goto</definition>
        <argsstring>(ps_alignment_iter_t *itor, int pos)</argsstring>
        <name>ps_alignment_iter_goto</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Move alignment iterator to given index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="164" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="424" bodyend="434"/>
        <references refid="ps__alignment_8c_1a80e0020539ea622706bf63883e24d301" compoundref="ps__alignment_8c" startline="417" endline="421">ps_alignment_iter_free</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1aa7fdb0dbac92be80e2182d340be8b8e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_iter_next</definition>
        <argsstring>(ps_alignment_iter_t *itor)</argsstring>
        <name>ps_alignment_iter_next</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Move an alignment iterator forward. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="169" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="437" bodyend="446"/>
        <references refid="ps__alignment_8c_1a80e0020539ea622706bf63883e24d301" compoundref="ps__alignment_8c" startline="417" endline="421">ps_alignment_iter_free</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a75e333f3b8a0d14b29d4853a7245b0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_iter_prev</definition>
        <argsstring>(ps_alignment_iter_t *itor)</argsstring>
        <name>ps_alignment_iter_prev</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Move an alignment iterator back. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="174" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="449" bodyend="458"/>
        <references refid="ps__alignment_8c_1a80e0020539ea622706bf63883e24d301" compoundref="ps__alignment_8c" startline="417" endline="421">ps_alignment_iter_free</references>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1ae546c5daf7bc78fe2924200b99187aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_iter_up</definition>
        <argsstring>(ps_alignment_iter_t *itor)</argsstring>
        <name>ps_alignment_iter_up</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Get a new iterator starting at the parent of the current node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="179" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="461" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a6356f643a01e2071c6f00f8a5d56565a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
        <definition>ps_alignment_iter_t* ps_alignment_iter_down</definition>
        <argsstring>(ps_alignment_iter_t *itor)</argsstring>
        <name>ps_alignment_iter_down</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Get a new iterator starting at the first child of the current node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="183" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="481" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="ps__alignment_8h_1a80e0020539ea622706bf63883e24d301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_alignment_iter_free</definition>
        <argsstring>(ps_alignment_iter_t *itor)</argsstring>
        <name>ps_alignment_iter_free</name>
        <param>
          <type><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Release an iterator before completing all iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h" line="188" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.c" bodystart="417" bodyend="421"/>
        <referencedby refid="ps__alignment_8h_1a7cec3eabbedf8d94295d98541bbbaa10" compoundref="ps__alignment_8c" startline="424" endline="434">ps_alignment_iter_goto</referencedby>
        <referencedby refid="ps__alignment_8h_1aa7fdb0dbac92be80e2182d340be8b8e1" compoundref="ps__alignment_8c" startline="437" endline="446">ps_alignment_iter_next</referencedby>
        <referencedby refid="ps__alignment_8h_1a75e333f3b8a0d14b29d4853a7245b0f9" compoundref="ps__alignment_8c" startline="449" endline="458">ps_alignment_iter_prev</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Multi-level alignment structure. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#ifndef<sp/>__PS_ALIGNMENT_H__</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__PS_ALIGNMENT_H__</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/prim_type.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict2pid_8h" kindref="compound">dict2pid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hmm_8h" kindref="compound">hmm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PS_ALIGNMENT_NONE<sp/>((uint16)0xffff)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structps__alignment__entry__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_s</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>ssid;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>cipid;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>tmatid;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>pid;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>senid;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>id;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>start;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>duration;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>parent;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>child;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_s</ref><sp/><ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_t</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structps__alignment__vector__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_s</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_t</ref><sp/>*seq;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>n_ent,<sp/>n_alloc;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_s</ref><sp/><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_t</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structps__alignment__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__s" kindref="compound">ps_alignment_s</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_t</ref><sp/>word;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_t</ref><sp/>sseq;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_t</ref><sp/>state;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__s" kindref="compound">ps_alignment_s</ref><sp/><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structps__alignment__iter__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_s</ref><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__alignment__vector__s" kindref="compound">ps_alignment_vector_t</ref><sp/>*vec;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_s</ref><sp/><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*<ref refid="ps__alignment_8h_1abe7668d9a53be1401896623ed42f02be" kindref="member">ps_alignment_init</ref>(<ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1ab8fa505f155e38d7e6f8b7dbbd070282" kindref="member">ps_alignment_free</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1ab6264685976a8270971c86deae7a488e" kindref="member">ps_alignment_add_word</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1a59e81853dad3d935755dcb309d8cc926" kindref="member">ps_alignment_populate</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1ae17f691c36070955e32a2c987910acde" kindref="member">ps_alignment_populate_ci</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1adc8ea5411f8500a0affcec636d65fa8d" kindref="member">ps_alignment_propagate</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1a89fdf321c5a6ee6edeb9c2757d7509cf" kindref="member">ps_alignment_n_words</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1ab541dcf586611d20e84fd9ec562e7a52" kindref="member">ps_alignment_n_phones</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1acfed230b07c1e09fae89eeb74c468460" kindref="member">ps_alignment_n_states</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1a8d2b39bad3a4f6018155e9101dee63f8" kindref="member">ps_alignment_words</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1a5d4fe03d7eef6a96ca8f1b21b9fd3a33" kindref="member">ps_alignment_phones</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1a8c6ba334f7dcf512f8485ca7a0b2d2c0" kindref="member">ps_alignment_states</ref>(<ref refid="structps__alignment__s" kindref="compound">ps_alignment_t</ref><sp/>*al);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="structps__alignment__entry__s" kindref="compound">ps_alignment_entry_t</ref><sp/>*<ref refid="ps__alignment_8h_1aa2962940b54a4e2b73a9a4937d1b245a" kindref="member">ps_alignment_iter_get</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1a7cec3eabbedf8d94295d98541bbbaa10" kindref="member">ps_alignment_iter_goto</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1aa7fdb0dbac92be80e2182d340be8b8e1" kindref="member">ps_alignment_iter_next</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1a75e333f3b8a0d14b29d4853a7245b0f9" kindref="member">ps_alignment_iter_prev</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1ae546c5daf7bc78fe2924200b99187aa0" kindref="member">ps_alignment_iter_up</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*<ref refid="ps__alignment_8h_1a6356f643a01e2071c6f00f8a5d56565a" kindref="member">ps_alignment_iter_down</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ps__alignment_8h_1a80e0020539ea622706bf63883e24d301" kindref="member">ps_alignment_iter_free</ref>(<ref refid="structps__alignment__iter__s" kindref="compound">ps_alignment_iter_t</ref><sp/>*itor);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__PS_ALIGNMENT_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_alignment.h"/>
  </compounddef>
</doxygen>
