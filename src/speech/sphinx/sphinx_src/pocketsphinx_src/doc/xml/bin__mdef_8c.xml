<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="bin__mdef_8c" kind="file">
    <compoundname>bin_mdef.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/prim_type.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/byteorder.h</includes>
    <includes local="no">sphinxbase/case.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes refid="mdef_8h" local="yes">mdef.h</includes>
    <includes refid="bin__mdef_8h" local="yes">bin_mdef.h</includes>
    <incdepgraph>
      <node id="450">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="443">
        <label>assert.h</label>
      </node>
      <node id="453">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="449">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="454">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="452">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="445">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="446">
        <label>sphinxbase/byteorder.h</label>
      </node>
      <node id="442">
        <label>string.h</label>
      </node>
      <node id="444">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="447">
        <label>sphinxbase/case.h</label>
      </node>
      <node id="448">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="440">
        <label>src/libpocketsphinx/bin_mdef.c</label>
        <link refid="bin_mdef.c"/>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="441">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="bin__mdef_8c_1afc526d4b2879a3199afe8b50702dea51" prot="public" static="no">
        <name>FREAD_SWAP32_CHK</name>
        <param><defname>dest</defname></param>
        <initializer>if (fread((dest), 4, 1, fh) != 1) {                                 \
        fclose(fh);                                                     \
        ckd_free(m);                                                    \
        E_ERROR_SYSTEM(&quot;Failed to read %s from %s\n&quot;, #dest, filename); \
        return NULL;                                                    \
    }                                                                   \
    if (swap) SWAP_INT32(dest);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="379" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bin__mdef_8c_1a7aa718f01e92cc2801d26a2f2490053f" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char format_desc[]</definition>
        <argsstring>[]</argsstring>
        <name>format_desc</name>
        <initializer>=
    &quot;BEGIN FILE FORMAT DESCRIPTION\n&quot;
    &quot;int32 n_ciphone;    /**&lt; Number of base (CI) phones */\n&quot;
    &quot;int32 n_phone;	     /**&lt; Number of base (CI) phones + (CD) triphones */\n&quot;
    &quot;int32 n_emit_state; /**&lt; Number of emitting states per phone (0 if heterogeneous) */\n&quot;
    &quot;int32 n_ci_sen;     /**&lt; Number of CI senones; these are the first */\n&quot;
    &quot;int32 n_sen;	     /**&lt; Number of senones (CI+CD) */\n&quot;
    &quot;int32 n_tmat;	     /**&lt; Number of transition matrices */\n&quot;
    &quot;int32 n_sseq;       /**&lt; Number of unique senone sequences */\n&quot;
    &quot;int32 n_ctx;	     /**&lt; Number of phones of context */\n&quot;
    &quot;int32 n_cd_tree;    /**&lt; Number of nodes in CD tree structure */\n&quot;
    &quot;int32 sil;	     /**&lt; CI phone ID for silence */\n&quot;
    &quot;char ciphones[][];  /**&lt; CI phone strings (null-terminated) */\n&quot;
    &quot;char padding[];     /**&lt; Padding to a 4-bytes boundary */\n&quot;
    &quot;struct { int16 ctx; int16 n_down; int32 pid/down } cd_tree[];\n&quot;
    &quot;struct { int32 ssid; int32 tmat; int8 attr[4] } phones[];\n&quot;
    &quot;int16 sseq[];       /**&lt; Unique senone sequences */\n&quot;
    &quot;int8 sseq_len[];    /**&lt; Number of states in each sseq (none if homogeneous) */\n&quot;
    &quot;END FILE FORMAT DESCRIPTION\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="302" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="302" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bin__mdef_8c_1a6e0b10d8bf2c17f268e090f36fe0a60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
        <definition>bin_mdef_t* bin_mdef_read_text</definition>
        <argsstring>(cmd_ln_t *config, const char *filename)</argsstring>
        <name>bin_mdef_read_text</name>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Read a text mdef from a file (creating an in-memory binary mdef). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="66" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="66" bodyend="262"/>
        <references refid="mdef_8h_1a8f2fb119373324175bf82ad2c403e2be">mdef_init</references>
        <references refid="structmdef__t_1a966e28ae25bd8e766dbe81549cbdcd36" compoundref="mdef_8h" startline="140">mdef_t::n_sen</references>
        <references refid="bin__mdef_8h_1ab6c771eca798ab8c94e0933a1f8daafc" compoundref="bin__mdef_8h" startline="98">BAD_SENID</references>
        <references refid="mdef_8h_1a38d2a4b150ecb10a3c80f3504cfdc63d" compoundref="mdef_8c" startline="720" endline="766">mdef_free</references>
        <references refid="structmdef__t_1ad9afd537734fe1f336e20218da28fb2c" compoundref="mdef_8h" startline="148">mdef_t::n_sseq</references>
        <references refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" compoundref="bin__mdef_8h" startline="94">BAD_SSID</references>
        <references refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" compoundref="mdef_8h" startline="136">mdef_t::n_ciphone</references>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" compoundref="bin__mdef_8h" startline="120">bin_mdef_s::n_phone</references>
        <references refid="structmdef__t_1a987f0b9bc4c951ac031f5d283960bd9f" compoundref="mdef_8h" startline="137">mdef_t::n_phone</references>
        <references refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" compoundref="bin__mdef_8h" startline="121">bin_mdef_s::n_emit_state</references>
        <references refid="structmdef__t_1a4a7ffa9d1b9a95a3bf3cca7bd955020a" compoundref="mdef_8h" startline="138">mdef_t::n_emit_state</references>
        <references refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" compoundref="bin__mdef_8h" startline="122">bin_mdef_s::n_ci_sen</references>
        <references refid="structmdef__t_1a68c3cc85b849363609fd5dadf412a38c" compoundref="mdef_8h" startline="139">mdef_t::n_ci_sen</references>
        <references refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" compoundref="bin__mdef_8h" startline="123">bin_mdef_s::n_sen</references>
        <references refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" compoundref="bin__mdef_8h" startline="124">bin_mdef_s::n_tmat</references>
        <references refid="structmdef__t_1a44d1d9fd99db66f1c37937e89172fed9" compoundref="mdef_8h" startline="141">mdef_t::n_tmat</references>
        <references refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" compoundref="bin__mdef_8h" startline="125">bin_mdef_s::n_sseq</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
        <references refid="structmdef__t_1a2472170a66d451d2d4873a9a6e64adc7" compoundref="mdef_8h" startline="146">mdef_t::sseq</references>
        <references refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" compoundref="bin__mdef_8h" startline="138">bin_mdef_s::cd2cisen</references>
        <references refid="structmdef__t_1ae2ba90b39a79603022daae3c9270a0b7" compoundref="mdef_8h" startline="150">mdef_t::cd2cisen</references>
        <references refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" compoundref="bin__mdef_8h" startline="139">bin_mdef_s::sen2cimap</references>
        <references refid="structmdef__t_1a4aafd791a1e1adaa9b5b28bf0cfbd624" compoundref="mdef_8h" startline="153">mdef_t::sen2cimap</references>
        <references refid="structbin__mdef__s_1a31b5cda5136c6f72816da8889719bfe2" compoundref="bin__mdef_8h" startline="126">bin_mdef_s::n_ctx</references>
        <references refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" compoundref="bin__mdef_8h" startline="128">bin_mdef_s::sil</references>
        <references refid="structmdef__t_1acc9a57b57bbecaef55cc72be57b875f6" compoundref="mdef_8h" startline="155">mdef_t::sil</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <references refid="structmdef__t_1aae4a51202b87f71394b6c5b3138b77c7" compoundref="mdef_8h" startline="144">mdef_t::ciphone</references>
        <references refid="structciphone__t_1a2327c5f09fa245c25926c718fdab642d" compoundref="mdef_8h" startline="88">ciphone_t::name</references>
        <references refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" compoundref="bin__mdef_8c" startline="272" endline="300">bin_mdef_free</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
        <references refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" compoundref="bin__mdef_8h" startline="74">mdef_entry_s::ssid</references>
        <references refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" compoundref="mdef_8h" startline="145">mdef_t::phone</references>
        <references refid="structphone__t_1af2f31836358c1c29c38a361b3923b859" compoundref="mdef_8h" startline="98">phone_t::ssid</references>
        <references refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" compoundref="bin__mdef_8h" startline="75">mdef_entry_s::tmat</references>
        <references refid="structphone__t_1acbe38b7fc991bfbcb745fb6131d812f0" compoundref="mdef_8h" startline="101">phone_t::tmat</references>
        <references refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec">mdef_entry_s::ci</references>
        <references refid="structciphone__t_1a96e20b175c00c4edcd75d922dba067cd" compoundref="mdef_8h" startline="89">ciphone_t::filler</references>
        <references refid="structphone__t_1a5436db1dd178ef5ead83359c84963c83" compoundref="mdef_8h" startline="103">phone_t::wpos</references>
        <references refid="structphone__t_1a334106cbedf3d95a6bdebc4704e028cd" compoundref="mdef_8h" startline="102">phone_t::rc</references>
        <references refid="mdef_8h_1ac271413770c3e95b993b856967b61487" compoundref="mdef_8h" startline="79">N_WORD_POSN</references>
        <references refid="structmdef__t_1a5dd5c3d3058a314f4c971a14d1df5f38" compoundref="mdef_8h" startline="157">mdef_t::wpos_ci_lclist</references>
        <references refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" compoundref="bin__mdef_8h" startline="132">bin_mdef_s::cd_tree</references>
        <references refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" compoundref="bin__mdef_8h" startline="127">bin_mdef_s::n_cd_tree</references>
        <references refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" compoundref="bin__mdef_8h" startline="105">cd_tree_s::ctx</references>
        <references refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" compoundref="bin__mdef_8h" startline="106">cd_tree_s::n_down</references>
        <references refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" compoundref="bin__mdef_8h" startline="109">cd_tree_s::down</references>
        <references refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" compoundref="mdef_8h" startline="80">WPOS_NAME</references>
        <references refid="structcd__tree__s_1a6635c35ad6fe74ad045389c76349016d" compoundref="bin__mdef_8h" startline="108">cd_tree_s::pid</references>
        <references refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92">bin_mdef_s::alloc_mode</references>
        <referencedby refid="bin__mdef_8h_1a3930ae6b3309a615335585db4b46306f" compoundref="bin__mdef_8c" startline="323" endline="519">bin_mdef_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a297167f03662a9cbd650743d3f4cf8f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
        <definition>bin_mdef_t* bin_mdef_retain</definition>
        <argsstring>(bin_mdef_t *m)</argsstring>
        <name>bin_mdef_retain</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Retain a pointer to a bin_mdef_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="265" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="265" bodyend="269"/>
        <referencedby refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" compoundref="dict_8c" startline="252" endline="395">dict_init</referencedby>
        <referencedby refid="dict2pid_8h_1addd541f2275b79e284575fb11b7986e1" compoundref="dict2pid_8c" startline="388" endline="497">dict2pid_build</referencedby>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1afe7ed87e2a2d22b228c14ed8225e4b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_free</definition>
        <argsstring>(bin_mdef_t *m)</argsstring>
        <name>bin_mdef_free</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Release a pointer to a binary mdef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="272" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="272" bodyend="300"/>
        <references refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92">bin_mdef_s::alloc_mode</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
        <references refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" compoundref="bin__mdef_8h" startline="132">bin_mdef_s::cd_tree</references>
        <references refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" compoundref="bin__mdef_8h" startline="130">bin_mdef_s::filemap</references>
        <references refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" compoundref="bin__mdef_8h" startline="138">bin_mdef_s::cd2cisen</references>
        <references refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" compoundref="bin__mdef_8h" startline="139">bin_mdef_s::sen2cimap</references>
        <referencedby refid="acmod_8h_1a1e3345e8ef8b060fc04e88f86e6afa4a" compoundref="acmod_8c" startline="301" endline="338">acmod_free</referencedby>
        <referencedby refid="bin__mdef_8h_1a00dab94d45d1adc5f7778fd1e2398031" compoundref="bin__mdef_8c" startline="66" endline="262">bin_mdef_read_text</referencedby>
        <referencedby refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" compoundref="dict_8c" startline="468" endline="496">dict_free</referencedby>
        <referencedby refid="dict2pid_8h_1a293253226550e812c448ae096b364d0d" compoundref="dict2pid_8c" startline="507" endline="530">dict2pid_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a2c16ffe816aaa870f271048036833d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
        <definition>bin_mdef_t* bin_mdef_read</definition>
        <argsstring>(cmd_ln_t *config, const char *filename)</argsstring>
        <name>bin_mdef_read</name>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Read a binary mdef from a file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="323" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="323" bodyend="519"/>
        <references refid="bin__mdef_8h_1a00dab94d45d1adc5f7778fd1e2398031" compoundref="bin__mdef_8c" startline="66" endline="262">bin_mdef_read_text</references>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" compoundref="bin__mdef_8h" startline="120">bin_mdef_s::n_phone</references>
        <references refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" compoundref="bin__mdef_8h" startline="121">bin_mdef_s::n_emit_state</references>
        <references refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" compoundref="bin__mdef_8h" startline="122">bin_mdef_s::n_ci_sen</references>
        <references refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" compoundref="bin__mdef_8h" startline="123">bin_mdef_s::n_sen</references>
        <references refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" compoundref="bin__mdef_8h" startline="124">bin_mdef_s::n_tmat</references>
        <references refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" compoundref="bin__mdef_8h" startline="125">bin_mdef_s::n_sseq</references>
        <references refid="structbin__mdef__s_1a31b5cda5136c6f72816da8889719bfe2" compoundref="bin__mdef_8h" startline="126">bin_mdef_s::n_ctx</references>
        <references refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" compoundref="bin__mdef_8h" startline="127">bin_mdef_s::n_cd_tree</references>
        <references refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" compoundref="bin__mdef_8h" startline="128">bin_mdef_s::sil</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <references refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" compoundref="bin__mdef_8h" startline="130">bin_mdef_s::filemap</references>
        <references refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92">bin_mdef_s::alloc_mode</references>
        <references refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" compoundref="bin__mdef_8h" startline="132">bin_mdef_s::cd_tree</references>
        <references refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" compoundref="bin__mdef_8h" startline="105">cd_tree_s::ctx</references>
        <references refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" compoundref="bin__mdef_8h" startline="106">cd_tree_s::n_down</references>
        <references refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" compoundref="bin__mdef_8h" startline="109">cd_tree_s::down</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
        <references refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" compoundref="bin__mdef_8h" startline="74">mdef_entry_s::ssid</references>
        <references refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" compoundref="bin__mdef_8h" startline="75">mdef_entry_s::tmat</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
        <references refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" compoundref="bin__mdef_8h" startline="135">bin_mdef_s::sseq_len</references>
        <references refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" compoundref="bin__mdef_8h" startline="138">bin_mdef_s::cd2cisen</references>
        <references refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" compoundref="bin__mdef_8h" startline="139">bin_mdef_s::sen2cimap</references>
        <references refid="bin__mdef_8h_1af592f710731474b77166a29530716672" compoundref="bin__mdef_8c" startline="691" endline="711">bin_mdef_ciphone_id</references>
        <references refid="mdef_8h_1a87b279af2566a60666495e16d09a8aee" compoundref="mdef_8h" startline="81">S3_SILENCE_CIPHONE</references>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a27f911970399b7b053114d946d700cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_write</definition>
        <argsstring>(bin_mdef_t *m, const char *filename)</argsstring>
        <name>bin_mdef_write</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write a binary mdef to a file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="522" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="522" bodyend="603"/>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" compoundref="bin__mdef_8h" startline="120">bin_mdef_s::n_phone</references>
        <references refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" compoundref="bin__mdef_8h" startline="121">bin_mdef_s::n_emit_state</references>
        <references refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" compoundref="bin__mdef_8h" startline="122">bin_mdef_s::n_ci_sen</references>
        <references refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" compoundref="bin__mdef_8h" startline="123">bin_mdef_s::n_sen</references>
        <references refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" compoundref="bin__mdef_8h" startline="124">bin_mdef_s::n_tmat</references>
        <references refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" compoundref="bin__mdef_8h" startline="125">bin_mdef_s::n_sseq</references>
        <references refid="structbin__mdef__s_1a31b5cda5136c6f72816da8889719bfe2" compoundref="bin__mdef_8h" startline="126">bin_mdef_s::n_ctx</references>
        <references refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" compoundref="bin__mdef_8h" startline="127">bin_mdef_s::n_cd_tree</references>
        <references refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" compoundref="bin__mdef_8h" startline="128">bin_mdef_s::sil</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <references refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" compoundref="bin__mdef_8h" startline="132">bin_mdef_s::cd_tree</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
        <references refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" compoundref="bin__mdef_8h" startline="135">bin_mdef_s::sseq_len</references>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1aae7eaa3db4c1c6925210014a4f867e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_write_text</definition>
        <argsstring>(bin_mdef_t *m, const char *filename)</argsstring>
        <name>bin_mdef_write_text</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write a binary mdef to a text file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="606" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="606" bodyend="688"/>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" compoundref="bin__mdef_8h" startline="120">bin_mdef_s::n_phone</references>
        <references refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" compoundref="bin__mdef_8h" startline="121">bin_mdef_s::n_emit_state</references>
        <references refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" compoundref="bin__mdef_8h" startline="135">bin_mdef_s::sseq_len</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
        <references refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" compoundref="bin__mdef_8h" startline="74">mdef_entry_s::ssid</references>
        <references refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" compoundref="bin__mdef_8h" startline="123">bin_mdef_s::n_sen</references>
        <references refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" compoundref="bin__mdef_8h" startline="122">bin_mdef_s::n_ci_sen</references>
        <references refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" compoundref="bin__mdef_8h" startline="124">bin_mdef_s::n_tmat</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <references refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" compoundref="bin__mdef_8h" startline="75">mdef_entry_s::tmat</references>
        <references refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" compoundref="bin__mdef_8h" startline="134">bin_mdef_s::sseq</references>
        <references refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" compoundref="mdef_8h" startline="80">WPOS_NAME</references>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1af592f710731474b77166a29530716672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_ciphone_id</definition>
        <argsstring>(bin_mdef_t *m, const char *ciphone)</argsstring>
        <name>bin_mdef_ciphone_id</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
          <briefdescription><para>In: Model structure being queried </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>ciphone</declname>
        </param>
        <briefdescription>
<para>Context-independent phone lookup. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>phone id for ciphone.In: ciphone for which id wanted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="691" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="691" bodyend="711"/>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <referencedby refid="bin__mdef_8h_1a3930ae6b3309a615335585db4b46306f" compoundref="bin__mdef_8c" startline="323" endline="519">bin_mdef_read</referencedby>
        <referencedby refid="pocketsphinx_8h_1a5f3c4fcdbef34915c4e785ac9a1c6005" compoundref="pocketsphinx_8c" startline="815" endline="880">ps_add_word</referencedby>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1af437f39a8a9b52dd3187f7f0fc098cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_ciphone_id_nocase</definition>
        <argsstring>(bin_mdef_t *m, const char *ciphone)</argsstring>
        <name>bin_mdef_ciphone_id_nocase</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
          <briefdescription><para>In: Model structure being queried </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>ciphone</declname>
        </param>
        <briefdescription>
<para>Case-insensitive context-independent phone lookup. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>phone id for ciphone.In: ciphone for which id wanted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="714" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="714" bodyend="734"/>
        <references refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" compoundref="bin__mdef_8h" startline="119">bin_mdef_s::n_ciphone</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a9498ffff0caf3965060b8a549348be9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* bin_mdef_ciphone_str</definition>
        <argsstring>(bin_mdef_t *m, int32 ci)</argsstring>
        <name>bin_mdef_ciphone_str</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
          <briefdescription><para>In: Model structure being queried </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>ci</declname>
        </param>
        <briefdescription>
<para>In: ciphone id for which name wanted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="737" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="737" bodyend="742"/>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <referencedby refid="bin__mdef_8h_1a35d0676dd56e11508c62e84947901503" compoundref="bin__mdef_8c" startline="868" endline="887">bin_mdef_phone_str</referencedby>
        <referencedby refid="dict_8h_1a8587d077f5303554df0e26a181bfb0bf" compoundref="dict_8c" startline="69" endline="76">dict_ciphone_str</referencedby>
        <referencedby refid="dict2pid_8h_1aa94120dcea4b17807576e29484b8a008" compoundref="dict2pid_8c" startline="298" endline="364">dict2pid_add_word</referencedby>
        <referencedby refid="dict2pid_8h_1addd541f2275b79e284575fb11b7986e1" compoundref="dict2pid_8c" startline="388" endline="497">dict2pid_build</referencedby>
        <referencedby refid="dict2pid_8h_1a32320cd5d020620ac913b46bafeb5cae" compoundref="dict2pid_8c" startline="538" endline="578">dict2pid_dump</referencedby>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a2aebe659c4be6b7aa2e98fdd3185bbc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_phone_id</definition>
        <argsstring>(bin_mdef_t *m, int32 ci, int32 lc, int32 rc, int32 wpos)</argsstring>
        <name>bin_mdef_phone_id</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
          <briefdescription><para>In: Model structure being queried </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>ci</declname>
          <briefdescription><para>In: base ciphone id </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>lc</declname>
          <briefdescription><para>In: left context ciphone id </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>rc</declname>
          <briefdescription><para>In: right context ciphone id </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>wpos</declname>
        </param>
        <briefdescription>
<para>In: Word position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="745" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="745" bodyend="811"/>
        <references refid="mdef_8h_1ac271413770c3e95b993b856967b61487" compoundref="mdef_8h" startline="79">N_WORD_POSN</references>
        <references refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" compoundref="bin__mdef_8h" startline="128">bin_mdef_s::sil</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
        <references refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec">mdef_entry_s::ci</references>
        <references refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" compoundref="bin__mdef_8h" startline="132">bin_mdef_s::cd_tree</references>
        <references refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" compoundref="bin__mdef_8h" startline="131">bin_mdef_s::ciname</references>
        <references refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" compoundref="bin__mdef_8h" startline="105">cd_tree_s::ctx</references>
        <references refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" compoundref="bin__mdef_8h" startline="106">cd_tree_s::n_down</references>
        <references refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" compoundref="bin__mdef_8h" startline="109">cd_tree_s::down</references>
        <references refid="structcd__tree__s_1a6635c35ad6fe74ad045389c76349016d" compoundref="bin__mdef_8h" startline="108">cd_tree_s::pid</references>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a155bcd77cd4cd26d15c857b999a1fdae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_phone_id_nearest</definition>
        <argsstring>(bin_mdef_t *m, int32 b, int32 l, int32 r, int32 pos)</argsstring>
        <name>bin_mdef_phone_id_nearest</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="814" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="814" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="bin__mdef_8c_1a35d0676dd56e11508c62e84947901503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bin_mdef_phone_str</definition>
        <argsstring>(bin_mdef_t *m, int pid, char *buf)</argsstring>
        <name>bin_mdef_phone_str</name>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>m</declname>
          <briefdescription><para>In: Model structure being queried </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pid</declname>
          <briefdescription><para>In: phone id being queried </para></briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Create a phone string for the given phone (base or triphone) id in the given buf. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if successful, -1 if error.Out: On return, buf has the string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" line="868" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c" bodystart="868" bodyend="887"/>
        <references refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" compoundref="mdef_8h" startline="80">WPOS_NAME</references>
        <references refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" compoundref="bin__mdef_8c" startline="737" endline="742">bin_mdef_ciphone_str</references>
        <references refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" compoundref="bin__mdef_8h" startline="133">bin_mdef_s::phone</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2005<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>File:<sp/>bin_mdef.c</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Description:<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Binary<sp/>format<sp/>model<sp/>definition<sp/>files,<sp/>with<sp/>support<sp/>for</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>heterogeneous<sp/>topologies<sp/>and<sp/>variable-size<sp/>N-phones</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Author:<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Huggins-Daines<sp/>&lt;dhuggins@cs.cmu.edu&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/prim_type.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/byteorder.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/case.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mdef_8h" kindref="compound">mdef.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bin__mdef_8h" kindref="compound">bin_mdef.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*</highlight></codeline>
<codeline lineno="66" refid="bin__mdef_8h_1a00dab94d45d1adc5f7778fd1e2398031" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a00dab94d45d1adc5f7778fd1e2398031" kindref="member">bin_mdef_read_text</ref>(cmd_ln_t<sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*bmdef;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmdef__t" kindref="compound">mdef_t</ref><sp/>*mdef;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>nodes,<sp/>ci_idx,<sp/>lc_idx,<sp/>rc_idx;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchars;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mdef<sp/>=<sp/><ref refid="mdef_8h_1a8f2fb119373324175bf82ad2c403e2be" kindref="member">mdef_init</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>filename,<sp/>TRUE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enforce<sp/>some<sp/>limits.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef-&gt;<ref refid="structmdef__t_1a966e28ae25bd8e766dbe81549cbdcd36" kindref="member">n_sen</ref><sp/>&gt;<sp/><ref refid="bin__mdef_8h_1ab6c771eca798ab8c94e0933a1f8daafc" kindref="member">BAD_SENID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>senones<sp/>exceeds<sp/>limit:<sp/>%d<sp/>&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structmdef__t_1a966e28ae25bd8e766dbe81549cbdcd36" kindref="member">n_sen</ref>,<sp/><ref refid="bin__mdef_8h_1ab6c771eca798ab8c94e0933a1f8daafc" kindref="member">BAD_SENID</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a38d2a4b150ecb10a3c80f3504cfdc63d" kindref="member">mdef_free</ref>(mdef);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef-&gt;<ref refid="structmdef__t_1ad9afd537734fe1f336e20218da28fb2c" kindref="member">n_sseq</ref><sp/>&gt;<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>senone<sp/>sequences<sp/>exceeds<sp/>limit:<sp/>%d<sp/>&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structmdef__t_1ad9afd537734fe1f336e20218da28fb2c" kindref="member">n_sseq</ref>,<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a38d2a4b150ecb10a3c80f3504cfdc63d" kindref="member">mdef_free</ref>(mdef);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>uint8<sp/>for<sp/>ciphones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef-&gt;<ref refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" kindref="member">n_ciphone</ref><sp/>&gt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>phones<sp/>exceeds<sp/>limit:<sp/>%d<sp/>&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" kindref="member">n_ciphone</ref>,<sp/>255);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a38d2a4b150ecb10a3c80f3504cfdc63d" kindref="member">mdef_free</ref>(mdef);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bmdef));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;refcnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Easy<sp/>stuff.<sp/><sp/>The<sp/>mdef.c<sp/>code<sp/>has<sp/>done<sp/>the<sp/>heavy<sp/>lifting<sp/>for<sp/>us.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" kindref="member">n_ciphone</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a987f0b9bc4c951ac031f5d283960bd9f" kindref="member">n_phone</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a4a7ffa9d1b9a95a3bf3cca7bd955020a" kindref="member">n_emit_state</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" kindref="member">n_ci_sen</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a68c3cc85b849363609fd5dadf412a38c" kindref="member">n_ci_sen</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a966e28ae25bd8e766dbe81549cbdcd36" kindref="member">n_sen</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" kindref="member">n_tmat</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a44d1d9fd99db66f1c37937e89172fed9" kindref="member">n_tmat</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1ad9afd537734fe1f336e20218da28fb2c" kindref="member">n_sseq</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2472170a66d451d2d4873a9a6e64adc7" kindref="member">sseq</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1ae2ba90b39a79603022daae3c9270a0b7" kindref="member">cd2cisen</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a4aafd791a1e1adaa9b5b28bf0cfbd624" kindref="member">sen2cimap</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a31b5cda5136c6f72816da8889719bfe2" kindref="member">n_ctx</ref><sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Triphones<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1acc9a57b57bbecaef55cc72be57b875f6" kindref="member">sil</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structmdef__t_1a2472170a66d451d2d4873a9a6e64adc7" kindref="member">sseq</ref><sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>taking<sp/>over<sp/>this<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structmdef__t_1ae2ba90b39a79603022daae3c9270a0b7" kindref="member">cd2cisen</ref><sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>this<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef-&gt;<ref refid="structmdef__t_1a4aafd791a1e1adaa9b5b28bf0cfbd624" kindref="member">sen2cimap</ref><sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>this<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>phone<sp/>names.<sp/><sp/>If<sp/>they<sp/>are<sp/>not<sp/>sorted</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>ASCII-betically<sp/>then<sp/>we<sp/>are<sp/>in<sp/>a<sp/>world<sp/>of<sp/>hurt<sp/>and</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>therefore<sp/>will<sp/>simply<sp/>refuse<sp/>to<sp/>continue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref><sp/>=<sp/>ckd_calloc(bmdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>nchars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nchars<sp/>+=<sp/>strlen(mdef-&gt;<ref refid="structmdef__t_1aae4a51202b87f71394b6c5b3138b77c7" kindref="member">ciphone</ref>[i].<ref refid="structciphone__t_1a2327c5f09fa245c25926c718fdab642d" kindref="member">name</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0]<sp/>=<sp/>ckd_calloc(nchars,<sp/>1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0],<sp/>mdef-&gt;<ref refid="structmdef__t_1aae4a51202b87f71394b6c5b3138b77c7" kindref="member">ciphone</ref>[0].<ref refid="structciphone__t_1a2327c5f09fa245c25926c718fdab642d" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1]<sp/>+<sp/>strlen(bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1])<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i],<sp/>mdef-&gt;<ref refid="structmdef__t_1aae4a51202b87f71394b6c5b3138b77c7" kindref="member">ciphone</ref>[i].<ref refid="structciphone__t_1a2327c5f09fa245c25926c718fdab642d" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>strcmp(bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1],<sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i])<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>there<sp/>should<sp/>be<sp/>a<sp/>solution<sp/>to<sp/>this,<sp/>actually.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Phone<sp/>names<sp/>are<sp/>not<sp/>in<sp/>sorted<sp/>order,<sp/>sorry.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" kindref="member">bin_mdef_free</ref>(bmdef);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>over<sp/>phone<sp/>information.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref><sp/>=<sp/>ckd_calloc(bmdef-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mdef-&gt;<ref refid="structmdef__t_1a987f0b9bc4c951ac031f5d283960bd9f" kindref="member">n_phone</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" kindref="member">phone</ref>[i].<ref refid="structphone__t_1af2f31836358c1c29c38a361b3923b859" kindref="member">ssid</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].<ref refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" kindref="member">tmat</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" kindref="member">phone</ref>[i].<ref refid="structphone__t_1acbe38b7fc991bfbcb745fb6131d812f0" kindref="member">tmat</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>bmdef-&gt;n_ciphone)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1aae4a51202b87f71394b6c5b3138b77c7" kindref="member">ciphone</ref>[i].<ref refid="structciphone__t_1a96e20b175c00c4edcd75d922dba067cd" kindref="member">filler</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].info.cd.wpos<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" kindref="member">phone</ref>[i].<ref refid="structphone__t_1a5436db1dd178ef5ead83359c84963c83" kindref="member">wpos</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].info.cd.ctx[0]<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" kindref="member">phone</ref>[i].ci;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].info.cd.ctx[1]<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" kindref="member">phone</ref>[i].lc;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].info.cd.ctx[2]<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a2b9aaf78e5648fe14655d1fe8da5f164" kindref="member">phone</ref>[i].<ref refid="structphone__t_1a334106cbedf3d95a6bdebc4704e028cd" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>the<sp/>wpos_ci_lclist<sp/>once<sp/>to<sp/>find<sp/>the<sp/>total<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>nodes<sp/>and<sp/>the<sp/>starting<sp/>locations<sp/>for<sp/>each<sp/>level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes<sp/>=<sp/>lc_idx<sp/>=<sp/>ci_idx<sp/>=<sp/>rc_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mdef_8h_1ac271413770c3e95b993b856967b61487" kindref="member">N_WORD_POSN</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mdef-&gt;<ref refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" kindref="member">n_ciphone</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structph__lc__t" kindref="compound">ph_lc_t</ref><sp/>*lc;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lc<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a5dd5c3d3058a314f4c971a14d1df5f38" kindref="member">wpos_ci_lclist</ref>[i][j];<sp/>lc;<sp/>lc<sp/>=<sp/>lc-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structph__rc__t" kindref="compound">ph_rc_t</ref><sp/>*rc;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rc<sp/>=<sp/>lc-&gt;rclist;<sp/>rc;<sp/>rc<sp/>=<sp/>rc-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nodes;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RC<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nodes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LC<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++rc_idx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>RC<sp/>nodes<sp/>(after<sp/>LC<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nodes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CI<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++lc_idx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>LC<sp/>nodes<sp/>(after<sp/>CI<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++rc_idx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>RC<sp/>nodes<sp/>(after<sp/>CI<sp/>and<sp/>LC<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nodes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wpos<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ci_idx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>CI<sp/>nodes<sp/>(after<sp/>wpos<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++lc_idx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>LC<sp/>nodes<sp/>(after<sp/>CI<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++rc_idx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>STart<sp/>of<sp/>RC<sp/>nodes<sp/>(after<sp/>wpos,<sp/>CI,<sp/>and<sp/>LC<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allocating<sp/>%d<sp/>*<sp/>%d<sp/>bytes<sp/>(%d<sp/>KiB)<sp/>for<sp/>CD<sp/>tree\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>),<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>)<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" kindref="member">n_cd_tree</ref><sp/>=<sp/>nodes;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref><sp/>=<sp/>ckd_calloc(nodes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mdef_8h_1ac271413770c3e95b993b856967b61487" kindref="member">N_WORD_POSN</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].<ref refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" kindref="member">ctx</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref><sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" kindref="member">n_ciphone</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref><sp/>=<sp/>ci_idx;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>=&gt;<sp/>%c<sp/>(%d@%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>(<ref refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" kindref="member">WPOS_NAME</ref>)[i],</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>,<sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>can<sp/>build<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tree.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mdef-&gt;<ref refid="structmdef__t_1af460d8d703782cf50ed99164cee17347" kindref="member">n_ciphone</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structph__lc__t" kindref="compound">ph_lc_t</ref><sp/>*lc;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].<ref refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" kindref="member">ctx</ref><sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref><sp/>=<sp/>lc_idx;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lc<sp/>=<sp/>mdef-&gt;<ref refid="structmdef__t_1a5dd5c3d3058a314f4c971a14d1df5f38" kindref="member">wpos_ci_lclist</ref>[i][j];<sp/>lc;<sp/>lc<sp/>=<sp/>lc-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structph__rc__t" kindref="compound">ph_rc_t</ref><sp/>*rc;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].<ref refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" kindref="member">ctx</ref><sp/>=<sp/>lc-&gt;lc;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref><sp/>=<sp/>rc_idx;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rc<sp/>=<sp/>lc-&gt;rclist;<sp/>rc;<sp/>rc<sp/>=<sp/>rc-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[rc_idx].<ref refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" kindref="member">ctx</ref><sp/>=<sp/>rc-&gt;rc;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[rc_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[rc_idx].c.<ref refid="structcd__tree__s_1a6635c35ad6fe74ad045389c76349016d" kindref="member">pid</ref><sp/>=<sp/>rc-&gt;pid;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>=&gt;<sp/>%s<sp/>%s<sp/>%s<sp/>%c<sp/>(%d@%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc_idx,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[j],</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[lc-&gt;lc],</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[rc-&gt;rc],</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" kindref="member">WPOS_NAME</ref>)[i],</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[rc_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[rc_idx].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++rc_idx;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>are<sp/>no<sp/>triphones<sp/>here,</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>considered<sp/>a<sp/>leafnode,<sp/>so</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>set<sp/>the<sp/>pid<sp/>to<sp/>-1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].c.<ref refid="structcd__tree__s_1a6635c35ad6fe74ad045389c76349016d" kindref="member">pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>=&gt;<sp/>%s<sp/>%s<sp/>%c<sp/>(%d@%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc_idx,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[j],</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[lc-&gt;lc],</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" kindref="member">WPOS_NAME</ref>)[i],</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[lc_idx].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++lc_idx;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>above,<sp/>so<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].c.<ref refid="structcd__tree__s_1a6635c35ad6fe74ad045389c76349016d" kindref="member">pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>=&gt;<sp/>%d=%s<sp/>(%d@%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci_idx,<sp/>j,<sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[j],</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[ci_idx].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ci_idx;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdef_8h_1a38d2a4b150ecb10a3c80f3504cfdc63d" kindref="member">mdef_free</ref>(mdef);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>bmdef-&gt;<ref refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92" kindref="member">alloc_mode</ref><sp/>=<sp/>BIN_MDEF_FROM_TEXT;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bmdef;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*</highlight></codeline>
<codeline lineno="265" refid="bin__mdef_8h_1a297167f03662a9cbd650743d3f4cf8f8" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a297167f03662a9cbd650743d3f4cf8f8" kindref="member">bin_mdef_retain</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*m)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>++m-&gt;refcnt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" kindref="member">bin_mdef_free</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--m-&gt;refcnt<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;refcnt;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92" kindref="member">alloc_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BIN_MDEF_FROM_TEXT:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0]);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BIN_MDEF_IN_MEMORY:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BIN_MDEF_ON_DISK:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" kindref="member">filemap</ref>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmio_file_unmap(m-&gt;<ref refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" kindref="member">filemap</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(m);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>format_desc[]<sp/>=</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BEGIN<sp/>FILE<sp/>FORMAT<sp/>DESCRIPTION\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_ciphone;<sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>base<sp/>(CI)<sp/>phones<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_phone;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>base<sp/>(CI)<sp/>phones<sp/>+<sp/>(CD)<sp/>triphones<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_emit_state;<sp/>/**&lt;<sp/>Number<sp/>of<sp/>emitting<sp/>states<sp/>per<sp/>phone<sp/>(0<sp/>if<sp/>heterogeneous)<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_ci_sen;<sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>CI<sp/>senones;<sp/>these<sp/>are<sp/>the<sp/>first<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_sen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>senones<sp/>(CI+CD)<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_tmat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>transition<sp/>matrices<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_sseq;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>unique<sp/>senone<sp/>sequences<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_ctx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>phones<sp/>of<sp/>context<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>n_cd_tree;<sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>nodes<sp/>in<sp/>CD<sp/>tree<sp/>structure<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int32<sp/>sil;<sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>CI<sp/>phone<sp/>ID<sp/>for<sp/>silence<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;char<sp/>ciphones[][];<sp/><sp/>/**&lt;<sp/>CI<sp/>phone<sp/>strings<sp/>(null-terminated)<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;char<sp/>padding[];<sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Padding<sp/>to<sp/>a<sp/>4-bytes<sp/>boundary<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;struct<sp/>{<sp/>int16<sp/>ctx;<sp/>int16<sp/>n_down;<sp/>int32<sp/>pid/down<sp/>}<sp/>cd_tree[];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;struct<sp/>{<sp/>int32<sp/>ssid;<sp/>int32<sp/>tmat;<sp/>int8<sp/>attr[4]<sp/>}<sp/>phones[];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int16<sp/>sseq[];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Unique<sp/>senone<sp/>sequences<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int8<sp/>sseq_len[];<sp/><sp/><sp/><sp/>/**&lt;<sp/>Number<sp/>of<sp/>states<sp/>in<sp/>each<sp/>sseq<sp/>(none<sp/>if<sp/>homogeneous)<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;END<sp/>FILE<sp/>FORMAT<sp/>DESCRIPTION\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*</highlight></codeline>
<codeline lineno="323" refid="bin__mdef_8h_1a3930ae6b3309a615335585db4b46306f" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a3930ae6b3309a615335585db4b46306f" kindref="member">bin_mdef_read</ref>(cmd_ln_t<sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*m;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fh;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tree_start;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>val,<sp/>i,<sp/>do_mmap,<sp/>swap;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos,<sp/>end;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*sseq_size;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>read<sp/>it<sp/>as<sp/>text<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m<sp/>=<sp/><ref refid="bin__mdef_8h_1a00dab94d45d1adc5f7778fd1e2398031" kindref="member">bin_mdef_read_text</ref>(config,<sp/>filename))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>binary<sp/>model<sp/>definition:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fh<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;val,<sp/>4,<sp/>1,<sp/>fh)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>byte-order<sp/>marker<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>swap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>BIN_MDEF_OTHER_ENDIAN)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Must<sp/>byte-swap<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;val,<sp/>4,<sp/>1,<sp/>fh)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>version<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;val);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>BIN_MDEF_FORMAT_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;File<sp/>format<sp/>version<sp/>%d<sp/>for<sp/>%s<sp/>is<sp/>newer<sp/>than<sp/>library\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/>filename);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;val,<sp/>4,<sp/>1,<sp/>fh)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>length<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;val);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>format<sp/>descriptor.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(fh,<sp/>val,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finally<sp/>allocate<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;refcnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>these,<sp/>to<sp/>make<sp/>gcc/glibc<sp/>shut<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FREAD_SWAP32_CHK(dest)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(fread((dest),<sp/>4,<sp/>1,<sp/>fh)<sp/>!=<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fh);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(m);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(&quot;Failed<sp/>to<sp/>read<sp/>%s<sp/>from<sp/>%s\n&quot;,<sp/>#dest,<sp/>filename);<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(swap)<sp/>SWAP_INT32(dest);</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" kindref="member">n_ci_sen</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" kindref="member">n_tmat</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1a31b5cda5136c6f72816da8889719bfe2" kindref="member">n_ctx</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" kindref="member">n_cd_tree</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>FREAD_SWAP32_CHK(&amp;m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CI<sp/>names<sp/>are<sp/>first<sp/>in<sp/>the<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref><sp/>=<sp/>ckd_calloc(m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decide<sp/>whether<sp/>to<sp/>read<sp/>in<sp/>the<sp/>whole<sp/>file<sp/>or<sp/>mmap<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>config<sp/>?<sp/>cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-mmap&quot;</highlight><highlight class="normal">)<sp/>:<sp/>TRUE;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;-mmap<sp/>specified,<sp/>but<sp/>mdef<sp/>is<sp/>other-endian.<sp/><sp/>Will<sp/>not<sp/>memory-map.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Actually<sp/>try<sp/>to<sp/>mmap<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" kindref="member">filemap</ref><sp/>=<sp/>mmio_file_read(filename);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" kindref="member">filemap</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>ftell(fh);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>base<sp/>pointer<sp/>from<sp/>the<sp/>memory<sp/>map.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)mmio_file_ptr(m-&gt;<ref refid="structbin__mdef__s_1a3358a80c50bf3f62417596553adf9c5e" kindref="member">filemap</ref>)<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Success!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92" kindref="member">alloc_mode</ref><sp/>=<sp/>BIN_MDEF_ON_DISK;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>everything<sp/>into<sp/>memory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ab8d852b6cc4f9899da72da03d1607c92" kindref="member">alloc_mode</ref><sp/>=<sp/>BIN_MDEF_IN_MEMORY;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(fh,<sp/>0,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>ftell(fh);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(fh,<sp/>pos,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0]<sp/>=<sp/>ckd_malloc(end<sp/>-<sp/>pos);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0],<sp/>1,<sp/>end<sp/>-<sp/>pos,<sp/>fh)<sp/>!=<sp/>end<sp/>-<sp/>pos)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>%d<sp/>bytes<sp/>of<sp/>data<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>end<sp/>-<sp/>pos,<sp/>filename);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i]<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1]<sp/>+<sp/>strlen(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1])<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>past<sp/>the<sp/>padding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_start<sp/>=</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1]<sp/>+<sp/>strlen(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i<sp/>-<sp/>1])<sp/>+<sp/>1<sp/>-<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0];</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_start<sp/>=<sp/>(tree_start<sp/>+<sp/>3)<sp/>&amp;<sp/>~3;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref><sp/>=<sp/>(<ref refid="structcd__tree__s" kindref="compound">cd_tree_t</ref><sp/>*)<sp/>(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[0]<sp/>+<sp/>tree_start);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" kindref="member">n_cd_tree</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].<ref refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>[i].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref><sp/>=<sp/>(<ref refid="structmdef__entry__s" kindref="compound">mdef_entry_t</ref><sp/>*)<sp/>(m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref><sp/>+<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" kindref="member">n_cd_tree</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].<ref refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" kindref="member">tmat</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>sseq_size<sp/>=<sp/>(int32<sp/>*)<sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref><sp/>+<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(sseq_size);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref><sp/>=<sp/>ckd_calloc(m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0]<sp/>=<sp/>(uint16<sp/>*)<sp/>(sseq_size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>*sseq_size;<sp/>++i)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0]<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[i]<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0]<sp/>+<sp/>i<sp/>*<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref><sp/>=<sp/>(uint8<sp/>*)<sp/>(m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0]<sp/>+<sp/>*sseq_size);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[i]<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[i<sp/>-<sp/>1]<sp/>+<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>build<sp/>the<sp/>CD-to-CI<sp/>mappings<sp/>using<sp/>the<sp/>senone<sp/>sequences.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>the<sp/>only<sp/>really<sp/>accurate<sp/>way<sp/>to<sp/>do<sp/>it,<sp/>though<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>still<sp/>inaccurate<sp/>in<sp/>the<sp/>case<sp/>of<sp/>heterogeneous<sp/>topologies<sp/>or</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>cross-state<sp/>tying.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref><sp/>=<sp/>(int16<sp/>*)<sp/>ckd_malloc(m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref>));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref><sp/>=<sp/>(int16<sp/>*)<sp/>ckd_malloc(m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref>));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>mappings<sp/>(identity,<sp/>none)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" kindref="member">n_ci_sen</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref>[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref>[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref>[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>ssid<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>bin_mdef_n_emit_state_phone(m,<sp/>i);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>bin_mdef_sseq2sen(m,<sp/>ssid,<sp/>j);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci<sp/>=<sp/>bin_mdef_pid2ci(m,<sp/>i);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>the<sp/>first<sp/>one<sp/>and<sp/>warn<sp/>if<sp/>we<sp/>have<sp/>cross-state<sp/>tying.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref>[s]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref>[s]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a457e5352e52a57de5d1536bcd6b331a9" kindref="member">sen2cimap</ref>[s]<sp/>!=<sp/>ci)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Senone<sp/>%d<sp/>is<sp/>shared<sp/>between<sp/>multiple<sp/>base<sp/>phones\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>bin_mdef_n_emit_state_phone(m,<sp/>ci))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;CD<sp/>phone<sp/>%d<sp/>has<sp/>fewer<sp/>states<sp/>than<sp/>CI<sp/>phone<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>ci);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ad5e814ffa116c85d46359e3ffd40bff7" kindref="member">cd2cisen</ref>[s]<sp/>=</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_sseq2sen(m,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[ci].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>,<sp/>j);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>silence<sp/>phone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>=<sp/><ref refid="bin__mdef_8h_1af592f710731474b77166a29530716672" kindref="member">bin_mdef_ciphone_id</ref>(m,<sp/><ref refid="mdef_8h_1a87b279af2566a60666495e16d09a8aee" kindref="member">S3_SILENCE_CIPHONE</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>CI-phone,<sp/>%d<sp/>CD-phone,<sp/>%d<sp/>emitstate/phone,<sp/>%d<sp/>CI-sen,<sp/>%d<sp/>Sen,<sp/>%d<sp/>Sen-Seq\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref><sp/>-<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" kindref="member">n_ci_sen</ref>,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref>,<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="bin__mdef_8h_1a982b8e598afed47805fab1509e8fc4bb" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a982b8e598afed47805fab1509e8fc4bb" kindref="member">bin_mdef_write</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fh;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>val,<sp/>i;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fh<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Byteorder<sp/>marker.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>BIN_MDEF_NATIVE_ENDIAN;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;val,<sp/>1,<sp/>4,<sp/>fh);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Version.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>BIN_MDEF_FORMAT_VERSION;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;val,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val),<sp/>fh);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Round<sp/>the<sp/>format<sp/>descriptor<sp/>size<sp/>up<sp/>to<sp/>a<sp/>4-byte<sp/>boundary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_desc)<sp/>+<sp/>3)<sp/>&amp;<sp/>~3);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;val,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val),<sp/>fh);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(format_desc,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_desc),<sp/>fh);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>it<sp/>with<sp/>zeros.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;i,<sp/>1,<sp/>val<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_desc),<sp/>fh);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Binary<sp/>header<sp/>things.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" kindref="member">n_ci_sen</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" kindref="member">n_tmat</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1a31b5cda5136c6f72816da8889719bfe2" kindref="member">n_ctx</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;m-&gt;<ref refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" kindref="member">n_cd_tree</ref>,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>this<sp/>as<sp/>a<sp/>32-bit<sp/>value<sp/>to<sp/>preserve<sp/>alignment<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>non-mmap<sp/>case<sp/>(we<sp/>want<sp/>things<sp/>aligned<sp/>both<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>beginning<sp/>of<sp/>the<sp/>file<sp/>and<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>phone</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>strings).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Phone<sp/>strings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i],<sp/>1,<sp/>strlen(m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[i])<sp/>+<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>with<sp/>zeros.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(ftell(fh)<sp/>+<sp/>3)<sp/>&amp;<sp/>~3;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;i,<sp/>1,<sp/>val<sp/>-<sp/>ftell(fh),<sp/>fh);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>CD-tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>),<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad625c3c55d5f42ed275b8b5638a6d80b" kindref="member">n_cd_tree</ref>,<sp/>fh);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>),<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>,<sp/>fh);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>size<sp/>of<sp/>sseq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref><sp/>*<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;val,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>sseq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>),</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref><sp/>*<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>,<sp/>fh);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calcluate<sp/>size<sp/>of<sp/>sseq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref>[i];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>size<sp/>of<sp/>sseq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;n,<sp/>4,<sp/>1,<sp/>fh);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>sseq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>),<sp/>n,<sp/>fh);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>sseq_len<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref>,<sp/>1,<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab9dad211cbc12eb6f848482bcf78d47f" kindref="member">n_sseq</ref>,<sp/>fh);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="bin__mdef_8h_1af89d79226df33947019efcfe7377d586" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1af89d79226df33947019efcfe7377d586" kindref="member">bin_mdef_write_text</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fh;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/>i,<sp/>n_total_state;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(filename,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fh<sp/>=<sp/>stdout;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fh<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;0.3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>n_base\n&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>n_tri\n&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref><sp/>-<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total_state<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref><sp/>*<sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total_state<sp/>+=<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[i].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>n_state_map\n&quot;</highlight><highlight class="normal">,<sp/>n_total_state);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>n_tied_state\n&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a3d1c202165d8e5e153a73d708ca28109" kindref="member">n_sen</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>n_tied_ci_state\n&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad7c318d6db85fd4b8ac13a81c145bbb8" kindref="member">n_ci_sen</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>n_tied_tmat\n&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a979557ad4f8369e84d93f633512345ca" kindref="member">n_tmat</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;#\n#<sp/>Columns<sp/>definitions\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;#%4s<sp/>%3s<sp/>%3s<sp/>%1s<sp/>%6s<sp/>%4s<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lft&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;attrib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tmat&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>...<sp/>state<sp/>id&apos;s<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_state;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%5s<sp/>%3s<sp/>%3s<sp/>%1s&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[p],<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_mdef_is_fillerphone(m,<sp/>p))</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%6s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%6s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%4d&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].<ref refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" kindref="member">tmat</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_state<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_state<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_state;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%6u&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>][i]);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>N\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>p<sp/>&lt;<sp/>m-&gt;<ref refid="structbin__mdef__s_1ad746dbb3f8108f575a95182f96b4b18f" kindref="member">n_phone</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_state;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%5s<sp/>%3s<sp/>%3s<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].info.cd.ctx[0]],</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].info.cd.ctx[1]],</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].info.cd.ctx[2]],</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" kindref="member">WPOS_NAME</ref>)[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].info.cd.wpos]);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_mdef_is_fillerphone(m,<sp/>p))</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%6s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;filler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%6s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%4d&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].<ref refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" kindref="member">tmat</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_state<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2ad87254182be424ac6ff1234274f134" kindref="member">n_emit_state</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_state<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1ab534bbd280015795b8e8ca4e296f4946" kindref="member">sseq_len</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_state;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%6u&quot;</highlight><highlight class="normal">,<sp/>m-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[p].<ref refid="structmdef__entry__s_1a12986649de9c59de3cc805e375b2c9a2" kindref="member">ssid</ref>][i]);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>N\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(filename,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="bin__mdef_8h_1af592f710731474b77166a29530716672" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1af592f710731474b77166a29530716672" kindref="member">bin_mdef_ciphone_id</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ciphone)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/>mid,<sp/>high;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exact<sp/>binary<sp/>search<sp/>on<sp/>m-&gt;ciphone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>high<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(low<sp/>&lt;<sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>(low<sp/>+<sp/>high)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>strcmp(ciphone,<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[mid]);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714" refid="bin__mdef_8h_1af437f39a8a9b52dd3187f7f0fc098cab" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1af437f39a8a9b52dd3187f7f0fc098cab" kindref="member">bin_mdef_ciphone_id_nocase</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ciphone)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/>mid,<sp/>high;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exact<sp/>binary<sp/>search<sp/>on<sp/>m-&gt;ciphone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>high<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(low<sp/>&lt;<sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>(low<sp/>+<sp/>high)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>strcmp_nocase(ciphone,<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[mid]);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="737" refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/>int32<sp/>ci)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ci<sp/>&lt;<sp/>m-&gt;n_ciphone);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[ci];</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="bin__mdef_8h_1a99cd766df3a6a74eab9e316586189d54" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a99cd766df3a6a74eab9e316586189d54" kindref="member">bin_mdef_phone_id</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/>int32<sp/>ci,<sp/>int32<sp/>lc,<sp/>int32<sp/>rc,<sp/>int32<sp/>wpos)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcd__tree__s" kindref="compound">cd_tree_t</ref><sp/>*cd_tree;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>max;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>ctx[4];</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>future,<sp/>we<sp/>might<sp/>back<sp/>off<sp/>when<sp/>context<sp/>is<sp/>not<sp/>available,</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>for<sp/>now<sp/>we&apos;ll<sp/>just<sp/>return<sp/>the<sp/>CI<sp/>phone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lc<sp/>&lt;<sp/>0<sp/>||<sp/>rc<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((ci<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(ci<sp/>&lt;<sp/>m-&gt;n_ciphone));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((lc<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(lc<sp/>&lt;<sp/>m-&gt;n_ciphone));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((rc<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(rc<sp/>&lt;<sp/>m-&gt;n_ciphone));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((wpos<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(wpos<sp/>&lt;<sp/><ref refid="mdef_8h_1ac271413770c3e95b993b856967b61487" kindref="member">N_WORD_POSN</ref>));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>context<sp/>list,<sp/>mapping<sp/>fillers<sp/>to<sp/>silence.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx[0]<sp/>=<sp/>wpos;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx[1]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx[2]<sp/>=<sp/>(m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>&gt;=<sp/>0</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[lc].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler)<sp/>?<sp/>m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>:<sp/>lc;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx[3]<sp/>=<sp/>(m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>&gt;=<sp/>0</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[rc].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler)<sp/>?<sp/>m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>:<sp/>rc;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>down<sp/>the<sp/>cd_tree.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>cd_tree<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>level<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>What<sp/>level<sp/>we<sp/>are<sp/>on.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/><ref refid="mdef_8h_1ac271413770c3e95b993b856967b61487" kindref="member">N_WORD_POSN</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>nodes<sp/>on<sp/>this<sp/>level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(level<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="779"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Looking<sp/>for<sp/>context<sp/>%d=%s<sp/>in<sp/>%d<sp/>at<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx[level],<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[ctx[level]],</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max,<sp/>cd_tree<sp/>-<sp/>m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>max;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Look<sp/>at<sp/>context<sp/>%d=%s<sp/>at<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd_tree[i].ctx,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[cd_tree[i].<ref refid="structcd__tree__s_1a2168538bf6cc21ad1a2c99fa2deb4559" kindref="member">ctx</ref>],<sp/>cd_tree<sp/>+<sp/>i<sp/>-<sp/>m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd_tree[i].ctx<sp/>==<sp/>ctx[level])</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>max)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="795"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Found<sp/>context<sp/>%d=%s<sp/>at<sp/>%d,<sp/>n_down=%d,<sp/>down=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx[level],<sp/>m-&gt;<ref refid="structbin__mdef__s_1afdd0df913746b0656186fc8c3e8a9206" kindref="member">ciname</ref>[ctx[level]],</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd_tree<sp/>+<sp/>i<sp/>-<sp/>m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref>,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd_tree[i].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>,<sp/>cd_tree[i].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="800"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Leaf<sp/>node,<sp/>stop<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd_tree[i].n_down<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cd_tree[i].c.<ref refid="structcd__tree__s_1a6635c35ad6fe74ad045389c76349016d" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>down<sp/>one<sp/>level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>cd_tree[i].<ref refid="structcd__tree__s_1ae5e735d325b0f278ff2ad55293faa616" kindref="member">n_down</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd_tree<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a0642be2bb56149689ad3fc1dad1e5d55" kindref="member">cd_tree</ref><sp/>+<sp/>cd_tree[i].c.<ref refid="structcd__tree__s_1aa536f1cbd93e2cded1238b39b8aa3751" kindref="member">down</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++level;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>probably<sp/>shouldn&apos;t<sp/>get<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">bin_mdef_phone_id_nearest(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/>int32<sp/>b,<sp/>int32<sp/>l,<sp/>int32<sp/>r,<sp/>int32<sp/>pos)</highlight></codeline>
<codeline lineno="815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/>tmppos;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>future,<sp/>we<sp/>might<sp/>back<sp/>off<sp/>when<sp/>context<sp/>is<sp/>not<sp/>available,</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>for<sp/>now<sp/>we&apos;ll<sp/>just<sp/>return<sp/>the<sp/>CI<sp/>phone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&lt;<sp/>0<sp/>||<sp/>r<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="bin__mdef_8h_1a99cd766df3a6a74eab9e316586189d54" kindref="member">bin_mdef_phone_id</ref>(m,<sp/>b,<sp/>l,<sp/>r,<sp/>pos);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exact<sp/>triphone<sp/>not<sp/>found;<sp/>backoff<sp/>to<sp/>other<sp/>word<sp/>positions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmppos<sp/>=<sp/>0;<sp/>tmppos<sp/>&lt;<sp/><ref refid="mdef_8h_1ac271413770c3e95b993b856967b61487" kindref="member">N_WORD_POSN</ref>;<sp/>tmppos++)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmppos<sp/>!=<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="bin__mdef_8h_1a99cd766df3a6a74eab9e316586189d54" kindref="member">bin_mdef_phone_id</ref>(m,<sp/>b,<sp/>l,<sp/>r,<sp/>tmppos);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>yet;<sp/>backoff<sp/>to<sp/>silence<sp/>phone<sp/>if<sp/>non-silence<sp/>filler<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>addition,<sp/>backoff<sp/>to<sp/>silence<sp/>phone<sp/>on<sp/>left/right<sp/>if<sp/>in<sp/>beginning/end<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newl<sp/>=<sp/>l,<sp/>newr<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)l].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>pos<sp/>==<sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa8ca058a8d25d38d074e028460833c8a9" kindref="member">WORD_POSN_BEGIN</ref><sp/>||<sp/>pos<sp/>==<sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa34f808e43d8f6e9312054f34a8bd74ac" kindref="member">WORD_POSN_SINGLE</ref>)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newl<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)r].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>pos<sp/>==<sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa85b62e42f20399f933b33099290989c3" kindref="member">WORD_POSN_END</ref><sp/>||<sp/>pos<sp/>==<sp/><ref refid="mdef_8h_1a71b2bcae7b6e79bad584cc5500b20e8fa34f808e43d8f6e9312054f34a8bd74ac" kindref="member">WORD_POSN_SINGLE</ref>)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newr<sp/>=<sp/>m-&gt;<ref refid="structbin__mdef__s_1a9071b7698132c1c2ce92a6f742e1c82f" kindref="member">sil</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newl<sp/>!=<sp/>l)<sp/>||<sp/>(newr<sp/>!=<sp/>r))<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="bin__mdef_8h_1a99cd766df3a6a74eab9e316586189d54" kindref="member">bin_mdef_phone_id</ref>(m,<sp/>b,<sp/>newl,<sp/>newr,<sp/>pos);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmppos<sp/>=<sp/>0;<sp/>tmppos<sp/>&lt;<sp/><ref refid="mdef_8h_1ac271413770c3e95b993b856967b61487" kindref="member">N_WORD_POSN</ref>;<sp/>tmppos++)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmppos<sp/>!=<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="bin__mdef_8h_1a99cd766df3a6a74eab9e316586189d54" kindref="member">bin_mdef_phone_id</ref>(m,<sp/>b,<sp/>newl,<sp/>newr,<sp/>tmppos);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>yet;<sp/>backoff<sp/>to<sp/>base<sp/>phone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="bin__mdef_8h_1a35d0676dd56e11508c62e84947901503" refkind="member"><highlight class="normal"><ref refid="bin__mdef_8h_1a35d0676dd56e11508c62e84947901503" kindref="member">bin_mdef_phone_str</ref>(<ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wpos_name;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((pid<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(pid<sp/>&lt;<sp/>m-&gt;n_phone));</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>wpos_name<sp/>=<sp/><ref refid="mdef_8h_1a89ef0442ded2ff90176ba6d02563923d" kindref="member">WPOS_NAME</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/>m-&gt;n_ciphone)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(m,<sp/>pid));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s<sp/>%s<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(m,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[0]),</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(m,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[1]),</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(m,<sp/>m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[2]),</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpos_name[m-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.wpos]);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/bin_mdef.c"/>
  </compounddef>
</doxygen>
