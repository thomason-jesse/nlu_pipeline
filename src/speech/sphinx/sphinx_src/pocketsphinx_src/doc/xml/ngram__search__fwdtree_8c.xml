<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ngram__search__fwdtree_8c" kind="file">
    <compoundname>ngram_search_fwdtree.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/listelem_alloc.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes refid="ngram__search__fwdtree_8h" local="yes">ngram_search_fwdtree.h</includes>
    <includes refid="phone__loop__search_8h" local="yes">phone_loop_search.h</includes>
    <incdepgraph>
      <node id="1600">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="1604">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1623">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
      </node>
      <node id="1592">
        <label>assert.h</label>
      </node>
      <node id="1625">
        <label>float.h</label>
      </node>
      <node id="1609">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
      </node>
      <node id="1598">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1619">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
      </node>
      <node id="1608">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1602">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1622">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1618">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1593">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1594">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1601">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1626" relation="include">
        </childnode>
      </node>
      <node id="1627">
        <label>phone_loop_search.h</label>
        <link refid="phone__loop__search_8h"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
      </node>
      <node id="1620">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
      </node>
      <node id="1603">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1606">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
        <childnode refid="1610" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1613" relation="include">
        </childnode>
      </node>
      <node id="1591">
        <label>string.h</label>
      </node>
      <node id="1611">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1615">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
        <childnode refid="1620" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
      </node>
      <node id="1597">
        <label>ngram_search.h</label>
        <link refid="ngram__search_8h"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
      </node>
      <node id="1616">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1613">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
      </node>
      <node id="1590">
        <label>src/libpocketsphinx/ngram_search_fwdtree.c</label>
        <link refid="ngram_search_fwdtree.c"/>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
      </node>
      <node id="1596">
        <label>ngram_search_fwdtree.h</label>
        <link refid="ngram__search__fwdtree_8h"/>
        <childnode refid="1597" relation="include">
        </childnode>
      </node>
      <node id="1595">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1614">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="1612">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
      </node>
      <node id="1610">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
      </node>
      <node id="1626">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
      </node>
      <node id="1617">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1618" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1619" relation="include">
        </childnode>
      </node>
      <node id="1599">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1624">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
      </node>
      <node id="1621">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1622" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
      </node>
      <node id="1605">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="1607">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ngram__search__fwdtree_8c_1a58360b0a332f35742f89edce94c649aa" prot="public" static="no">
        <name>__CHAN_DUMP__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="56" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__search__fwdtree_8c_1a268c1fbc6483e1ab06c007222f08d9ad" prot="public" static="no">
        <name>chan_v_eval</name>
        <param><defname>chan</defname></param>
        <initializer><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(&amp;(chan)-&gt;hmm)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="60" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a3dc01eef1ea91d13f9e842e1eb7e13c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_search_tree</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>init_search_tree</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="68" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="68" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a57106fb01236eef4b6e9233628973097" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_nonroot_chan</definition>
        <argsstring>(ngram_search_t *ngs, chan_t *hmm, int32 ph, int32 ci, int32 tmatid)</argsstring>
        <name>init_nonroot_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ngram__search_8h_1a2c5740fe4792d870b73f4100b32e9324" kindref="member">chan_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>ci</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>tmatid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="155" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="155" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a8f1bbad434543c10a21285652828d2d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void create_search_tree</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>create_search_tree</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="175" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="175" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a2304d6697898ba58652649a3a1ea17a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reinit_search_subtree</definition>
        <argsstring>(ngram_search_t *ngs, chan_t *hmm)</argsstring>
        <name>reinit_search_subtree</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type><ref refid="ngram__search_8h_1a2c5740fe4792d870b73f4100b32e9324" kindref="member">chan_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="343" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="343" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a1afa6abc7f1518e647e2f7c81641c993" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reinit_search_tree</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>reinit_search_tree</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="363" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="363" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a72c89a2a1f189495abee00e1853cddcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdtree_init</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdtree_init</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Initialize N-Gram search for fwdtree decoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="384" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="384" bodyend="393"/>
        <referencedby refid="ngram__search_8h_1a04f80b377c847026254fb85596e2f43c" compoundref="ngram__search_8c" startline="140" endline="237">ngram_search_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a04da5234f90d21344972cbe9ba576d52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void deinit_search_tree</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>deinit_search_tree</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="396" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="396" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a0e0e0436b30e1074114e1d37991c5d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdtree_deinit</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdtree_deinit</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Release memory associated with fwdtree decoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="425" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="425" bodyend="451"/>
        <references refid="structngram__search__s_1a4b2b42349e9e3df7e93b4a7d6994f63f" compoundref="ngram__search_8h" startline="235">ngram_search_s::max_nonroot_chan</references>
        <references refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" compoundref="ngram__search_8h" startline="275">ngram_search_s::active_chan_list</references>
        <referencedby refid="ngram__search_8h_1a9bafaa4af5a9a4f9e76a8daf54ac4a11" compoundref="ngram__search_8c" startline="289" endline="326">ngram_search_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1aa53827b47025d4e7a63f3ddce763d84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_fwdtree_reinit</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdtree_reinit</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Rebuild search structures for updated language models. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="454" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="454" bodyend="471"/>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1af736200cd01a5d743dbab447ecc85d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdtree_start</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdtree_start</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Start fwdtree decoding for an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="474" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="474" bodyend="524"/>
        <references refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" compoundref="ngram__search_8h" startline="335">ngram_search_s::st</references>
        <references refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" compoundref="ngram__search_8h" startline="276">ngram_search_s::n_active_chan</references>
        <references refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" compoundref="ngram__search_8h" startline="288">ngram_search_s::n_active_word</references>
        <references refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" compoundref="ngram__search_8h" startline="325">ngram_search_s::best_score</references>
        <references refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" compoundref="ngram__search_8h" startline="308">ngram_search_s::n_frame</references>
        <references refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" compoundref="pocketsphinx__internal_8h" startline="109">ps_search_s::hyp_str</references>
        <references refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" compoundref="ngram__search_8h" startline="265">ngram_search_s::n_1ph_words</references>
        <references refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" compoundref="ngram__search_8h" startline="264">ngram_search_s::single_phone_wid</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" compoundref="hmm_8c" startline="183" endline="198">hmm_clear</references>
        <references refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" compoundref="ngram__search_8h" startline="91">root_chan_s::hmm</references>
        <references refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" compoundref="hmm_8c" startline="201" endline="206">hmm_enter</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1ae6a6116222c58232dd2393262c1a79df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_sen_active</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>compute_sen_active</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="531" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="531" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1adc759e53de909685dc5305b11c475f75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void renormalize_scores</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx, int32 norm)</argsstring>
        <name>renormalize_scores</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="570" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="570" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1abf8a38da25e46fb2642db93b3c5c253b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 eval_root_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>eval_root_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="610" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="610" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a8f8172dbdcf86a00ac3ef77bed975ac7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 eval_nonroot_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>eval_nonroot_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="628" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="628" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a1ed2e71f757e86bcc544d84b08c9fa67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 eval_word_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>eval_word_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="649" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="649" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1ab48ad6fdcd4c856034f61ca0975f9b4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 evaluate_channels</definition>
        <argsstring>(ngram_search_t *ngs, int16 const *senone_scores, int frame_idx)</argsstring>
        <name>evaluate_channels</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="706" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="706" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1aa0938ab7b70b38e3774aba7a82436563" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prune_root_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>prune_root_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="727" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="727" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a25a9e79f158da69255dee813ce4421ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prune_nonroot_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>prune_nonroot_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="804" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="804" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a5c478e7b93f37501e22b0ef2c570cf5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void last_phone_transition</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>last_phone_transition</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="889" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="889" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a8e12552da1785807298e23b2b67063c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prune_word_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>prune_word_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1046" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1046" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a9592a6dae4b9073956b3d15a73e9e473" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prune_channels</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>prune_channels</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1134" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1134" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a4d63f9db5530a2f2d87b19f07650d0ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bptable_maxwpf</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>bptable_maxwpf</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1192" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1192" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1aa3c0e7a6e677d77e1cfdfaa06d8b962c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void word_transition</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>word_transition</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1245" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1245" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a0d16998fe9695b232da4796681d1280f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void deactivate_channels</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>deactivate_channels</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1436" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1436" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1a9e2828ba0d249424a234b6cf7d3ee530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_fwdtree_search</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>ngram_fwdtree_search</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
<para>Search one frame forward in an utterance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of frames searched (either 0 or 1). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1458" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1458" bodyend="1499"/>
        <references refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" compoundref="acmod_8c" startline="1126" endline="1185">acmod_score</references>
        <references refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" compoundref="ngram__search_8h" startline="325">ngram_search_s::best_score</references>
        <references refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" compoundref="ngram__search_8h" startline="308">ngram_search_s::n_frame</references>
        <references refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" compoundref="ngram__search_8c" startline="329" endline="345">ngram_search_mark_bptable</references>
        <references refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" compoundref="ngram__search_8h" startline="335">ngram_search_s::st</references>
        <references refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" compoundref="hmm_8h" startline="100">WORSE_THAN</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdtree_8c_1af32a83dbb9187542577a0c500b000840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdtree_finish</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdtree_finish</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Finish fwdtree decoding for an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" line="1502" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c" bodystart="1502" bodyend="1573"/>
        <references refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" compoundref="ngram__search_8c" startline="329" endline="345">ngram_search_mark_bptable</references>
        <references refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" compoundref="ngram__search_8h" startline="233">ngram_search_s::n_root_chan</references>
        <references refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" compoundref="ngram__search_8h" startline="231">ngram_search_s::root_chan</references>
        <references refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" compoundref="hmm_8c" startline="183" endline="198">hmm_clear</references>
        <references refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" compoundref="ngram__search_8h" startline="91">root_chan_s::hmm</references>
        <references refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" compoundref="ngram__search_8h" startline="276">ngram_search_s::n_active_chan</references>
        <references refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" compoundref="ngram__search_8h" startline="275">ngram_search_s::active_chan_list</references>
        <references refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" compoundref="ngram__search_8h" startline="288">ngram_search_s::n_active_word</references>
        <references refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" compoundref="ngram__search_8h" startline="287">ngram_search_s::active_word_list</references>
        <references refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" compoundref="ngram__search_8h" startline="247">ngram_search_s::word_active</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="ngram__search_8c_1a15477192481dffcb29e9c4167eff6c3c" compoundref="ngram__search_8c" startline="650" endline="660">ngram_search_free_all_rc</references>
        <references refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" compoundref="ngram__search_8h" startline="335">ngram_search_s::st</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Lexicon tree search. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/listelem_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__search__fwdtree_8h" kindref="compound">ngram_search_fwdtree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="phone__loop__search_8h" kindref="compound">phone_loop_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Turn<sp/>this<sp/>on<sp/>to<sp/>dump<sp/>channels<sp/>for<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CHAN_DUMP__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>__CHAN_DUMP__</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>chan_v_eval(chan)<sp/>hmm_dump_vit_eval(&amp;(chan)-&gt;hmm,<sp/>stderr)</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>chan_v_eval(chan)<sp/>hmm_vit_eval(&amp;(chan)-&gt;hmm)</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Allocate<sp/>that<sp/>part<sp/>of<sp/>the<sp/>search<sp/>channel<sp/>tree<sp/>structure<sp/>that<sp/>is<sp/>independent<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>LM<sp/>in<sp/>use.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">init_search_tree(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>w,<sp/>ndiph,<sp/>i,<sp/>n_words,<sp/>n_ci;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>ps_search_dict(ngs);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_t<sp/>*dimap;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref><sp/>=<sp/>ckd_calloc(n_words,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>#single<sp/>phone<sp/>words,<sp/>and<sp/>#unique<sp/>first<sp/>diphones<sp/>(#root<sp/>channels)<sp/>in<sp/>dict.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ndiph<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>n_ci<sp/>=<sp/>bin_mdef_n_ciphone(ps_search_acmod(ngs)-&gt;mdef);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>a<sp/>bitvector<sp/>with<sp/>flags<sp/>for<sp/>each<sp/>possible<sp/>diphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>dimap<sp/>=<sp/>bitvec_alloc(n_ci<sp/>*<sp/>n_ci);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(dict,<sp/>w))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(dict,<sp/>w))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph0,<sp/>ph1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph0<sp/>=<sp/>dict_first_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph1<sp/>=<sp/>dict_second_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>ndiph<sp/>the<sp/>first<sp/>time<sp/>we<sp/>see<sp/>a<sp/>diphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(dimap,<sp/>ph0<sp/>*<sp/>n_ci<sp/>+<sp/>ph1))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(dimap,<sp/>ph0<sp/>*<sp/>n_ci<sp/>+<sp/>ph1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ndiph;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>unique<sp/>initial<sp/>diphones\n&quot;</highlight><highlight class="normal">,<sp/>ndiph);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(dimap);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>remaining<sp/>dict<sp/>words<sp/>(&lt;/s&gt;,<sp/>&lt;s&gt;,<sp/>&lt;sil&gt;,<sp/>noise<sp/>words)<sp/>to<sp/>single-phone<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref><sp/>+=<sp/>dict_num_fillers(dict)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1abc8a67e3f64adc470c78dfdd23be4126" kindref="member">n_root_chan_alloc</ref><sp/>=<sp/>ndiph<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>these<sp/>are<sp/>all<sp/>*actually*<sp/>single-phone<sp/>words,</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>otherwise<sp/>really<sp/>bad<sp/>things<sp/>will<sp/>happen<sp/>to<sp/>us.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>++w)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(dict,<sp/>w))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict_is_single_phone(dict,<sp/>w))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Filler<sp/>word<sp/>%d<sp/>=<sp/>%s<sp/>has<sp/>more<sp/>than<sp/>one<sp/>phone,<sp/>ignoring<sp/>it.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w,<sp/>dict_wordstr(dict,<sp/>w));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>and<sp/>initialize<sp/>root<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref><sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1abc8a67e3f64adc470c78dfdd23be4126" kindref="member">n_root_chan_alloc</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1abc8a67e3f64adc470c78dfdd23be4126" kindref="member">n_root_chan_alloc</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>TRUE,<sp/>-1,<sp/>-1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].penult_phn_wid<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Permanently<sp/>allocate<sp/>and<sp/>initialize<sp/>channels<sp/>for<sp/>single-phone</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>words<sp/>(1/word).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref><sp/>=<sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict_is_single_phone(dict,<sp/>w))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>SIL<sp/>as<sp/>right<sp/>context<sp/>for<sp/>these.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref><sp/>=<sp/>bin_mdef_silphone(ps_search_acmod(ngs)-&gt;mdef);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref><sp/>=<sp/>dict_first_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>TRUE,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2ssid(ps_search_acmod(ngs)-&gt;mdef,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]<sp/>=<sp/>(<ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*)<sp/>&amp;(ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref><sp/>=<sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>root,<sp/>%d<sp/>non-root<sp/>channels,<sp/>%d<sp/>single-phone<sp/>words\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>One-time<sp/>initialization<sp/>of<sp/>internal<sp/>channels<sp/>in<sp/>HMM<sp/>tree.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">init_nonroot_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*<sp/>hmm,<sp/>int32<sp/>ph,<sp/>int32<sp/>ci,<sp/>int32<sp/>tmatid)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;info.<ref refid="structchan__s_1a136796f6a13c0d6989120f9aa25b85f1" kindref="member">penult_phn_wid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref><sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>FALSE,<sp/>ph,<sp/>tmatid);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>Allocate<sp/>and<sp/>initialize<sp/>search<sp/>channel-tree<sp/>structure.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>At<sp/>this<sp/>point,<sp/>all<sp/>the<sp/>root-channels<sp/>have<sp/>been<sp/>allocated<sp/>and<sp/>partly<sp/>initialized</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>(as<sp/>per<sp/>init_search_tree()),<sp/>and<sp/>channels<sp/>for<sp/>all<sp/>the<sp/>single-phone<sp/>words<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>allocated<sp/>and<sp/>initialized.<sp/><sp/>None<sp/>of<sp/>the<sp/>interior<sp/>channels<sp/>of<sp/>search-trees<sp/>have</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>been<sp/>allocated.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>This<sp/>routine<sp/>may<sp/>be<sp/>called<sp/>on<sp/>every<sp/>utterance,<sp/>after<sp/>reinit_search_tree()<sp/>clears</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>the<sp/>search<sp/>tree<sp/>created<sp/>for<sp/>the<sp/>previous<sp/>utterance.<sp/><sp/>Meant<sp/>for<sp/>reconfiguring<sp/>the</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>search<sp/>tree<sp/>to<sp/>suit<sp/>the<sp/>currently<sp/>active<sp/>LM.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">create_search_tree(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>w,<sp/>i,<sp/>j,<sp/>p,<sp/>ph,<sp/>tmatid;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_words;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>ps_search_dict(ngs);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p<sp/>=<sp/>ps_search_dict2pid(ngs);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Creating<sp/>search<sp/>tree\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>w++)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[w]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;before:<sp/>%d<sp/>root,<sp/>%d<sp/>non-root<sp/>channels,<sp/>%d<sp/>single-phone<sp/>words\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ciphone,<sp/>ci2phone;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>dictionary<sp/>words<sp/>not<sp/>in<sp/>LM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngram_model_set_known_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,<sp/>dict_basewid(dict,<sp/>w)))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>single-phone<sp/>words<sp/>individually;<sp/>not<sp/>in<sp/>channel<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(dict,<sp/>w))<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(1,(</highlight><highlight class="stringliteral">&quot;single_phone_wid[%d]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref>,<sp/>dict_wordstr(dict,<sp/>w)));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref>++]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>a<sp/>root<sp/>channel<sp/>matching<sp/>the<sp/>initial<sp/>diphone,<sp/>or</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>allocate<sp/>one<sp/>if<sp/>not<sp/>found.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ciphone<sp/>=<sp/>dict_first_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2phone<sp/>=<sp/>dict_second_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref><sp/>==<sp/>ciphone</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref><sp/>==<sp/>ci2phone)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>&amp;(ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>]);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>.tmatid<sp/>=<sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/>ciphone);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Begin<sp/>with<sp/>CI<sp/>phone?<sp/><sp/>Not<sp/>sure<sp/>this<sp/>makes<sp/>a<sp/>difference...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)<sp/>=</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2ssid(ps_search_acmod(ngs)-&gt;mdef,<sp/>ciphone);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref><sp/>=<sp/>ciphone;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref><sp/>=<sp/>ci2phone;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>++;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>&amp;(ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i]);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;word<sp/>%s<sp/>rhmm<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dict_wordstr(dict,<sp/>w),<sp/>rhmm<sp/>-<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>rhmm<sp/>=<sp/>root<sp/>channel<sp/>for<sp/>w.<sp/><sp/>Go<sp/>on<sp/>to<sp/>remaining<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_pronlen(dict,<sp/>w)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Next<sp/>phone<sp/>is<sp/>the<sp/>last;<sp/>not<sp/>kept<sp/>in<sp/>tree;<sp/>add<sp/>w<sp/>to<sp/>penult_phn_wid<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((j<sp/>=<sp/>rhmm-&gt;penult_phn_wid)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;penult_phn_wid<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[j]<sp/>&gt;=<sp/>0;<sp/>j<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[j]);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[j]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>remaining<sp/>phones,<sp/>except<sp/>the<sp/>last,<sp/>to<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph<sp/>=<sp/><ref refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" kindref="member">dict2pid_internal</ref>(d2p,<sp/>w,<sp/>1);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmatid<sp/>=<sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>1));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>hmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_nonroot_chan(ngs,<sp/>hmm,<sp/>ph,<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>1),<sp/>tmatid);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>++;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*prev_hmm<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>hmm<sp/>&amp;&amp;<sp/>(hmm_nonmpx_ssid(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>!=<sp/>ph);<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_hmm<sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hmm)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>thanks,<sp/>rkm!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_hmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref><sp/>=<sp/>hmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_nonroot_chan(ngs,<sp/>hmm,<sp/>ph,<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>1),<sp/>tmatid);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>++;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;phone<sp/>%s<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(ps_search_acmod(ngs)-&gt;mdef,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_second_phone(dict,<sp/>w)),<sp/>ph));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>2;<sp/>p<sp/>&lt;<sp/>dict_pronlen(dict,<sp/>w)<sp/>-<sp/>1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph<sp/>=<sp/><ref refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" kindref="member">dict2pid_internal</ref>(d2p,<sp/>w,<sp/>p);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmatid<sp/>=<sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>p));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hmm-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;next<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>hmm-&gt;next;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_nonroot_chan(ngs,<sp/>hmm,<sp/>ph,<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>p),<sp/>tmatid);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>++;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*prev_hmm<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>hmm-&gt;next;<sp/>hmm<sp/>&amp;&amp;<sp/>(hmm_nonmpx_ssid(&amp;hmm-&gt;hmm)<sp/>!=<sp/>ph);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>hmm-&gt;alt)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_hmm<sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hmm)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>thanks,<sp/>rkm!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_hmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref><sp/>=<sp/>hmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_nonroot_chan(ngs,<sp/>hmm,<sp/>ph,<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>p),<sp/>tmatid);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>++;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;phone<sp/>%s<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(ps_search_acmod(ngs)-&gt;mdef,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>w,<sp/>p)),<sp/>ph));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>but<sp/>last<sp/>phone<sp/>of<sp/>w<sp/>in<sp/>tree;<sp/>add<sp/>w<sp/>to<sp/>hmm-&gt;info.penult_phn_wid<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((j<sp/>=<sp/>hmm-&gt;info.penult_phn_wid)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;info.penult_phn_wid<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[j]<sp/>&gt;=<sp/>0;<sp/>j<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[j]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[j]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref><sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>filler<sp/>words<sp/>to<sp/>the<sp/>array<sp/>of<sp/>1ph<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>++w)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>anything<sp/>that<sp/>doesn&apos;t<sp/>actually<sp/>have<sp/>a<sp/>single<sp/>phone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict_is_single_phone(dict,<sp/>w))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>skip<sp/>&quot;real<sp/>words&quot;<sp/>and<sp/>things<sp/>that<sp/>are<sp/>in<sp/>the<sp/>LM.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(dict,<sp/>w))</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngram_model_set_known_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,<sp/>dict_basewid(dict,<sp/>w)))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(1,(</highlight><highlight class="stringliteral">&quot;single_phone_wid[%d]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>,<sp/>dict_wordstr(dict,<sp/>w)));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>++]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref><sp/>&gt;=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a4b2b42349e9e3df7e93b4a7d6994f63f" kindref="member">max_nonroot_chan</ref>)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>some<sp/>room<sp/>for<sp/>channels<sp/>for<sp/>new<sp/>words<sp/>added<sp/>dynamically<sp/>at<sp/>run<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a4b2b42349e9e3df7e93b4a7d6994f63f" kindref="member">max_nonroot_chan</ref><sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref><sp/>+<sp/>128;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;after:<sp/>max<sp/>nonroot<sp/>chan<sp/>increased<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a4b2b42349e9e3df7e93b4a7d6994f63f" kindref="member">max_nonroot_chan</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>old<sp/>active<sp/>channel<sp/>list<sp/>array<sp/>if<sp/>any<sp/>and<sp/>allocate<sp/>new<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref><sp/>=<sp/>ckd_calloc_2d(2,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a4b2b42349e9e3df7e93b4a7d6994f63f" kindref="member">max_nonroot_chan</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>word<sp/>from<sp/>the<sp/>language<sp/>model<sp/>has<sp/>pronunciation<sp/>in<sp/>the<sp/>dictionary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;after:<sp/>%d<sp/>root,<sp/>%d<sp/>non-root<sp/>channels,<sp/>%d<sp/>single-phone<sp/>words\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref>,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">reinit_search_subtree(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*child,<sp/>*sibling;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>free<sp/>all<sp/>children<sp/>under<sp/>hmm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(child<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;<sp/>child;<sp/>child<sp/>=<sp/>sibling)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/>child-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinit_search_subtree(ngs,<sp/>child);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>free<sp/>hmm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>listelem_free(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>,<sp/>hmm);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>Delete<sp/>search<sp/>tree<sp/>by<sp/>freeing<sp/>all<sp/>interior<sp/>channels<sp/>within<sp/>search<sp/>tree<sp/>and</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>restoring<sp/>root<sp/>channel<sp/>state<sp/>to<sp/>the<sp/>init<sp/>state<sp/>(i.e.,<sp/>just<sp/>after<sp/>init_search_tree()).</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">reinit_search_tree(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*sibling;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(hmm)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinit_search_subtree(ngs,<sp/>hmm);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>sibling;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].penult_phn_wid<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a043723786367f5026dce99c261f7086d" kindref="member">n_nonroot_chan</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="ngram__search__fwdtree_8h_1a72c89a2a1f189495abee00e1853cddcc" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdtree_8c_1a72c89a2a1f189495abee00e1853cddcc" kindref="member">ngram_fwdtree_init</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>bestbp_rc,<sp/>lastphn_cand,<sp/>last_ltrans<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc<sp/>=<sp/>ckd_calloc(bin_mdef_n_ciphone(ps_search_acmod(ngs)-&gt;mdef),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;bestbp_rc));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;lastphn_cand<sp/>=<sp/>ckd_calloc(ps_search_n_words(ngs),</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;lastphn_cand));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>init_search_tree(ngs);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>create_search_tree(ngs);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">deinit_search_tree(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>w,<sp/>n_words;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1abc8a67e3f64adc470c78dfdd23be4126" kindref="member">n_root_chan_alloc</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>[i].<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>++w)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict_is_single_phone(ps_search_dict(ngs),<sp/>w))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1abc8a67e3f64adc470c78dfdd23be4126" kindref="member">n_root_chan_alloc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="ngram__search__fwdtree_8h_1a0e0e0436b30e1074114e1d37991c5d6b" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdtree_8c_1a0e0e0436b30e1074114e1d37991c5d6b" kindref="member">ngram_fwdtree_deinit</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)ngs-&gt;n_tot_frame</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>fwdtree<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_tot_cpu,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_tot_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>fwdtree<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_tot_elapsed,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_tot_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>non-root<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>reinit_search_tree(ngs);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>search<sp/>tree.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>deinit_search_tree(ngs);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>other<sp/>stuff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a4b2b42349e9e3df7e93b4a7d6994f63f" kindref="member">max_nonroot_chan</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free_2d(ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;cand_sf);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;bestbp_rc);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;lastphn_cand);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;lastphn_cand<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="ngram__search__fwdtree_8h_1aa53827b47025d4e7a63f3ddce763d84e" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdtree_8c_1aa53827b47025d4e7a63f3ddce763d84e" kindref="member">ngram_fwdtree_reinit</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>non-root<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>reinit_search_tree(ngs);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>search<sp/>tree.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>deinit_search_tree(ngs);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reallocate<sp/>things<sp/>that<sp/>depend<sp/>on<sp/>the<sp/>number<sp/>of<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;lastphn_cand);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;lastphn_cand<sp/>=<sp/>ckd_calloc(ps_search_n_words(ngs),</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;lastphn_cand));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref><sp/>=<sp/>ckd_calloc(ps_search_n_words(ngs),</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rebuild<sp/>the<sp/>search<sp/>tree.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>init_search_tree(ngs);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>create_search_tree(ngs);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="ngram__search__fwdtree_8h_1af736200cd01a5d743dbab447ecc85d08" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdtree_8c_1af736200cd01a5d743dbab447ecc85d08" kindref="member">ngram_fwdtree_start</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*base<sp/>=<sp/>(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)ngs;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w,<sp/>n_words;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>utterance<sp/>statistics.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_reset(&amp;ngs-&gt;fwdtree_perf);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_start(&amp;ngs-&gt;fwdtree_perf);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>backpointer<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bpidx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bss_head<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>word<sp/>lattice.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_words;<sp/>++i)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx[i]<sp/>=<sp/>NO_BP;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>active<sp/>HMM<sp/>and<sp/>word<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[0]<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[0]<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>scores.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;renormalized<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>other<sp/>stuff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_words;<sp/>i++)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[i].sf<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>hypothesis<sp/>string.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>permanently<sp/>allocated<sp/>single-phone<sp/>words,<sp/>since<sp/>they</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>may<sp/>have<sp/>junk<sp/>left<sp/>over<sp/>in<sp/>them<sp/>from<sp/>FWDFLAT.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>search<sp/>with<sp/>&lt;s&gt;;<sp/>word_chan[&lt;s&gt;]<sp/>is<sp/>permanently<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[dict_startwid(ps_search_dict(ngs))];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0,<sp/>NO_BP,<sp/>0);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>Mark<sp/>the<sp/>active<sp/>senones<sp/>for<sp/>all<sp/>senones<sp/>belonging<sp/>to<sp/>channels<sp/>that<sp/>are<sp/>active<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>current<sp/>frame.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">compute_sen_active(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>**acl;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w,<sp/>*awl;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(ps_search_acmod(ngs));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>active<sp/>senones<sp/>for<sp/>root<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(ngs),<sp/>&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>active<sp/>senones<sp/>for<sp/>nonroot<sp/>channels<sp/>in<sp/>HMM<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>acl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>*(acl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>hmm<sp/>=<sp/>*(acl++))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(ngs),<sp/>&amp;hmm-&gt;hmm);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>active<sp/>senones<sp/>for<sp/>individual<sp/>word<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>*(awl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>w<sp/>=<sp/>*(awl++))<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(ngs),<sp/>&amp;hmm-&gt;hmm);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(ngs),<sp/>&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">renormalize_scores(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/>int32<sp/>norm)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>**acl;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w,<sp/>*awl;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>root<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>norm);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>nonroot<sp/>channels<sp/>in<sp/>HMM<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>acl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>*(acl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>hmm<sp/>=<sp/>*(acl++))<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(&amp;hmm-&gt;hmm,<sp/>norm);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>individual<sp/>word<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>*(awl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>w<sp/>=<sp/>*(awl++))<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(&amp;hmm-&gt;hmm,<sp/>norm);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>norm);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;renormalized<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="610"><highlight class="normal">eval_root_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>bestscore;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score<sp/>=<sp/>chan_v_eval(rhmm);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_root_chan_eval;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bestscore);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="628"><highlight class="normal">eval_nonroot_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>**acl;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>bestscore;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>acl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_nonroot_chan_eval<sp/>+=<sp/>i;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>*(acl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>hmm<sp/>=<sp/>*(acl++))<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score<sp/>=<sp/>chan_v_eval(hmm);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(&amp;hmm-&gt;hmm)<sp/>==<sp/>frame_idx);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestscore;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="649"><highlight class="normal">eval_word_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w,<sp/>bestscore,<sp/>*awl,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>*(awl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>w<sp/>=<sp/>*(awl++))<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(bitvec_is_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_clear(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>chan_v_eval(hmm);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*printf(&quot;eval<sp/>word<sp/>chan<sp/>%d<sp/>score<sp/>%d\n&quot;,<sp/>w,<sp/>score);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Similarly<sp/>for<sp/>statically<sp/>allocated<sp/>single-phone<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>chan_v_eval(rhmm);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;eval<sp/>1ph<sp/>word<sp/>chan<sp/>%d<sp/>score<sp/>%d\n&quot;,<sp/>w,<sp/>score);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore<sp/>&amp;&amp;<sp/>w<sp/>!=<sp/>ps_search_finish_wid(ngs))</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_last_chan_eval<sp/>+=<sp/>k<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_nonroot_chan_eval<sp/>+=<sp/>k<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_word_lastchan_eval<sp/>+=</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1]<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestscore;</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="706"><highlight class="normal">evaluate_channels(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senone_scores,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bs;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" kindref="member">hmm_context_set_senscore</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>senone_scores);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/>eval_root_chan(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bs<sp/>=<sp/>eval_nonroot_chan(ngs,<sp/>frame_idx))<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/>bs;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bs<sp/>=<sp/>eval_word_chan(ngs,<sp/>frame_idx))<sp/>BETTER_THAN<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/>bs;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a81ee45f3c184568e2b5f8b79c58e0b9e" kindref="member">last_phone_best_score</ref><sp/>=<sp/>bs;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>*<sp/>Prune<sp/>currently<sp/>active<sp/>root<sp/>channels<sp/>for<sp/>next<sp/>frame.<sp/><sp/>Also,<sp/>perform<sp/>exit</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*<sp/>transitions<sp/>out<sp/>of<sp/>them<sp/>and<sp/>activate<sp/>successors.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*<sp/>score[]<sp/>of<sp/>pruned<sp/>root<sp/>chan<sp/>set<sp/>to<sp/>WORST_SCORE<sp/>elsewhere.</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">prune_root_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>nf,<sp/>w;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh,<sp/>newphone_thresh,<sp/>lastphn_thresh,<sp/>newphone_score;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>**nacl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>active<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlastphn__cand__s" kindref="compound">lastphn_cand_t</ref><sp/>*candp;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;dynamic_beam;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>newphone_thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;pbeam;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>lastphn_thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;lpbeam;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>nacl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[nf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)ps_search_lookahead(ngs);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>;<sp/>i++,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;Root<sp/>channel<sp/>%d<sp/>frame<sp/>%d<sp/>score<sp/>%d<sp/>thresh<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>thresh));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>this<sp/>channel<sp/>was<sp/>active<sp/>in<sp/>current<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>=<sp/>nf;<sp/><sp/></highlight><highlight class="comment">/*<sp/>rhmm<sp/>will<sp/>be<sp/>active<sp/>in<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;Preserving<sp/>root<sp/>channel<sp/>%d<sp/>score<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transitions<sp/>out<sp/>of<sp/>this<sp/>root<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transition<sp/>to<sp/>all<sp/>next-level<sp/>channels<sp/>in<sp/>the<sp/>HMM<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newphone_score<sp/>=<sp/>hmm_out_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>+<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls<sp/>!=<sp/>NULL<sp/>||<sp/>newphone_score<sp/>BETTER_THAN<sp/>newphone_thresh)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>pl_newphone_score<sp/>=<sp/>newphone_score</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref>(pls,<sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newphone_score<sp/>BETTER_THAN<sp/>newphone_thresh)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newphone_score<sp/>BETTER_THAN<sp/>hmm_in_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>newphone_score,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>nf);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nacl++)<sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Transition<sp/>to<sp/>last<sp/>phone<sp/>of<sp/>all<sp/>words<sp/>for<sp/>which<sp/>this<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>penultimate<sp/>phone<sp/>(the<sp/>last<sp/>phones<sp/>may<sp/>need<sp/>multiple<sp/>right<sp/>contexts).</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Remember<sp/>to<sp/>remove<sp/>the<sp/>temporary<sp/>newword_penalty.</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls<sp/>!=<sp/>NULL<sp/>||<sp/>newphone_score<sp/>BETTER_THAN<sp/>lastphn_thresh)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>rhmm-&gt;penult_phn_wid;<sp/>w<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[w])<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>pl_newphone_score<sp/>=<sp/>newphone_score</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pls,<sp/>dict_last_phone(ps_search_dict(ngs),w));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;word<sp/>%s<sp/>newphone_score<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dict_wordstr(ps_search_dict(ngs),<sp/>w),<sp/>newphone_score));</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newphone_score<sp/>BETTER_THAN<sp/>lastphn_thresh)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp<sp/>=<sp/>ngs-&gt;lastphn_cand<sp/>+<sp/>ngs-&gt;n_lastphn_cand;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;n_lastphn_cand++;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;wid<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;score<sp/>=</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newphone_score<sp/>-<sp/>ngs-&gt;nwpen;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;bp<sp/>=<sp/>hmm_out_history(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>=<sp/>(int)(nacl<sp/>-<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[nf<sp/>&amp;<sp/>0x1]);</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*<sp/>Prune<sp/>currently<sp/>active<sp/>nonroot<sp/>channels<sp/>in<sp/>HMM<sp/>tree<sp/>for<sp/>next<sp/>frame.<sp/><sp/>Also,<sp/>perform</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/>*<sp/>exit<sp/>transitions<sp/>out<sp/>of<sp/>such<sp/>channels<sp/>and<sp/>activate<sp/>successors.</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal">prune_nonroot_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*nexthmm;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nf,<sp/>w,<sp/>i;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh,<sp/>newphone_thresh,<sp/>lastphn_thresh,<sp/>newphone_score;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>**acl,<sp/>**nacl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>list,<sp/>next<sp/>active<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlastphn__cand__s" kindref="compound">lastphn_cand_t</ref><sp/>*candp;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;dynamic_beam;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>newphone_thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;pbeam;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>lastphn_thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;lpbeam;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)ps_search_lookahead(ngs);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>acl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>active<sp/>HMMs<sp/>in<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>nacl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>+<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[nf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[frame_idx<sp/>&amp;<sp/>0x1],<sp/>hmm<sp/>=<sp/>*(acl++);<sp/>i<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i,<sp/>hmm<sp/>=<sp/>*(acl++))<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(&amp;hmm-&gt;hmm)<sp/>&gt;=<sp/>frame_idx);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(&amp;hmm-&gt;hmm)<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>retain<sp/>this<sp/>channel<sp/>in<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;hmm)<sp/>!=<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;hmm-&gt;hmm)<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nacl++)<sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transition<sp/>to<sp/>all<sp/>next-level<sp/>channel<sp/>in<sp/>the<sp/>HMM<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newphone_score<sp/>=<sp/>hmm_out_score(&amp;hmm-&gt;hmm)<sp/>+<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls<sp/>!=<sp/>NULL<sp/>||<sp/>newphone_score<sp/>BETTER_THAN<sp/>newphone_thresh)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nexthmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;<sp/>nexthmm;<sp/>nexthmm<sp/>=<sp/>nexthmm-&gt;<ref refid="structchan__s_1a52e85d037ca3a8b21ff1eed1d469ca15" kindref="member">alt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>pl_newphone_score<sp/>=<sp/>newphone_score</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref>(pls,<sp/>nexthmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pl_newphone_score<sp/>BETTER_THAN<sp/>newphone_thresh)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((hmm_frame(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newphone_score</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BETTER_THAN<sp/>hmm_in_score(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>!=<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>this<sp/>HMM<sp/>on<sp/>the<sp/>active<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nacl++)<sp/>=<sp/>nexthmm;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>newphone_score,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;hmm-&gt;hmm),<sp/>nf);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Transition<sp/>to<sp/>last<sp/>phone<sp/>of<sp/>all<sp/>words<sp/>for<sp/>which<sp/>this<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>penultimate<sp/>phone<sp/>(the<sp/>last<sp/>phones<sp/>may<sp/>need<sp/>multiple<sp/>right<sp/>contexts).</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Remember<sp/>to<sp/>remove<sp/>the<sp/>temporary<sp/>newword_penalty.</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls<sp/>!=<sp/>NULL<sp/>||<sp/>newphone_score<sp/>BETTER_THAN<sp/>lastphn_thresh)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>hmm-&gt;info.penult_phn_wid;<sp/>w<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ab251bb3d0ddd33dd99ed390b61e481f2" kindref="member">homophone_set</ref>[w])<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>pl_newphone_score<sp/>=<sp/>newphone_score</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pls,<sp/>dict_last_phone(ps_search_dict(ngs),w));</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newphone_score<sp/>BETTER_THAN<sp/>lastphn_thresh)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp<sp/>=<sp/>ngs-&gt;lastphn_cand<sp/>+<sp/>ngs-&gt;n_lastphn_cand;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;n_lastphn_cand++;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;wid<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;score<sp/>=</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newphone_score<sp/>-<sp/>ngs-&gt;nwpen;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;bp<sp/>=<sp/>hmm_out_history(&amp;hmm-&gt;hmm);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;hmm)<sp/>!=<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;hmm-&gt;hmm);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>=<sp/>(int)(nacl<sp/>-<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[nf<sp/>&amp;<sp/>0x1]);</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/>Execute<sp/>the<sp/>transition<sp/>into<sp/>the<sp/>last<sp/>phone<sp/>for<sp/>all<sp/>candidates<sp/>words<sp/>emerging<sp/>from</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/>the<sp/>HMM<sp/>tree.<sp/><sp/>Attach<sp/>LM<sp/>scores<sp/>to<sp/>such<sp/>transitions.</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/>(Executed<sp/>after<sp/>pruning<sp/>root<sp/>and<sp/>non-root,<sp/>but<sp/>before<sp/>pruning<sp/>word-chan.)</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">last_phone_transition(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j,<sp/>k,<sp/>nf,<sp/>bp,<sp/>bpend,<sp/>w;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlastphn__cand__s" kindref="compound">lastphn_cand_t</ref><sp/>*candp;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*nawl;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestscore,<sp/>dscr;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bpe;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_cand_sf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>nawl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[nf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_lastphn_cand_utt<sp/>+=<sp/>ngs-&gt;n_lastphn_cand;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>candidate<sp/>word<sp/>(entering<sp/>its<sp/>last<sp/>phone)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>best<sp/>LM<sp/>score<sp/>and<sp/>bp<sp/>for<sp/>candidate<sp/>known<sp/>use<sp/>it,<sp/>else<sp/>sort<sp/>cands<sp/>by<sp/>startfrm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>candp<sp/>=<sp/>ngs-&gt;lastphn_cand;<sp/>i<sp/>&lt;<sp/>ngs-&gt;n_lastphn_cand;<sp/>i++,<sp/>candp++)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>start_score;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>can<sp/>happen<sp/>if<sp/>recognition<sp/>fails.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candp-&gt;bp<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Backpointer<sp/>entry<sp/>for<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe<sp/>=<sp/>&amp;(ngs-&gt;bp_table[candp-&gt;bp]);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Subtract<sp/>starting<sp/>score<sp/>for<sp/>candidate,<sp/>leave<sp/>it<sp/>with<sp/>only<sp/>word<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_score<sp/>=<sp/><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs,<sp/>bpe,<sp/>dict_first_phone(ps_search_dict(ngs),<sp/>candp-&gt;wid));</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(start_score<sp/>BETTER_THAN<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;score<sp/>-=<sp/>start_score;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>this<sp/>candidate<sp/>not<sp/>occurred<sp/>in<sp/>an<sp/>earlier<sp/>frame,<sp/>prepare<sp/>for<sp/>finding</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>best<sp/>transition<sp/>score<sp/>into<sp/>last<sp/>phone;<sp/>sort<sp/>by<sp/>start<sp/>frame.</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i.e.<sp/>if<sp/>we<sp/>don&apos;t<sp/>have<sp/>an<sp/>entry<sp/>in<sp/>last_ltrans<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&lt;word,sf&gt;,<sp/>then<sp/>create<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;last_ltrans[candp-&gt;wid].sf<sp/>!=<sp/>bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>an<sp/>entry<sp/>in<sp/>cand_sf<sp/>matching<sp/>the<sp/>backpointer</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>this<sp/>candidate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_cand_sf;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;cand_sf[j].bp_ef<sp/>==<sp/>bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Oh,<sp/>we<sp/>found<sp/>one,<sp/>so<sp/>chain<sp/>onto<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>n_cand_sf)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;next<sp/>=<sp/>ngs-&gt;cand_sf[j].cand;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nope,<sp/>let&apos;s<sp/>make<sp/>a<sp/>new<sp/>one,<sp/>allocating<sp/>cand_sf<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_cand_sf<sp/>&gt;=<sp/>ngs-&gt;cand_sf_alloc)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;cand_sf_alloc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf<sp/>=</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_calloc(CAND_SF_ALLOCSIZE,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;cand_sf));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf_alloc<sp/>=<sp/>CAND_SF_ALLOCSIZE;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf_alloc<sp/>+=<sp/>CAND_SF_ALLOCSIZE;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf<sp/>=<sp/>ckd_realloc(ngs-&gt;cand_sf,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf_alloc</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;cand_sf));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;cand_sf[]<sp/>increased<sp/>to<sp/>%d<sp/>entries\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf_alloc);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>newly<sp/>created<sp/>cand_sf.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>n_cand_sf++;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;next<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>the<sp/>chain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf[j].bp_ef<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>it<sp/>to<sp/>point<sp/>to<sp/>this<sp/>candidate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;cand_sf[j].cand<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[candp-&gt;wid].dscr<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[candp-&gt;wid].sf<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>best<sp/>LM<sp/>score<sp/>and<sp/>bp<sp/>for<sp/>new<sp/>cands<sp/>entered<sp/>in<sp/>the<sp/>sorted<sp/>lists<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_cand_sf;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>i-th<sp/>unique<sp/>end<sp/>frame...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>ngs-&gt;bp_table_idx[ngs-&gt;cand_sf[i].bp_ef];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpend<sp/>=<sp/>ngs-&gt;bp_table_idx[ngs-&gt;cand_sf[i].bp_ef<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bpe<sp/>=<sp/>&amp;(ngs-&gt;bp_table[bp]);<sp/>bp<sp/>&lt;<sp/>bpend;<sp/>bp++,<sp/>bpe++)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bpe-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>candidate<sp/>at<sp/>the<sp/>start<sp/>frame<sp/>find<sp/>bp-&gt;cand<sp/>transition-score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>ngs-&gt;cand_sf[i].cand;<sp/>j<sp/>&gt;=<sp/>0;<sp/>j<sp/>=<sp/>candp-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp<sp/>=<sp/>&amp;(ngs-&gt;lastphn_cand[j]);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dscr<sp/>=<sp/></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs,<sp/>bpe,<sp/>dict_first_phone(ps_search_dict(ngs),<sp/>candp-&gt;wid));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dscr<sp/>BETTER_THAN<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>candp-&gt;wid));</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dscr<sp/>+=<sp/>ngram_tg_score(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basewid(ps_search_dict(ngs),<sp/>candp-&gt;wid),</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dscr<sp/>BETTER_THAN<sp/>ngs-&gt;last_ltrans[candp-&gt;wid].dscr)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[candp-&gt;wid].dscr<sp/>=<sp/>dscr;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[candp-&gt;wid].bp<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>best<sp/>transitions<sp/>for<sp/>all<sp/>candidates;<sp/>also<sp/>update<sp/>best<sp/>lastphone<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a81ee45f3c184568e2b5f8b79c58e0b9e" kindref="member">last_phone_best_score</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>candp<sp/>=<sp/>ngs-&gt;lastphn_cand;<sp/>i<sp/>&lt;<sp/>ngs-&gt;n_lastphn_cand;<sp/>i++,<sp/>candp++)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;score<sp/>+=<sp/>ngs-&gt;last_ltrans[candp-&gt;wid].dscr;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;bp<sp/>=<sp/>ngs-&gt;last_ltrans[candp-&gt;wid].bp;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candp-&gt;score<sp/>BETTER_THAN<sp/>bestscore)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>candp-&gt;score;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a81ee45f3c184568e2b5f8b79c58e0b9e" kindref="member">last_phone_best_score</ref><sp/>=<sp/>bestscore;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>pt,<sp/>we<sp/>know<sp/>the<sp/>best<sp/>entry<sp/>score<sp/>(with<sp/>LM<sp/>component)<sp/>for<sp/>all<sp/>candidates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>bestscore<sp/>+<sp/>ngs-&gt;lponlybeam;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;n_lastphn_cand,<sp/>candp<sp/>=<sp/>ngs-&gt;lastphn_cand;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>candp++)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candp-&gt;score<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>candp-&gt;wid;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a1ddcc1a9cb3e164ceb2140097ed23a3e" kindref="member">ngram_search_alloc_all_rc</ref>(ngs,<sp/>w);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(candp-&gt;score<sp/>BETTER_THAN<sp/>hmm_in_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>!=<sp/>nf);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candp-&gt;score,<sp/>candp-&gt;bp,<sp/>nf);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(bitvec_is_clear(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w));</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!dict_is_single_phone(ps_search_dict(ngs),<sp/>w));</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nawl++)<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>=<sp/>(int)(nawl<sp/>-<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[nf<sp/>&amp;<sp/>0x1]);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/>*<sp/>Prune<sp/>currently<sp/>active<sp/>word<sp/>channels<sp/>for<sp/>next<sp/>frame.<sp/><sp/>Also,<sp/>perform<sp/>exit</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/>*<sp/>transitions<sp/>out<sp/>of<sp/>such<sp/>channels<sp/>and<sp/>active<sp/>successors.</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal">prune_word_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*thmm;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>**phmmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>previous<sp/>HMM-pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nf,<sp/>w,<sp/>i,<sp/>k;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>newword_thresh,<sp/>lastphn_thresh;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*awl,<sp/>*nawl;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>newword_thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a81ee45f3c184568e2b5f8b79c58e0b9e" kindref="member">last_phone_best_score</ref><sp/>+<sp/>ngs-&gt;wbeam;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>lastphn_thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a81ee45f3c184568e2b5f8b79c58e0b9e" kindref="member">last_phone_best_score</ref><sp/>+<sp/>ngs-&gt;lponlybeam;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>nawl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>+<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[nf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Dynamically<sp/>allocated<sp/>last<sp/>channels<sp/>of<sp/>multi-phone<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1],<sp/>w<sp/>=<sp/>*(awl++);<sp/>i<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i,<sp/>w<sp/>=<sp/>*(awl++))<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phmmp<sp/>=<sp/>&amp;(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];<sp/>hmm;<sp/>hmm<sp/>=<sp/>thmm)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&gt;=<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>BETTER_THAN<sp/>lastphn_thresh)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>retain<sp/>this<sp/>channel<sp/>in<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phmmp<sp/>=<sp/>&amp;(hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Could<sp/>if<sp/>((!<sp/>skip_alt_frm)<sp/>||<sp/>(frame_idx<sp/>&amp;<sp/>0x1))<sp/>the<sp/>following<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>BETTER_THAN<sp/>newword_thresh)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can<sp/>exit<sp/>channel<sp/>and<sp/>recognize<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1ae36649be6f5a2190e759e7ed13bd7b6b" kindref="member">ngram_search_save_bp</ref>(ngs,<sp/>frame_idx,<sp/>w,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>==<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phmmp<sp/>=<sp/>&amp;(hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listelem_free(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>,<sp/>hmm);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*phmmp<sp/>=<sp/>thmm;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((k<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(bitvec_is_clear(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w)))<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!dict_is_single_phone(ps_search_dict(ngs),<sp/>w));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nawl++)<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>=<sp/>(int)(nawl<sp/>-<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[nf<sp/>&amp;<sp/>0x1]);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Prune<sp/>permanently<sp/>allocated<sp/>single-phone<sp/>channels.</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>NOTES:<sp/>score[]<sp/>of<sp/>pruned<sp/>channels<sp/>set<sp/>to<sp/>WORST_SCORE<sp/>elsewhere.</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;Single<sp/>phone<sp/>word<sp/>%s<sp/>frame<sp/>%d<sp/>score<sp/>%d<sp/>thresh<sp/>%d<sp/>outscore<sp/>%d<sp/>nwthresh<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),w),</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastphn_thresh,<sp/>hmm_out_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>newword_thresh));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>BETTER_THAN<sp/>lastphn_thresh)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Could<sp/>if<sp/>((!<sp/>skip_alt_frm)<sp/>||<sp/>(frame_idx<sp/>&amp;<sp/>0x1))<sp/>the<sp/>following<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>BETTER_THAN<sp/>newword_thresh)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(4,(</highlight><highlight class="stringliteral">&quot;Exiting<sp/>single<sp/>phone<sp/>word<sp/>%s<sp/>with<sp/>%d<sp/>&gt;<sp/>%d,<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(ps_search_dict(ngs),w),</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastphn_thresh,<sp/>newword_thresh));</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1ae36649be6f5a2190e759e7ed13bd7b6b" kindref="member">ngram_search_save_bp</ref>(ngs,<sp/>frame_idx,<sp/>w,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">prune_channels(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>last<sp/>phone<sp/>candidate<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;n_lastphn_cand<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>dynamic<sp/>beam<sp/>based<sp/>on<sp/>maxhmmpf<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;dynamic_beam<sp/>=<sp/>ngs-&gt;beam;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;maxhmmpf<sp/>!=<sp/>-1</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_root_chan_eval<sp/>+<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_nonroot_chan_eval<sp/>&gt;<sp/>ngs-&gt;maxhmmpf)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>a<sp/>histogram<sp/>to<sp/>approximately<sp/>prune<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>bins[256],<sp/>bw,<sp/>nhmms,<sp/>i;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>**acl,<sp/>*hmm;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bins<sp/>go<sp/>from<sp/>zero<sp/>(best<sp/>score)<sp/>to<sp/>edge<sp/>of<sp/>beam.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw<sp/>=<sp/>-ngs-&gt;beam<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(bins,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bins));</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>active<sp/>root<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>;<sp/>i++,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>b;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>it<sp/>in<sp/>a<sp/>bin<sp/>according<sp/>to<sp/>its<sp/>bestscore.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>-<sp/>hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>))<sp/>/<sp/>bw;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;=<sp/>256)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++bins[b];</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>active<sp/>non-root<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>active<sp/>HMMs<sp/>in<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[frame_idx<sp/>&amp;<sp/>0x1],<sp/>hmm<sp/>=<sp/>*(acl++);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>hmm<sp/>=<sp/>*(acl++))<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>b;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>it<sp/>in<sp/>a<sp/>bin<sp/>according<sp/>to<sp/>its<sp/>bestscore.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>-<sp/>hmm_bestscore(&amp;hmm-&gt;hmm))<sp/>/<sp/>bw;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;=<sp/>256)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++bins[b];</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>down<sp/>the<sp/>bins<sp/>to<sp/>find<sp/>the<sp/>new<sp/>beam.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>nhmms<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nhmms<sp/>+=<sp/>bins[i];</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nhmms<sp/>&gt;<sp/>ngs-&gt;maxhmmpf)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;dynamic_beam<sp/>=<sp/>-(i<sp/>*<sp/>bw);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>prune_root_chan(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>prune_nonroot_chan(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>last_phone_transition(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>prune_word_chan(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*<sp/>Limit<sp/>the<sp/>number<sp/>of<sp/>word<sp/>exits<sp/>in<sp/>each<sp/>frame<sp/>to<sp/>maxwpf.<sp/><sp/>And<sp/>also<sp/>limit<sp/>the<sp/>number<sp/>of<sp/>filler</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/>words<sp/>to<sp/>1.</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal">bptable_maxwpf(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bp,<sp/>n;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestscr,<sp/>worstscr;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bpe,<sp/>*bestbpe,<sp/>*worstbpe;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>prune<sp/>if<sp/>no<sp/>pruing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;maxwpf<sp/>==<sp/>-1<sp/>||<sp/>ngs-&gt;maxwpf<sp/>==<sp/>ps_search_n_words(ngs))</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>only<sp/>one<sp/>filler<sp/>word<sp/>exit<sp/>(the<sp/>best)<sp/>per<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscr<sp/>=<sp/>(int32)<sp/>0x80000000;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>bestbpe<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bp<sp/>=<sp/>ngs-&gt;bp_table_idx[frame_idx];<sp/>bp<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>bp++)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe<sp/>=<sp/>&amp;(ngs-&gt;bp_table[bp]);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(ps_search_dict(ngs),<sp/>bpe-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>BETTER_THAN<sp/>bestscr)<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscr<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestbpe<sp/>=<sp/>bpe;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No.<sp/>of<sp/>filler<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>bestbpe<sp/>to<sp/>valid<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestbpe<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestbpe-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>up<sp/>to<sp/>maxwpf<sp/>best<sp/>entries<sp/>to<sp/>survive;<sp/>mark<sp/>the<sp/>remaining<sp/>with<sp/>valid<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(ngs-&gt;bpidx</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>ngs-&gt;bp_table_idx[frame_idx])<sp/>-<sp/>n;<sp/><sp/></highlight><highlight class="comment">/*<sp/>No.<sp/>of<sp/>entries<sp/>after<sp/>limiting<sp/>fillers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>n<sp/>&gt;<sp/>ngs-&gt;maxwpf;<sp/>--n)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>worst<sp/>BPTable<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worstscr<sp/>=<sp/>(int32)<sp/>0x7fffffff;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worstbpe<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bp<sp/>=<sp/>ngs-&gt;bp_table_idx[frame_idx];<sp/>(bp<sp/>&lt;<sp/>ngs-&gt;bpidx);<sp/>bp++)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe<sp/>=<sp/>&amp;(ngs-&gt;bp_table[bp]);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpe-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref><sp/>&amp;&amp;<sp/>(bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>worstscr))<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worstscr<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worstbpe<sp/>=<sp/>bpe;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Don&apos;t<sp/>panic!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worstbpe<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;PANIC:<sp/>No<sp/>worst<sp/>BPtable<sp/>entry<sp/>remaining\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worstbpe-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">word_transition(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>k,<sp/>bp,<sp/>w,<sp/>nf;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>rc;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh,<sp/>newscore,<sp/>pl_newscore;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bpe;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbestbp__rc__s" kindref="compound">bestbp_rc_s</ref><sp/>*bestbp_rc_ptr;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>ps_search_dict(ngs);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p<sp/>=<sp/>ps_search_dict2pid(ngs);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Transition<sp/>to<sp/>start<sp/>of<sp/>new<sp/>word<sp/>instances<sp/>(HMM<sp/>tree<sp/>roots);<sp/>but<sp/>only<sp/>if<sp/>words</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>than<sp/>&lt;/s&gt;<sp/>finished<sp/>here.</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>But,<sp/>first,<sp/>find<sp/>the<sp/>best<sp/>starting<sp/>score<sp/>for<sp/>each<sp/>possible<sp/>right<sp/>context<sp/>phone.</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>bin_mdef_n_ciphone(ps_search_acmod(ngs)-&gt;mdef)<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[i].score<sp/>=<sp/>WORST_SCORE;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)ps_search_lookahead(ngs);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ugh,<sp/>this<sp/>is<sp/>complicated.<sp/><sp/>Scan<sp/>all<sp/>word<sp/>exits<sp/>for<sp/>this<sp/>frame</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(they<sp/>have<sp/>already<sp/>been<sp/>created<sp/>by<sp/>prune_word_chan()).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bp<sp/>=<sp/>ngs-&gt;bp_table_idx[frame_idx];<sp/>bp<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>bp++)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe<sp/>=<sp/>&amp;(ngs-&gt;bp_table[bp]);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx[bpe-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>]<sp/>=<sp/>NO_BP;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpe-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs))</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Array<sp/>of<sp/>HMM<sp/>scores<sp/>corresponding<sp/>to<sp/>all<sp/>the<sp/>possible<sp/>right</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>context<sp/>expansions<sp/>of<sp/>the<sp/>final<sp/>phone.<sp/><sp/>It&apos;s<sp/>likely<sp/>that<sp/>a</highlight></codeline>
<codeline lineno="1279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lot<sp/>of<sp/>these<sp/>are<sp/>going<sp/>to<sp/>be<sp/>missing,<sp/>actually.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpe-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref><sp/>==<sp/>-1)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>implies<sp/>s_idx<sp/>==<sp/>-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>right<sp/>context<sp/>expansion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rc<sp/>=<sp/>0;<sp/>rc<sp/>&lt;<sp/>bin_mdef_n_ciphone(ps_search_acmod(ngs)-&gt;mdef);<sp/>++rc)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref><sp/>BETTER_THAN<sp/>ngs-&gt;bestbp_rc[rc].score)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(4,(</highlight><highlight class="stringliteral">&quot;bestbp_rc[0]<sp/>=<sp/>%d<sp/>lc<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>,<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>));</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[rc].score<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[rc].path<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[rc].lc<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*rssid<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(d2p,<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>,<sp/>bpe-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref>);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*rcss<sp/>=<sp/>&amp;(ngs-&gt;bscore_stack[bpe-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref>]);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rc<sp/>=<sp/>0;<sp/>rc<sp/>&lt;<sp/>bin_mdef_n_ciphone(ps_search_acmod(ngs)-&gt;mdef);<sp/>++rc)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcss[rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[rc]]<sp/>BETTER_THAN<sp/>ngs-&gt;bestbp_rc[rc].score)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(4,(</highlight><highlight class="stringliteral">&quot;bestbp_rc[%d]<sp/>=<sp/>%d<sp/>lc<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc,<sp/>rcss[rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[rc]],<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>));</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[rc].score<sp/>=<sp/>rcss[rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[rc]];</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[rc].path<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bestbp_rc[rc].lc<sp/>=<sp/>bpe-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;dynamic_beam;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Hypothesize<sp/>successors<sp/>to<sp/>words<sp/>finished<sp/>in<sp/>this<sp/>frame.</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Main<sp/>dictionary,<sp/>multi-phone<sp/>words<sp/>transition<sp/>to<sp/>HMM-trees<sp/>roots.</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestbp_rc_ptr<sp/>=<sp/>&amp;(ngs-&gt;bestbp_rc[rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>]);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>bestbp_rc_ptr-&gt;score<sp/>+<sp/>ngs-&gt;nwpen<sp/>+<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl_newscore<sp/>=<sp/>newscore</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref>(pls,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newscore<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/>BETTER_THAN<sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>newscore,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestbp_rc_ptr-&gt;path,<sp/>nf);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID:<sp/>Another<sp/>place<sp/>where<sp/>mpx<sp/>ssids<sp/>are<sp/>entered.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>up<sp/>the<sp/>ssid<sp/>to<sp/>use<sp/>when<sp/>entering<sp/>this<sp/>mpx<sp/>triphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)<sp/>=</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict2pid_ldiph_lc(d2p,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref>,<sp/>bestbp_rc_ptr-&gt;lc);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)<sp/>!=<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Single<sp/>phone<sp/>words;<sp/>no<sp/>right<sp/>context<sp/>for<sp/>these.<sp/><sp/>Cannot<sp/>use<sp/>bestbp_rc<sp/>as</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>LM<sp/>scores<sp/>have<sp/>to<sp/>be<sp/>included.<sp/><sp/>First<sp/>find<sp/>best<sp/>transition<sp/>to<sp/>these<sp/>words.</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[w].dscr<sp/>=<sp/>(int32)<sp/>0x80000000;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bp<sp/>=<sp/>ngs-&gt;bp_table_idx[frame_idx];<sp/>bp<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>bp++)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe<sp/>=<sp/>&amp;(ngs-&gt;bp_table[bp]);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bpe-&gt;<ref refid="structbptbl__s_1a4948439666e1e2204a6d1c6d9cfd1cd0" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/><ref refid="ngram__search_8c_1a25a80e488425b2bd4e24eb753c9295a5" kindref="member">ngram_search_exit_score</ref></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs,<sp/>bpe,<sp/>dict_first_phone(dict,<sp/>w));</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(4,<sp/>(</highlight><highlight class="stringliteral">&quot;initial<sp/>newscore<sp/>for<sp/>%s:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_wordstr(dict,<sp/>w),<sp/>newscore));</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>+=<sp/>ngram_tg_score(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basewid(dict,<sp/>w),</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)&gt;&gt;<ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Not<sp/>sure<sp/>how<sp/>WORST_SCORE<sp/>could<sp/>be<sp/>better,<sp/>but<sp/>it</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>apparently<sp/>happens.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/>BETTER_THAN<sp/>ngs-&gt;last_ltrans[w].dscr)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[w].dscr<sp/>=<sp/>newscore;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[w].bp<sp/>=<sp/>bp;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>transition<sp/>to<sp/>in-LM<sp/>single<sp/>phone<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a988672d895f1ee61dbf790b2065df4df" kindref="member">n_1ph_LMwords</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Never<sp/>transition<sp/>into<sp/>the<sp/>start<sp/>word<sp/>(for<sp/>one<sp/>thing,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>non-event<sp/>in<sp/>the<sp/>language<sp/>model.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>dict_startwid(ps_search_dict(ngs)))</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>ngs-&gt;last_ltrans[w].dscr<sp/>+<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl_newscore<sp/>=<sp/>newscore<sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref>(pls,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newscore<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpe<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>ngs-&gt;last_ltrans[w].bp;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/>BETTER_THAN<sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore,<sp/>ngs-&gt;last_ltrans[w].bp,<sp/>nf);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID:<sp/>another<sp/>place<sp/>where<sp/>mpx<sp/>ssids<sp/>are<sp/>entered.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>up<sp/>the<sp/>ssid<sp/>to<sp/>use<sp/>when<sp/>entering<sp/>this<sp/>mpx<sp/>triphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)<sp/>=</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict2pid_ldiph_lc(d2p,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref>,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_last_phone(dict,<sp/>bpe-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)<sp/>!=<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remaining<sp/>words:<sp/>&lt;sil&gt;,<sp/>noise<sp/>words.<sp/><sp/>No<sp/>mpx<sp/>for<sp/>these!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ps_search_silence_wid(ngs);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>bestbp_rc_ptr<sp/>=<sp/>&amp;(ngs-&gt;bestbp_rc[ps_search_acmod(ngs)-&gt;mdef-&gt;sil]);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>bestbp_rc_ptr-&gt;score<sp/>+<sp/>ngs-&gt;silpen<sp/>+<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>pl_newscore<sp/>=<sp/>newscore</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref>(pls,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newscore<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/>BETTER_THAN<sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore,<sp/>bestbp_rc_ptr-&gt;path,<sp/>nf);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>dict_filler_start(dict);<sp/>w<sp/>&lt;=<sp/>dict_filler_end(dict);<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>ps_search_silence_wid(ngs))</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Never<sp/>transition<sp/>into<sp/>the<sp/>start<sp/>word<sp/>(for<sp/>one<sp/>thing,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>non-event<sp/>in<sp/>the<sp/>language<sp/>model.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>dict_startwid(ps_search_dict(ngs)))</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>was<sp/>not<sp/>actually<sp/>a<sp/>single-phone<sp/>word,<sp/>rhmm<sp/>will<sp/>be<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rhmm<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>bestbp_rc_ptr-&gt;score<sp/>+<sp/>ngs-&gt;fillpen<sp/>+<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl_newscore<sp/>=<sp/>newscore</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="phone__loop__search_8h_1ab49609ce2ff4d1827f57693f463e360b" kindref="member">phone_loop_search_score</ref>(pls,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl_newscore<sp/>BETTER_THAN<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/>BETTER_THAN<sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore,<sp/>bestbp_rc_ptr-&gt;path,<sp/>nf);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal">deactivate_channels(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>score[]<sp/>of<sp/>pruned<sp/>root<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>score[]<sp/>of<sp/>pruned<sp/>single-phone<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458" refid="ngram__search__fwdtree_8h_1a9e2828ba0d249424a234b6cf7d3ee530" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdtree_8c_1a9e2828ba0d249424a234b6cf7d3ee530" kindref="member">ngram_fwdtree_search</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Activate<sp/>our<sp/>HMMs<sp/>for<sp/>the<sp/>current<sp/>frame<sp/>if<sp/>need<sp/>be.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ps_search_acmod(ngs)-&gt;compallsen)</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_sen_active(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>GMM<sp/>scores<sp/>for<sp/>the<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((senscr<sp/>=<sp/><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(ps_search_acmod(ngs),<sp/>&amp;frame_idx))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt<sp/>+=<sp/>ps_search_acmod(ngs)-&gt;n_senone_active;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>backpointer<sp/>table<sp/>for<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" kindref="member">ngram_search_mark_bptable</ref>(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>best<sp/>score<sp/>is<sp/>equal<sp/>to<sp/>or<sp/>worse<sp/>than<sp/>WORST_SCORE,</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>recognition<sp/>has<sp/>failed,<sp/>don&apos;t<sp/>bother<sp/>to<sp/>keep<sp/>trying.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>==<sp/>WORST_SCORE<sp/>||<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>(2<sp/>*<sp/>ngs-&gt;beam)<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Renormalizing<sp/>Scores<sp/>at<sp/>frame<sp/>%d,<sp/>best<sp/>score<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renormalize_scores(ngs,<sp/>frame_idx,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>HMMs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>evaluate_channels(ngs,<sp/>senscr,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prune<sp/>HMMs<sp/>and<sp/>do<sp/>phone<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>prune_channels(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>absolute<sp/>pruning<sp/>on<sp/>word<sp/>exits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>bptable_maxwpf(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>word<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>word_transition(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Deactivate<sp/>pruned<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>deactivate_channels(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>++ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502" refid="ngram__search__fwdtree_8h_1af32a83dbb9187542577a0c500b000840" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdtree_8c_1af32a83dbb9187542577a0c500b000840" kindref="member">ngram_fwdtree_finish</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w,<sp/>cf,<sp/>*awl;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>**acl;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>ps_search_acmod(ngs)-&gt;output_frame;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>a<sp/>mark<sp/>in<sp/>the<sp/>backpointer<sp/>table<sp/>for<sp/>one<sp/>past<sp/>the<sp/>final<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" kindref="member">ngram_search_mark_bptable</ref>(ngs,<sp/>cf);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Deactivate<sp/>channels<sp/>lined<sp/>up<sp/>for<sp/>the<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>root<sp/>channels<sp/>of<sp/>HMM<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a297d8bdb856617490ee8ccd99df70e68" kindref="member">n_root_chan</ref>,<sp/>rhmm<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ae1b0a51cfcddc1e4b6ac94fa1e48887a" kindref="member">root_chan</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>rhmm++)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nonroot<sp/>channels<sp/>of<sp/>HMM<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1ac33f60894871671ec5c2173ca56d600f" kindref="member">n_active_chan</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>acl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a83731bf0e2234e632c5e78f2321f5b2d" kindref="member">active_chan_list</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>*(acl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>hmm<sp/>=<sp/>*(acl++))<sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;hmm-&gt;hmm);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>*(awl++);<sp/>i<sp/>&gt;<sp/>0;<sp/>--i,<sp/>w<sp/>=<sp/>*(awl++))<sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>accidentally<sp/>free<sp/>single-phone<sp/>words!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(ps_search_dict(ngs),<sp/>w))</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_clear(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a15477192481dffcb29e9c4167eff6c3c" kindref="member">ngram_search_free_all_rc</ref>(ngs,<sp/>w);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>previous<sp/>search<sp/>code<sp/>did<sp/>a<sp/>postprocessing<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>backpointer<sp/>table<sp/>here,<sp/>but<sp/>we<sp/>will<sp/>postpone<sp/>this<sp/>until<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>absolutely<sp/>necessary,<sp/>i.e.<sp/>when<sp/>generating<sp/>a<sp/>word<sp/>graph.</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Likewise<sp/>we<sp/>don&apos;t<sp/>actually<sp/>have<sp/>to<sp/>decide<sp/>what<sp/>the<sp/>exit<sp/>word<sp/>is</highlight></codeline>
<codeline lineno="1544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>until<sp/>somebody<sp/>requests<sp/>a<sp/>backtrace.</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_stop(&amp;ngs-&gt;fwdtree_perf);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>some<sp/>statistics.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cf<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)(cf<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>words<sp/>recognized<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bpidx,<sp/>(ngs-&gt;bpidx<sp/>+<sp/>(cf<sp/>&gt;&gt;<sp/>1))<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>senones<sp/>evaluated<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt,</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt<sp/>+<sp/>(cf<sp/>&gt;&gt;<sp/>1))<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>channels<sp/>searched<sp/>(%d/fr),<sp/>%d<sp/>1st,<sp/>%d<sp/>last\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_root_chan_eval<sp/>+<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_nonroot_chan_eval,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_root_chan_eval<sp/>+<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_nonroot_chan_eval)<sp/>/<sp/>(cf<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_root_chan_eval,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_last_chan_eval);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>words<sp/>for<sp/>which<sp/>last<sp/>channels<sp/>evaluated<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_word_lastchan_eval,</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_word_lastchan_eval<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>candidate<sp/>words<sp/>for<sp/>entering<sp/>last<sp/>phone<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_lastphn_cand_utt,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_lastphn_cand_utt<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fwdtree<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_cpu,</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fwdtree<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_elapsed,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdtree_perf.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dump_bptable(ngs);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdtree.c"/>
  </compounddef>
</doxygen>
