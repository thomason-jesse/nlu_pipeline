<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="kws__detections_8c" kind="file">
    <compoundname>kws_detections.c</compoundname>
    <includes refid="kws__detections_8h" local="yes">kws_detections.h</includes>
    <incdepgraph>
      <node id="981">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="972">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="995">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
      </node>
      <node id="998">
        <label>assert.h</label>
      </node>
      <node id="997">
        <label>float.h</label>
      </node>
      <node id="978">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
      </node>
      <node id="969">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="990">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
      </node>
      <node id="977">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="970">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="993">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="989">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="965">
        <label>src/libpocketsphinx/kws_detections.c</label>
        <link refid="kws_detections.c"/>
        <childnode refid="966" relation="include">
        </childnode>
      </node>
      <node id="966">
        <label>kws_detections.h</label>
        <link refid="kws__detections_8h_source"/>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
      </node>
      <node id="999">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="994">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="968">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
      </node>
      <node id="991">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
      </node>
      <node id="971">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="975">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
      </node>
      <node id="980">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="985">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
      </node>
      <node id="986">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="983">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="984">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="982">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
      </node>
      <node id="979">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
      </node>
      <node id="1000">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
      </node>
      <node id="988">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
      </node>
      <node id="973">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="996">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="992">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
      </node>
      <node id="974">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="976">
        <label>stdio.h</label>
      </node>
      <node id="967">
        <label>sphinxbase/glist.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="kws__detections_8c_1adc59373c1ae28ddd80eff9cecd0dbbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kws_detections_reset</definition>
        <argsstring>(kws_detections_t *detections)</argsstring>
        <name>kws_detections_reset</name>
        <param>
          <type><ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref> *</type>
          <declname>detections</declname>
        </param>
        <briefdescription>
<para>Reset history structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c" line="42" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="kws__detections_8c_1a46107e0114ad6d91433ad695445c9e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kws_detections_add</definition>
        <argsstring>(kws_detections_t *detections, const char *keyphrase, int sf, int ef, int prob, int ascr)</argsstring>
        <name>kws_detections_add</name>
        <param>
          <type><ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref> *</type>
          <declname>detections</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyphrase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ef</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prob</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ascr</declname>
        </param>
        <briefdescription>
<para>Add history entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c" line="56" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c" bodystart="56" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="kws__detections_8c_1aed928bd55af21bea22acee45620a066c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* kws_detections_hyp_str</definition>
        <argsstring>(kws_detections_t *detections, int frame, int delay)</argsstring>
        <name>kws_detections_hyp_str</name>
        <param>
          <type><ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref> *</type>
          <declname>detections</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Compose hypothesis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c" line="84" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c" bodystart="84" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>kws_detections.c<sp/>--<sp/>Object<sp/>for<sp/>storing<sp/>keyword<sp/>search<sp/>results</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kws_detections.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">kws_detections_reset(<ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref><sp/>*detections)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!detections-&gt;detect_list)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>detections-&gt;detect_list;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(gnode_ptr(gn));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(detections-&gt;detect_list);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>detections-&gt;detect_list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">kws_detections_add(<ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref><sp/>*detections,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>keyphrase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prob,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ascr)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref>*<sp/>detection;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>detections-&gt;detect_list;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*det<sp/>=<sp/>(<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*)gnode_ptr(gn);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(keyphrase,<sp/>det-&gt;keyphrase)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>det-&gt;sf<sp/>&lt;<sp/>ef<sp/>&amp;&amp;<sp/>det-&gt;ef<sp/>&gt;<sp/>sf)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det-&gt;prob<sp/>&lt;<sp/>prob)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det-&gt;sf<sp/>=<sp/>sf;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det-&gt;ef<sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det-&gt;prob<sp/>=<sp/>prob;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det-&gt;ascr<sp/>=<sp/>ascr;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>detection<sp/>=<sp/>(<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*)ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*detection));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>detection-&gt;sf<sp/>=<sp/>sf;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>detection-&gt;ef<sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>detection-&gt;keyphrase<sp/>=<sp/>keyphrase;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>detection-&gt;prob<sp/>=<sp/>prob;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>detection-&gt;ascr<sp/>=<sp/>ascr;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>detections-&gt;detect_list<sp/>=<sp/>glist_add_ptr(detections-&gt;detect_list,<sp/>detection);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="normal">kws_detections_hyp_str(<ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref><sp/>*detections,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hyp_str;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>detections-&gt;detect_list;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*det<sp/>=<sp/>(<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*)gnode_ptr(gn);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det-&gt;ef<sp/>&lt;<sp/>frame<sp/>-<sp/>delay)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>strlen(det-&gt;keyphrase)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>hyp_str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ckd_calloc(len,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>hyp_str;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>detections-&gt;detect_list;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*det<sp/>=<sp/>(<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref><sp/>*)gnode_ptr(gn);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det-&gt;ef<sp/>&lt;<sp/>frame<sp/>-<sp/>delay)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(c,<sp/>det-&gt;keyphrase,<sp/>strlen(det-&gt;keyphrase));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>strlen(det-&gt;keyphrase);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c++;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>hyp_str)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c--;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hyp_str;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_detections.c"/>
  </compounddef>
</doxygen>
