<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="allphone__search_8c" kind="file">
    <compoundname>allphone_search.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/strfuncs.h</includes>
    <includes local="no">sphinxbase/pio.h</includes>
    <includes local="no">sphinxbase/cmd_ln.h</includes>
    <includes refid="pocketsphinx__internal_8h" local="yes">pocketsphinx_internal.h</includes>
    <includes refid="allphone__search_8h" local="yes">allphone_search.h</includes>
    <incdepgraph>
      <node id="380">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="372">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="393">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>assert.h</label>
      </node>
      <node id="395">
        <label>float.h</label>
      </node>
      <node id="377">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
      </node>
      <node id="368">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="388">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="376">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="370">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="391">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="387">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="365">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="392">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="367">
        <label>sphinxbase/pio.h</label>
      </node>
      <node id="369">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="375">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="362">
        <label>string.h</label>
      </node>
      <node id="379">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="384">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="385">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="399">
        <label>blkarray_list.h</label>
        <link refid="blkarray__list_8h_source"/>
        <childnode refid="379" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>sphinxbase/strfuncs.h</label>
      </node>
      <node id="360">
        <label>src/libpocketsphinx/allphone_search.c</label>
        <link refid="allphone_search.c"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="397">
        <label>allphone_search.h</label>
        <link refid="allphone__search_8h_source"/>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="383">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="381">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
      </node>
      <node id="373">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="394">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="390">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
      <node id="374">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="361">
        <label>stdio.h</label>
      </node>
      <node id="398">
        <label>sphinxbase/glist.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="allphone__search_8c_1afed671016c9eb24e94e48b9192bbfdbe" prot="public" static="yes" mutable="no">
        <type><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref></type>
        <definition>ps_segfuncs_t fsg_segfuncs</definition>
        <argsstring></argsstring>
        <name>fsg_segfuncs</name>
        <initializer>= {
     allphone_search_seg_next,
     allphone_search_seg_free
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="101" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="allphone__search_8c_1a51d212845471cf1b0a06a2f8b9f8714a" prot="public" static="yes" mutable="no">
        <type><ref refid="pocketsphinx__internal_8h_1a0eae078e32bd5f339792884c68aad8b3" kindref="member">ps_searchfuncs_t</ref></type>
        <definition>ps_searchfuncs_t allphone_funcs</definition>
        <argsstring></argsstring>
        <name>allphone_funcs</name>
        <initializer>= {
     allphone_search_start,
     allphone_search_step,
     allphone_search_finish,
     allphone_search_reinit,
     allphone_search_free,
     allphone_search_lattice,
     allphone_search_hyp,
     allphone_search_prob,
     allphone_search_seg_iter,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="127" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="allphone__search_8c_1a7d1efbd003178a3fe113b0f896516f6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
        <definition>static ps_lattice_t* allphone_search_lattice</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>allphone_search_lattice</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="52" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1ad9e1626080e34dcd824a821a7f977a71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int allphone_search_prob</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>allphone_search_prob</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="59" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a30f2cf8b15d2c830751a4bb7d8199f42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void allphone_backtrace</definition>
        <argsstring>(allphone_search_t *allphs, int32 f, int32 *out_score)</argsstring>
        <name>allphone_backtrace</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="65" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="772" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a2f5a3fc1bb42a7e824092aeb1f58cb18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void allphone_search_seg_free</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>allphone_search_seg_free</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="68" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a1002ab8509683723bc16092234c8a6b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void allphone_search_fill_iter</definition>
        <argsstring>(ps_seg_t *seg, phseg_t *phseg)</argsstring>
        <name>allphone_search_fill_iter</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type><ref refid="structphseg__s" kindref="compound">phseg_t</ref> *</type>
          <declname>phseg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="74" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1aa95887cf7daa5a9e89e7ae217af2efb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* allphone_search_seg_next</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>allphone_search_seg_next</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="84" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="84" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a426e431ff1737a9908f03992842f3cea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* allphone_search_seg_iter</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>allphone_search_seg_iter</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="108" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="108" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1aaffc9371ff25ca243b8a351eab05cb1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structphmm__s" kindref="compound">phmm_t</ref> *</type>
        <definition>static phmm_t* phmm_lookup</definition>
        <argsstring>(allphone_search_t *allphs, s3pid_t pid)</argsstring>
        <name>phmm_lookup</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <param>
          <type>s3pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Find PHMM node with same senone sequence and tmat id as the given triphone. </para>        </briefdescription>
        <detaileddescription>
<para>Return ptr to PHMM node if found, NULL otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="144" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="144" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a21052e88be17c8f510fb14b5122cffc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 phmm_link</definition>
        <argsstring>(allphone_search_t *allphs)</argsstring>
        <name>phmm_link</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="164" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="164" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1ae248f80b6d9723d5bcabe5b24384aeac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int phmm_build</definition>
        <argsstring>(allphone_search_t *allphs)</argsstring>
        <name>phmm_build</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <briefdescription>
<para>Build net from phone HMMs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="217" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="217" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a80e7024f0b1ca148403ea9fa29627d39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void phmm_free</definition>
        <argsstring>(allphone_search_t *allphs)</argsstring>
        <name>phmm_free</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="316" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="316" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1aa2e9814057713049f15b417e8308b724" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 phmm_eval_all</definition>
        <argsstring>(allphone_search_t *allphs, const int16 *senscr)</argsstring>
        <name>phmm_eval_all</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <param>
          <type>const int16 *</type>
          <declname>senscr</declname>
        </param>
        <briefdescription>
<para>Evaluate active PHMMs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="346" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="346" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1ad9f6bb9155fb23dbc3dc88685005d18b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void phmm_exit</definition>
        <argsstring>(allphone_search_t *allphs, int32 best)</argsstring>
        <name>phmm_exit</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>best</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="376" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="376" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1aa8e83c12a698b8766d05093c408709b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void phmm_trans</definition>
        <argsstring>(allphone_search_t *allphs, int32 best, int32 frame_history_start)</argsstring>
        <name>phmm_trans</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>best</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>frame_history_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="467" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="467" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a516b0a1d50a8ab03ba17f1f529a89232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
        <definition>ps_search_t* allphone_search_init</definition>
        <argsstring>(const char *name, ngram_model_t *lm, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>allphone_search_init</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ngram_model_t *</type>
          <declname>lm</declname>
        </param>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Create, initialize and return a search module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="523" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="523" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a40344698bfcb3a6a55c36d5b5416d5bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allphone_search_reinit</definition>
        <argsstring>(ps_search_t *search, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>allphone_search_reinit</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Update allphone search module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="614" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="614" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1afd90f9bc8ca72728b7dd8b88844091d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void allphone_search_free</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>allphone_search_free</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Deallocate search structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="637" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="637" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1aa456702c79e3e3fcebb7553646c28767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allphone_search_start</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>allphone_search_start</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Prepare the allphone search structure for beginning decoding of the next utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="667" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="667" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1af374a353b740715101d26d7e9dcca751" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void allphone_search_sen_active</definition>
        <argsstring>(allphone_search_t *allphs)</argsstring>
        <name>allphone_search_sen_active</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="707" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="707" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a1f77bbe199a5d56af4e042b8440584a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allphone_search_step</definition>
        <argsstring>(ps_search_t *search, int frame_idx)</argsstring>
        <name>allphone_search_step</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
<para>Step one frame forward through the Viterbi search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="725" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="725" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a677d080f91c27db93f66d0d8c9bb0725" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 ascore</definition>
        <argsstring>(allphone_search_t *allphs, history_t *h)</argsstring>
        <name>ascore</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <param>
          <type><ref refid="structhistory__s" kindref="compound">history_t</ref> *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="748" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="748" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1ac69ac2181db5fd647f1ae72097fd7bde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void allphone_clear_segments</definition>
        <argsstring>(allphone_search_t *allphs)</argsstring>
        <name>allphone_clear_segments</name>
        <param>
          <type><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref> *</type>
          <declname>allphs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="761" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="761" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1a18d769ec296720a2dbb29988b4b8b1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allphone_search_finish</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>allphone_search_finish</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Windup and clean the allphone search structure after utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="837" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="837" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="allphone__search_8c_1ac10a1598701a2f81a7777d06879b48b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const* allphone_search_hyp</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int32 *out_is_final)</argsstring>
        <name>allphone_search_hyp</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
<para>Get hypothesis string from the allphone search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" line="875" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c" bodystart="875" bodyend="913"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>allphone_search.c<sp/>--<sp/>Search<sp/>for<sp/>phonetic<sp/>decoding.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/strfuncs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/pio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/cmd_ln.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pocketsphinx__internal_8h" kindref="compound">pocketsphinx_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allphone_search.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="normal">allphone_search_lattice(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">allphone_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">allphone_backtrace(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/>int32<sp/>f,<sp/>int32<sp/>*out_score);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">allphone_search_seg_free(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*<sp/>seg)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(seg);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">allphone_search_fill_iter(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg,<sp/><ref refid="structphseg__s" kindref="compound">phseg_t</ref><sp/>*phseg)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a885a599726cd0efba573d106d016e6e2" kindref="member">sf</ref><sp/>=<sp/>phseg-&gt;sf;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1ab25ecc6af8d2695c6097cf7e934eadd4" kindref="member">ef</ref><sp/>=<sp/>phseg-&gt;ef;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a6f7706ec4c0d0ec8ecafaf0f29f41f4b" kindref="member">ascr</ref><sp/>=<sp/>phseg-&gt;score;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>phseg-&gt;tscore;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a97a0dc7db931c7e3f98d23d21ce27f04" kindref="member">word</ref><sp/>=<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(ps_search_acmod(seg-&gt;<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref>)-&gt;mdef,<sp/>phseg-&gt;ci);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="normal">allphone_search_seg_next(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*<sp/>seg)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphseg__iter__s" kindref="compound">phseg_iter_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structphseg__iter__s" kindref="compound">phseg_iter_t</ref><sp/>*)<sp/>seg;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphseg__s" kindref="compound">phseg_t</ref><sp/>*phseg;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;seg<sp/>=<sp/>itor-&gt;seg-&gt;next;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;seg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphone_search_seg_free(seg);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>phseg<sp/>=<sp/>gnode_ptr(itor-&gt;seg);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>allphone_search_fill_iter(seg,<sp/>phseg);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref><sp/>fsg_segfuncs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_next<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_seg_next,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_free<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_seg_free</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="normal">allphone_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphseg__iter__s" kindref="compound">phseg_iter_t</ref><sp/>*iter;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>allphone_backtrace(allphs,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>-<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;segments<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structphseg__iter__s" kindref="compound">phseg_iter_t</ref>));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;base.<ref refid="structps__seg__s_1a510362a2281e374c839397c3e5488515" kindref="member">vt</ref><sp/>=<sp/>&amp;fsg_segfuncs;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;base.<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref><sp/>=<sp/>search;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;seg<sp/>=<sp/>allphs-&gt;segments;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>allphone_search_fill_iter((<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)iter,<sp/>gnode_ptr(iter-&gt;seg));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)<sp/>iter;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__searchfuncs__s" kindref="compound">ps_searchfuncs_t</ref><sp/>allphone_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_start,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_step,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_finish,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reinit:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_reinit,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_free,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lattice:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_lattice,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hyp:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_hyp,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prob:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_prob,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_iter:<sp/>*/</highlight><highlight class="normal"><sp/>allphone_search_seg_iter,</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="normal">phmm_lookup(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/>s3pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>**ci_phmm;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs)-&gt;acmod-&gt;mdef;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ci_phmm<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>ci_phmm[bin_mdef_pid2ci(mdef,<sp/>pid)];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef_pid2tmatid(mdef,<sp/>p-&gt;<ref refid="structphmm__s_1aee52956004053c676230cd8567366b60" kindref="member">pid</ref>)<sp/>==<sp/>mdef_pid2tmatid(mdef,<sp/>pid))</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef_pid2ssid(mdef,<sp/>p-&gt;<ref refid="structphmm__s_1aee52956004053c676230cd8567366b60" kindref="member">pid</ref>)<sp/>==<sp/>mdef_pid2ssid(mdef,<sp/>pid))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="164"><highlight class="normal">phmm_link(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>ci,<sp/>rc;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p,<sp/>*p2;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*rclist;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>n_link;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplink__s" kindref="compound">plink_t</ref><sp/>*l;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>**ci_phmm;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs)-&gt;acmod-&gt;mdef;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ci_phmm<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>rclist<sp/>=<sp/>(int32<sp/>*)<sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref><sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>successor<sp/>links<sp/>between<sp/>PHMM<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>n_link<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>ci_phmm[ci];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>rclist<sp/>for<sp/>p<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rc<sp/>=<sp/>0;<sp/>rc<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>rc++)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_set(p-&gt;<ref refid="structphmm__s_1a94ead49959a95398643178d8dc1609f8" kindref="member">rc</ref>,<sp/>rc))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclist[i++]<sp/>=<sp/>rc;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclist[i]<sp/>=<sp/><ref refid="s3types_8h_1af9c51863cdbb10d58b6aad21e896666b" kindref="member">BAD_S3CIPID</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>rc<sp/>in<sp/>rclist,<sp/>transition<sp/>to<sp/>PHMMs<sp/>for<sp/>rc<sp/>if<sp/>left<sp/>context<sp/>=<sp/>ci<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>IS_S3CIPID(rclist[i]);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p2<sp/>=<sp/>ci_phmm[rclist[i]];<sp/>p2;<sp/>p2<sp/>=<sp/>p2-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_set(p2-&gt;<ref refid="structphmm__s_1aad9f810256dea9ee491d21eb3a349d1c" kindref="member">lc</ref>,<sp/>ci))<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transition<sp/>from<sp/>p<sp/>to<sp/>p2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<ref refid="structplink__s" kindref="compound">plink_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*l));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structplink__s_1a6499a81fb81dd9c295318ad323a0740f" kindref="member">phmm</ref><sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structplink__s_1a835ba35ee1605a314eefbef9db68c033" kindref="member">next</ref><sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a152d26f99b39098c8027cd2d8372e05c" kindref="member">succlist</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1a152d26f99b39098c8027cd2d8372e05c" kindref="member">succlist</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_link++;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(rclist);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_link;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">phmm_build(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p,<sp/>**pid2phmm;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>lrc_size;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>*lc,<sp/>*rc;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>s3pid_t<sp/>pid;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>ci;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*filler;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_phmm,<sp/>n_link;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>nphone;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs)-&gt;acmod-&gt;mdef;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref><sp/>=</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>**)<sp/>ckd_calloc(bin_mdef_n_ciphone(mdef),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>pid2phmm<sp/>=</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>**)<sp/>ckd_calloc(bin_mdef_n_phone(mdef),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>unique<sp/>ciphone/triphone<sp/>entry<sp/>in<sp/>mdef,<sp/>create<sp/>a<sp/>PHMM<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>n_phmm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>nphone<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab4d9470249d15abca8e9fd01f1d437a7" kindref="member">ci_only</ref><sp/>?<sp/>bin_mdef_n_ciphone(mdef)<sp/>:<sp/>bin_mdef_n_phone(mdef);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Building<sp/>PHMM<sp/>net<sp/>of<sp/>%d<sp/>phones\n&quot;</highlight><highlight class="normal">,<sp/>nphone);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pid<sp/>=<sp/>0;<sp/>pid<sp/>&lt;<sp/>nphone;<sp/>pid++)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>phmm_lookup(allphs,<sp/>pid))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>found,<sp/>should<sp/>be<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(allphs-&gt;<ref refid="structallphone__search__s_1aa82fce72da16af69af92aeca29beed3d" kindref="member">hmmctx</ref>,<sp/>&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>),<sp/>FALSE,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef_pid2ssid(mdef,<sp/>pid),<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].<ref refid="structmdef__entry__s_1a90758df5d6eb00d3a70135ac4475c7a1" kindref="member">tmat</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1aee52956004053c676230cd8567366b60" kindref="member">pid</ref><sp/>=<sp/>pid;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref><sp/>=<sp/>bin_mdef_pid2ci(mdef,<sp/>pid);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1a152d26f99b39098c8027cd2d8372e05c" kindref="member">succlist</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref><sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[p-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[p-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_phmm++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid2phmm[pid]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>out<sp/>bitvecs<sp/>of<sp/>each<sp/>PHMM<sp/>node,<sp/>alloc<sp/>continuous<sp/>memory<sp/>chunk<sp/>for<sp/>context<sp/>bitvectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>lrc_size<sp/>=<sp/>bitvec_size(bin_mdef_n_ciphone(mdef));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>lc<sp/>=<sp/>ckd_calloc(n_phmm<sp/>*<sp/>2<sp/>*<sp/>lrc_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bitvec_t));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lc<sp/>+<sp/>(n_phmm<sp/>*<sp/>lrc_size);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[ci];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1aad9f810256dea9ee491d21eb3a349d1c" kindref="member">lc</ref><sp/>=<sp/>lc;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc<sp/>+=<sp/>lrc_size;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structphmm__s_1a94ead49959a95398643178d8dc1609f8" kindref="member">rc</ref><sp/>=<sp/>rc;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>+=<sp/>lrc_size;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>out<sp/>lc<sp/>and<sp/>rc<sp/>bitmaps<sp/>(remember<sp/>to<sp/>map<sp/>all<sp/>fillers<sp/>to<sp/>each<sp/>other!!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>filler<sp/>=</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*)<sp/>ckd_calloc(bin_mdef_n_ciphone(mdef)<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connect<sp/>fillers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pid2phmm[ci];</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set_all(p-&gt;<ref refid="structphmm__s_1aad9f810256dea9ee491d21eb3a349d1c" kindref="member">lc</ref>,<sp/>bin_mdef_n_ciphone(mdef));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set_all(p-&gt;<ref refid="structphmm__s_1a94ead49959a95398643178d8dc1609f8" kindref="member">rc</ref>,<sp/>bin_mdef_n_ciphone(mdef));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[ci].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filler[i++]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>filler[i]<sp/>=<sp/><ref refid="s3types_8h_1af9c51863cdbb10d58b6aad21e896666b" kindref="member">BAD_S3CIPID</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>cdphones<sp/>only<sp/>if<sp/>ci_only<sp/>is<sp/>not<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pid<sp/>=<sp/>bin_mdef_n_ciphone(mdef);<sp/>pid<sp/>&lt;<sp/>nphone;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid++)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pid2phmm[pid];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[1]].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>IS_S3CIPID(filler[i]);<sp/>i++)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(p-&gt;<ref refid="structphmm__s_1aad9f810256dea9ee491d21eb3a349d1c" kindref="member">lc</ref>,<sp/>filler[i]);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(p-&gt;<ref refid="structphmm__s_1aad9f810256dea9ee491d21eb3a349d1c" kindref="member">lc</ref>,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[1]);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[2]].info.<ref refid="structmdef__entry__s_1a24e5db7af5e705b310e82154055043ec" kindref="member">ci</ref>.filler)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>IS_S3CIPID(filler[i]);<sp/>i++)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(p-&gt;<ref refid="structphmm__s_1a94ead49959a95398643178d8dc1609f8" kindref="member">rc</ref>,<sp/>filler[i]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(p-&gt;<ref refid="structphmm__s_1a94ead49959a95398643178d8dc1609f8" kindref="member">rc</ref>,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a2c73ae900d198460a30bce4f641d8398" kindref="member">phone</ref>[pid].info.cd.ctx[2]);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(pid2phmm);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(filler);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>links<sp/>between<sp/>PHMM<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>n_link<sp/>=<sp/>phmm_link(allphs);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>nodes,<sp/>%d<sp/>links\n&quot;</highlight><highlight class="normal">,<sp/>n_phmm,<sp/>n_link);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">phmm_free(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>ci;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nothing<sp/>to<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[0]-&gt;<ref refid="structphmm__s_1aad9f810256dea9ee491d21eb3a349d1c" kindref="member">lc</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs)-&gt;acmod-&gt;mdef;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>mdef_n_ciphone(mdef);<sp/>++ci)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p,<sp/>*next;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[ci];<sp/>p;<sp/>p<sp/>=<sp/>next)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplink__s" kindref="compound">plink_t</ref><sp/>*l,<sp/>*lnext;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a152d26f99b39098c8027cd2d8372e05c" kindref="member">succlist</ref>;<sp/>l;<sp/>l<sp/>=<sp/>lnext)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnext<sp/>=<sp/>l-&gt;<ref refid="structplink__s_1a835ba35ee1605a314eefbef9db68c033" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(l);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(p);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="346"><highlight class="normal">phmm_eval_all(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16<sp/>*<sp/>senscr)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>ci;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>best;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>**ci_phmm;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs)-&gt;acmod-&gt;mdef;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ci_phmm<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" kindref="member">hmm_context_set_senscore</ref>(allphs-&gt;<ref refid="structallphone__search__s_1aa82fce72da16af69af92aeca29beed3d" kindref="member">hmmctx</ref>,<sp/>senscr);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>ci_phmm[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>ci];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>))<sp/>==<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a24d1b4b58c797ff488651b6238040433" kindref="member">n_hmm_eval</ref>++;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>((<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)<sp/>p);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>&gt;<sp/>best)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">phmm_exit(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/>int32<sp/>best)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>ci;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>th,<sp/>nf;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*h;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*history;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>curfrm;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>**ci_phmm;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*ci2lmwid;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>th<sp/>=<sp/>best<sp/>+<sp/>allphs-&gt;<ref refid="structallphone__search__s_1af1c69cfc6361bfed4ed0726cbdd4fbfa" kindref="member">pbeam</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>history<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>ps_search_acmod(allphs)-&gt;mdef;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>curfrm<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>ci_phmm<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>ci2lmwid<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>curfrm<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>ci_phmm[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>ci];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>))<sp/>==<sp/>curfrm)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>))<sp/>&gt;=<sp/>th)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>(<ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*h));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a59e1a1053ba224c4d015f08192c7fd96" kindref="member">ef</ref><sp/>=<sp/>curfrm;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a548a5d7505c78278114ab9b1d5e0ceaa" kindref="member">phmm</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref><sp/>=<sp/>hmm_out_history(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1af24720abad5e2e17a99c5aeffa7dc95e" kindref="member">score</ref><sp/>=<sp/>hmm_out_score(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a09096eb94eba8ad29dc19f231192a24b" kindref="member">tscore</ref><sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1ac4f20ffb4acb7c36a8e04cf7b88eafb2" kindref="member">inspen</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*pred<sp/>=</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkarray_list_get(history,<sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pred-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*pred_pred<sp/>=</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkarray_list_get(history,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a09096eb94eba8ad29dc19f231192a24b" kindref="member">tscore</ref><sp/>=</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_tg_score(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[pred_pred-&gt;<ref refid="structhistory__s_1a548a5d7505c78278114ab9b1d5e0ceaa" kindref="member">phmm</ref>-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[pred-&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phmm-&gt;ci],</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[p-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a09096eb94eba8ad29dc19f231192a24b" kindref="member">tscore</ref><sp/>=</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_bg_score(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[pred-&gt;<ref refid="structhistory__s_1a548a5d7505c78278114ab9b1d5e0ceaa" kindref="member">phmm</ref>-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[p-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>the<sp/>beginning<sp/>SIL<sp/>and<sp/>in<sp/>srch_allphone_begin()</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it&apos;s<sp/>inscore<sp/>is<sp/>set<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a09096eb94eba8ad29dc19f231192a24b" kindref="member">tscore</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkarray_list_append(history,<sp/>h);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>PHMM<sp/>active<sp/>in<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>))<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>scores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">phmm_trans(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/>int32<sp/>best,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>frame_history_start)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*h;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*from,<sp/>*to;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplink__s" kindref="compound">plink_t</ref><sp/>*l;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>newscore,<sp/>nf,<sp/>curfrm;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*ci2lmwid;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>hist_idx;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>curfrm<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>curfrm<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>ci2lmwid<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>from<sp/>exited<sp/>nodes<sp/>to<sp/>initial<sp/>states<sp/>of<sp/>HMMs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hist_idx<sp/>=<sp/>frame_history_start;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_idx<sp/>&lt;<sp/>blkarray_list_n_valid(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>);<sp/>hist_idx++)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,<sp/>hist_idx);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a548a5d7505c78278114ab9b1d5e0ceaa" kindref="member">phmm</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>from-&gt;<ref refid="structphmm__s_1a152d26f99b39098c8027cd2d8372e05c" kindref="member">succlist</ref>;<sp/>l;<sp/>l<sp/>=<sp/>l-&gt;<ref refid="structplink__s_1a835ba35ee1605a314eefbef9db68c033" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tscore;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>=<sp/>l-&gt;<ref refid="structplink__s_1a6499a81fb81dd9c295318ad323a0740f" kindref="member">phmm</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>LM,<sp/>just<sp/>use<sp/>uniform<sp/>(insertion<sp/>penalty).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscore<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1ac4f20ffb4acb7c36a8e04cf7b88eafb2" kindref="member">inspen</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*pred<sp/>=</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,<sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscore<sp/>=</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_tg_score(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[pred-&gt;<ref refid="structhistory__s_1a548a5d7505c78278114ab9b1d5e0ceaa" kindref="member">phmm</ref>-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[from-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[to-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscore<sp/>=<sp/>ngram_bg_score(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[from-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2lmwid[to-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>],</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1af24720abad5e2e17a99c5aeffa7dc95e" kindref="member">score</ref><sp/>+<sp/>tscore;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newscore<sp/>&gt;<sp/>best<sp/>+<sp/>allphs-&gt;beam)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(newscore<sp/>&gt;<sp/>hmm_in_score(&amp;(to-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;(to-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>),<sp/>newscore,<sp/>hist_idx,<sp/>nf);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="normal">allphone_search_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_t<sp/>*<sp/>lm,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_t<sp/>*<sp/><ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*<sp/>acmod,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*allphs));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" kindref="member">ps_search_init</ref>(ps_search_base(allphs),<sp/>&amp;allphone_funcs,<sp/>PS_SEARCH_TYPE_ALLPHONE,<sp/>name,<sp/>config,<sp/>acmod,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1aa82fce72da16af69af92aeca29beed3d" kindref="member">hmmctx</ref><sp/>=<sp/><ref refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" kindref="member">hmm_context_init</ref>(bin_mdef_n_emit_state(mdef),</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>-&gt;<ref refid="structtmat__t_1a9f518c96b30dab9efdb69bd779a7b5bf" kindref="member">tp</ref>,<sp/>NULL,<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1aa82fce72da16af69af92aeca29beed3d" kindref="member">hmmctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_free(ps_search_base(allphs));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab4d9470249d15abca8e9fd01f1d437a7" kindref="member">ci_only</ref><sp/>=<sp/>cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-allphone_ci&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;lw<sp/>=<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>phmm_build(allphs);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>silwid;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref><sp/>=<sp/>ngram_model_retain(lm);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silwid<sp/>=<sp/>ngram_wid(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>,<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdef_silphone</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mdef)));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(silwid<sp/>==<sp/>ngram_unknown_wid(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>))<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Phonetic<sp/>LM<sp/>does<sp/>not<sp/>have<sp/>SIL<sp/>phone<sp/>in<sp/>vocabulary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphone_search_free((<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref><sp/>=</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32<sp/>*)<sp/>ckd_calloc(mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mdef-&gt;<ref refid="structbin__mdef__s_1a84d5f7acc6d85ba8c7611945f9c5e4e7" kindref="member">n_ciphone</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_wid(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>i));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>filler<sp/>phones<sp/>and<sp/>other<sp/>missing<sp/>phones<sp/>to<sp/>silence<sp/>if<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>[i]<sp/>==<sp/>ngram_unknown_wid(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>))</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>[i]<sp/>=<sp/>silwid;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>language<sp/>model<sp/>specified<sp/>in<sp/>-allphone,<sp/>doing<sp/>unconstrained<sp/>phone-loop<sp/>decoding\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ac4f20ffb4acb7c36a8e04cf7b88eafb2" kindref="member">inspen</ref><sp/>=</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>(logmath_log</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pip&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>allphs-&gt;lw)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a83712f4d89a500720b5bb3e8b2b67297" kindref="member">n_tot_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;segments<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>search<sp/>pruning<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;beam</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-beam&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1af1c69cfc6361bfed4ed0726cbdd4fbfa" kindref="member">pbeam</ref></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pbeam&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LM<sp/>related<sp/>weights/penalties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref><sp/>=<sp/>blkarray_list_init();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acoustic<sp/>score<sp/>scale<sp/>for<sp/>posterior<sp/>probabilities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a9ad3ecc228af52131028fb91927563dc" kindref="member">ascale</ref><sp/>=<sp/>1.0<sp/>/<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-ascale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allphone(beam:<sp/>%d,<sp/>pbeam:<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>allphs-&gt;beam,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1af1c69cfc6361bfed4ed0726cbdd4fbfa" kindref="member">pbeam</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_init(&amp;allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*)<sp/>allphs;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">allphone_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>dict,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>old<sp/>dict2pid,<sp/>dict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" kindref="member">ps_search_base_reinit</ref>(search,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;-lm<sp/>argument<sp/>missing;<sp/>doing<sp/>unconstrained<sp/>phone-loop<sp/>decoding\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ac4f20ffb4acb7c36a8e04cf7b88eafb2" kindref="member">inspen</ref><sp/>=</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>(logmath_log</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(search-&gt;<ref refid="structps__search__s_1aa6e3e18165bbc70084a06575d5703042" kindref="member">config</ref>,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-pip&quot;</highlight><highlight class="normal">))<sp/>*</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;lw)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">allphone_search_free(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)allphs-&gt;<ref refid="structallphone__search__s_1a83712f4d89a500720b5bb3e8b2b67297" kindref="member">n_tot_frame</ref></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(allphs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>allphone<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_tot_cpu,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_tot_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>allphone<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_tot_elapsed,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_tot_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" kindref="member">ps_search_base_free</ref>(search);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(allphs-&gt;<ref refid="structallphone__search__s_1aa82fce72da16af69af92aeca29beed3d" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>phmm_free(allphs);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_free(allphs-&gt;<ref refid="structallphone__search__s_1ac1220a564a57a418312800df44bd95ca" kindref="member">lm</ref>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(allphs-&gt;<ref refid="structallphone__search__s_1a9021eb4d9645cc3138535dfad8272601" kindref="member">ci2lmwid</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkarray_list_free(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(allphs);</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">allphone_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>ci;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>all<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>ci];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>));</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a24d1b4b58c797ff488651b6238040433" kindref="member">n_hmm_eval</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a5759743790af0ec17f85f14f18004b71" kindref="member">n_sen_eval</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>history<sp/>nodes,<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>blkarray_list_reset(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>start<sp/>state<sp/>of<sp/>the<sp/>SILENCE<sp/>PHMM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>ci<sp/>=<sp/>bin_mdef_silphone(mdef);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NOT_S3CIPID(ci))</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>CI-phone<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="mdef_8h_1a87b279af2566a60666495e16d09a8aee" kindref="member">S3_SILENCE_CIPHONE</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[ci];<sp/>p<sp/>&amp;&amp;<sp/>(p-&gt;<ref refid="structphmm__s_1aee52956004053c676230cd8567366b60" kindref="member">pid</ref><sp/>!=<sp/>ci);<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>HMM<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="mdef_8h_1a87b279af2566a60666495e16d09a8aee" kindref="member">S3_SILENCE_CIPHONE</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>),<sp/>0,<sp/>0,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_reset(&amp;allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_start(&amp;allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal">allphone_search_sen_active(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs)</highlight></codeline>
<codeline lineno="708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphmm__s" kindref="compound">phmm_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ci;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod<sp/>=<sp/>ps_search_acmod(allphs);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(acmod);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>bin_mdef_n_ciphone(mdef);<sp/>ci++)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a2646c8ad402da8a644ecebd28386de0d" kindref="member">ci_phmm</ref>[ci];<sp/>p;<sp/>p<sp/>=<sp/>p-&gt;<ref refid="structphmm__s_1a62c94d334abbbd2431d5e7e0ace79a14" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>))<sp/>==<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(acmod,<sp/>&amp;(p-&gt;<ref refid="structphmm__s_1a829311265f8df700c9fb628f5bdff0ad" kindref="member">hmm</ref>));</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal">allphone_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestscr,<sp/>frame_history_start;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16<sp/>*senscr;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphone_search_sen_active(allphs);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>senscr<sp/>=<sp/><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(acmod,<sp/>&amp;frame_idx);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a5759743790af0ec17f85f14f18004b71" kindref="member">n_sen_eval</ref><sp/>+=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscr<sp/>=<sp/>phmm_eval_all(allphs,<sp/>senscr);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_history_start<sp/>=<sp/>blkarray_list_n_valid(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>phmm_exit(allphs,<sp/>bestscr);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>phmm_trans(allphs,<sp/>bestscr,<sp/>frame_history_start);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>++;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="748"><highlight class="normal">ascore(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*<sp/>h)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1af24720abad5e2e17a99c5aeffa7dc95e" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*pred<sp/>=<sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,<sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>-=<sp/>pred-&gt;<ref refid="structhistory__s_1af24720abad5e2e17a99c5aeffa7dc95e" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>score<sp/>-<sp/>h-&gt;<ref refid="structhistory__s_1a09096eb94eba8ad29dc19f231192a24b" kindref="member">tscore</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal">allphone_clear_segments(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>allphs-&gt;segments;<sp/>gn;<sp/>gn<sp/>=<sp/>gn-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(gnode_ptr(gn));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(allphs-&gt;segments);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;segments<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal">allphone_backtrace(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*<sp/>allphs,<sp/>int32<sp/>f,<sp/>int32<sp/>*out_score)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>best,<sp/>hist_idx,<sp/>best_idx;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>frm,<sp/>last_frm;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*h;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphseg__s" kindref="compound">phseg_t</ref><sp/>*s;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>old<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>allphone_clear_segments(allphs);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>frm<sp/>=<sp/>last_frm<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>first<sp/>history<sp/>entry<sp/>for<sp/>the<sp/>requested<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>hist_idx<sp/>=<sp/>blkarray_list_n_valid(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(hist_idx<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,<sp/>hist_idx);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;<ref refid="structhistory__s_1a59e1a1053ba224c4d015f08192c7fd96" kindref="member">ef</ref><sp/>&lt;=<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm<sp/>=<sp/>last_frm<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a59e1a1053ba224c4d015f08192c7fd96" kindref="member">ef</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_idx--;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hist_idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>bestscore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>(int32)<sp/>0x80000000;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>best_idx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(frm<sp/>==<sp/>last_frm<sp/>&amp;&amp;<sp/>hist_idx<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,<sp/>hist_idx);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a59e1a1053ba224c4d015f08192c7fd96" kindref="member">ef</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;<ref refid="structhistory__s_1af24720abad5e2e17a99c5aeffa7dc95e" kindref="member">score</ref><sp/>&gt;<sp/>best<sp/>&amp;&amp;<sp/>frm<sp/>==<sp/>last_frm)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1af24720abad5e2e17a99c5aeffa7dc95e" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_idx<sp/>=<sp/>hist_idx;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_idx--;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_score)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_score<sp/>=<sp/>best;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Backtrace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(best_idx<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,<sp/>best_idx);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(<ref refid="structphseg__s" kindref="compound">phseg_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structphseg__s" kindref="compound">phseg_t</ref>));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;ci<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a548a5d7505c78278114ab9b1d5e0ceaa" kindref="member">phmm</ref>-&gt;<ref refid="structphmm__s_1afe385b65ca02fb4e3a087a0997ea4eac" kindref="member">ci</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sf<sp/>=</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>?<sp/>((<ref refid="structhistory__s" kindref="compound">history_t</ref><sp/>*)<sp/>blkarray_list_get(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref>))-&gt;ef<sp/>+<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;ef<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a59e1a1053ba224c4d015f08192c7fd96" kindref="member">ef</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;score<sp/>=<sp/>ascore(allphs,<sp/>h);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;tscore<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a09096eb94eba8ad29dc19f231192a24b" kindref="member">tscore</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;segments<sp/>=<sp/>glist_add_ptr(allphs-&gt;segments,<sp/>s);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_idx<sp/>=<sp/>h-&gt;<ref refid="structhistory__s_1a0e9457246e140d8af571eea044178551" kindref="member">hist</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">allphone_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>cf,<sp/>n_hist;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a83712f4d89a500720b5bb3e8b2b67297" kindref="member">n_tot_frame</ref><sp/>+=<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>blkarray_list_n_valid(allphs-&gt;<ref refid="structallphone__search__s_1a6f01de182b60ca03ab9fed3bc63fadc5" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>frames,<sp/>%d<sp/>HMMs<sp/>(%d/fr),<sp/>%d<sp/>senones<sp/>(%d/fr),<sp/>%d<sp/>history<sp/>entries<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref>,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a24d1b4b58c797ff488651b6238040433" kindref="member">n_hmm_eval</ref>,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a24d1b4b58c797ff488651b6238040433" kindref="member">n_hmm_eval</ref><sp/>/<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1a5759743790af0ec17f85f14f18004b71" kindref="member">n_sen_eval</ref>,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a5759743790af0ec17f85f14f18004b71" kindref="member">n_sen_eval</ref><sp/>/<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hist,<sp/>(allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>n_hist<sp/>/<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>backtrace.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>allphone_backtrace(allphs,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>-<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>some<sp/>statistics.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_stop(&amp;allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>ps_search_acmod(allphs)-&gt;output_frame;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cf<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)<sp/>(cf<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(allphs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;allphone<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_cpu,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;allphone<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_elapsed,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1ab933d7d82322055b5d0c62e27d7c1f5f" kindref="member">perf</ref>.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="875"><highlight class="normal">allphone_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search,<sp/>int32<sp/>*<sp/>out_score,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*<sp/>out_is_final)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*allphs;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphseg__s" kindref="compound">phseg_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*phone_str;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>hyp_idx,<sp/>phone_idx;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>allphs<sp/>=<sp/>(<ref refid="structallphone__search__s" kindref="compound">allphone_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>mdef<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>hypothesis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>allphone_backtrace(allphs,<sp/>allphs-&gt;<ref refid="structallphone__search__s_1a458aad951cc506c072d67d8d9f163fd7" kindref="member">frame</ref><sp/>-<sp/>1,<sp/>out_score);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allphs-&gt;segments<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>glist_count(allphs-&gt;segments)<sp/>*<sp/>10;<sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>length<sp/>of<sp/>one<sp/>phone<sp/>with<sp/>spacebar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ckd_calloc(len,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>));</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>hyp_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>allphs-&gt;segments;<sp/>gn;<sp/>gn<sp/>=<sp/>gn-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phone_str<sp/>=<sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(mdef,<sp/>p-&gt;ci);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phone_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(phone_str[phone_idx]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>[hyp_idx++]<sp/>=<sp/>phone_str[phone_idx++];</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>[hyp_idx++]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>[--hyp_idx]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Hyp:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/allphone_search.c"/>
  </compounddef>
</doxygen>
