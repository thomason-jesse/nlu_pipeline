<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ps__mllr_8c" kind="file">
    <compoundname>ps_mllr.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes refid="acmod_8h" local="yes">acmod.h</includes>
    <incdepgraph>
      <node id="1968">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="1956">
        <label>src/libpocketsphinx/ps_mllr.c</label>
        <link refid="ps_mllr.c"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1958" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
      </node>
      <node id="1973">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1960">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1972">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
      </node>
      <node id="1969">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1962">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1976">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1971">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1958">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1977">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1974">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
      </node>
      <node id="1963">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1966">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1959">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1963" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
      </node>
      <node id="1964">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1965">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1967">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
      </node>
      <node id="1970">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
      </node>
      <node id="1961">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1975">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
      </node>
      <node id="1957">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ps__mllr_8c_1ab62fb9c8cf3bdeed75a7ac2870d56a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
        <definition>ps_mllr_t* ps_mllr_read</definition>
        <argsstring>(char const *regmatfile)</argsstring>
        <name>ps_mllr_read</name>
        <param>
          <type>char const *</type>
          <declname>regmatfile</declname>
        </param>
        <briefdescription>
<para>Read a speaker-adaptive linear transform from a file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c" line="52" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c" bodystart="52" bodyend="135"/>
        <references refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" compoundref="acmod_8h" startline="83">ps_mllr_s::refcnt</references>
        <references refid="structps__mllr__s_1a30b9bb76c5469542d531ead4ad1bdcb1" compoundref="acmod_8h" startline="84">ps_mllr_s::n_class</references>
        <references refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" compoundref="acmod_8h" startline="85">ps_mllr_s::n_feat</references>
        <references refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" compoundref="acmod_8h" startline="86">ps_mllr_s::veclen</references>
        <references refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" compoundref="acmod_8h" startline="87">ps_mllr_s::A</references>
        <references refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" compoundref="acmod_8h" startline="88">ps_mllr_s::b</references>
        <references refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" compoundref="acmod_8h" startline="89">ps_mllr_s::h</references>
        <references refid="ps__mllr_8c_1a240194a6ef30b01da38e3654c984b017" compoundref="ps__mllr_8c" startline="145" endline="169">ps_mllr_free</references>
      </memberdef>
      <memberdef kind="function" id="ps__mllr_8c_1ae21e7d8a0fa751aaccc5ef39dc5d1fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
        <definition>ps_mllr_t* ps_mllr_retain</definition>
        <argsstring>(ps_mllr_t *mllr)</argsstring>
        <name>ps_mllr_retain</name>
        <param>
          <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
          <declname>mllr</declname>
        </param>
        <briefdescription>
<para>Retain a pointer to a linear transform. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c" line="138" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c" bodystart="138" bodyend="142"/>
        <references refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" compoundref="acmod_8h" startline="83">ps_mllr_s::refcnt</references>
      </memberdef>
      <memberdef kind="function" id="ps__mllr_8c_1a240194a6ef30b01da38e3654c984b017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ps_mllr_free</definition>
        <argsstring>(ps_mllr_t *mllr)</argsstring>
        <name>ps_mllr_free</name>
        <param>
          <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
          <declname>mllr</declname>
        </param>
        <briefdescription>
<para>Release a pointer to a linear transform. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c" line="145" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c" bodystart="145" bodyend="169"/>
        <references refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" compoundref="acmod_8h" startline="83">ps_mllr_s::refcnt</references>
        <references refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" compoundref="acmod_8h" startline="85">ps_mllr_s::n_feat</references>
        <references refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" compoundref="acmod_8h" startline="87">ps_mllr_s::A</references>
        <references refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" compoundref="acmod_8h" startline="88">ps_mllr_s::b</references>
        <references refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" compoundref="acmod_8h" startline="89">ps_mllr_s::h</references>
        <references refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" compoundref="acmod_8h" startline="86">ps_mllr_s::veclen</references>
        <referencedby refid="acmod_8h_1a1e3345e8ef8b060fc04e88f86e6afa4a" compoundref="acmod_8c" startline="301" endline="338">acmod_free</referencedby>
        <referencedby refid="acmod_8h_1a4205b92d38db562577eafc3c432593ab" compoundref="acmod_8c" startline="341" endline="349">acmod_update_mllr</referencedby>
        <referencedby refid="ps__mllr_8c_1ab62fb9c8cf3bdeed75a7ac2870d56a5a" compoundref="ps__mllr_8c" startline="52" endline="135">ps_mllr_read</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Model-space linear transforms for speaker adaptation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2009<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="acmod_8h" kindref="compound">acmod.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*</highlight></codeline>
<codeline lineno="52" refid="ps__mllr_8c_1ab62fb9c8cf3bdeed75a7ac2870d56a5a" refkind="member"><highlight class="normal"><ref refid="ps__mllr_8c_1ab62fb9c8cf3bdeed75a7ac2870d56a5a" kindref="member">ps_mllr_read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*regmatfile)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>i,<sp/>m,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mllr));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" kindref="member">refcnt</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>fopen(regmatfile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>MLLR<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>regmatfile);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>MLLR<sp/>transformation<sp/>file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>regmatfile);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fscanf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;n)<sp/>!=<sp/>1)<sp/>||<sp/>(n<sp/>&lt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>number<sp/>of<sp/>MLLR<sp/>classes\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a30b9bb76c5469542d531ead4ad1bdcb1" kindref="member">n_class</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fscanf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;n)<sp/>!=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>number<sp/>of<sp/>feature<sp/>streams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref><sp/>=<sp/>ckd_calloc(mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" kindref="member">A</ref><sp/>=<sp/>(float32<sp/>****)<sp/>ckd_calloc(mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32<sp/>**));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" kindref="member">b</ref><sp/>=<sp/>(float32<sp/>***)<sp/>ckd_calloc(mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32<sp/>*));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" kindref="member">h</ref><sp/>=<sp/>(float32<sp/>***)<sp/>ckd_calloc(mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32<sp/>*));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;n)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>stream<sp/>length<sp/>for<sp/>feature<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" kindref="member">A</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float32<sp/>***)<sp/>ckd_calloc_3d(mllr-&gt;<ref refid="structps__mllr__s_1a30b9bb76c5469542d531ead4ad1bdcb1" kindref="member">n_class</ref>,<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i],</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" kindref="member">b</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float32<sp/>**)<sp/>ckd_calloc_2d(mllr-&gt;<ref refid="structps__mllr__s_1a30b9bb76c5469542d531ead4ad1bdcb1" kindref="member">n_class</ref>,<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i],</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mllr-&gt;<ref refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" kindref="member">h</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float32<sp/>**)<sp/>ckd_calloc_2d(mllr-&gt;<ref refid="structps__mllr__s_1a30b9bb76c5469542d531ead4ad1bdcb1" kindref="member">n_class</ref>,<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i],</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a30b9bb76c5469542d531ead4ad1bdcb1" kindref="member">n_class</ref>;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>&amp;mllr-&gt;<ref refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" kindref="member">A</ref>[i][m][j][k])<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>reading<sp/>MLLR<sp/>rotation<sp/>(%d,%d,%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>m,<sp/>j,<sp/>k);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>&amp;mllr-&gt;<ref refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" kindref="member">b</ref>[i][m][j])<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>reading<sp/>MLLR<sp/>bias<sp/>(%d,%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>m,<sp/>j);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>[i];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>&amp;mllr-&gt;<ref refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" kindref="member">h</ref>[i][m][j])<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>reading<sp/>MLLR<sp/>variance<sp/>scale<sp/>(%d,%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>m,<sp/>j);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mllr;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__mllr_8c_1a240194a6ef30b01da38e3654c984b017" kindref="member">ps_mllr_free</ref>(mllr);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*</highlight></codeline>
<codeline lineno="138" refid="ps__mllr_8c_1ae21e7d8a0fa751aaccc5ef39dc5d1fe0" refkind="member"><highlight class="normal"><ref refid="ps__mllr_8c_1ae21e7d8a0fa751aaccc5ef39dc5d1fe0" kindref="member">ps_mllr_retain</ref>(<ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>++mllr-&gt;<ref refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" kindref="member">refcnt</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mllr;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="ps__mllr_8c_1a240194a6ef30b01da38e3654c984b017" refkind="member"><highlight class="normal"><ref refid="ps__mllr_8c_1a240194a6ef30b01da38e3654c984b017" kindref="member">ps_mllr_free</ref>(<ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mllr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--mllr-&gt;<ref refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" kindref="member">refcnt</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mllr-&gt;<ref refid="structps__mllr__s_1ac138bd81a40d8569d795463ea1ec52bd" kindref="member">refcnt</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mllr-&gt;<ref refid="structps__mllr__s_1acc9e853a333f4e79b24f3e5af0946e43" kindref="member">n_feat</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mllr-&gt;<ref refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" kindref="member">A</ref>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_3d(mllr-&gt;<ref refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" kindref="member">A</ref>[i]);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mllr-&gt;<ref refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(mllr-&gt;<ref refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" kindref="member">b</ref>[i]);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mllr-&gt;<ref refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(mllr-&gt;<ref refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" kindref="member">h</ref>[i]);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(mllr-&gt;<ref refid="structps__mllr__s_1a20fae2fc119069371464a6502e00c0e4" kindref="member">veclen</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(mllr-&gt;<ref refid="structps__mllr__s_1a4cfa5d4c6637282b947b525a673cc3d0" kindref="member">A</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(mllr-&gt;<ref refid="structps__mllr__s_1a65430ba654d0af5e508715de24077f2d" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(mllr-&gt;<ref refid="structps__mllr__s_1ae92b910e17202389aca99ee5105085b0" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(mllr);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ps_mllr.c"/>
  </compounddef>
</doxygen>
