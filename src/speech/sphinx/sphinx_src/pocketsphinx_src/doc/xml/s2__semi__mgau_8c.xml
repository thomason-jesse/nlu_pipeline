<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="s2__semi__mgau_8c" kind="file">
    <compoundname>s2_semi_mgau.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sphinx_config.h</includes>
    <includes local="no">sphinxbase/cmd_ln.h</includes>
    <includes local="no">sphinxbase/fixpoint.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/bio.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes local="no">sphinxbase/prim_type.h</includes>
    <includes refid="s2__semi__mgau_8h" local="yes">s2_semi_mgau.h</includes>
    <includes refid="tied__mgau__common_8h" local="yes">tied_mgau_common.h</includes>
    <incdepgraph>
      <node id="2087">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="2091">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="2104">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2068">
        <label>assert.h</label>
      </node>
      <node id="2106">
        <label>float.h</label>
      </node>
      <node id="2064">
        <label>src/libpocketsphinx/s2_semi_mgau.c</label>
        <link refid="s2_semi_mgau.c"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2067" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2072" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
        <childnode refid="2108" relation="include">
        </childnode>
      </node>
      <node id="2100">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2079">
        <label>s2_semi_mgau.h</label>
        <link refid="s2__semi__mgau_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
      </node>
      <node id="2073">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="2090">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2088">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="2066">
        <label>stdlib.h</label>
      </node>
      <node id="2080">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="2074">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="2082">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="2075">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="2095">
        <label>ms_gauden.h</label>
        <link refid="ms__gauden_8h"/>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2094">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="2097">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
      </node>
      <node id="2076">
        <label>sphinxbase/bio.h</label>
      </node>
      <node id="2069">
        <label>limits.h</label>
      </node>
      <node id="2092">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
      </node>
      <node id="2084">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="2072">
        <label>sphinx_config.h</label>
      </node>
      <node id="2071">
        <label>sys/types.h</label>
      </node>
      <node id="2099">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
        <childnode refid="2102" relation="include">
        </childnode>
      </node>
      <node id="2067">
        <label>string.h</label>
      </node>
      <node id="2096">
        <label>vector.h</label>
        <link refid="vector_8h_source"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
      </node>
      <node id="2078">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="2083">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2085">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="2102">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
      </node>
      <node id="2070">
        <label>math.h</label>
      </node>
      <node id="2108">
        <label>tied_mgau_common.h</label>
        <link refid="tied__mgau__common_8h"/>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
      </node>
      <node id="2077">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="2103">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="2086">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2107">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2104" relation="include">
        </childnode>
      </node>
      <node id="2089">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
      </node>
      <node id="2081">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="2105">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
      <node id="2093">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
      </node>
      <node id="2098">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="2065">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvqFeature__s" prot="public">vqFeature_s</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="s2__semi__mgau_8c_1a50837a85bfa790377dbbfbf4bee2c7f9" prot="public" static="yes" mutable="no">
        <type><ref refid="structps__mgaufuncs__s" kindref="compound">ps_mgaufuncs_t</ref></type>
        <definition>ps_mgaufuncs_t s2_semi_mgau_funcs</definition>
        <argsstring></argsstring>
        <name>s2_semi_mgau_funcs</name>
        <initializer>= {
    &quot;s2_semi&quot;,
    s2_semi_mgau_frame_eval,      
    s2_semi_mgau_mllr_transform,  
    s2_semi_mgau_free             
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="63" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="s2__semi__mgau_8c_1abd3cf1dd1d29e88e6a2295b73c916945" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eval_topn</definition>
        <argsstring>(s2_semi_mgau_t *s, int32 feat, mfcc_t *z)</argsstring>
        <name>eval_topn</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="76" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="76" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a88eacbbd6f163c1da13dddebb82768cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eval_cb</definition>
        <argsstring>(s2_semi_mgau_t *s, int32 feat, mfcc_t *z)</argsstring>
        <name>eval_cb</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="115" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="115" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ae5db92694095fd0ed44dcbd55a53f61c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mgau_dist</definition>
        <argsstring>(s2_semi_mgau_t *s, int32 frame, int32 feat, mfcc_t *z)</argsstring>
        <name>mgau_dist</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="172" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="172" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ab3b6d3dcca5ae51948acd64634591007" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mgau_norm</definition>
        <argsstring>(s2_semi_mgau_t *s, int feat)</argsstring>
        <name>mgau_norm</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>feat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="185" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="185" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a6f15236bd529408aa6f387b3b5d218e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_6</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_6</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="205" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="205" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a32cd852939628f6078061a125b038a87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_5</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_5</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="241" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="241" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a24fd383e0ea755c5a7d4cf40914bf49a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_4</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_4</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="274" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="274" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a4a6465b434594f79e02018f114ddfe7d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_3</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_3</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="304" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="304" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a7517c997d97f1ff83ed4969be3776717" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_2</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_2</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="331" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="331" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a6087a23e3b346475ed03e7b91eeb0d4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_1</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_1</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="355" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="355" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ab48bb368e6b77f4b87d7f058d88027a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_any</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int topn, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat_any</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="373" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="373" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a57ad4ede70550128a3555285309ac788" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int topn, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_8b_feat</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="397" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="397" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1aa71b135765f20cebf8838374d8d31164" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_8b_feat_all</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int topn, int16 *senone_scores)</argsstring>
        <name>get_scores_8b_feat_all</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="426" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="426" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a5479a6ba6764890f00b596c1b8338815" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_6</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_6</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="446" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="446" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a9b6cc4997e8465348b4191612c149cbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_5</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_5</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="510" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="510" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1aca50cd0456966607b4c55b9fa91b7724" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_4</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_4</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="568" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="568" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ae304c5359f4138daad6205d96a825bef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_3</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_3</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="620" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="620" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a18efe1ad032abd1087edfb73e360b0d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_2</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_2</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="666" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="666" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a1c0621154165a97332448230958bb98c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_1</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_1</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="706" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="706" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1aee2759a7761b24ac71b5afaeff73f717" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_any</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int topn, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat_any</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="740" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="740" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a1ab7704be442d3cb39133a8999b3329c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int topn, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active)</argsstring>
        <name>get_scores_4b_feat</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="773" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="773" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ac011ff4742dd07f1979a0d418f5fc6c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 get_scores_4b_feat_all</definition>
        <argsstring>(s2_semi_mgau_t *s, int i, int topn, int16 *senone_scores)</argsstring>
        <name>get_scores_4b_feat_all</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="802" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="802" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ae98bce7b32442e43130e172c3290c72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 s2_semi_mgau_frame_eval</definition>
        <argsstring>(ps_mgau_t *ps, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active, mfcc_t **featbuf, int32 frame, int32 compallsen)</argsstring>
        <name>s2_semi_mgau_frame_eval</name>
        <param>
          <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>featbuf</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>compallsen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="836" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="836" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ac1a3705ab31a608173a92a71a20edd85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 read_sendump</definition>
        <argsstring>(s2_semi_mgau_t *s, bin_mdef_t *mdef, char const *file)</argsstring>
        <name>read_sendump</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>mdef</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="885" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="885" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a9e54f7c287f2b860ee483011cc0a757a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 read_mixw</definition>
        <argsstring>(s2_semi_mgau_t *s, char const *file_name, double SmoothMin)</argsstring>
        <name>read_mixw</name>
        <param>
          <type><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>SmoothMin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="1085" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="1085" bodyend="1194"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1a84e798c0b4fcb63be2867a8050f0da93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int split_topn</definition>
        <argsstring>(char const *str, uint8 *out, int nfeat)</argsstring>
        <name>split_topn</name>
        <param>
          <type>char const *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="1198" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="1198" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ac328269632ead175d13acc681c0b2ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
        <definition>ps_mgau_t* s2_semi_mgau_init</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>s2_semi_mgau_init</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="1228" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="1228" bodyend="1325"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1af9851b8ce85207026425f7850dcb736a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int s2_semi_mgau_mllr_transform</definition>
        <argsstring>(ps_mgau_t *ps, ps_mllr_t *mllr)</argsstring>
        <name>s2_semi_mgau_mllr_transform</name>
        <param>
          <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
          <declname>mllr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="1328" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="1328" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="s2__semi__mgau_8c_1ac4f62095d165a81570c1621c2061df8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void s2_semi_mgau_free</definition>
        <argsstring>(ps_mgau_t *ps)</argsstring>
        <name>s2_semi_mgau_free</name>
        <param>
          <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" line="1336" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c" bodystart="1336" bodyend="1356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>System<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__ADSPBLACKFIN__)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>!defined(_WIN32_WCE)</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinx_config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/cmd_ln.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/fixpoint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/prim_type.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;s2_semi_mgau.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tied__mgau__common_8h" kindref="compound">tied_mgau_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__mgaufuncs__s" kindref="compound">ps_mgaufuncs_t</ref><sp/>s2_semi_mgau_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;s2_semi&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>s2_semi_mgau_frame_eval,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frame_eval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>s2_semi_mgau_mllr_transform,<sp/><sp/></highlight><highlight class="comment">/*<sp/>transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>s2_semi_mgau_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structvqFeature__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvqFeature__s" kindref="compound">vqFeature_s</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score;<sp/></highlight><highlight class="comment">/*<sp/>score<sp/>or<sp/>distance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>codeword;<sp/></highlight><highlight class="comment">/*<sp/>codeword<sp/>(vector<sp/>index)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">eval_topn(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s,<sp/>int32<sp/>feat,<sp/>mfcc_t<sp/>*z)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>ceplen;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref><sp/>*topn;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>topn<sp/>=<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>ceplen<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[feat];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*mean,<sp/>diff,<sp/>sqdiff,<sp/>compl;<sp/></highlight><highlight class="comment">/*<sp/>diff,<sp/>diff^2,<sp/>component<sp/>likelihood<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref><sp/>vtmp;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*var,<sp/>d;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*obs;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>cw,<sp/>j;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>topn[i].codeword;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1aa76d63009601dcb6b99f17db96167f37" kindref="member">mean</ref>[0][feat][0]<sp/>+<sp/>cw<sp/>*<sp/>ceplen;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a172cb69c018608ab8c33d54e6f0fdf19" kindref="member">var</ref>[0][feat][0]<sp/>+<sp/>cw<sp/>*<sp/>ceplen;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a315918a44ff97b95a6fcdf8739d8089b" kindref="member">det</ref>[0][feat][cw];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ceplen;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>*obs++<sp/>-<sp/>*mean++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqdiff<sp/>=<sp/>MFCCMUL(diff,<sp/>diff);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compl<sp/>=<sp/>MFCCMUL(sqdiff,<sp/>*var);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a740dfe5b30e702ba8b2ec7426bd4d57e" kindref="member">GMMSUB</ref>(d,<sp/>compl);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++var;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topn[i].score<sp/>=<sp/>(int32)d;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtmp<sp/>=<sp/>topn[i];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(int32)d<sp/>&gt;<sp/>topn[j].score;<sp/>j--)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topn[j<sp/>+<sp/>1]<sp/>=<sp/>topn[j];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topn[j<sp/>+<sp/>1]<sp/>=<sp/>vtmp;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">eval_cb(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s,<sp/>int32<sp/>feat,<sp/>mfcc_t<sp/>*z)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref><sp/>*worst,<sp/>*best,<sp/>*topn;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>*mean;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>*var,<sp/>*det,<sp/>*detP,<sp/>*detE;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>ceplen;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>topn<sp/>=<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>worst<sp/>=<sp/>topn<sp/>+<sp/>(s-&gt;max_topn<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>mean<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1aa76d63009601dcb6b99f17db96167f37" kindref="member">mean</ref>[0][feat][0];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a172cb69c018608ab8c33d54e6f0fdf19" kindref="member">var</ref>[0][feat][0];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>det<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a315918a44ff97b95a6fcdf8739d8089b" kindref="member">det</ref>[0][feat];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>detE<sp/>=<sp/>det<sp/>+<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ceplen<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[feat];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(detP<sp/>=<sp/>det;<sp/>detP<sp/>&lt;<sp/>detE;<sp/>++detP)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>diff,<sp/>sqdiff,<sp/>compl;<sp/></highlight><highlight class="comment">/*<sp/>diff,<sp/>diff^2,<sp/>component<sp/>likelihood<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>d;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*obs;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref><sp/>*cur;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>cw,<sp/>j;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>*detP;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>(int)(detP<sp/>-<sp/>det);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>(j<sp/>&lt;<sp/>ceplen)<sp/>&amp;&amp;<sp/>(d<sp/>&gt;=<sp/>worst-&gt;score);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>*obs++<sp/>-<sp/>*mean++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqdiff<sp/>=<sp/>MFCCMUL(diff,<sp/>diff);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compl<sp/>=<sp/>MFCCMUL(sqdiff,<sp/>*var);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a740dfe5b30e702ba8b2ec7426bd4d57e" kindref="member">GMMSUB</ref>(d,<sp/>compl);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++var;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>ceplen)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>terminated<sp/>early,<sp/>so<sp/>not<sp/>in<sp/>topn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>+=<sp/>(ceplen<sp/>-<sp/>j);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>+=<sp/>(ceplen<sp/>-<sp/>j);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((int32)d<sp/>&lt;<sp/>worst-&gt;score)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>already<sp/>there,<sp/>so<sp/>don&apos;t<sp/>need<sp/>to<sp/>insert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topn[i].codeword<sp/>==<sp/>cw)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>s-&gt;max_topn)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>already<sp/>there.<sp/><sp/>Don&apos;t<sp/>insert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remaining<sp/>code<sp/>inserts<sp/>codeword<sp/>and<sp/>dist<sp/>in<sp/>correct<sp/>spot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur<sp/>=<sp/>worst<sp/>-<sp/>1;<sp/>cur<sp/>&gt;=<sp/>best<sp/>&amp;&amp;<sp/>(int32)d<sp/>&gt;=<sp/>cur-&gt;score;<sp/>--cur)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(cur<sp/>+<sp/>1,<sp/>cur,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref>));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cur;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;codeword<sp/>=<sp/>cw;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;score<sp/>=<sp/>(int32)d;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">mgau_dist(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/>int32<sp/>frame,<sp/>int32<sp/>feat,<sp/>mfcc_t<sp/>*<sp/>z)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>eval_topn(s,<sp/>feat,<sp/>z);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>frame<sp/>is<sp/>skipped,<sp/>do<sp/>nothing<sp/>else.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame<sp/>%<sp/>s-&gt;ds_ratio)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>codebook<sp/>(or<sp/>subset<sp/>thereof).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>eval_cb(s,<sp/>feat,<sp/>z);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">mgau_norm(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feat)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>norm;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>quantized<sp/>normalizing<sp/>constant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat][0].score<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>the<sp/>scores,<sp/>negate<sp/>them,<sp/>and<sp/>clamp<sp/>their<sp/>dynamic<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat][j].score<sp/>=<sp/>-((s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat][j].score<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>)<sp/>-<sp/>norm);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat][j].score<sp/>&gt;<sp/><ref refid="tied__mgau__common_8h_1a965d50d73044c3f2dc2589662fd2e89e" kindref="member">MAX_NEG_ASCR</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat][j].score<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a965d50d73044c3f2dc2589662fd2e89e" kindref="member">MAX_NEG_ASCR</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;topn_beam[feat]<sp/>&amp;&amp;<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[feat][j].score<sp/>&gt;<sp/>s-&gt;topn_beam[feat])</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="205"><highlight class="normal">get_scores_8b_feat_6(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2,<sp/>*pid_cw3,<sp/>*pid_cw4,<sp/>*pid_cw5;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw3<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].codeword];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw4<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].codeword];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw5<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][5].codeword];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp<sp/>=<sp/>pid_cw0[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw1[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw2[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw3[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].score);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw4[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].score);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw5[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][5].score);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="241"><highlight class="normal">get_scores_8b_feat_5(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2,<sp/>*pid_cw3,<sp/>*pid_cw4;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw3<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].codeword];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw4<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].codeword];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp<sp/>=<sp/>pid_cw0[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw1[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw2[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw3[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].score);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw4[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].score);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="274"><highlight class="normal">get_scores_8b_feat_4(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2,<sp/>*pid_cw3;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw3<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].codeword];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp<sp/>=<sp/>pid_cw0[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw1[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw2[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw3[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].score);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="304"><highlight class="normal">get_scores_8b_feat_3(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp<sp/>=<sp/>pid_cw0[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw1[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw2[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="331"><highlight class="normal">get_scores_8b_feat_2(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp<sp/>=<sp/>pid_cw0[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw1[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="355"><highlight class="normal">get_scores_8b_feat_1(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp<sp/>=<sp/>pid_cw0[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="373"><highlight class="normal">get_scores_8b_feat_any(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topn,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>k,<sp/>l;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>pid_cw[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>topn;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].codeword];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw[sen]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].score);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="397"><highlight class="normal">get_scores_8b_feat(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topn,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,<sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(topn)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_6(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_5(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_4(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_3(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_2(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_1(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_8b_feat_any(s,<sp/>i,<sp/>topn,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="426"><highlight class="normal">get_scores_8b_feat_all(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topn,<sp/>int16<sp/>*senone_scores)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;n_sen;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>pid_cw[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>topn;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].codeword];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].score);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[j]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="446"><highlight class="normal">get_scores_4b_feat_6(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2,<sp/>*pid_cw3,<sp/>*pid_cw4,<sp/>*pid_cw5;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>w_den[6][16];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>scaled<sp/>densities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[0][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[1][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[2][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[3][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].score;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[4][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].score;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[5][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][5].score;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw3<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].codeword];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw4<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].codeword];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw5<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][5].codeword];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw3[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[3][cw]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw4[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[4][cw]);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw5[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[5][cw]);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw3[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[3][cw]);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw4[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[4][cw]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw5[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[5][cw]);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="510"><highlight class="normal">get_scores_4b_feat_5(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2,<sp/>*pid_cw3,<sp/>*pid_cw4;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>w_den[5][16];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>scaled<sp/>densities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[0][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[1][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[2][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[3][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].score;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[4][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].score;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw3<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].codeword];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw4<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][4].codeword];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw3[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[3][cw]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw4[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[4][cw]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw3[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[3][cw]);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw4[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[4][cw]);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="568"><highlight class="normal">get_scores_4b_feat_4(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2,<sp/>*pid_cw3;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>w_den[4][16];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>scaled<sp/>densities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[0][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[1][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[2][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[3][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].score;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw3<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][3].codeword];</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw3[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[3][cw]);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw3[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[3][cw]);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="620"><highlight class="normal">get_scores_4b_feat_3(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1,<sp/>*pid_cw2;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>w_den[3][16];</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>scaled<sp/>densities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[0][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[1][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[2][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].score;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw2<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][2].codeword];</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw2[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[2][cw]);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="666"><highlight class="normal">get_scores_4b_feat_2(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0,<sp/>*pid_cw1;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>w_den[2][16];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>scaled<sp/>densities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[0][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[1][j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].score;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw1<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][1].codeword];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[0][cw];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw1[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,<sp/>w_den[1][cw]);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="706"><highlight class="normal">get_scores_4b_feat_1(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>l;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw0;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>w_den[16];</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>scaled<sp/>densities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den[j]<sp/>=<sp/>s-&gt;mixw_cb[j]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_cw0<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[cw];</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw0[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>w_den[cw];</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="740"><highlight class="normal">get_scores_4b_feat_any(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topn,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>k,<sp/>l;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_senone_active;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>senone_active[j]<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp,<sp/>cw;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>s-&gt;mixw_cb[cw]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>topn;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].codeword];</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw[n/2]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>pid_cw[n/2]<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw_cb[cw]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].score);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[n]<sp/>+=<sp/>tmp;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="773"><highlight class="normal">get_scores_4b_feat(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topn,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,<sp/>uint8<sp/>*senone_active,<sp/>int32<sp/>n_senone_active)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(topn)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_6(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_5(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_4(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_3(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_2(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_1(s,<sp/>i,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_scores_4b_feat_any(s,<sp/>i,<sp/>topn,<sp/>senone_scores,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="802"><highlight class="normal">get_scores_4b_feat_all(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topn,<sp/>int16<sp/>*senone_scores)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>last_sen;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>senones<sp/>is<sp/>always<sp/>even,<sp/>but<sp/>don&apos;t<sp/>overrun<sp/>if<sp/>it<sp/>isn&apos;t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>last_sen<sp/>=<sp/>s-&gt;n_sen<sp/>&amp;<sp/>~1;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>last_sen)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*pid_cw;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>tmp0,<sp/>tmp1;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].codeword];</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>s-&gt;mixw_cb[pid_cw[j/2]<sp/>&amp;<sp/>0x0f]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>s-&gt;mixw_cb[pid_cw[j/2]<sp/>&gt;&gt;<sp/>4]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][0].score;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>topn;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>w_den0,<sp/>w_den1;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_cw<sp/>=<sp/>s-&gt;mixw[i][s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].codeword];</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den0<sp/>=<sp/>s-&gt;mixw_cb[pid_cw[j/2]<sp/>&amp;<sp/>0x0f]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].score;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_den1<sp/>=<sp/>s-&gt;mixw_cb[pid_cw[j/2]<sp/>&gt;&gt;<sp/>4]<sp/>+<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i][k].score;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp0,<sp/>w_den0);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>tmp1,<sp/>w_den1);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[j++]<sp/>+=<sp/>tmp0;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[j++]<sp/>+=<sp/>tmp1;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*<sp/>Compute<sp/>senone<sp/>scores<sp/>for<sp/>the<sp/>active<sp/>senones.</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="836"><highlight class="normal">s2_semi_mgau_frame_eval(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**<sp/>featbuf,<sp/>int32<sp/>frame,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>compallsen)</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s<sp/>=<sp/>(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*)ps;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>topn_idx;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_feat<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(senone_scores,<sp/>0,<sp/>s-&gt;n_sen<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*senone_scores));</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>done<sp/>here,<sp/>which<sp/>just<sp/>means<sp/>you&apos;ll<sp/>get</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>semi-random<sp/>crap<sp/>if<sp/>you<sp/>request<sp/>a<sp/>frame<sp/>in<sp/>the<sp/>future<sp/>or<sp/>one</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that&apos;s<sp/>too<sp/>far<sp/>in<sp/>the<sp/>past.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>topn_idx<sp/>=<sp/>frame<sp/>%<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a3cbc9fe683da5b7befe6b2712adae327" kindref="member">n_topn_hist</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref><sp/>=<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>[topn_idx];</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_feat;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>past<sp/>frames<sp/>this<sp/>will<sp/>already<sp/>be<sp/>computed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame<sp/>&gt;=<sp/>ps_mgau_base(ps)-&gt;frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref><sp/>**lastf;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topn_idx<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastf<sp/>=<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>[s-&gt;<ref refid="structs2__semi__mgau__s_1a3cbc9fe683da5b7befe6b2712adae327" kindref="member">n_topn_hist</ref>-1];</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastf<sp/>=<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>[topn_idx-1];</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s-&gt;<ref refid="structs2__semi__mgau__s_1ad8cb7f058bcc7402dd6a41c61f1b26e5" kindref="member">f</ref>[i],<sp/>lastf[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref>)<sp/>*<sp/>s-&gt;max_topn);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgau_dist(s,<sp/>frame,<sp/>i,<sp/>featbuf[i]);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>[topn_idx][i]<sp/>=<sp/>mgau_norm(s,<sp/>i);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;mixw_cb)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compallsen)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_scores_4b_feat_all(s,<sp/>i,<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>[topn_idx][i],<sp/>senone_scores);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_scores_4b_feat(s,<sp/>i,<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>[topn_idx][i],<sp/>senone_scores,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compallsen)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_scores_8b_feat_all(s,<sp/>i,<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>[topn_idx][i],<sp/>senone_scores);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_scores_8b_feat(s,<sp/>i,<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>[topn_idx][i],<sp/>senone_scores,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_active,<sp/>n_senone_active);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="885"><highlight class="normal">read_sendump(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s,<sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[1000];</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>n,<sp/>r,<sp/>c;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>do_swap,<sp/>do_mmap;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_clust<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_feat<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_density<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sen<sp/>=<sp/>bin_mdef_n_sen(mdef);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_bits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;n_sen<sp/>=<sp/>n_sen;<sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Should<sp/>have<sp/>been<sp/>done<sp/>earlier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>cmd_ln_boolean_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-mmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>fopen(file,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Loading<sp/>senones<sp/>from<sp/>dump<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>title<sp/>size,<sp/>title<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>title<sp/>size<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>extremely<sp/>bogus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>do_swap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1<sp/>||<sp/>n<sp/>&gt;<sp/>999)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;n);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1<sp/>||<sp/>n<sp/>&gt;<sp/>999)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Title<sp/>length<sp/>%x<sp/>in<sp/>dump<sp/>file<sp/>%s<sp/>out<sp/>of<sp/>range\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>file);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_swap<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>n,<sp/>fp)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>title&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[n<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Bad<sp/>title<sp/>in<sp/>dump<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>line);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>header<sp/>size,<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>size<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>n,<sp/>fp)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[n<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Bad<sp/>header<sp/>in<sp/>dump<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>other<sp/>header<sp/>strings<sp/>until<sp/>string<sp/>length<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>string<sp/>size<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>n,<sp/>fp)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>a<sp/>cluster<sp/>count,<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;feature_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;feature_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_feat<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;feature_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;mixture_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;mixture_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_density<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;mixture_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;model_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;model_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_sen<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;model_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;cluster_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_clust<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;cluster_bits<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_bits<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_bits<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_bits<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Defaults<sp/>for<sp/>#rows,<sp/>#columns<sp/>in<sp/>mixw<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>n_sen;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>n_density;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Older<sp/>mixw<sp/>files<sp/>have<sp/>them<sp/>here,<sp/>and<sp/>they<sp/>might<sp/>be<sp/>padded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;r,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(r),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>#rows&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;r);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;c,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(c),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>#columns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;c);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Rows:<sp/>%d,<sp/>Columns:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>r,<sp/>c);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_feat<sp/>!=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>feature<sp/>streams<sp/>mismatch:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_feat,<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_density<sp/>!=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>densities<sp/>mismatch:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_density,<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_sen<sp/>!=<sp/>s-&gt;n_sen)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>senones<sp/>mismatch:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_sen,<sp/>s-&gt;n_sen);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((n_clust<sp/>==<sp/>0)<sp/>||<sp/>(n_clust<sp/>==<sp/>15)<sp/>||<sp/>(n_clust<sp/>==<sp/>16)))<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>count<sp/>must<sp/>be<sp/>0,<sp/>15,<sp/>or<sp/>16\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust<sp/>==<sp/>15)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_clust;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((n_bits<sp/>==<sp/>8)<sp/>||<sp/>(n_bits<sp/>==<sp/>4)))<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>count<sp/>must<sp/>be<sp/>4<sp/>or<sp/>8\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Using<sp/>memory-mapped<sp/>I/O<sp/>for<sp/>senones\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>memory<sp/>for<sp/>pdfs<sp/>(or<sp/>memory<sp/>map<sp/>them)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sendump_mmap<sp/>=<sp/>mmio_file_read(file);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>cluster<sp/>codebook<sp/>if<sp/>any.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw_cb<sp/>=<sp/>((uint8<sp/>*)<sp/>mmio_file_ptr(s-&gt;sendump_mmap))<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>n_clust;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>cluster<sp/>codebook<sp/>if<sp/>any.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw_cb<sp/>=<sp/>ckd_calloc(1,<sp/>n_clust);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(s-&gt;mixw_cb,<sp/>1,<sp/>n_clust,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>n_clust)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>%d<sp/>bytes<sp/>from<sp/>sendump\n&quot;</highlight><highlight class="normal">,<sp/>n_clust);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>pointers,<sp/>or<sp/>read,<sp/>or<sp/>whatever<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sendump_mmap)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw<sp/>=<sp/>ckd_calloc_2d(n_feat,<sp/>n_density,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;mixw));</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>n_feat;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bits<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>(step<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>r;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw[n][i]<sp/>=<sp/>((uint8<sp/>*)<sp/>mmio_file_ptr(s-&gt;sendump_mmap))<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw<sp/>=<sp/>ckd_calloc_3d(n_feat,<sp/>n_density,<sp/>n_sen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;mixw));</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>pdf<sp/>values<sp/>and<sp/>ids<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>n_feat;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bits<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>(step<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>r;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(s-&gt;mixw[n][i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;mixw),<sp/>step,<sp/>fp)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>(size_t)<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>%d<sp/>bytes<sp/>from<sp/>sendump\n&quot;</highlight><highlight class="normal">,<sp/>step);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">read_mixw(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SmoothMin)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argname,<sp/>**argval;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>eofchk;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>byteswap,<sp/>chksum_present;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>chksum;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>*pdf;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>f,<sp/>c,<sp/>n;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_sen;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_feat;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_comp;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_err;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>mixture<sp/>weights<sp/>file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>fopen(file_name,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>mixture<sp/>weights<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>header,<sp/>including<sp/>argument-value<sp/>info<sp/>and<sp/>32-bit<sp/>byteorder<sp/>magic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bio_readhdr(fp,<sp/>&amp;argname,<sp/>&amp;argval,<sp/>&amp;byteswap)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>from<sp/>file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parse<sp/>argument-value<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>chksum_present<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>argname[i];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argname[i],<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argval[i],<sp/>MGAU_MIXW_VERSION)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Version<sp/>mismatch(%s):<sp/>%s,<sp/>expecting<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name,<sp/>argval[i],<sp/>MGAU_MIXW_VERSION);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argname[i],<sp/></highlight><highlight class="stringliteral">&quot;chksum0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chksum_present<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>the<sp/>associated<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>bio_hdrarg_free(argname,<sp/>argval);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>argname<sp/>=<sp/>argval<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>chksum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>#senones,<sp/>#features,<sp/>#codewords,<sp/>arraysize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bio_fread(&amp;n_sen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bio_fread(&amp;n_feat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bio_fread(&amp;n_comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bio_fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;bio_fread(%s)<sp/>(arraysize)<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_feat<sp/>!=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;#Features<sp/>streams(%d)<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n_feat,<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>n_sen<sp/>*<sp/>n_feat<sp/>*<sp/>n_comp)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>#float32s(%d)<sp/>doesn&apos;t<sp/>match<sp/>header<sp/>dimensions:<sp/>%d<sp/>x<sp/>%d<sp/>x<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name,<sp/>i,<sp/>n_sen,<sp/>n_feat,<sp/>n_comp);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>n_sen<sp/>=<sp/>number<sp/>of<sp/>mixture<sp/>weights<sp/>per<sp/>codeword,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>fixed<sp/>at<sp/>the<sp/>number<sp/>of<sp/>senones<sp/>since<sp/>we<sp/>have<sp/>only<sp/>one<sp/>codebook.</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;n_sen<sp/>=<sp/>n_sen;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quantized<sp/>mixture<sp/>weight<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;mixw<sp/>=<sp/>ckd_calloc_3d(n_feat,<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>,<sp/>n_sen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;mixw));</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>structure<sp/>to<sp/>read<sp/>in<sp/>floats<sp/>before<sp/>conversion<sp/>to<sp/>(int32)<sp/>logs3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>pdf<sp/>=<sp/>(float32<sp/>*)<sp/>ckd_calloc(n_comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>senone<sp/>probs<sp/>data,<sp/>normalize,<sp/>floor,<sp/>convert<sp/>to<sp/>logs3,<sp/>truncate<sp/>to<sp/>8<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>n_err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_sen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>n_feat;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bio_fread((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>pdf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32),</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_comp,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=<sp/>n_comp)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;bio_fread(%s)<sp/>(arraydata)<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>and<sp/>floor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector_sum_norm(pdf,<sp/>n_comp)<sp/>&lt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_err++;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_floor(pdf,<sp/>n_comp,<sp/>SmoothMin);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_sum_norm(pdf,<sp/>n_comp);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>LOG,<sp/>quantize,<sp/>and<sp/>transpose<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>n_comp;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>qscr;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qscr<sp/>=<sp/>-logmath_log(s-&gt;lmath_8b,<sp/>pdf[c]);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((qscr<sp/>&gt;<sp/><ref refid="tied__mgau__common_8h_1ad739d757ed78293c18dc2386fd3b750e" kindref="member">MAX_NEG_MIXW</ref>)<sp/>||<sp/>(qscr<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qscr<sp/>=<sp/><ref refid="tied__mgau__common_8h_1ad739d757ed78293c18dc2386fd3b750e" kindref="member">MAX_NEG_MIXW</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw[f][c][i]<sp/>=<sp/>qscr;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_err<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Weight<sp/>normalization<sp/>failed<sp/>for<sp/>%d<sp/>mixture<sp/>weights<sp/>components\n&quot;</highlight><highlight class="normal">,<sp/>n_err);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(pdf);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chksum_present)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bio_verify_chksum(fp,<sp/>byteswap,<sp/>chksum);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;eofchk,<sp/>1,<sp/>1,<sp/>fp)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;More<sp/>data<sp/>than<sp/>expected<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>x<sp/>%d<sp/>x<sp/>%d<sp/>mixture<sp/>weights\n&quot;</highlight><highlight class="normal">,<sp/>n_sen,<sp/>n_feat,<sp/>n_comp);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_sen;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal">split_topn(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str,<sp/>uint8<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfeat)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topn_list<sp/>=<sp/>ckd_salloc(str);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/>*cc;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>maxn;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>topn_list;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>maxn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>nfeat<sp/>&amp;&amp;<sp/>(cc<sp/>=<sp/>strchr(c,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cc<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>atoi(c);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out[i]<sp/>&gt;<sp/>maxn)<sp/>maxn<sp/>=<sp/>out[i];</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cc<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>nfeat<sp/>&amp;&amp;<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>atoi(c);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out[i]<sp/>&gt;<sp/>maxn)<sp/>maxn<sp/>=<sp/>out[i];</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>nfeat)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i++]<sp/>=<sp/>maxn;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(topn_list);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxn;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">s2_semi_mgau_init(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sendump_path;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_feat;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s));</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;config<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;lmath<sp/>=<sp/>logmath_retain(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log-add<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;lmath_8b<sp/>=<sp/>logmath_init(logmath_get_base(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>),<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>,<sp/>TRUE);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;lmath_8b<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>it<sp/>is<sp/>only<sp/>8<sp/>bits<sp/>wide<sp/>so<sp/>that<sp/>fast_logmath_add()<sp/>works.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logmath_get_width(s-&gt;lmath_8b)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Log<sp/>base<sp/>%f<sp/>is<sp/>too<sp/>small<sp/>to<sp/>represent<sp/>add<sp/>table<sp/>in<sp/>8<sp/>bits\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logmath_get_base(s-&gt;lmath_8b));</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>means<sp/>and<sp/>variances.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;g<sp/>=<sp/><ref refid="ms__gauden_8h_1ae4587b0aeb39fd926622a422969ecebc" kindref="member">gauden_init</ref>(cmd_ln_str_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;_mean&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_str_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;_var&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-varfloor&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;lmath))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Currently<sp/>only<sp/>a<sp/>single<sp/>codebook<sp/>is<sp/>supported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;g-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref><sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>n_feat<sp/>=<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>n_feat<sp/>and<sp/>veclen,<sp/>against<sp/>acmod.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_feat<sp/>!=<sp/>feat_dimension1(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>streams<sp/>does<sp/>not<sp/>match:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_feat,<sp/>feat_dimension1(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>));</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_feat;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;g-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[i]<sp/>!=<sp/>feat_dimension2(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Dimension<sp/>of<sp/>stream<sp/>%d<sp/>does<sp/>not<sp/>match:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>s-&gt;g-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[i],<sp/>feat_dimension2(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>i));</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>mixture<sp/>weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sendump_path<sp/>=<sp/>cmd_ln_str_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;_sendump&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_sendump(s,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>sendump_path)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_mixw(s,<sp/>cmd_ln_str_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;_mixw&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-mixwfloor&quot;</highlight><highlight class="normal">))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;ds_ratio<sp/>=<sp/>cmd_ln_int32_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-ds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>top-N<sp/>for<sp/>each<sp/>feature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;topn_beam<sp/>=<sp/>ckd_calloc(n_feat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;topn_beam));</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;max_topn<sp/>=<sp/>cmd_ln_int32_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-topn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>split_topn(cmd_ln_str_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-topn_beam&quot;</highlight><highlight class="normal">),<sp/>s-&gt;topn_beam,<sp/>n_feat);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>top-N:<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>s-&gt;max_topn);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFOCONT(</highlight><highlight class="stringliteral">&quot;Top-N<sp/>beams:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_feat;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFOCONT(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>s-&gt;topn_beam[i]);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFOCONT(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Top-N<sp/>scores<sp/>from<sp/>recent<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a3cbc9fe683da5b7befe6b2712adae327" kindref="member">n_topn_hist</ref><sp/>=<sp/>cmd_ln_int32_r(s-&gt;config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_window&quot;</highlight><highlight class="normal">)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref><sp/>=<sp/>(<ref refid="structvqFeature__s" kindref="compound">vqFeature_t</ref><sp/>***)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_calloc_3d(s-&gt;<ref refid="structs2__semi__mgau__s_1a3cbc9fe683da5b7befe6b2712adae327" kindref="member">n_topn_hist</ref>,<sp/>n_feat,<sp/>s-&gt;max_topn,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>));</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref><sp/>=<sp/>ckd_calloc_2d(s-&gt;<ref refid="structs2__semi__mgau__s_1a3cbc9fe683da5b7befe6b2712adae327" kindref="member">n_topn_hist</ref>,<sp/>n_feat,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>));</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a3cbc9fe683da5b7befe6b2712adae327" kindref="member">n_topn_hist</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_feat;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>[i][j][k].score<sp/>=<sp/>WORST_DIST;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>[i][j][k].codeword<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*)s;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>ps-&gt;<ref refid="structps__mgau__s_1a931f7cbf334b8ed50b0e1c2803a10c67" kindref="member">vt</ref><sp/>=<sp/>&amp;s2_semi_mgau_funcs;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ps;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>s2_semi_mgau_free(ps_mgau_base(s));</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal">s2_semi_mgau_mllr_transform(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s<sp/>=<sp/>(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*)ps;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ms__gauden_8h_1ab640722f2c2b1e8bc6e883d9b5b72494" kindref="member">gauden_mllr_transform</ref>(s-&gt;g,<sp/>mllr,<sp/>s-&gt;config);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal">s2_semi_mgau_free(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*s<sp/>=<sp/>(<ref refid="structs2__semi__mgau__s" kindref="compound">s2_semi_mgau_t</ref><sp/>*)ps;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>logmath_free(s-&gt;lmath);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>logmath_free(s-&gt;lmath_8b);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sendump_mmap)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(s-&gt;mixw);<sp/></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmio_file_unmap(s-&gt;sendump_mmap);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_3d(s-&gt;mixw);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;mixw_cb)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(s-&gt;mixw_cb);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ms__gauden_8h_1a0306e088fa33894ca40182d2392ffe4d" kindref="member">gauden_free</ref>(s-&gt;g);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(s-&gt;topn_beam);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free_2d(s-&gt;<ref refid="structs2__semi__mgau__s_1acfe1e5d43a25418ef19afba837f85cf7" kindref="member">topn_hist_n</ref>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free_3d((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)s-&gt;<ref refid="structs2__semi__mgau__s_1a8892e22acbf81b08972cb6d7968ed4ce" kindref="member">topn_hist</ref>);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(s);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/s2_semi_mgau.c"/>
  </compounddef>
</doxygen>
