<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="hmm_8c" kind="file">
    <compoundname>hmm.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes refid="hmm_8h" local="yes">hmm.h</includes>
    <incdepgraph>
      <node id="909">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="894">
        <label>assert.h</label>
      </node>
      <node id="906">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="908">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
      </node>
      <node id="907">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="895">
        <label>stdlib.h</label>
      </node>
      <node id="902">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="905">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="898">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="903">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="897">
        <label>limits.h</label>
      </node>
      <node id="896">
        <label>string.h</label>
      </node>
      <node id="899">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="904">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
      </node>
      <node id="893">
        <label>src/libpocketsphinx/hmm.c</label>
        <link refid="hmm.c"/>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
      </node>
      <node id="900">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
      </node>
      <node id="901">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hmm_8c_1a907b141a9f20b6e218087ec1e6699eaf" prot="public" static="no">
        <name>hmm_tprob_5st</name>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <initializer>(-tp[(i)*6+(j)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="221" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hmm_8c_1a3ea4168ad7b2f8ea4c213a4eb327a6ab" prot="public" static="no">
        <name>nonmpx_senscr</name>
        <param><defname>i</defname></param>
        <initializer>(-senscore[sseq[i]])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="222" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hmm_8c_1a660901cb75c80f767a8035bee82fdff0" prot="public" static="no">
        <name>mpx_senid</name>
        <param><defname>st</defname></param>
        <initializer>sseq[ssid[st]][st]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="354" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hmm_8c_1a16f409eed8a8992578951fea185ad9f0" prot="public" static="no">
        <name>mpx_senscr</name>
        <param><defname>st</defname></param>
        <initializer>(-senscore[mpx_senid(st)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="355" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hmm_8c_1aff2b8067daf9f3c419f3ab22668863c6" prot="public" static="no">
        <name>hmm_tprob_3st</name>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <initializer>(-tp[(i)*4+(j)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="529" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="529" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hmm_8c_1a4d6e2799cbe290112e8517adcab1b038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref> *</type>
        <definition>hmm_context_t* hmm_context_init</definition>
        <argsstring>(int32 n_emit_state, uint8 **const *tp, int16 const *senscore, uint16 *const *sseq)</argsstring>
        <name>hmm_context_init</name>
        <param>
          <type>int32</type>
          <declname>n_emit_state</declname>
        </param>
        <param>
          <type>uint8 **const *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>senscore</declname>
        </param>
        <param>
          <type>uint16 *const *</type>
          <declname>sseq</declname>
        </param>
        <briefdescription>
<para>Create an HMM context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="56" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="56" bodyend="77"/>
        <references refid="hmm_8h_1a1eb055ab0e55008f27d78e7b07a55a1c" compoundref="hmm_8h" startline="160">HMM_MAX_NSTATE</references>
        <referencedby refid="ngram__search_8h_1a04f80b377c847026254fb85596e2f43c" compoundref="ngram__search_8c" startline="140" endline="237">ngram_search_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1ab66534ad7970d49527f1b2a1e76bb05e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_context_free</definition>
        <argsstring>(hmm_context_t *ctx)</argsstring>
        <name>hmm_context_free</name>
        <param>
          <type><ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Free an HMM context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The transition matrices, senone scores, and senone sequence mapping are all assumed to be allocated externally, and will NOT be freed by this function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="80" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="80" bodyend="86"/>
        <referencedby refid="ngram__search_8h_1a9bafaa4af5a9a4f9e76a8daf54ac4a11" compoundref="ngram__search_8c" startline="289" endline="326">ngram_search_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1aa911ae0d1c0eba562692fbeebca90d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_init</definition>
        <argsstring>(hmm_context_t *ctx, hmm_t *hmm, int mpx, int ssid, int tmatid)</argsstring>
        <name>hmm_init</name>
        <param>
          <type><ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mpx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tmatid</declname>
        </param>
        <briefdescription>
<para>Populate a previously-allocated HMM structure, allocating internal data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="89" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="89" bodyend="108"/>
        <references refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" compoundref="bin__mdef_8h" startline="94">BAD_SSID</references>
        <references refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" compoundref="hmm_8c" startline="183" endline="198">hmm_clear</references>
        <referencedby refid="ngram__search_8h_1a1ddcc1a9cb3e164ceb2140097ed23a3e" compoundref="ngram__search_8c" startline="601" endline="647">ngram_search_alloc_all_rc</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a7440ced1649225beb6816bf62481e08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_deinit</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_deinit</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
<para>Free an HMM structure, releasing internal data (but not the HMM structure itself). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="111" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="111" bodyend="113"/>
        <referencedby refid="ngram__search_8h_1a15477192481dffcb29e9c4167eff6c3c" compoundref="ngram__search_8c" startline="650" endline="660">ngram_search_free_all_rc</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a5f516c5c0c67db2beb4cfa656804da27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_dump</definition>
        <argsstring>(hmm_t *hmm, FILE *fp)</argsstring>
        <name>hmm_dump</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
          <briefdescription><para>In/Out: HMM being updated </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
          <briefdescription><para>An output file pointer </para></briefdescription>
        </param>
        <briefdescription>
<para>For debugging, dump the whole HMM out. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="116" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="116" bodyend="166"/>
        <referencedby refid="hmm_8h_1a84947383bf7940f799918c37ece85cf0" compoundref="hmm_8c" startline="810" endline="825">hmm_dump_vit_eval</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a9561d7ffa1e61c99de2d2b900774152f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_clear_scores</definition>
        <argsstring>(hmm_t *h)</argsstring>
        <name>hmm_clear_scores</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Reset the scores of the HMM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="170" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="170" bodyend="180"/>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1af4c0cefb23087a0b1731b34048cfdaf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_clear</definition>
        <argsstring>(hmm_t *h)</argsstring>
        <name>hmm_clear</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Reset the states of the HMM to the invalid condition. </para>        </briefdescription>
        <detaileddescription>
<para>i.e., scores to WORST_SCORE and hist to undefined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="183" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="183" bodyend="198"/>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
        <referencedby refid="fsg__lextree_8c_1a6dc55ff3873855fb7b2c0390aa072516" compoundref="fsg__lextree_8c" startline="832" endline="835">fsg_psubtree_pnode_deactivate</referencedby>
        <referencedby refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" compoundref="hmm_8c" startline="89" endline="108">hmm_init</referencedby>
        <referencedby refid="ngram__search__fwdflat_8h_1a763c2c7aaa5d7f9c5107af73552a2149" compoundref="ngram__search__fwdflat_8c" startline="374" endline="417">ngram_fwdflat_start</referencedby>
        <referencedby refid="ngram__search__fwdtree_8h_1af736200cd01a5d743dbab447ecc85d08" compoundref="ngram__search__fwdtree_8c" startline="474" endline="524">ngram_fwdtree_start</referencedby>
        <referencedby refid="ngram__search__fwdtree_8h_1af32a83dbb9187542577a0c500b000840" compoundref="ngram__search__fwdtree_8c" startline="1502" endline="1573">ngram_fwdtree_finish</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a7285d01d533996d750c78e0d96042716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_enter</definition>
        <argsstring>(hmm_t *h, int32 score, int32 histid, int frame)</argsstring>
        <name>hmm_enter</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>score</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>histid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Enter an HMM with the given path score and history ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="201" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="201" bodyend="206"/>
        <referencedby refid="ngram__search__fwdflat_8h_1a763c2c7aaa5d7f9c5107af73552a2149" compoundref="ngram__search__fwdflat_8c" startline="374" endline="417">ngram_fwdflat_start</referencedby>
        <referencedby refid="ngram__search__fwdtree_8h_1af736200cd01a5d743dbab447ecc85d08" compoundref="ngram__search__fwdtree_8c" startline="474" endline="524">ngram_fwdtree_start</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a0438bc7672ff9200274ffe7b5051eb92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmm_normalize</definition>
        <argsstring>(hmm_t *h, int32 bestscr)</argsstring>
        <name>hmm_normalize</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>bestscr</declname>
        </param>
        <briefdescription>
<para>Renormalize the scores in this HMM based on the given best score. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="209" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="209" bodyend="219"/>
        <references refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" compoundref="hmm_8h" startline="95">BETTER_THAN</references>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1aa74e3ade1c3c455b460311bf7be14a4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 hmm_vit_eval_5st_lr</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_vit_eval_5st_lr</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="225" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="225" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a94c99b9355865e8318dbea934d206760" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 hmm_vit_eval_5st_lr_mpx</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_vit_eval_5st_lr_mpx</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="358" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="358" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1aeba1c896be41fa76118983fdf5a4f6a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 hmm_vit_eval_3st_lr</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_vit_eval_3st_lr</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="532" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="532" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a262d0d08732e935b55265dea8abb93d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 hmm_vit_eval_3st_lr_mpx</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_vit_eval_3st_lr_mpx</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="612" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="612" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a2f52f7fbe4331696cc0fe6b490ddfe00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 hmm_vit_eval_anytopo</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_vit_eval_anytopo</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="712" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="712" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a24ed030b10cb07e12173b45d3800db4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 hmm_vit_eval</definition>
        <argsstring>(hmm_t *hmm)</argsstring>
        <name>hmm_vit_eval</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
<para>Viterbi evaluation of given HMM. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If this module were being used for tracking state segmentations, the dummy, non-emitting exit state would have to be updated separately. In the Viterbi DP diagram, transitions to the exit state occur from the current time; they are vertical transitions. Hence they should be made only after the history has been logged for the emitting states. But we&apos;re not bothered with state segmentations, for now. So, we update the exit state as well. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="789" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="789" bodyend="807"/>
        <referencedby refid="hmm_8h_1a84947383bf7940f799918c37ece85cf0" compoundref="hmm_8c" startline="810" endline="825">hmm_dump_vit_eval</referencedby>
      </memberdef>
      <memberdef kind="function" id="hmm_8c_1a84947383bf7940f799918c37ece85cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 hmm_dump_vit_eval</definition>
        <argsstring>(hmm_t *hmm, FILE *fp)</argsstring>
        <name>hmm_dump_vit_eval</name>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
          <briefdescription><para>In/Out: HMM being updated </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
          <briefdescription><para>An output file pointer </para></briefdescription>
        </param>
        <briefdescription>
<para>Like hmm_vit_eval, but dump HMM state and relevant senscr to fp first, for debugging;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" line="810" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c" bodystart="810" bodyend="825"/>
        <references refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" compoundref="hmm_8c" startline="116" endline="166">hmm_dump</references>
        <references refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" compoundref="hmm_8c" startline="789" endline="807">hmm_vit_eval</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hmm_8h" kindref="compound">hmm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref><sp/>*</highlight></codeline>
<codeline lineno="56" refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" kindref="member">hmm_context_init</ref>(int32<sp/>n_emit_state,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>**<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*tp,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscore,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sseq)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref><sp/>*ctx;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(n_emit_state<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_emit_state<sp/>&gt;<sp/><ref refid="hmm_8h_1a1eb055ab0e55008f27d78e7b07a55a1c" kindref="member">HMM_MAX_NSTATE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>emitting<sp/>states<sp/>must<sp/>be<sp/>&lt;=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hmm_8h_1a1eb055ab0e55008f27d78e7b07a55a1c" kindref="member">HMM_MAX_NSTATE</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ctx));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;n_emit_state<sp/>=<sp/>n_emit_state;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;tp<sp/>=<sp/>tp;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;senscore<sp/>=<sp/>senscore;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;sseq<sp/>=<sp/>sseq;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;st_sen_scr<sp/>=<sp/>ckd_calloc(n_emit_state,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ctx-&gt;st_sen_scr));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(<ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref><sp/>*ctx)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ctx-&gt;st_sen_scr);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ctx);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(<ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref><sp/>*ctx,<sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ssid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmatid)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;ctx<sp/>=<sp/>ctx;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;mpx<sp/>=<sp/>mpx;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;n_emit_state<sp/>=<sp/>ctx-&gt;n_emit_state;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpx)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;ssid<sp/>=<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;senid[0]<sp/>=<sp/>ssid;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;senid[i]<sp/>=<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;ssid<sp/>=<sp/>ssid;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(hmm-&gt;senid,<sp/>ctx-&gt;sseq[ssid],<sp/>hmm-&gt;n_emit_state<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*hmm-&gt;senid));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm-&gt;tmatid<sp/>=<sp/>tmatid;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(hmm);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" kindref="member">hmm_dump</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>fp)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_mpx(hmm))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;MPX<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>i++)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_senid(hmm,<sp/>i));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>i++)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>hmm_ssid(hmm,<sp/>i));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;SSID<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>i++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_senid(hmm,<sp/>i));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>hmm_ssid(hmm,<sp/>0));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm-&gt;ctx-&gt;senscore)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;SENSCR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>i++)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_senscr(hmm,<sp/>i));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;SCORES<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_in_score(hmm));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>i++)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_score(hmm,<sp/>i));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_out_score(hmm));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;HISTID<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_in_history(hmm));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>i++)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_history(hmm,<sp/>i));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%11d&quot;</highlight><highlight class="normal">,<sp/>hmm_out_history(hmm));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_in_score(hmm)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ALERT!!<sp/>The<sp/>input<sp/>score<sp/>%d<sp/>is<sp/>large<sp/>than<sp/>0.<sp/>Probably<sp/>wrap<sp/>around.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(hmm));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(hmm)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ALERT!!<sp/>The<sp/>output<sp/>score<sp/>%d<sp/>is<sp/>large<sp/>than<sp/>0.<sp/>Probably<sp/>wrap<sp/>around\n.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(hmm));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(fp);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="hmm_8h_1a9561d7ffa1e61c99de2d2b900774152f" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a9561d7ffa1e61c99de2d2b900774152f" kindref="member">hmm_clear_scores</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>h)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(h)<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(h);<sp/>i++)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(h,<sp/>i)<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_out_score(h)<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>h)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(h)<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_history(h)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(h);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(h,<sp/>i)<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(h,<sp/>i)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_out_score(h)<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_out_history(h)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;frame<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*h,<sp/>int32<sp/>score,<sp/>int32<sp/>histid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(h)<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_history(h)<sp/>=<sp/>histid;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_frame(h)<sp/>=<sp/>frame;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*h,<sp/>int32<sp/>bestscr)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(h);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_score(h,<sp/>i)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(h,<sp/>i)<sp/>-=<sp/>bestscr;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(h)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(h)<sp/>-=<sp/>bestscr;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmm_tprob_5st(i,<sp/>j)<sp/>(-tp[(i)*6+(j)])</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>nonmpx_senscr(i)<sp/>(-senscore[sseq[i]])</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="225"><highlight class="normal">hmm_vit_eval_5st_lr(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscore<sp/>=<sp/>hmm-&gt;ctx-&gt;senscore;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*tp<sp/>=<sp/>hmm-&gt;ctx-&gt;tp[hmm-&gt;tmatid][0];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sseq<sp/>=<sp/>hmm-&gt;senid;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>s5,<sp/>s4,<sp/>s3,<sp/>s2,<sp/>s1,<sp/>s0,<sp/>t2,<sp/>t1,<sp/>t0,<sp/>bestScore;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>was<sp/>the<sp/>best<sp/>of<sp/>scores,<sp/>it<sp/>was<sp/>the<sp/>worst<sp/>of<sp/>scores.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cache<sp/>problem<sp/>here!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>hmm_score(hmm,<sp/>4)<sp/>+<sp/>nonmpx_senscr(4);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>hmm_score(hmm,<sp/>3)<sp/>+<sp/>nonmpx_senscr(3);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transitions<sp/>into<sp/>non-emitting<sp/>state<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s4<sp/>+<sp/>hmm_tprob_5st(4,<sp/>5);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s3<sp/>+<sp/>hmm_tprob_5st(3,<sp/>5);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s5<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>4);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s5<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>3);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s5<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s5<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(hmm)<sp/>=<sp/>s5;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>s5;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>hmm_score(hmm,<sp/>2)<sp/>+<sp/>nonmpx_senscr(2);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>WORST_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s4<sp/>+<sp/>hmm_tprob_5st(4,<sp/>4);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s3<sp/>+<sp/>hmm_tprob_5st(3,<sp/>4);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_5st(2,<sp/>4);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>4)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>4)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>4)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>3);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s4<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s4<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s4<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s4;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>4)<sp/>=<sp/>s4;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>hmm_score(hmm,<sp/>1)<sp/>+<sp/>nonmpx_senscr(1);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>WORST_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s3<sp/>+<sp/>hmm_tprob_5st(3,<sp/>3);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_5st(2,<sp/>3);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_5st(1,<sp/>3);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>3)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>3)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>3)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s3<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>3)<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>hmm_in_score(hmm)<sp/>+<sp/>nonmpx_senscr(0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>2<sp/>(state<sp/>0<sp/>is<sp/>always<sp/>active)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_5st(2,<sp/>2);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_5st(1,<sp/>2);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_5st(0,<sp/>2);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/><sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/><sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>2)<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_5st(1,<sp/>1);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_5st(0,<sp/>1);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>1)<sp/><sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>1)<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_5st(0,<sp/>0);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s0<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(hmm)<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_bestscore(hmm)<sp/>=<sp/>bestScore;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestScore;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mpx_senid(st)<sp/>sseq[ssid[st]][st]</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>mpx_senscr(st)<sp/>(-senscore[mpx_senid(st)])</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="358"><highlight class="normal">hmm_vit_eval_5st_lr_mpx(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*tp<sp/>=<sp/>hmm-&gt;ctx-&gt;tp[hmm-&gt;tmatid][0];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscore<sp/>=<sp/>hmm-&gt;ctx-&gt;senscore;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sseq<sp/>=<sp/>hmm-&gt;ctx-&gt;sseq;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>*ssid<sp/>=<sp/>hmm-&gt;senid;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestScore;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>s5,<sp/>s4,<sp/>s3,<sp/>s2,<sp/>s1,<sp/>s0,<sp/>t2,<sp/>t1,<sp/>t0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid[4]<sp/>==<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>hmm_score(hmm,<sp/>4)<sp/>+<sp/>mpx_senscr(4);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s4<sp/>+<sp/>hmm_tprob_5st(4,<sp/>5);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid[3]<sp/>==<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>hmm_score(hmm,<sp/>3)<sp/>+<sp/>mpx_senscr(3);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s3<sp/>+<sp/>hmm_tprob_5st(3,<sp/>5);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s5<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/>=<sp/>hmm_history(hmm,<sp/>4);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s5<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/>=<sp/>hmm_history(hmm,<sp/>3);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s5<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s5<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_out_score(hmm)<sp/>=<sp/>s5;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>s5;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid[2]<sp/>==<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>hmm_score(hmm,<sp/>2)<sp/>+<sp/>mpx_senscr(2);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_5st(2,<sp/>4);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s4<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s4<sp/>+<sp/>hmm_tprob_5st(4,<sp/>4);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s3<sp/>+<sp/>hmm_tprob_5st(3,<sp/>4);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>4)<sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[4]<sp/>=<sp/>ssid[2];</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>4)<sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[4]<sp/>=<sp/>ssid[2];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s4<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>4)<sp/>=<sp/>hmm_history(hmm,<sp/>3);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[4]<sp/>=<sp/>ssid[3];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s4<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s4<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s4<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>s4;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>4)<sp/>=<sp/>s4;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid[1]<sp/>==<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>hmm_score(hmm,<sp/>1)<sp/>+<sp/>mpx_senscr(1);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_5st(1,<sp/>3);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s3<sp/>+<sp/>hmm_tprob_5st(3,<sp/>3);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_5st(2,<sp/>3);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>3)<sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[3]<sp/>=<sp/>ssid[1];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>3)<sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[3]<sp/>=<sp/>ssid[1];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>3)<sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[3]<sp/>=<sp/>ssid[2];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s3<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>3)<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>0<sp/>is<sp/>always<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>hmm_in_score(hmm)<sp/>+<sp/>mpx_senscr(0);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_5st(2,<sp/>2);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_5st(1,<sp/>2);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_5st(0,<sp/>2);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[2]<sp/>=<sp/>ssid[0];</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[2]<sp/>=<sp/>ssid[0];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[2]<sp/>=<sp/>ssid[1];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>2)<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_5st(1,<sp/>1);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_5st(0,<sp/>1);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>1)<sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[1]<sp/>=<sp/>ssid[0];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>1)<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>+=<sp/>hmm_tprob_5st(0,<sp/>0);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s0<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(hmm)<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_bestscore(hmm)<sp/>=<sp/>bestScore;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestScore;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmm_tprob_3st(i,<sp/>j)<sp/>(-tp[(i)*4+(j)])</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="532"><highlight class="normal">hmm_vit_eval_3st_lr(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscore<sp/>=<sp/>hmm-&gt;ctx-&gt;senscore;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*tp<sp/>=<sp/>hmm-&gt;ctx-&gt;tp[hmm-&gt;tmatid][0];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sseq<sp/>=<sp/>hmm-&gt;senid;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>s3,<sp/>s2,<sp/>s1,<sp/>s0,<sp/>t2,<sp/>t1,<sp/>t0,<sp/>bestScore;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>hmm_score(hmm,<sp/>2)<sp/>+<sp/>nonmpx_senscr(2);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>hmm_score(hmm,<sp/>1)<sp/>+<sp/>nonmpx_senscr(1);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>hmm_in_score(hmm)<sp/>+<sp/>nonmpx_senscr(0);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>was<sp/>the<sp/>best<sp/>of<sp/>scores,<sp/>it<sp/>was<sp/>the<sp/>worst<sp/>of<sp/>scores.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>INT_MIN;<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>used<sp/>unless<sp/>skipstate<sp/>is<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transitions<sp/>into<sp/>non-emitting<sp/>state<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>WORST_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_3st(2,<sp/>3);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_tprob_3st(1,3)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a9b38399b544dbb93bc9b7d0094e91db7" kindref="member">TMAT_WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_3st(1,<sp/>3);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s3<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(hmm)<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>2<sp/>(state<sp/>0<sp/>is<sp/>always<sp/>active)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_3st(2,<sp/>2);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_3st(1,<sp/>2);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_tprob_3st(0,<sp/>2)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>TMAT_WORST_SCORE)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_3st(0,<sp/>2);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/><sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/><sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/><sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>2)<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_3st(1,<sp/>1);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_3st(0,<sp/>1);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>1)<sp/><sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>1)<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>transitions<sp/>into<sp/>state<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_3st(0,<sp/>0);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s0<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(hmm)<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_bestscore(hmm)<sp/>=<sp/>bestScore;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestScore;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="612"><highlight class="normal">hmm_vit_eval_3st_lr_mpx(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*tp<sp/>=<sp/>hmm-&gt;ctx-&gt;tp[hmm-&gt;tmatid][0];</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscore<sp/>=<sp/>hmm-&gt;ctx-&gt;senscore;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sseq<sp/>=<sp/>hmm-&gt;ctx-&gt;sseq;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>*ssid<sp/>=<sp/>hmm-&gt;senid;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestScore;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>s3,<sp/>s2,<sp/>s1,<sp/>s0,<sp/>t2,<sp/>t1,<sp/>t0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>INT_MIN;<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>used<sp/>unless<sp/>skipstate<sp/>is<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid[2]<sp/>==<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>hmm_score(hmm,<sp/>2)<sp/>+<sp/>mpx_senscr(2);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_3st(2,<sp/>3);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid[1]<sp/>==<sp/><ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>hmm_score(hmm,<sp/>1)<sp/>+<sp/>mpx_senscr(1);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_tprob_3st(1,3)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>TMAT_WORST_SCORE)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_3st(1,<sp/>3);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/>=<sp/>hmm_history(hmm,<sp/>2);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s3<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_out_score(hmm)<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>0<sp/>is<sp/>always<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>hmm_in_score(hmm)<sp/>+<sp/>mpx_senscr(0);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s2<sp/>+<sp/>hmm_tprob_3st(2,<sp/>2);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_3st(1,<sp/>2);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_tprob_3st(0,2)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>TMAT_WORST_SCORE)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_3st(0,<sp/>2);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[2]<sp/>=<sp/>ssid[0];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[2]<sp/>=<sp/>ssid[0];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>2)<sp/>=<sp/>hmm_history(hmm,<sp/>1);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[2]<sp/>=<sp/>ssid[1];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s2<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>2)<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>propagate<sp/>WORST_SCORE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>!=<sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>s1<sp/>+<sp/>hmm_tprob_3st(1,<sp/>1);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>s0<sp/>+<sp/>hmm_tprob_3st(0,<sp/>1);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>1)<sp/>=<sp/>hmm_in_history(hmm);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid[1]<sp/>=<sp/>ssid[0];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s1<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>1)<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>0<sp/>is<sp/>always<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>+=<sp/>hmm_tprob_3st(0,<sp/>0);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>s0<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestScore)<sp/>bestScore<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_in_score(hmm)<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_bestscore(hmm)<sp/>=<sp/>bestScore;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestScore;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="712"><highlight class="normal">hmm_vit_eval_anytopo(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__context__t" kindref="compound">hmm_context_t</ref><sp/>*ctx<sp/>=<sp/>hmm-&gt;ctx;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>to,<sp/>from,<sp/>bestfrom;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>newscr,<sp/>scr,<sp/>bestscr;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>final_state;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>previous<sp/>state-score<sp/>+<sp/>observation<sp/>output<sp/>prob<sp/>for<sp/>each<sp/>emitting<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;st_sen_scr[0]<sp/>=<sp/>hmm_in_score(hmm)<sp/>+<sp/>hmm_senscr(hmm,<sp/>0);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(from<sp/>=<sp/>1;<sp/>from<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>++from)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ctx-&gt;st_sen_scr[from]<sp/>=</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>from)<sp/>+<sp/>hmm_senscr(hmm,<sp/>from))<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;st_sen_scr[from]<sp/>=<sp/>WORST_SCORE;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME/TODO:<sp/>Use<sp/>the<sp/>BLAS<sp/>for<sp/>all<sp/>this.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>final-state<sp/>first,<sp/>which<sp/>does<sp/>not<sp/>have<sp/>a<sp/>self-transition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>final_state<sp/>=<sp/>hmm_n_emit_state(hmm);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>to<sp/>=<sp/>final_state;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>scr<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>bestfrom<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(from<sp/>=<sp/>to<sp/>-<sp/>1;<sp/>from<sp/>&gt;=<sp/>0;<sp/>--from)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_tprob(hmm,<sp/>from,<sp/>to)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>TMAT_WORST_SCORE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((newscr<sp/>=<sp/>ctx-&gt;st_sen_scr[from]</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>hmm_tprob(hmm,<sp/>from,<sp/>to))<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>scr))<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scr<sp/>=<sp/>newscr;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestfrom<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_out_score(hmm)<sp/>=<sp/>scr;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestfrom<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm)<sp/>=<sp/>hmm_history(hmm,<sp/>bestfrom);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscr<sp/>=<sp/>scr;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>all<sp/>other<sp/>states,<sp/>which<sp/>might<sp/>have<sp/>self-transitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(to<sp/>=<sp/>final_state<sp/>-<sp/>1;<sp/>to<sp/>&gt;=<sp/>0;<sp/>--to)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Score<sp/>from<sp/>self-transition,<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scr<sp/>=</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hmm_tprob(hmm,<sp/>to,<sp/>to)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>TMAT_WORST_SCORE)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ctx-&gt;st_sen_scr[to]<sp/>+<sp/>hmm_tprob(hmm,<sp/>to,<sp/>to)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>WORST_SCORE;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scores<sp/>from<sp/>transitions<sp/>from<sp/>other<sp/>states<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestfrom<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(from<sp/>=<sp/>to<sp/>-<sp/>1;<sp/>from<sp/>&gt;=<sp/>0;<sp/>--from)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_tprob(hmm,<sp/>from,<sp/>to)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>TMAT_WORST_SCORE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((newscr<sp/>=<sp/>ctx-&gt;st_sen_scr[from]</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>hmm_tprob(hmm,<sp/>from,<sp/>to))<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>scr))<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scr<sp/>=<sp/>newscr;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestfrom<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>new<sp/>result<sp/>for<sp/>state<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(hmm)<sp/>=<sp/>scr;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestfrom<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_history(hmm)<sp/>=<sp/>hmm_history(hmm,<sp/>bestfrom);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_score(hmm,<sp/>to)<sp/>=<sp/>scr;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestfrom<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_history(hmm,<sp/>to)<sp/>=<sp/>hmm_history(hmm,<sp/>bestfrom);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Propagate<sp/>ssid<sp/>for<sp/>multiplex<sp/>HMMs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestfrom<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>hmm_is_mpx(hmm))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;senid[to]<sp/>=<sp/>hmm-&gt;senid[bestfrom];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bestscr<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>scr)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscr<sp/>=<sp/>scr;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm_bestscore(hmm)<sp/>=<sp/>bestscr;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestscr;</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="789" refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_mpx(hmm))<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_n_emit_state(hmm)<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmm_vit_eval_5st_lr_mpx(hmm);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_n_emit_state(hmm)<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmm_vit_eval_3st_lr_mpx(hmm);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmm_vit_eval_anytopo(hmm);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_n_emit_state(hmm)<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmm_vit_eval_5st_lr(hmm);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_n_emit_state(hmm)<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmm_vit_eval_3st_lr(hmm);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmm_vit_eval_anytopo(hmm);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="810" refid="hmm_8h_1a84947383bf7940f799918c37ece85cf0" refkind="member"><highlight class="normal"><ref refid="hmm_8h_1a84947383bf7940f799918c37ece85cf0" kindref="member">hmm_dump_vit_eval</ref>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*<sp/>hmm,<sp/>FILE<sp/>*<sp/>fp)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;BEFORE:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" kindref="member">hmm_dump</ref>(hmm,<sp/>fp);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>bs<sp/>=<sp/><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(hmm);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;AFTER:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" kindref="member">hmm_dump</ref>(hmm,<sp/>fp);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bs;</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/hmm.c"/>
  </compounddef>
</doxygen>
