<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="kws__search_8c" kind="file">
    <compoundname>kws_search.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/strfuncs.h</includes>
    <includes local="no">sphinxbase/pio.h</includes>
    <includes local="no">sphinxbase/cmd_ln.h</includes>
    <includes refid="pocketsphinx__internal_8h" local="yes">pocketsphinx_internal.h</includes>
    <includes refid="kws__search_8h" local="yes">kws_search.h</includes>
    <incdepgraph>
      <node id="1062">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="1054">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1075">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>assert.h</label>
      </node>
      <node id="1042">
        <label>src/libpocketsphinx/kws_search.c</label>
        <link refid="kws_search.c"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1077">
        <label>float.h</label>
      </node>
      <node id="1079">
        <label>kws_search.h</label>
        <link refid="kws__search_8h_source"/>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
      </node>
      <node id="1059">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
      </node>
      <node id="1050">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1070">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
      </node>
      <node id="1058">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1052">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1073">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1069">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1081">
        <label>kws_detections.h</label>
        <link refid="kws__detections_8h_source"/>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
      </node>
      <node id="1047">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1074">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1049">
        <label>sphinxbase/pio.h</label>
      </node>
      <node id="1051">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
      </node>
      <node id="1071">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
      </node>
      <node id="1053">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1057">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
      <node id="1044">
        <label>string.h</label>
      </node>
      <node id="1061">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1066">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
      </node>
      <node id="1067">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1064">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
      </node>
      <node id="1048">
        <label>sphinxbase/strfuncs.h</label>
      </node>
      <node id="1046">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1065">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="1063">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
      </node>
      <node id="1060">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
      </node>
      <node id="1078">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
      </node>
      <node id="1068">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1055">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1076">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
      <node id="1072">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
      <node id="1056">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="1043">
        <label>stdio.h</label>
      </node>
      <node id="1080">
        <label>sphinxbase/glist.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="kws__search_8c_1a7d06275982b40e13177ed2ff7b74326a" prot="public" static="no">
        <name>hmm_is_active</name>
        <param><defname>hmm</defname></param>
        <initializer>((hmm)-&gt;frame &gt; 0)</initializer>
        <briefdescription>
<para>Access macros. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="53" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kws__search_8c_1a42caffa3cd956960ad7450294e02544e" prot="public" static="no">
        <name>kws_nth_hmm</name>
        <param><defname>keyword</defname></param>
        <param><defname>n</defname></param>
        <initializer>(&amp;((keyword)-&gt;hmms[n]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="54" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kws__search_8c_1a080a48f2a403d152a36784edfed99dfb" prot="public" static="yes" mutable="no">
        <type><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref></type>
        <definition>ps_segfuncs_t kws_segfuncs</definition>
        <argsstring></argsstring>
        <name>kws_segfuncs</name>
        <initializer>= {
     kws_seg_next,
     kws_seg_free
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="108" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kws__search_8c_1a68651ec52821560df2ace3b685b9cec4" prot="public" static="yes" mutable="no">
        <type><ref refid="pocketsphinx__internal_8h_1a0eae078e32bd5f339792884c68aad8b3" kindref="member">ps_searchfuncs_t</ref></type>
        <definition>ps_searchfuncs_t kws_funcs</definition>
        <argsstring></argsstring>
        <name>kws_funcs</name>
        <initializer>= {
     kws_search_start,
     kws_search_step,
     kws_search_finish,
     kws_search_reinit,
     kws_search_free,
     kws_search_lattice,
     kws_search_hyp,
     kws_search_prob,
     kws_search_seg_iter,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="136" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="kws__search_8c_1a99ec702db1d4706565268f0d28bb3ec5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
        <definition>static ps_lattice_t* kws_search_lattice</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_lattice</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="57" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a772032cc489a4c136dddc74e81752824" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int kws_search_prob</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_prob</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="63" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1aedc5c220ce30bd83814a394e33584d48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kws_seg_free</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>kws_seg_free</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="69" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a941e50e2a2524386d550756f3b4190b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kws_seg_fill</definition>
        <argsstring>(kws_seg_t *itor)</argsstring>
        <name>kws_seg_fill</name>
        <param>
          <type><ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="76" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="76" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a973e1b31bcc3c9a7645065eeadadbe05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* kws_seg_next</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>kws_seg_next</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="89" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="89" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a1332b334ca4c711a2da45d29ecbf0bc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* kws_search_seg_iter</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_seg_iter</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="114" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="114" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a3f2718803828bec539497c8fd425f5bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int kws_search_check_dict</definition>
        <argsstring>(kws_search_t *kwss)</argsstring>
        <name>kws_search_check_dict</name>
        <param>
          <type><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref> *</type>
          <declname>kwss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="150" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="150" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1ae7f337bae8ea9c211e1683bbfd2bfa5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kws_search_sen_active</definition>
        <argsstring>(kws_search_t *kwss)</argsstring>
        <name>kws_search_sen_active</name>
        <param>
          <type><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref> *</type>
          <declname>kwss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="184" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="184" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a624d4e218113097e3cec83af9061571a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kws_search_hmm_eval</definition>
        <argsstring>(kws_search_t *kwss, int16 const *senscr)</argsstring>
        <name>kws_search_hmm_eval</name>
        <param>
          <type><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref> *</type>
          <declname>kwss</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>senscr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="209" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="209" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1aedacd8370c96af3eaade13691b319acb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kws_search_hmm_prune</definition>
        <argsstring>(kws_search_t *kwss)</argsstring>
        <name>kws_search_hmm_prune</name>
        <param>
          <type><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref> *</type>
          <declname>kwss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="248" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="248" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a1c07d28673d7a8fbf7ed8aec3eb31ac9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kws_search_trans</definition>
        <argsstring>(kws_search_t *kwss)</argsstring>
        <name>kws_search_trans</name>
        <param>
          <type><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref> *</type>
          <declname>kwss</declname>
        </param>
        <briefdescription>
<para>Do phone transitions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="269" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="269" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1aee3334eabd36075c7141518dde5f733c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int kws_search_read_list</definition>
        <argsstring>(kws_search_t *kwss, const char *keyfile)</argsstring>
        <name>kws_search_read_list</name>
        <param>
          <type><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref> *</type>
          <declname>kwss</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="343" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="343" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a9e99d3ca839c280cb65f89eb6bfe813b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
        <definition>ps_search_t* kws_search_init</definition>
        <argsstring>(const char *name, const char *keyphrase, const char *keyfile, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>kws_search_init</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyphrase</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyfile</declname>
        </param>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Create, initialize and return a search module. </para>        </briefdescription>
        <detaileddescription>
<para>Gets keywords either from keyphrase or from a keyphrase file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="388" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="388" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1af23b055fdf85644155c36ff02baadce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kws_search_free</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_free</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Deallocate search structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="455" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="455" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a8d071886770b76827fc3a83cfd897171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kws_search_reinit</definition>
        <argsstring>(ps_search_t *search, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>kws_search_reinit</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Update KWS search module for new key phrase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="488" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="488" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1af4651ed00382982eb2f239f8a627d3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kws_search_start</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_start</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Prepare the KWS search structure for beginning decoding of the next utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="591" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="591" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a039625a2045a2a69dc47e5459c7c56ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kws_search_step</definition>
        <argsstring>(ps_search_t *search, int frame_idx)</argsstring>
        <name>kws_search_step</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
<para>Step one frame forward through the Viterbi search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="614" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="614" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1af623deeb7a93a9fe73f2cc247cfc827d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kws_search_finish</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_finish</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Windup and clean the KWS search structure after utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="641" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="641" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1a172c3e5d8b8615a140cdb6ec3c5cdae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const* kws_search_hyp</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int32 *out_is_final)</argsstring>
        <name>kws_search_hyp</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
<para>Get hypothesis string from the KWS search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="667" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="667" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="kws__search_8c_1aa5d2224550b432788a612e46925fc1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* kws_search_get_keywords</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>kws_search_get_keywords</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Get active keyphrases. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" line="682" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c" bodystart="682" bodyend="706"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>kws_search.c<sp/>--<sp/>Search<sp/>object<sp/>for<sp/>key<sp/>phrase<sp/>spotting.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/strfuncs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/pio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/cmd_ln.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pocketsphinx__internal_8h" kindref="compound">pocketsphinx_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kws_search.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">#define<sp/>hmm_is_active(hmm)<sp/>((hmm)-&gt;frame<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>kws_nth_hmm(keyword,n)<sp/>(&amp;((keyword)-&gt;hmms[n]))</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="normal">kws_search_lattice(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">kws_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">kws_seg_free(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(itor);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">kws_seg_fill(<ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*itor)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref>*<sp/>detection<sp/>=<sp/>(<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref>*)gnode_ptr(itor-&gt;<ref refid="structkws__seg__s_1a5de99d98b2be6e0348033c9fc05ec139" kindref="member">detection</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a97a0dc7db931c7e3f98d23d21ce27f04" kindref="member">word</ref><sp/>=<sp/>detection-&gt;keyphrase;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a885a599726cd0efba573d106d016e6e2" kindref="member">sf</ref><sp/>=<sp/>detection-&gt;sf;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1ab25ecc6af8d2695c6097cf7e934eadd4" kindref="member">ef</ref><sp/>=<sp/>detection-&gt;ef;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1ae683244d90d0a5339930b47757778432" kindref="member">prob</ref><sp/>=<sp/>detection-&gt;prob;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a6f7706ec4c0d0ec8ecafaf0f29f41f4b" kindref="member">ascr</ref><sp/>=<sp/>detection-&gt;ascr;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="normal">kws_seg_next(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*detect_head<sp/>=<sp/>gnode_next(itor-&gt;<ref refid="structkws__seg__s_1a5de99d98b2be6e0348033c9fc05ec139" kindref="member">detection</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(detect_head<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>((<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref>*)gnode_ptr(detect_head))-&gt;ef<sp/>&gt;<sp/>itor-&gt;<ref refid="structkws__seg__s_1a7c7afd51e8b0484936fe23039f111151" kindref="member">last_frame</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_head<sp/>=<sp/>gnode_next(detect_head);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1a5de99d98b2be6e0348033c9fc05ec139" kindref="member">detection</ref><sp/>=<sp/>detect_head;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor-&gt;<ref refid="structkws__seg__s_1a5de99d98b2be6e0348033c9fc05ec139" kindref="member">detection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kws_seg_free(seg);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_seg_fill(itor);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref><sp/>kws_segfuncs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_next<sp/>*/</highlight><highlight class="normal"><sp/>kws_seg_next,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_free<sp/>*/</highlight><highlight class="normal"><sp/>kws_seg_free</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="normal">kws_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*detect_head<sp/>=<sp/>kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>-&gt;detect_list;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(detect_head<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>((<ref refid="structkws__detection__s" kindref="compound">kws_detection_t</ref>*)gnode_ptr(detect_head))-&gt;ef<sp/>&gt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref><sp/>-<sp/>kwss-&gt;<ref refid="structkws__search__s_1acf2597fd017db4c2f90a9ba54e08a20c" kindref="member">delay</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_head<sp/>=<sp/>gnode_next(detect_head);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!detect_head)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>itor<sp/>=<sp/>(<ref refid="structkws__seg__s" kindref="compound">kws_seg_t</ref><sp/>*)ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a510362a2281e374c839397c3e5488515" kindref="member">vt</ref><sp/>=<sp/>&amp;kws_segfuncs;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref><sp/>=<sp/>search;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1ab8b059f475f5e64301195cf9816bde2a" kindref="member">base</ref>.<ref refid="structps__seg__s_1a2249c012b83c902f4f8ed8d98ded7d20" kindref="member">lwf</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1a5de99d98b2be6e0348033c9fc05ec139" kindref="member">detection</ref><sp/>=<sp/>detect_head;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structkws__seg__s_1a7c7afd51e8b0484936fe23039f111151" kindref="member">last_frame</ref><sp/>=<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref><sp/>-<sp/>kwss-&gt;<ref refid="structkws__search__s_1acf2597fd017db4c2f90a9ba54e08a20c" kindref="member">delay</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_seg_fill(itor);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)itor;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__searchfuncs__s" kindref="compound">ps_searchfuncs_t</ref><sp/>kws_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_start,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_step,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_finish,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reinit:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_reinit,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_free,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lattice:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_lattice,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hyp:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_hyp,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prob:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_prob,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_iter:<sp/>*/</highlight><highlight class="normal"><sp/>kws_search_seg_iter,</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scans<sp/>the<sp/>dictionary<sp/>and<sp/>check<sp/>if<sp/>all<sp/>words<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">kws_search_check_dict(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*<sp/>kwss)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**wrdptr;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_keyphrase;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nwrds,<sp/>wid;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyword_iter,<sp/>i;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>success;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>ps_search_dict(kwss);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_keyphrase<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ckd_salloc(kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter].word);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwrds<sp/>=<sp/>str2words(tmp_keyphrase,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrdptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>ckd_calloc(nwrds,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wrdptr));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str2words(tmp_keyphrase,<sp/>wrdptr,<sp/>nwrds);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nwrds;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,<sp/>wrdptr[i]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;The<sp/>word<sp/>&apos;%s&apos;<sp/>is<sp/>missing<sp/>in<sp/>the<sp/>dictionary\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrdptr[i]);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(wrdptr);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(tmp_keyphrase);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Activate<sp/>senones<sp/>for<sp/>scoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">kws_search_sen_active(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*<sp/>kwss)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>keyword_iter;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(ps_search_acmod(kwss));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>phone<sp/>loop<sp/>hmms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(kwss),<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i]);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>activate<sp/>hmms<sp/>in<sp/>active<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*keyword<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword-&gt;n_hmms;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_active(kws_nth_hmm(keyword,<sp/>i)))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(kwss),<sp/>kws_nth_hmm(keyword,<sp/>i));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*<sp/>Evaluate<sp/>all<sp/>the<sp/>active<sp/>HMMs.</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*<sp/>(Executed<sp/>once<sp/>per<sp/>frame.)</highlight></codeline>
<codeline lineno="207"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">kws_search_hmm_eval(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*<sp/>kwss,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>keyword_iter;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" kindref="member">hmm_context_set_senscore</ref>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref>,<sp/>senscr);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>evaluate<sp/>hmms<sp/>from<sp/>phone<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(hmm);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>evaluate<sp/>hmms<sp/>for<sp/>active<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*keyword<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword-&gt;n_hmms;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>kws_nth_hmm(keyword,<sp/>i);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_active(hmm))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(hmm);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0a04bba471516468d1b2bea14632f255" kindref="member">bestscore</ref><sp/>=<sp/>bestscore;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="244"><highlight class="comment">*<sp/>(Beam)<sp/>prune<sp/>the<sp/>just<sp/>evaluated<sp/>HMMs,<sp/>determine<sp/>which<sp/>ones<sp/>remain</highlight></codeline>
<codeline lineno="245"><highlight class="comment">*<sp/>active.<sp/>Executed<sp/>once<sp/>per<sp/>frame.</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">kws_search_hmm_prune(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*<sp/>kwss)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh,<sp/>i,<sp/>keyword_iter;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>kwss-&gt;<ref refid="structkws__search__s_1a0a04bba471516468d1b2bea14632f255" kindref="member">bestscore</ref><sp/>+<sp/>kwss-&gt;beam;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*keyword<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword-&gt;n_hmms;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>kws_nth_hmm(keyword,<sp/>i);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_active(hmm)<sp/>&amp;&amp;<sp/>hmm_bestscore(hmm)<sp/>&lt;<sp/>thresh)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(hmm);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">kws_search_trans(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*<sp/>kwss)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*pl_best_hmm<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>best_out_score<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>keyword_iter;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>best<sp/>hmm<sp/>in<sp/>phone-loop<sp/>to<sp/>be<sp/>a<sp/>predecessor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i])<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>best_out_score)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_out_score<sp/>=<sp/>hmm_out_score(&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i]);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl_best_hmm<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>probs<sp/>are<sp/>not<sp/>ready<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pl_best_hmm)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>whether<sp/>keyword<sp/>wasn&apos;t<sp/>spotted<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*keyword;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*last_hmm;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_hmm<sp/>=<sp/>kws_nth_hmm(keyword,<sp/>keyword-&gt;n_hmms<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_active(last_hmm)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>hmm_out_score(pl_best_hmm)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(last_hmm)<sp/>-<sp/>hmm_out_score(pl_best_hmm)<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;=<sp/>keyword-&gt;threshold)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>prob<sp/>=<sp/>hmm_out_score(last_hmm)<sp/>-<sp/>hmm_out_score(pl_best_hmm);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kws_detections_add(kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>,<sp/>keyword-&gt;word,<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(last_hmm),<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref>,<sp/>prob,<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(last_hmm));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>keyword<sp/>is<sp/>spotted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>last<sp/>hmm<sp/>of<sp/>keyword<sp/>is<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>keywords<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>transition<sp/>for<sp/>all<sp/>phone<sp/>loop<sp/>hmms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(pl_best_hmm)<sp/>+<sp/>kwss-&gt;<ref refid="structkws__search__s_1a3bfc1d19e39d1cd321ce47280f1abe00" kindref="member">plp</ref><sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i]))<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i],</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(pl_best_hmm)<sp/>+<sp/>kwss-&gt;<ref refid="structkws__search__s_1a3bfc1d19e39d1cd321ce47280f1abe00" kindref="member">plp</ref>,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(pl_best_hmm),<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Activate<sp/>new<sp/>keyword<sp/>nodes,<sp/>enter<sp/>their<sp/>hmms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*keyword<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>keyword-&gt;n_hmms<sp/>-<sp/>1;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*pred_hmm<sp/>=<sp/>kws_nth_hmm(keyword,<sp/>i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>kws_nth_hmm(keyword,<sp/>i);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_active(pred_hmm))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hmm_is_active(hmm)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>hmm_out_score(pred_hmm)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(hmm))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(hmm,<sp/>hmm_out_score(pred_hmm),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(pred_hmm),<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>keyword<sp/>start<sp/>node<sp/>from<sp/>phone<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(pl_best_hmm)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(kws_nth_hmm(keyword,<sp/>0)))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(kws_nth_hmm(keyword,<sp/>0),<sp/>hmm_out_score(pl_best_hmm),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref>,<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>keywords<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">kws_search_read_list(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>keyfile)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*list_file;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>lineiter_t<sp/>*li;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((list_file<sp/>=<sp/>fopen(keyfile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>keyword<sp/>file<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>keyfile);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>keyphrases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(li<sp/>=<sp/>lineiter_start(list_file);<sp/>li;<sp/>li<sp/>=<sp/>lineiter_next(li))</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(li-&gt;len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>++;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref><sp/>=<sp/>(<ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*)ckd_calloc(kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(list_file,<sp/>0L,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>keyphrases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(li<sp/>=<sp/>lineiter_start_clean(list_file),<sp/>i=0;<sp/>li;<sp/>li<sp/>=<sp/>lineiter_next(li),<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,<sp/>end;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].threshold<sp/>=<sp/>kwss-&gt;<ref refid="structkws__search__s_1afce4456a796dbc72149d7a47159ccca9" kindref="member">def_threshold</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>li-&gt;buf;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>strlen(line)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>end<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[end]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line[begin]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>begin<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin--;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line[end]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line[begin]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].threshold<sp/>=<sp/>(int32)<sp/>logmath_log(kwss-&gt;base.<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>atof_c(line<sp/>+<sp/>begin<sp/>+<sp/>1))<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].word<sp/>=<sp/>ckd_salloc(line);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(list_file);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="normal">kws_search_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*keyphrase,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*keyfile,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_t<sp/>*<sp/>config,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*<sp/>acmod,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*kwss));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" kindref="member">ps_search_init</ref>(ps_search_base(kwss),<sp/>&amp;kws_funcs,<sp/>PS_SEARCH_TYPE_KWS,<sp/>name,<sp/>config,<sp/>acmod,<sp/>dict,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2p);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref><sp/>=<sp/>(<ref refid="structkws__detections__s" kindref="compound">kws_detections_t</ref><sp/>*)ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;beam<sp/>=</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float64_r(config,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-beam&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a3bfc1d19e39d1cd321ce47280f1abe00" kindref="member">plp</ref><sp/>=</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(config,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-kws_plp&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1afce4456a796dbc72149d7a47159ccca9" kindref="member">def_threshold</ref><sp/>=</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float64_r(config,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-kws_threshold&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1acf2597fd017db4c2f90a9ba54e08a20c" kindref="member">delay</ref><sp/>=<sp/>(int32)<sp/>cmd_ln_int32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-kws_delay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;KWS(beam:<sp/>%d,<sp/>plp:<sp/>%d,<sp/>default<sp/>threshold<sp/>%d,<sp/>delay<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;beam,<sp/>kwss-&gt;<ref refid="structkws__search__s_1a3bfc1d19e39d1cd321ce47280f1abe00" kindref="member">plp</ref>,<sp/>kwss-&gt;<ref refid="structkws__search__s_1afce4456a796dbc72149d7a47159ccca9" kindref="member">def_threshold</ref>,<sp/>kwss-&gt;<ref refid="structkws__search__s_1acf2597fd017db4c2f90a9ba54e08a20c" kindref="member">delay</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyfile)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kws_search_read_list(kwss,<sp/>keyfile)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>kws<sp/>search\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kws_search_free(ps_search_base(kwss));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref><sp/>=<sp/>(<ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*)ckd_calloc(kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[0].threshold<sp/>=<sp/>kwss-&gt;<ref refid="structkws__search__s_1afce4456a796dbc72149d7a47159ccca9" kindref="member">def_threshold</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[0].word<sp/>=<sp/>ckd_salloc(keyphrase);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>all<sp/>words<sp/>are<sp/>in<sp/>dictionary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kws_search_check_dict(kwss))<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kws_search_free(ps_search_base(kwss));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reinit<sp/>for<sp/>provided<sp/>keyword<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kws_search_reinit(ps_search_base(kwss),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_dict(kwss),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_dict2pid(kwss))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_free(ps_search_base(kwss));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_init(&amp;kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ps_search_base(kwss);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">kws_search_free(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)kwss-&gt;n_tot_frame</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(kwss),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>kws<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_tot_cpu,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_tot_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>kws<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_tot_elapsed,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_tot_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" kindref="member">ps_search_base_free</ref>(search);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_detections_reset(kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].hmms);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].word);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(kwss);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">kws_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*<sp/>d2p)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**wrdptr;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_keyphrase;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wid,<sp/>pronlen;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_hmms,<sp/>n_wrds;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ssid,<sp/>tmatid;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>p,<sp/>keyword_iter;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>silcipid<sp/>=<sp/>bin_mdef_silphone(mdef);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>old<sp/>dict2pid,<sp/>dict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" kindref="member">ps_search_base_reinit</ref>(search,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>HMM<sp/>context.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref><sp/>=</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" kindref="member">hmm_context_init</ref>(bin_mdef_n_emit_state(search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>),</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>-&gt;<ref refid="structtmat__t_1a9f518c96b30dab9efdb69bd779a7b5bf" kindref="member">tp</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>phone<sp/>loop<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>((<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)<sp/>&amp;<sp/>kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i]);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref><sp/>=<sp/>bin_mdef_n_ciphone(search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref><sp/>=</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)<sp/>ckd_calloc(kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref>,<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)<sp/>&amp;<sp/>kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i],</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2ssid(search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>i),</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2tmatid(search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>i));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(keyword_iter<sp/>=<sp/>0;<sp/>keyword_iter<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>keyword_iter++)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkws__keyword__s" kindref="compound">kws_keyword_t</ref><sp/>*keyword<sp/>=<sp/>&amp;kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[keyword_iter];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>keyphrase<sp/>HMMs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_keyphrase<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ckd_salloc(keyword-&gt;word);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_wrds<sp/>=<sp/>str2words(tmp_keyphrase,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrdptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>ckd_calloc(n_wrds,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wrdptr));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str2words(tmp_keyphrase,<sp/>wrdptr,<sp/>n_wrds);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>amount<sp/>of<sp/>hmms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hmms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_wrds;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,<sp/>wrdptr[i]);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pronlen<sp/>=<sp/>dict_pronlen(dict,<sp/>wid);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hmms<sp/>+=<sp/>pronlen;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>node<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyword-&gt;hmms)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(keyword-&gt;hmms);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword-&gt;hmms<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)<sp/>ckd_calloc(n_hmms,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhmm__t" kindref="compound">hmm_t</ref>));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword-&gt;n_hmms<sp/>=<sp/>n_hmms;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>node<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_wrds;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,<sp/>wrdptr[i]);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pronlen<sp/>=<sp/>dict_pronlen(dict,<sp/>wid);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>pronlen;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ci<sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>p);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>phone<sp/>of<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>rc<sp/>=</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pronlen<sp/>&gt;<sp/>1<sp/>?<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>1)<sp/>:<sp/>silcipid;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid<sp/>=<sp/>dict2pid_ldiph_lc(d2p,<sp/>ci,<sp/>rc,<sp/>silcipid);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>pronlen<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>phone<sp/>of<sp/>the<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>lc<sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>p<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*rssid<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(d2p,<sp/>ci,<sp/>lc);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[silcipid];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid<sp/>=<sp/>rssid-&gt;<ref refid="structxwdssid__t_1adbeeda6e94a51f08626c13414cdad6a8" kindref="member">ssid</ref>[j];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>internal<sp/>phone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssid<sp/>=<sp/><ref refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" kindref="member">dict2pid_internal</ref>(d2p,<sp/>wid,<sp/>p);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmatid<sp/>=<sp/>bin_mdef_pid2tmatid(mdef,<sp/>ci);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(kwss-&gt;<ref refid="structkws__search__s_1a0069d57702f921cbd1e2093148e7b672" kindref="member">hmmctx</ref>,<sp/>&amp;keyword-&gt;hmms[j],<sp/>FALSE,<sp/>ssid,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmatid);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(wrdptr);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(tmp_keyphrase);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">kws_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0a04bba471516468d1b2bea14632f255" kindref="member">bestscore</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_detections_reset(kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>and<sp/>enter<sp/>all<sp/>phone-loop<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1aab6e42d0c93af992c16e2a75db386df4" kindref="member">n_pl</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)<sp/>&amp;<sp/>kwss-&gt;<ref refid="structkws__search__s_1a7b501f4cc5f4efb7b4ca0259afcf4e05" kindref="member">pl_hmms</ref>[i];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(hmm);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(hmm,<sp/>0,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_reset(&amp;kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_start(&amp;kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">kws_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Activate<sp/>senones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kws_search_sen_active(kwss);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>senone<sp/>scores<sp/>for<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>senscr<sp/>=<sp/><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(acmod,<sp/>&amp;frame_idx);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>hmms<sp/>in<sp/>phone<sp/>loop<sp/>and<sp/>in<sp/>active<sp/>keyword<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_search_hmm_eval(kwss,<sp/>senscr);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prune<sp/>hmms<sp/>with<sp/>low<sp/>prob<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_search_hmm_prune(kwss);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>hmms<sp/>transitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>kws_search_trans(kwss);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>++kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">kws_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>cf;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss-&gt;n_tot_frame<sp/>+=<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>some<sp/>statistics.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_stop(&amp;kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>ps_search_acmod(kwss)-&gt;output_frame;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cf<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)<sp/>(cf<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(kwss),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;kws<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_cpu,<sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;kws<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_elapsed,<sp/>kwss-&gt;<ref refid="structkws__search__s_1a0cc9f5fcc60e181adfef86acf781076d" kindref="member">perf</ref>.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="667"><highlight class="normal">kws_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search,<sp/>int32<sp/>*<sp/>out_score,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*<sp/>out_is_final)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_score)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_score<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>kws_detections_hyp_str(kwss-&gt;<ref refid="structkws__search__s_1ac7bd23ef33f85b4173a8d9a7cc9b9a32" kindref="member">detections</ref>,<sp/>kwss-&gt;<ref refid="structkws__search__s_1a68a833afd9d01bdf4c2cc640b575eea7" kindref="member">frame</ref>,<sp/>kwss-&gt;<ref refid="structkws__search__s_1acf2597fd017db4c2f90a9ba54e08a20c" kindref="member">delay</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal">kws_search_get_keywords(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*<sp/>search)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>c,<sp/>len;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*kwss;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>kwss<sp/>=<sp/>(<ref refid="structkws__search__s" kindref="compound">kws_search_t</ref><sp/>*)<sp/>search;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>strlen(kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].word);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>line<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ckd_calloc(len,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*line));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kwss-&gt;<ref refid="structkws__search__s_1acd47cbdc3c0708d869888b99e6f5982c" kindref="member">n_keyphrases</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*keyword_str<sp/>=<sp/>kwss-&gt;<ref refid="structkws__search__s_1a0eec404435d9f8ad2700487f8a178f48" kindref="member">keyphrases</ref>[i].word;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;line[c],<sp/>keyword_str,<sp/>strlen(keyword_str));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>strlen(keyword_str);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line[c++]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>line[--c]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/kws_search.c"/>
  </compounddef>
</doxygen>
