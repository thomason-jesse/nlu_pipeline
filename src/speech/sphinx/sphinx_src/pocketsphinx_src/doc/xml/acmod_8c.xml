<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="acmod_8c" kind="file">
    <compoundname>acmod.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sphinxbase/prim_type.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes local="no">sphinxbase/cmd_ln.h</includes>
    <includes local="no">sphinxbase/strfuncs.h</includes>
    <includes local="no">sphinxbase/byteorder.h</includes>
    <includes local="no">sphinxbase/feat.h</includes>
    <includes local="no">sphinxbase/bio.h</includes>
    <includes refid="cmdln__macro_8h" local="yes">cmdln_macro.h</includes>
    <includes refid="acmod_8h" local="yes">acmod.h</includes>
    <includes refid="s2__semi__mgau_8h" local="yes">s2_semi_mgau.h</includes>
    <includes refid="ptm__mgau_8h" local="yes">ptm_mgau.h</includes>
    <includes refid="ms__mgau_8h" local="yes">ms_mgau.h</includes>
    <incdepgraph>
      <node id="302">
        <label>ms_mgau.h</label>
        <link refid="ms__mgau_8h"/>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="282">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="296">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>assert.h</label>
      </node>
      <node id="298">
        <label>float.h</label>
      </node>
      <node id="270">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
      </node>
      <node id="287">
        <label>s2_semi_mgau.h</label>
        <link refid="s2__semi__mgau_8h_source"/>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="281">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="271">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="285">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="303">
        <label>ms_senone.h</label>
        <link refid="ms__senone_8h"/>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="299">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="288">
        <label>ms_gauden.h</label>
        <link refid="ms__gauden_8h"/>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="290">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>sphinxbase/bio.h</label>
      </node>
      <node id="301">
        <label>ptm_mgau.h</label>
        <link refid="ptm__mgau_8h"/>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="267">
        <label>sphinxbase/byteorder.h</label>
      </node>
      <node id="283">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="268">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="292">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>string.h</label>
      </node>
      <node id="289">
        <label>vector.h</label>
        <link refid="vector_8h_source"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="259">
        <label>src/libpocketsphinx/acmod.c</label>
        <link refid="acmod.c"/>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="272">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="294">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>sphinxbase/strfuncs.h</label>
      </node>
      <node id="262">
        <label>math.h</label>
      </node>
      <node id="264">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="295">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="276">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="300">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="297">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="273">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="acmod_8c_1a82e69009d3cd108c8aad8afe44fb1132" prot="public" static="no">
        <name>WORDS_BIGENDIAN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="66" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="acmod_8c_1a8017e0daafc566656931e15bef02cdee" prot="public" static="no">
        <name>MPX_BITVEC_SET</name>
        <param><defname>a</defname></param>
        <param><defname>h</defname></param>
        <param><defname>i</defname></param>
        <initializer>if (hmm_mpx_ssid(h,i) != <ref refid="bin__mdef_8h_1a8ee283c316e9f4aa8e6d18c1d44026bc" kindref="member">BAD_SSID</ref>)                          \
        bitvec_set((a)-&gt;senone_active_vec, hmm_mpx_senid(h,i))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1225" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="acmod_8c_1aba1b554be23311cdd7f89ff2a209819b" prot="public" static="no">
        <name>NONMPX_BITVEC_SET</name>
        <param><defname>a</defname></param>
        <param><defname>h</defname></param>
        <param><defname>i</defname></param>
        <initializer>bitvec_set((a)-&gt;senone_active_vec,                                  \
               hmm_nonmpx_senid(h,i))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1228" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="acmod_8c_1a95d93b6f08e29cc4481779b2b1c9584d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 acmod_process_mfcbuf</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_process_mfcbuf</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Process MFCCs that are in the internal buffer into features. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="69" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="594" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1ae7087819ae4ba8de56e7d3e26a1b516c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_init_am</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_init_am</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="72" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="72" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a76c6bb09eabc013de2f8df0ec572d5c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_init_feat</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_init_feat</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="141" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="141" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a39230c685c29c80a042b44b4a9dd05dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_fe_mismatch</definition>
        <argsstring>(acmod_t *acmod, fe_t *fe)</argsstring>
        <name>acmod_fe_mismatch</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>fe_t *</type>
          <declname>fe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="201" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="201" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a2ebfbf8b1f15be46019910c44a81f343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_feat_mismatch</definition>
        <argsstring>(acmod_t *acmod, feat_t *fcb)</argsstring>
        <name>acmod_feat_mismatch</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>feat_t *</type>
          <declname>fcb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="217" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="217" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a6f32b623cbc3d15a1e3c5d09aba7dabf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
        <definition>acmod_t* acmod_init</definition>
        <argsstring>(cmd_ln_t *config, logmath_t *lmath, fe_t *fe, feat_t *fcb)</argsstring>
        <name>acmod_init</name>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>logmath_t *</type>
          <declname>lmath</declname>
        </param>
        <param>
          <type>fe_t *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>feat_t *</type>
          <declname>fcb</declname>
        </param>
        <briefdescription>
<para>Initialize an acoustic model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>a command-line object containing parameters. This pointer is not retained by this object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lmath</parametername>
</parameternamelist>
<parameterdescription>
<para>global log-math parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fe</parametername>
</parameternamelist>
<parameterdescription>
<para>a previously-initialized acoustic feature module to use, or NULL to create one automatically. If this is supplied and its parameters do not match those in the acoustic model, this function will fail. This pointer is not retained. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fe</parametername>
</parameternamelist>
<parameterdescription>
<para>a previously-initialized dynamic feature module to use, or NULL to create one automatically. If this is supplied and its parameters do not match those in the acoustic model, this function will fail. This pointer is not retained. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly initialized acmod_t, or NULL on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="230" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="230" bodyend="298"/>
        <references refid="acmod_8c_1a1e3345e8ef8b060fc04e88f86e6afa4a" compoundref="acmod_8c" startline="301" endline="338">acmod_free</references>
        <references refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba09f7964816ae844c445acd4cf3e33253" compoundref="acmod_8h" startline="68">ACMOD_IDLE</references>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
        <references refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" compoundref="acmod_8h" startline="150">acmod_s::config</references>
        <references refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" compoundref="acmod_8h" startline="156">acmod_s::fcb</references>
        <references refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" compoundref="acmod_8h" startline="155">acmod_s::fe</references>
        <references refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" compoundref="acmod_8h" startline="174">acmod_s::feat_buf</references>
        <references refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" compoundref="acmod_8h" startline="179">acmod_s::framepos</references>
        <references refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" compoundref="acmod_8h" startline="151">acmod_s::lmath</references>
        <references refid="structacmod__s_1a95d5195647b6395d95433d45e3f74d51" compoundref="acmod_8h" startline="170">acmod_s::log_zero</references>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" compoundref="acmod_8h" startline="173">acmod_s::mfc_buf</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <references refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" compoundref="acmod_8h" startline="195">acmod_s::n_mfc_alloc</references>
        <references refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" compoundref="acmod_8h" startline="167">acmod_s::senone_active</references>
        <references refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" compoundref="acmod_8h" startline="166">acmod_s::senone_active_vec</references>
        <references refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" compoundref="acmod_8h" startline="165">acmod_s::senone_scores</references>
        <references refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" compoundref="acmod_8h" startline="187">acmod_s::state</references>
        <references refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" compoundref="acmod_8h" startline="192">acmod_s::utt_start_frame</references>
        <referencedby refid="pocketsphinx_8h_1a391679e7edb0de1e324aa302ee820287" compoundref="pocketsphinx_8c" startline="241" endline="408">ps_reinit</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a1e3345e8ef8b060fc04e88f86e6afa4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_free</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_free</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Finalize an acoustic model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="301" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="301" bodyend="338"/>
        <references refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" compoundref="acmod_8h" startline="156">acmod_s::fcb</references>
        <references refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" compoundref="acmod_8h" startline="155">acmod_s::fe</references>
        <references refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" compoundref="acmod_8h" startline="150">acmod_s::config</references>
        <references refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" compoundref="acmod_8h" startline="173">acmod_s::mfc_buf</references>
        <references refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" compoundref="acmod_8h" startline="174">acmod_s::feat_buf</references>
        <references refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" compoundref="acmod_8h" startline="176">acmod_s::mfcfh</references>
        <references refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" compoundref="acmod_8h" startline="175">acmod_s::rawfh</references>
        <references refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" compoundref="acmod_8h" startline="177">acmod_s::senfh</references>
        <references refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" compoundref="acmod_8h" startline="179">acmod_s::framepos</references>
        <references refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" compoundref="acmod_8h" startline="165">acmod_s::senone_scores</references>
        <references refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" compoundref="acmod_8h" startline="166">acmod_s::senone_active_vec</references>
        <references refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" compoundref="acmod_8h" startline="167">acmod_s::senone_active</references>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" compoundref="bin__mdef_8c" startline="272" endline="300">bin_mdef_free</references>
        <references refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" compoundref="acmod_8h" startline="160">acmod_s::tmat</references>
        <references refid="tmat_8h_1a8f98e68e4a868728a89cf9996c48a6c9" compoundref="tmat_8c" startline="332" endline="339">tmat_free</references>
        <references refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" compoundref="acmod_8h" startline="161">acmod_s::mgau</references>
        <references refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" compoundref="acmod_8h" startline="162">acmod_s::mllr</references>
        <references refid="ps__mllr_8h_1ae56a8c52dd7513b1883536f2a729e1d0" compoundref="ps__mllr_8c" startline="145" endline="169">ps_mllr_free</references>
        <referencedby refid="acmod_8h_1a6f32b623cbc3d15a1e3c5d09aba7dabf" compoundref="acmod_8c" startline="230" endline="298">acmod_init</referencedby>
        <referencedby refid="pocketsphinx_8h_1a391679e7edb0de1e324aa302ee820287" compoundref="pocketsphinx_8c" startline="241" endline="408">ps_reinit</referencedby>
        <referencedby refid="pocketsphinx_8h_1ad8fd9b79ae9f87703af3f4755b3ab567" compoundref="pocketsphinx_8c" startline="443" endline="457">ps_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a4205b92d38db562577eafc3c432593ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
        <definition>ps_mllr_t* acmod_update_mllr</definition>
        <argsstring>(acmod_t *acmod, ps_mllr_t *mllr)</argsstring>
        <name>acmod_update_mllr</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
          <declname>mllr</declname>
        </param>
        <briefdescription>
<para>Adapt acoustic model using a linear transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mllr</parametername>
</parameternamelist>
<parameterdescription>
<para>The new transform to use, or NULL to update the existing transform. The decoder retains ownership of this pointer, so you should not attempt to free it manually. Use <ref refid="ps__mllr_8h_1a2f40deff6976bf03a845aa474494edfb" kindref="member">ps_mllr_retain()</ref> if you wish to reuse it elsewhere. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The updated transform object for this decoder, or NULL on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="341" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="341" bodyend="349"/>
        <references refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" compoundref="acmod_8h" startline="161">acmod_s::mgau</references>
        <references refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" compoundref="acmod_8h" startline="162">acmod_s::mllr</references>
        <references refid="ps__mllr_8h_1ae56a8c52dd7513b1883536f2a729e1d0" compoundref="ps__mllr_8c" startline="145" endline="169">ps_mllr_free</references>
        <referencedby refid="pocketsphinx_8h_1a85e04bcbf5366f1bdad555dbb4d73d5d" compoundref="pocketsphinx_8c" startline="484" endline="487">ps_update_mllr</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1ac561943e80e1478d7153d3c6320d57d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_write_senfh_header</definition>
        <argsstring>(acmod_t *acmod, FILE *logfh)</argsstring>
        <name>acmod_write_senfh_header</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>logfh</declname>
        </param>
        <briefdescription>
<para>Write senone dump file header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="352" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="352" bodyend="363"/>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" compoundref="acmod_8h" startline="151">acmod_s::lmath</references>
        <references refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" compoundref="acmod_8h" startline="150">acmod_s::config</references>
        <referencedby refid="acmod_8h_1a8e7bd5781f5232395f29fd0cd7f56004" compoundref="acmod_8c" startline="366" endline="374">acmod_set_senfh</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1ab35cb48cdf326a3fb5223589d73ae0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_set_senfh</definition>
        <argsstring>(acmod_t *acmod, FILE *logfh)</argsstring>
        <name>acmod_set_senfh</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>senfh</declname>
          <defname>logfh</defname>
        </param>
        <briefdescription>
<para>Start logging senone scores to a filehandle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acmod</parametername>
</parameternamelist>
<parameterdescription>
<para>Acoustic model object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logfh</parametername>
</parameternamelist>
<parameterdescription>
<para>Filehandle to log to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, &lt;0 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="366" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="366" bodyend="374"/>
        <references refid="acmod_8c_1ac561943e80e1478d7153d3c6320d57d9" compoundref="acmod_8c" startline="352" endline="363">acmod_write_senfh_header</references>
        <references refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" compoundref="acmod_8h" startline="177">acmod_s::senfh</references>
        <referencedby refid="pocketsphinx_8h_1ade3909b1c12c1b70afe284639e70cbff" compoundref="pocketsphinx_8c" startline="956" endline="1034">ps_start_utt</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a5753caa516c75bdc74b385d7aa66a97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_set_mfcfh</definition>
        <argsstring>(acmod_t *acmod, FILE *logfh)</argsstring>
        <name>acmod_set_mfcfh</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>logfh</declname>
        </param>
        <briefdescription>
<para>Start logging MFCCs to a filehandle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acmod</parametername>
</parameternamelist>
<parameterdescription>
<para>Acoustic model object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logfh</parametername>
</parameternamelist>
<parameterdescription>
<para>Filehandle to log to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, &lt;0 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="377" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="377" bodyend="386"/>
        <references refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" compoundref="acmod_8h" startline="176">acmod_s::mfcfh</references>
        <referencedby refid="pocketsphinx_8h_1ade3909b1c12c1b70afe284639e70cbff" compoundref="pocketsphinx_8c" startline="956" endline="1034">ps_start_utt</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a6979441ae866ea846ef41f8471b105a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_set_rawfh</definition>
        <argsstring>(acmod_t *acmod, FILE *logfh)</argsstring>
        <name>acmod_set_rawfh</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>logfh</declname>
        </param>
        <briefdescription>
<para>Start logging raw audio to a filehandle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acmod</parametername>
</parameternamelist>
<parameterdescription>
<para>Acoustic model object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logfh</parametername>
</parameternamelist>
<parameterdescription>
<para>Filehandle to log to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, &lt;0 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="389" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="389" bodyend="395"/>
        <references refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" compoundref="acmod_8h" startline="175">acmod_s::rawfh</references>
        <referencedby refid="pocketsphinx_8h_1ade3909b1c12c1b70afe284639e70cbff" compoundref="pocketsphinx_8c" startline="956" endline="1034">ps_start_utt</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a5fc67b1c8d3de7324c69c036e1c42991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_grow_feat_buf</definition>
        <argsstring>(acmod_t *acmod, int nfr)</argsstring>
        <name>acmod_grow_feat_buf</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="398" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="398" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a1555dac8fa27f644d709c5c89bbfa881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_set_grow</definition>
        <argsstring>(acmod_t *acmod, int grow_feat)</argsstring>
        <name>acmod_set_grow</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int</type>
          <declname>grow_feat</declname>
        </param>
        <briefdescription>
<para>Set memory allocation policy for utterance processing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grow_feat</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, the internal dynamic feature buffer will expand as necessary to encompass any amount of data fed to the model. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>previous allocation policy. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="412" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="412" bodyend="422"/>
        <references refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" compoundref="acmod_8h" startline="189">acmod_s::grow_feat</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <referencedby refid="ngram__search_8h_1a04f80b377c847026254fb85596e2f43c" compoundref="ngram__search_8c" startline="140" endline="237">ngram_search_init</referencedby>
        <referencedby refid="pocketsphinx_8h_1a572ad08651b4caae820d178a12c8f95f" compoundref="pocketsphinx_8c" startline="1080" endline="1113">ps_process_raw</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1aa3a5a89f76338e3e1bcfa7a2cecc5845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_start_utt</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_start_utt</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Mark the start of an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="425" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="425" bodyend="440"/>
        <references refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" compoundref="acmod_8h" startline="155">acmod_s::fe</references>
        <references refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" compoundref="acmod_8h" startline="187">acmod_s::state</references>
        <references refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" compoundref="acmod_8h" startline="69">ACMOD_STARTED</references>
        <references refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" compoundref="acmod_8h" startline="196">acmod_s::n_mfc_frame</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
        <references refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" compoundref="acmod_8h" startline="197">acmod_s::mfc_outidx</references>
        <references refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" compoundref="acmod_8h" startline="200">acmod_s::feat_outidx</references>
        <references refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" compoundref="acmod_8h" startline="194">acmod_s::output_frame</references>
        <references refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" compoundref="acmod_8h" startline="168">acmod_s::senscr_frame</references>
        <references refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" compoundref="acmod_8h" startline="169">acmod_s::n_senone_active</references>
        <references refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" compoundref="acmod_8h" startline="161">acmod_s::mgau</references>
        <references refid="structps__mgau__s_1a19cc836a740e32d0fa88c46fcdc19d75" compoundref="acmod_8h" startline="115">ps_mgau_s::frame_idx</references>
        <referencedby refid="pocketsphinx_8h_1ade3909b1c12c1b70afe284639e70cbff" compoundref="pocketsphinx_8c" startline="956" endline="1034">ps_start_utt</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a262372bdd6063f61e64b5417a449c1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_end_utt</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_end_utt</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Mark the end of an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="443" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="443" bodyend="486"/>
        <references refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" compoundref="acmod_8h" startline="187">acmod_s::state</references>
        <references refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" compoundref="acmod_8h" startline="71">ACMOD_ENDED</references>
        <references refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" compoundref="acmod_8h" startline="196">acmod_s::n_mfc_frame</references>
        <references refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" compoundref="acmod_8h" startline="195">acmod_s::n_mfc_alloc</references>
        <references refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" compoundref="acmod_8h" startline="197">acmod_s::mfc_outidx</references>
        <references refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" compoundref="acmod_8h" startline="155">acmod_s::fe</references>
        <references refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" compoundref="acmod_8h" startline="173">acmod_s::mfc_buf</references>
        <references refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" compoundref="acmod_8h" startline="156">acmod_s::fcb</references>
        <references refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" compoundref="acmod_8h" startline="176">acmod_s::mfcfh</references>
        <references refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" compoundref="acmod_8h" startline="175">acmod_s::rawfh</references>
        <references refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" compoundref="acmod_8h" startline="177">acmod_s::senfh</references>
        <referencedby refid="pocketsphinx_8h_1ab9339de730713b68cbd68a7f36dc8730" compoundref="pocketsphinx_8c" startline="1147" endline="1210">ps_end_utt</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1af2f329dca3e937a6b64e8148164a52df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_log_mfc</definition>
        <argsstring>(acmod_t *acmod, mfcc_t **cep, int n_frames)</argsstring>
        <name>acmod_log_mfc</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>cep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="489" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="489" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1aab48be055cd99da6b58b7cd62d89071d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_process_full_cep</definition>
        <argsstring>(acmod_t *acmod, mfcc_t ***inout_cep, int *inout_n_frames)</argsstring>
        <name>acmod_process_full_cep</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>mfcc_t ***</type>
          <declname>inout_cep</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inout_n_frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="517" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="517" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a98d68b44707b921c918f2aa9616043b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_process_full_raw</definition>
        <argsstring>(acmod_t *acmod, int16 const **inout_raw, size_t *inout_n_samps)</argsstring>
        <name>acmod_process_full_raw</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int16 const **</type>
          <declname>inout_raw</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>inout_n_samps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="552" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="552" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a23e63c8833e6128ae248e183d42f9b2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_process_raw</definition>
        <argsstring>(acmod_t *acmod, int16 const **inout_raw, size_t *inout_n_samps, int full_utt)</argsstring>
        <name>acmod_process_raw</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int16 const **</type>
          <declname>inout_raw</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>inout_n_samps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>full_utt</declname>
        </param>
        <briefdescription>
<para>TODO: Set queue length for utterance processing. </para>        </briefdescription>
        <detaileddescription>
<para>This function allows multiple concurrent passes of search to operate on different parts of the utterance. Feed raw audio data to the acoustic model for scoring.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inout_raw</parametername>
</parameternamelist>
<parameterdescription>
<para>In: Pointer to buffer of raw samples Out: Pointer to next sample to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inout_n_samps</parametername>
</parameternamelist>
<parameterdescription>
<para>In: Number of samples available Out: Number of samples remaining </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>full_utt</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, this block represents a full utterance and should be processed as such. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of frames of data processed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="627" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="627" bodyend="716"/>
        <references refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" compoundref="acmod_8h" startline="155">acmod_s::fe</references>
        <references refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" compoundref="acmod_8h" startline="173">acmod_s::mfc_buf</references>
        <references refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" compoundref="acmod_8h" startline="197">acmod_s::mfc_outidx</references>
        <references refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" compoundref="acmod_8h" startline="195">acmod_s::n_mfc_alloc</references>
        <references refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" compoundref="acmod_8h" startline="196">acmod_s::n_mfc_frame</references>
        <references refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" compoundref="acmod_8h" startline="175">acmod_s::rawfh</references>
        <references refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" compoundref="acmod_8h" startline="192">acmod_s::utt_start_frame</references>
        <referencedby refid="pocketsphinx_8h_1a572ad08651b4caae820d178a12c8f95f" compoundref="pocketsphinx_8c" startline="1080" endline="1113">ps_process_raw</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a9464f7708a361171469d613d401619fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_process_cep</definition>
        <argsstring>(acmod_t *acmod, mfcc_t ***inout_cep, int *inout_n_frames, int full_utt)</argsstring>
        <name>acmod_process_cep</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>mfcc_t ***</type>
          <declname>inout_cep</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inout_n_frames</declname>
        </param>
        <param>
          <type>int</type>
          <declname>full_utt</declname>
        </param>
        <briefdescription>
<para>Feed acoustic feature data into the acoustic model for scoring. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inout_cep</parametername>
</parameternamelist>
<parameterdescription>
<para>In: Pointer to buffer of features Out: Pointer to next frame to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inout_n_frames</parametername>
</parameternamelist>
<parameterdescription>
<para>In: Number of frames available Out: Number of frames remaining </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>full_utt</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, this block represents a full utterance and should be processed as such. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of frames of data processed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="719" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="719" bodyend="814"/>
        <references refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" compoundref="acmod_8h" startline="71">ACMOD_ENDED</references>
        <references refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba1ed8df720ee7006ebaada8c75371d94c" compoundref="acmod_8h" startline="70">ACMOD_PROCESSING</references>
        <references refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" compoundref="acmod_8h" startline="69">ACMOD_STARTED</references>
        <references refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" compoundref="acmod_8h" startline="156">acmod_s::fcb</references>
        <references refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" compoundref="acmod_8h" startline="174">acmod_s::feat_buf</references>
        <references refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" compoundref="acmod_8h" startline="200">acmod_s::feat_outidx</references>
        <references refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" compoundref="acmod_8h" startline="189">acmod_s::grow_feat</references>
        <references refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" compoundref="acmod_8h" startline="176">acmod_s::mfcfh</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
        <references refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" compoundref="acmod_8h" startline="187">acmod_s::state</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1ab16e414d5a07519d7b462c32377e8a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_process_feat</definition>
        <argsstring>(acmod_t *acmod, mfcc_t **feat)</argsstring>
        <name>acmod_process_feat</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>feat</declname>
        </param>
        <briefdescription>
<para>Feed dynamic feature data into the acoustic model for scoring. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="acmod_8h_1a23e63c8833e6128ae248e183d42f9b2b" kindref="member">acmod_process_raw()</ref> and <ref refid="acmod_8h_1a9464f7708a361171469d613d401619fe" kindref="member">acmod_process_cep()</ref>, this function accepts a single frame at a time. This is because there is no need to do buffering when using dynamic features as input. However, if the dynamic feature buffer is full, this function will fail, so you should either always check the return value, or always pair a call to it with a call to <ref refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to one frame of dynamic features. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of frames processed (either 0 or 1). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="817" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="817" bodyend="845"/>
        <references refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" compoundref="acmod_8h" startline="156">acmod_s::fcb</references>
        <references refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" compoundref="acmod_8h" startline="174">acmod_s::feat_buf</references>
        <references refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" compoundref="acmod_8h" startline="200">acmod_s::feat_outidx</references>
        <references refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" compoundref="acmod_8h" startline="189">acmod_s::grow_feat</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1adb0428bf37bb9f7ad9a2138587074b95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_read_senfh_header</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_read_senfh_header</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="848" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="848" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a58bd6038bec5d3901ac2057cacdd778a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_set_insenfh</definition>
        <argsstring>(acmod_t *acmod, FILE *senfh)</argsstring>
        <name>acmod_set_insenfh</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>insenfh</declname>
          <defname>senfh</defname>
        </param>
        <briefdescription>
<para>Set up a senone score dump file for input. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>insenfh</parametername>
</parameternamelist>
<parameterdescription>
<para>File handle of dump file </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, &lt;0 for failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="884" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="884" bodyend="894"/>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
        <references refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" compoundref="acmod_8h" startline="150">acmod_s::config</references>
        <references refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" compoundref="acmod_8h" startline="178">acmod_s::insenfh</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
        <referencedby refid="pocketsphinx_8h_1a466d1d718873e7b1cf0881e4f552a4a2" compoundref="pocketsphinx_8c" startline="1059" endline="1077">ps_decode_senscr</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a7b5f0b6edac2985b9b56d630cd705b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_rewind</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_rewind</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Rewind the current utterance, allowing it to be rescored. </para>        </briefdescription>
        <detaileddescription>
<para>After calling this function, the internal frame index is reset, and <ref refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score()</ref> will return scores starting at the first frame of the current utterance. Currently, <ref refid="acmod_8h_1a1555dac8fa27f644d709c5c89bbfa881" kindref="member">acmod_set_grow()</ref> must have been called to enable growing the feature buffer in order for this to work. In the future, senone scores may be cached instead.</para><para><simplesect kind="return"><para>0 for success, &lt;0 for failure (if the utterance can&apos;t be rewound due to no feature or score data available) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="897" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="897" bodyend="916"/>
        <references refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" compoundref="acmod_8h" startline="200">acmod_s::feat_outidx</references>
        <references refid="structps__mgau__s_1a19cc836a740e32d0fa88c46fcdc19d75" compoundref="acmod_8h" startline="115">ps_mgau_s::frame_idx</references>
        <references refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" compoundref="acmod_8h" startline="161">acmod_s::mgau</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
        <references refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" compoundref="acmod_8h" startline="194">acmod_s::output_frame</references>
        <references refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" compoundref="acmod_8h" startline="168">acmod_s::senscr_frame</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a338971ea0aa27fb4796d224e4767642b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_advance</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_advance</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Advance the frame index. </para>        </briefdescription>
        <detaileddescription>
<para>This function moves to the next frame of input data. Subsequent calls to <ref refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score()</ref> will return scores for that frame, until the next call to <ref refid="acmod_8h_1a338971ea0aa27fb4796d224e4767642b" kindref="member">acmod_advance()</ref>.</para><para><simplesect kind="return"><para>New frame index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="919" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="919" bodyend="928"/>
        <references refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" compoundref="acmod_8h" startline="200">acmod_s::feat_outidx</references>
        <references refid="structps__mgau__s_1a19cc836a740e32d0fa88c46fcdc19d75" compoundref="acmod_8h" startline="115">ps_mgau_s::frame_idx</references>
        <references refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" compoundref="acmod_8h" startline="161">acmod_s::mgau</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
        <references refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" compoundref="acmod_8h" startline="194">acmod_s::output_frame</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a66d1f73cd1d975ec0da9de00b80b36e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_write_scores</definition>
        <argsstring>(acmod_t *acmod, int n_active, uint8 const *active, int16 const *senscr, FILE *senfh)</argsstring>
        <name>acmod_write_scores</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_active</declname>
        </param>
        <param>
          <type>uint8 const *</type>
          <declname>active</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>senscr</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>senfh</declname>
        </param>
        <briefdescription>
<para>Write a frame of senone scores to a dump file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="931" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="931" bodyend="968"/>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <referencedby refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" compoundref="acmod_8c" startline="1126" endline="1185">acmod_score</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a8189abd59b0a57a886bcced60d8af7c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int acmod_read_scores_internal</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_read_scores_internal</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Internal version, used for reading previous frames in <ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="974" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="974" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a5c193164be78ad42944b7fb1be6299a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_read_scores</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_read_scores</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Read one frame of scores from senone score dump file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of frames read or &lt;0 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1032" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1032" bodyend="1066"/>
        <references refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" compoundref="acmod_8h" startline="200">acmod_s::feat_outidx</references>
        <references refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" compoundref="acmod_8h" startline="179">acmod_s::framepos</references>
        <references refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" compoundref="acmod_8h" startline="189">acmod_s::grow_feat</references>
        <references refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" compoundref="acmod_8h" startline="178">acmod_s::insenfh</references>
        <references refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" compoundref="acmod_8h" startline="198">acmod_s::n_feat_alloc</references>
        <references refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" compoundref="acmod_8h" startline="199">acmod_s::n_feat_frame</references>
        <references refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" compoundref="acmod_8h" startline="169">acmod_s::n_senone_active</references>
        <references refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" compoundref="acmod_8h" startline="194">acmod_s::output_frame</references>
        <references refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" compoundref="acmod_8h" startline="168">acmod_s::senscr_frame</references>
        <referencedby refid="pocketsphinx_8h_1a466d1d718873e7b1cf0881e4f552a4a2" compoundref="pocketsphinx_8c" startline="1059" endline="1077">ps_decode_senscr</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a5e86666b0f6c85121d852251082978bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int calc_frame_idx</definition>
        <argsstring>(acmod_t *acmod, int *inout_frame_idx)</argsstring>
        <name>calc_frame_idx</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inout_frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1069" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1069" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1aace4bd4d4ec3c729280cb0935276fe62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int calc_feat_idx</definition>
        <argsstring>(acmod_t *acmod, int frame_idx)</argsstring>
        <name>calc_feat_idx</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1085" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1085" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a91c63cce3b20f231aa483bf054eca3c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mfcc_t **</type>
        <definition>mfcc_t** acmod_get_frame</definition>
        <argsstring>(acmod_t *acmod, int *inout_frame_idx)</argsstring>
        <name>acmod_get_frame</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inout_frame_idx</declname>
        </param>
        <briefdescription>
<para>Get a frame of dynamic feature data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inout_frame_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Input: frame index to get, or NULL to obtain features for the most recent frame. Output: frame index corresponding to this set of features. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Feature array, or NULL if requested frame is not available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1108" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1108" bodyend="1123"/>
        <references refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" compoundref="acmod_8h" startline="174">acmod_s::feat_buf</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16 const *</type>
        <definition>int16 const* acmod_score</definition>
        <argsstring>(acmod_t *acmod, int *inout_frame_idx)</argsstring>
        <name>acmod_score</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inout_frame_idx</declname>
        </param>
        <briefdescription>
<para>Score one frame of data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inout_frame_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Input: frame index to score, or NULL to obtain scores for the most recent frame. Output: frame index corresponding to this set of scores. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Array of senone scores for this frame, or NULL if no frame is available for scoring (such as if a frame index is requested that is not yet or no longer available). The data pointed to persists only until the next call to <ref refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score()</ref> or <ref refid="acmod_8h_1a338971ea0aa27fb4796d224e4767642b" kindref="member">acmod_advance()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1126" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1126" bodyend="1185"/>
        <references refid="acmod_8c_1ad12224c741f7ea76faf88a29537f83dd" compoundref="acmod_8c" startline="1274" endline="1325">acmod_flags2list</references>
        <references refid="acmod_8c_1a66d1f73cd1d975ec0da9de00b80b36e2" compoundref="acmod_8c" startline="931" endline="968">acmod_write_scores</references>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
        <references refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" compoundref="acmod_8h" startline="174">acmod_s::feat_buf</references>
        <references refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" compoundref="acmod_8h" startline="179">acmod_s::framepos</references>
        <references refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" compoundref="acmod_8h" startline="178">acmod_s::insenfh</references>
        <references refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" compoundref="acmod_8h" startline="161">acmod_s::mgau</references>
        <references refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" compoundref="acmod_8h" startline="169">acmod_s::n_senone_active</references>
        <references refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" compoundref="acmod_8h" startline="177">acmod_s::senfh</references>
        <references refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" compoundref="acmod_8h" startline="167">acmod_s::senone_active</references>
        <references refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" compoundref="acmod_8h" startline="165">acmod_s::senone_scores</references>
        <references refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" compoundref="acmod_8h" startline="168">acmod_s::senscr_frame</references>
        <referencedby refid="ngram__search__fwdflat_8h_1ae77ef21ae92dbcc4b14f40469fbd4307" compoundref="ngram__search__fwdflat_8c" startline="816" endline="877">ngram_fwdflat_search</referencedby>
        <referencedby refid="ngram__search__fwdtree_8h_1a9e2828ba0d249424a234b6cf7d3ee530" compoundref="ngram__search__fwdtree_8c" startline="1458" endline="1499">ngram_fwdtree_search</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a3249e1ce0c8155dc23f332f97ddd493b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acmod_best_score</definition>
        <argsstring>(acmod_t *acmod, int *out_best_senid)</argsstring>
        <name>acmod_best_score</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_best_senid</declname>
        </param>
        <briefdescription>
<para>Get best score and senone index for current frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1188" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1188" bodyend="1213"/>
        <references refid="acmod_8h_1ace94548e8c9429394d130e2f9921d59b" compoundref="acmod_8h" startline="77">SENSCR_DUMMY</references>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" compoundref="acmod_8h" startline="165">acmod_s::senone_scores</references>
        <references refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" compoundref="acmod_8h" startline="169">acmod_s::n_senone_active</references>
        <references refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" compoundref="acmod_8h" startline="167">acmod_s::senone_active</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_clear_active</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_clear_active</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Clear set of active senones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1217" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1217" bodyend="1223"/>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
        <references refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" compoundref="acmod_8h" startline="166">acmod_s::senone_active_vec</references>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" compoundref="acmod_8h" startline="169">acmod_s::n_senone_active</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_activate_hmm</definition>
        <argsstring>(acmod_t *acmod, hmm_t *hmm)</argsstring>
        <name>acmod_activate_hmm</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="structhmm__t" kindref="compound">hmm_t</ref> *</type>
          <declname>hmm</declname>
        </param>
        <briefdescription>
<para>Activate senones associated with an HMM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1233" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1233" bodyend="1271"/>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1ad12224c741f7ea76faf88a29537f83dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 acmod_flags2list</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_flags2list</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Build active list from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1274" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1274" bodyend="1325"/>
        <references refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" compoundref="acmod_8h" startline="159">acmod_s::mdef</references>
        <references refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" compoundref="acmod_8h" startline="188">acmod_s::compallsen</references>
        <references refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" compoundref="acmod_8h" startline="169">acmod_s::n_senone_active</references>
        <references refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" compoundref="acmod_8h" startline="166">acmod_s::senone_active_vec</references>
        <references refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" compoundref="acmod_8h" startline="167">acmod_s::senone_active</references>
        <references refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" compoundref="acmod_8h" startline="194">acmod_s::output_frame</references>
        <referencedby refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" compoundref="acmod_8c" startline="1126" endline="1185">acmod_score</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a8b52ce1289cc84deda1cf98b4cebbca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 acmod_stream_offset</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_stream_offset</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Get the offset of the utterance start of the current stream, helpful for stream-wide timing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1328" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1328" bodyend="1331"/>
        <references refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" compoundref="acmod_8h" startline="192">acmod_s::utt_start_frame</references>
        <referencedby refid="pocketsphinx_8h_1a045a044726b816678965514f2ee7d8c7" compoundref="pocketsphinx_8c" startline="1270" endline="1276">ps_seg_frames</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1ae065d2fafc704177e7537988c9d3b5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_start_stream</definition>
        <argsstring>(acmod_t *acmod)</argsstring>
        <name>acmod_start_stream</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <briefdescription>
<para>Reset the current stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1334" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1334" bodyend="1338"/>
        <references refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" compoundref="acmod_8h" startline="155">acmod_s::fe</references>
        <references refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" compoundref="acmod_8h" startline="192">acmod_s::utt_start_frame</references>
        <referencedby refid="pocketsphinx_8h_1a89be3b2a8f83291a225db0bcd9ee65b2" compoundref="pocketsphinx_8c" startline="949" endline="953">ps_start_stream</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a8c8dce7790c4486d1ee1b20d810805bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_set_rawdata_size</definition>
        <argsstring>(acmod_t *acmod, int32 size)</argsstring>
        <name>acmod_set_rawdata_size</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the limit of the raw audio data to store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1341" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1341" bodyend="1349"/>
        <referencedby refid="pocketsphinx_8h_1a4aef468e7959d9a7605f344d6759721c" compoundref="pocketsphinx_8c" startline="1475" endline="1478">ps_set_rawdata_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="acmod_8c_1a0804fc79c26de167a95ece1189effbec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acmod_get_rawdata</definition>
        <argsstring>(acmod_t *acmod, int16 **buffer, int32 *size)</argsstring>
        <name>acmod_get_rawdata</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type>int16 **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Retrieves the raw data collected during utterance decoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" line="1352" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c" bodystart="1352" bodyend="1360"/>
        <referencedby refid="pocketsphinx_8h_1a0ea0a24f578b1eeff2fccdb0b61e5527" compoundref="pocketsphinx_8c" startline="1481" endline="1484">ps_get_rawdata</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Acoustic model structures for PocketSphinx. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>David Huggins-Daines <ulink url="mailto:dhuggins@cs.cmu.edu">dhuggins@cs.cmu.edu</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/prim_type.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/cmd_ln.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/strfuncs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/byteorder.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/feat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmdln_macro.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="acmod_8h" kindref="compound">acmod.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;s2_semi_mgau.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ptm__mgau_8h" kindref="compound">ptm_mgau.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ms__mgau_8h" kindref="compound">ms_mgau.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WORDS_BIGENDIAN</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WORDS_BIGENDIAN<sp/>1</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32<sp/>acmod_process_mfcbuf(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">acmod_init_am(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*mdeffn,<sp/>*tmatfn,<sp/>*mllrfn,<sp/>*hmmdir;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>model<sp/>definition.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mdeffn<sp/>=<sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_mdef&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmmdir<sp/>=<sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-hmm&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Acoustic<sp/>model<sp/>definition<sp/>is<sp/>not<sp/>specified<sp/>either<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;with<sp/>-mdef<sp/>option<sp/>or<sp/>with<sp/>-hmm\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Folder<sp/>&apos;%s&apos;<sp/>does<sp/>not<sp/>contain<sp/>acoustic<sp/>model<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;definition<sp/>&apos;mdef&apos;\n&quot;</highlight><highlight class="normal">,<sp/>hmmdir);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref><sp/>=<sp/><ref refid="bin__mdef_8h_1a3930ae6b3309a615335585db4b46306f" kindref="member">bin_mdef_read</ref>(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/>mdeffn))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>acoustic<sp/>model<sp/>definition<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>mdeffn);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>transition<sp/>matrices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmatfn<sp/>=<sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_tmat&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>tmat<sp/>file<sp/>specified\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref><sp/>=<sp/><ref refid="tmat_8h_1a33fc2f994068e2667eb728d7118ea038" kindref="member">tmat_init</ref>(tmatfn,<sp/>acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-tmatfloor&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>acoustic<sp/>models.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_mean&quot;</highlight><highlight class="normal">)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_var&quot;</highlight><highlight class="normal">)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_tmat&quot;</highlight><highlight class="normal">)<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>mean/var/tmat<sp/>files<sp/>specified\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_senmgau&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Using<sp/>general<sp/>multi-stream<sp/>GMM<sp/>computation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref><sp/>=<sp/>ms_mgau_init(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>use<sp/>PTM<sp/>computation<sp/>module\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref><sp/>=<sp/>ptm_mgau_init(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>use<sp/>semi-continuous<sp/>computation<sp/>module\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref><sp/>=<sp/>s2_semi_mgau_init(acmod))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Falling<sp/>back<sp/>to<sp/>general<sp/>multi-stream<sp/>GMM<sp/>computation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref><sp/>=<sp/>ms_mgau_init(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>is<sp/>an<sp/>MLLR<sp/>transform,<sp/>apply<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mllrfn<sp/>=<sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-mllr&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr<sp/>=<sp/><ref refid="ps__mllr_8h_1a05d268b1d79a1be2ae96093c96aad79d" kindref="member">ps_mllr_read</ref>(mllrfn);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mllr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a4205b92d38db562577eafc3c432593ab" kindref="member">acmod_update_mllr</ref>(acmod,<sp/>mllr);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">acmod_init_feat(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref><sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat_init(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-feat&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn_type_from_str(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,</highlight><highlight class="stringliteral">&quot;-cmn&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_boolean_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-varnorm&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc_type_from_str(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-agc&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>cmd_ln_int32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-ceplen&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_lda&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>linear<sp/>feature<sp/>transformation<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_lda&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feat_read_lda(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_lda&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_int32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-ldadim&quot;</highlight><highlight class="normal">))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-svspec&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>**subvecs;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Using<sp/>subvector<sp/>specification<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-svspec&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((subvecs<sp/>=<sp/>parse_subvecs(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-svspec&quot;</highlight><highlight class="normal">)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((feat_set_subvecs(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>subvecs))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_exists_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-agcthresh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>0<sp/>!=<sp/>strcmp(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-agc&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc_set_threshold(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>-&gt;agc_struct,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-agcthresh&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>-&gt;cmn_struct</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>cmd_ln_exists_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-cmninit&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/>*cc,<sp/>*vallist;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>nvals;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vallist<sp/>=<sp/>ckd_salloc(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-cmninit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>vallist;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nvals<sp/>&lt;<sp/>acmod-&gt;fcb-&gt;cmn_struct-&gt;veclen</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(cc<sp/>=<sp/>strchr(c,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cc<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>-&gt;cmn_struct-&gt;cmn_mean[nvals]<sp/>=<sp/>FLOAT2MFCC(atof_c(c));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cc<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nvals;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvals<sp/>&lt;<sp/>acmod-&gt;fcb-&gt;cmn_struct-&gt;veclen<sp/>&amp;&amp;<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>-&gt;cmn_struct-&gt;cmn_mean[nvals]<sp/>=<sp/>FLOAT2MFCC(atof_c(c));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(vallist);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">acmod_fe_mismatch(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>fe_t<sp/>*fe)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>vector<sp/>dimension<sp/>needs<sp/>to<sp/>be<sp/>the<sp/>same.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_int32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-ceplen&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>fe_get_output_size(fe))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Configured<sp/>feature<sp/>length<sp/>%d<sp/>doesn&apos;t<sp/>match<sp/>feature<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;extraction<sp/>output<sp/>size<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_int32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-ceplen&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_get_output_size(fe));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Feature<sp/>parameters<sp/>need<sp/>to<sp/>be<sp/>the<sp/>same.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">acmod_feat_mismatch(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>feat_t<sp/>*fcb)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Feature<sp/>type<sp/>needs<sp/>to<sp/>be<sp/>the<sp/>same.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp(cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-feat&quot;</highlight><highlight class="normal">),<sp/>feat_name(fcb)))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>vector<sp/>dimension<sp/>needs<sp/>to<sp/>be<sp/>the<sp/>same.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_int32_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-ceplen&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>feat_cepsize(fcb))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Need<sp/>to<sp/>check<sp/>LDA<sp/>and<sp/>stuff<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*</highlight></codeline>
<codeline lineno="230" refid="acmod_8h_1a6f32b623cbc3d15a1e3c5d09aba7dabf" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a6f32b623cbc3d15a1e3c5d09aba7dabf" kindref="member">acmod_init</ref>(cmd_ln_t<sp/>*config,<sp/>logmath_t<sp/>*lmath,<sp/>fe_t<sp/>*fe,<sp/>feat_t<sp/>*fcb)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*acmod));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref><sp/>=<sp/>cmd_ln_retain(config);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref><sp/>=<sp/>lmath;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>=<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba09f7964816ae844c445acd4cf3e33253" kindref="member">ACMOD_IDLE</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>feature<sp/>computation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod_fe_mismatch(acmod,<sp/>fe))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_retain(fe);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref><sp/>=<sp/>fe;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>a<sp/>new<sp/>front<sp/>end.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref><sp/>=<sp/>fe_init_auto_r(config);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod_fe_mismatch(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>))</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcb)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod_feat_mismatch(acmod,<sp/>fcb))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat_retain(fcb);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref><sp/>=<sp/>fcb;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>a<sp/>new<sp/>fcb.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod_init_feat(acmod)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Load<sp/>acoustic<sp/>model<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod_init_am(acmod)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>MFCC<sp/>buffer<sp/>needs<sp/>to<sp/>be<sp/>at<sp/>least<sp/>as<sp/>large<sp/>as<sp/>the<sp/>dynamic</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>feature<sp/>window.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>-&gt;window_size<sp/>*<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref><sp/>=<sp/>(mfcc_t<sp/>**)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_calloc_2d(acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>-&gt;cepsize,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Feature<sp/>buffer<sp/>has<sp/>to<sp/>be<sp/>at<sp/>least<sp/>as<sp/>large<sp/>as<sp/>MFCC<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>+<sp/>cmd_ln_int32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_window&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref><sp/>=<sp/>feat_array_alloc(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref><sp/>=<sp/>ckd_calloc(acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref>));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" kindref="member">utt_start_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Senone<sp/>computation<sp/>stuff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref><sp/>=<sp/>ckd_calloc(bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" kindref="member">senone_active_vec</ref><sp/>=<sp/>bitvec_alloc(bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref><sp/>=<sp/>ckd_calloc(bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a95d5195647b6395d95433d45e3f74d51" kindref="member">log_zero</ref><sp/>=<sp/>logmath_get_zero(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref><sp/>=<sp/>cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-compallsen&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a1e3345e8ef8b060fc04e88f86e6afa4a" kindref="member">acmod_free</ref>(acmod);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="acmod_8h_1a1e3345e8ef8b060fc04e88f86e6afa4a" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a1e3345e8ef8b060fc04e88f86e6afa4a" kindref="member">acmod_free</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>feat_free(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_free(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd_ln_free_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat_array_free(acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(acmod-&gt;<ref refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" kindref="member">senone_active_vec</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(acmod-&gt;rawdata);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" kindref="member">bin_mdef_free</ref>(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tmat_8h_1a8f98e68e4a868728a89cf9996c48a6c9" kindref="member">tmat_free</ref>(acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_mgau_free(acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" kindref="member">mllr</ref>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__mllr_8h_1ae56a8c52dd7513b1883536f2a729e1d0" kindref="member">ps_mllr_free</ref>(acmod-&gt;<ref refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" kindref="member">mllr</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(acmod);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*</highlight></codeline>
<codeline lineno="341" refid="acmod_8h_1a4205b92d38db562577eafc3c432593ab" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a4205b92d38db562577eafc3c432593ab" kindref="member">acmod_update_mllr</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" kindref="member">mllr</ref>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__mllr_8h_1ae56a8c52dd7513b1883536f2a729e1d0" kindref="member">ps_mllr_free</ref>(acmod-&gt;<ref refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" kindref="member">mllr</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a4edbfa1a1324c6db27b74de7d0158e5e" kindref="member">mllr</ref><sp/>=<sp/>mllr;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>ps_mgau_transform(acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>,<sp/>mllr);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mllr;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="acmod_8h_1ac561943e80e1478d7153d3c6320d57d9" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1ac561943e80e1478d7153d3c6320d57d9" kindref="member">acmod_write_senfh_header</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>FILE<sp/>*logfh)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nsenstr[64],<sp/>logbasestr[64];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(nsenstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(logbasestr,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>logmath_get_base(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bio_writehdr(logfh,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mdef_file&quot;</highlight><highlight class="normal">,<sp/>cmd_ln_str_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_mdef&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n_sen&quot;</highlight><highlight class="normal">,<sp/>nsenstr,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;logbase&quot;</highlight><highlight class="normal">,<sp/>logbasestr,<sp/>NULL);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="acmod_8h_1a8e7bd5781f5232395f29fd0cd7f56004" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1ab35cb48cdf326a3fb5223589d73ae0ce" kindref="member">acmod_set_senfh</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>FILE<sp/>*logfh)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref><sp/>=<sp/>logfh;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logfh<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="acmod_8c_1ac561943e80e1478d7153d3c6320d57d9" kindref="member">acmod_write_senfh_header</ref>(acmod,<sp/>logfh);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="acmod_8h_1a5753caa516c75bdc74b385d7aa66a97c" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a5753caa516c75bdc74b385d7aa66a97c" kindref="member">acmod_set_mfcfh</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>FILE<sp/>*logfh)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref><sp/>=<sp/>logfh;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;rv,<sp/>4,<sp/>1,<sp/>acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="acmod_8h_1a6979441ae866ea846ef41f8471b105a0" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a6979441ae866ea846ef41f8471b105a0" kindref="member">acmod_set_rawfh</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>FILE<sp/>*logfh)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref><sp/>=<sp/>logfh;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">acmod_grow_feat_buf(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfr)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfr<sp/>&gt;<sp/><ref refid="hmm_8h_1a5b6b9157cfaaec312508eaed602f0698" kindref="member">MAX_N_FRAMES</ref>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Decoder<sp/>can<sp/>not<sp/>process<sp/>more<sp/>than<sp/>%d<sp/>frames<sp/>at<sp/>once,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;requested<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hmm_8h_1a5b6b9157cfaaec312508eaed602f0698" kindref="member">MAX_N_FRAMES</ref>,<sp/>nfr);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref><sp/>=<sp/>feat_array_realloc(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>,<sp/>nfr);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref><sp/>=<sp/>ckd_realloc(acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfr<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref>));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>=<sp/>nfr;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="acmod_8h_1a1555dac8fa27f644d709c5c89bbfa881" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a1555dac8fa27f644d709c5c89bbfa881" kindref="member">acmod_set_grow</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grow_feat)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref><sp/>=<sp/>grow_feat;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>feat_buf<sp/>to<sp/>a<sp/>reasonable<sp/>size<sp/>to<sp/>start<sp/>with.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grow_feat<sp/>&amp;&amp;<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>&lt;<sp/>128)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>128);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="acmod_8h_1aa3a5a89f76338e3e1bcfa7a2cecc5845" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1aa3a5a89f76338e3e1bcfa7a2cecc5845" kindref="member">acmod_start_utt</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_start_utt(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>=<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" kindref="member">ACMOD_STARTED</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" kindref="member">senscr_frame</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>-&gt;<ref refid="structps__mgau__s_1a19cc836a740e32d0fa88c46fcdc19d75" kindref="member">frame_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;rawdata_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="acmod_8h_1a262372bdd6063f61e64b5417a449c1a9" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a262372bdd6063f61e64b5417a449c1a9" kindref="member">acmod_end_utt</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nfr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>=<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" kindref="member">ACMOD_ENDED</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>&lt;<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inptr;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Where<sp/>to<sp/>start<sp/>writing<sp/>them<sp/>(circular<sp/>buffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>(acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref>)<sp/>%<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfr<sp/>is<sp/>always<sp/>either<sp/>zero<sp/>or<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_end_utt(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>[inptr],<sp/>&amp;nfr);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>+=<sp/>nfr;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>whatever&apos;s<sp/>left,<sp/>and<sp/>any<sp/>leadout<sp/>or<sp/>update<sp/>stats<sp/>if<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfr)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfr<sp/>=<sp/>acmod_process_mfcbuf(acmod);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat_update_stats(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>outlen;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>rv;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlen<sp/>=<sp/>(ftell(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)<sp/>-<sp/>4)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!WORDS_BIGENDIAN)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;outlen);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>seek<sp/>and<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/>fseek(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>,<sp/>0,<sp/>SEEK_SET))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;outlen,<sp/>4,<sp/>1,<sp/>acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nfr;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">acmod_log_mfc(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**cep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_frames)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*ptr<sp/>=<sp/>(int32<sp/>*)cep[0];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n_frames<sp/>*<sp/>feat_cepsize(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Swap<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!WORDS_BIGENDIAN)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mfcc_t));<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(ptr<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(cep[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mfcc_t),<sp/>n,<sp/>acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>%d<sp/>values<sp/>to<sp/>log<sp/>file&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Swap<sp/>them<sp/>back.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!WORDS_BIGENDIAN)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mfcc_t));<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(ptr<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">acmod_process_full_cep(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>***inout_cep,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inout_n_frames)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nfr;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>log<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_log_mfc(acmod,<sp/>*inout_cep,<sp/>*inout_n_frames);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resize<sp/>feat_buf<sp/>to<sp/>fit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>&lt;<sp/>*inout_n_frames)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*inout_n_frames<sp/>&gt;<sp/><ref refid="hmm_8h_1a5b6b9157cfaaec312508eaed602f0698" kindref="member">MAX_N_FRAMES</ref>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Batch<sp/>processing<sp/>can<sp/>not<sp/>process<sp/>more<sp/>than<sp/>%d<sp/>frames<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;at<sp/>once,<sp/>requested<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hmm_8h_1a5b6b9157cfaaec312508eaed602f0698" kindref="member">MAX_N_FRAMES</ref>,<sp/>*inout_n_frames);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat_array_free(acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref><sp/>=<sp/>feat_array_alloc(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>*inout_n_frames);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>=<sp/>*inout_n_frames;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>dynamic<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>nfr<sp/>=<sp/>feat_s2mfc2feat_live(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>*inout_cep,<sp/>inout_n_frames,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE,<sp/>TRUE,<sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>=<sp/>nfr;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>&lt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>*inout_cep<sp/>+=<sp/>*inout_n_frames;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>*inout_n_frames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nfr;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">acmod_process_full_raw(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**inout_raw,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*inout_n_samps)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nfr,<sp/>ntail;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>**cepptr;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>logging<sp/>file<sp/>if<sp/>any.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*inout_n_samps<sp/>+<sp/>acmod-&gt;rawdata_pos<sp/>&lt;<sp/>acmod-&gt;rawdata_size)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(acmod-&gt;rawdata<sp/>+<sp/>acmod-&gt;rawdata_pos,<sp/>*inout_raw,<sp/>*inout_n_samps<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;rawdata_pos<sp/>+=<sp/>*inout_n_samps;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(*inout_raw,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16),<sp/>*inout_n_samps,<sp/>acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resize<sp/>mfc_buf<sp/>to<sp/>fit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe_process_frames(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>,<sp/>NULL,<sp/>inout_n_samps,<sp/>NULL,<sp/>&amp;nfr,<sp/>NULL)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>&lt;<sp/>nfr<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref><sp/>=<sp/>ckd_calloc_2d(nfr<sp/>+<sp/>1,<sp/>fe_get_output_size(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>),</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>=<sp/>nfr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_start_utt(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe_process_frames(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>,<sp/>inout_raw,<sp/>inout_n_samps,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>,<sp/>&amp;nfr,<sp/>NULL)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_end_utt(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>[nfr],<sp/>&amp;ntail);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>nfr<sp/>+=<sp/>ntail;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>cepptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>nfr<sp/>=<sp/>acmod_process_full_cep(acmod,<sp/>&amp;cepptr,<sp/>&amp;nfr);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nfr;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="594"><highlight class="normal">acmod_process_mfcbuf(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>**mfcptr;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ncep;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>ncep<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>do<sp/>this<sp/>in<sp/>two<sp/>parts<sp/>because<sp/>of<sp/>the<sp/>circular<sp/>mfc_buf.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>+<sp/>ncep<sp/>&gt;<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ncep1<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>-<sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saved_state<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>end<sp/>the<sp/>utterance<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" kindref="member">ACMOD_ENDED</ref>)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>=<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba1ed8df720ee7006ebaada8c75371d94c" kindref="member">ACMOD_PROCESSING</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncep1<sp/>=<sp/><ref refid="acmod_8c_1a9464f7708a361171469d613d401619fe" kindref="member">acmod_process_cep</ref>(acmod,<sp/>&amp;mfcptr,<sp/>&amp;ncep1,<sp/>FALSE);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>possible<sp/>that<sp/>not<sp/>all<sp/>available<sp/>frames<sp/>were<sp/>filled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncep<sp/>-=<sp/>ncep1;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>-=<sp/>ncep1;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>+=<sp/>ncep1;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>%=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>original<sp/>state<sp/>(could<sp/>this<sp/>really<sp/>be<sp/>the<sp/>end)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>=<sp/>saved_state;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>ncep<sp/>=<sp/><ref refid="acmod_8c_1a9464f7708a361171469d613d401619fe" kindref="member">acmod_process_cep</ref>(acmod,<sp/>&amp;mfcptr,<sp/>&amp;ncep,<sp/>FALSE);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>-=<sp/>ncep;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>+=<sp/>ncep;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>%=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncep;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="acmod_8h_1a23e63c8833e6128ae248e183d42f9b2b" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a23e63c8833e6128ae248e183d42f9b2b" kindref="member">acmod_process_raw</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**inout_raw,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*inout_n_samps,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_utt)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ncep;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>out_frameidx;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*prev_audio_inptr;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>full<sp/>utterance,<sp/>process<sp/>it<sp/>all<sp/>at<sp/>once.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full_utt)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod_process_full_raw(acmod,<sp/>inout_raw,<sp/>inout_n_samps);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>MFCCs<sp/>to<sp/>the<sp/>end<sp/>of<sp/>any<sp/>that<sp/>are<sp/>previously<sp/>in<sp/>there</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(in<sp/>practice,<sp/>there<sp/>will<sp/>probably<sp/>be<sp/>none)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inout_n_samps<sp/>&amp;&amp;<sp/>*inout_n_samps)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inptr;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>processed_samples;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_audio_inptr<sp/>=<sp/>*inout_raw;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Total<sp/>number<sp/>of<sp/>frames<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncep<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>-<sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Where<sp/>to<sp/>start<sp/>writing<sp/>them<sp/>(circular<sp/>buffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>(acmod-&gt;<ref refid="structacmod__s_1afc6ef051f5de03c3f51aa740ff10a99b" kindref="member">mfc_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref>)<sp/>%<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>them<sp/>in<sp/>two<sp/>(or<sp/>more)<sp/>parts<sp/>if<sp/>there<sp/>is<sp/>wraparound.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(inptr<sp/>+<sp/>ncep<sp/>&gt;<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ncep1<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref><sp/>-<sp/>inptr;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe_process_frames(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>,<sp/>inout_raw,<sp/>inout_n_samps,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref><sp/>+<sp/>inptr,<sp/>&amp;ncep1,<sp/>&amp;out_frameidx)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_frameidx<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" kindref="member">utt_start_frame</ref><sp/>=<sp/>out_frameidx;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed_samples<sp/>=<sp/>*inout_raw<sp/>-<sp/>prev_audio_inptr;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processed_samples<sp/>+<sp/>acmod-&gt;rawdata_pos<sp/>&lt;<sp/>acmod-&gt;rawdata_size)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(acmod-&gt;rawdata<sp/>+<sp/>acmod-&gt;rawdata_pos,<sp/>prev_audio_inptr,<sp/>processed_samples<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;rawdata_pos<sp/>+=<sp/>processed_samples;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>logging<sp/>file<sp/>if<sp/>any.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(prev_audio_inptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16),</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed_samples,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_audio_inptr<sp/>=<sp/>*inout_raw;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ncep1<sp/>now<sp/>contains<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>actually</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>processed.<sp/><sp/>This<sp/>is<sp/>a<sp/>good<sp/>thing,<sp/>but<sp/>it<sp/>means<sp/>we</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>actually<sp/>still<sp/>might<sp/>have<sp/>some<sp/>room<sp/>left<sp/>at<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>buffer,<sp/>hence<sp/>the<sp/>while<sp/>loop.<sp/><sp/>Unfortunately<sp/>it</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>also<sp/>means<sp/>that<sp/>in<sp/>the<sp/>case<sp/>where<sp/>we<sp/>are<sp/>really</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>actually<sp/>done,<sp/>we<sp/>need<sp/>to<sp/>get<sp/>out<sp/>totally,<sp/>hence<sp/>the</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>goto.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>+=<sp/>ncep1;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncep<sp/>-=<sp/>ncep1;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>+=<sp/>ncep1;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>%=<sp/>acmod-&gt;<ref refid="structacmod__s_1af4fa71ce8be75356a1f472959a9ff6d1" kindref="member">n_mfc_alloc</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncep1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>alldone;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(inptr<sp/>+<sp/>ncep<sp/>&lt;=<sp/>acmod-&gt;n_mfc_alloc);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe_process_frames(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>,<sp/>inout_raw,<sp/>inout_n_samps,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5ded3dce0428a6ecba97b5d3486e7fa9" kindref="member">mfc_buf</ref><sp/>+<sp/>inptr,<sp/>&amp;ncep,<sp/>&amp;out_frameidx)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_frameidx<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" kindref="member">utt_start_frame</ref><sp/>=<sp/>out_frameidx;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed_samples<sp/>=<sp/>*inout_raw<sp/>-<sp/>prev_audio_inptr;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(processed_samples<sp/>+<sp/>acmod-&gt;rawdata_pos<sp/>&lt;<sp/>acmod-&gt;rawdata_size)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(acmod-&gt;rawdata<sp/>+<sp/>acmod-&gt;rawdata_pos,<sp/>prev_audio_inptr,<sp/>processed_samples<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;rawdata_pos<sp/>+=<sp/>processed_samples;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(prev_audio_inptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16),</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed_samples,<sp/>acmod-&gt;<ref refid="structacmod__s_1aeac89442a04744ca607c4c66dab053e8" kindref="member">rawfh</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_audio_inptr<sp/>=<sp/>*inout_raw;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a1c5d63882997211e57ed698e33080958" kindref="member">n_mfc_frame</ref><sp/>+=<sp/>ncep;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>alldone:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hand<sp/>things<sp/>off<sp/>to<sp/>acmod_process_cep.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod_process_mfcbuf(acmod);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="acmod_8h_1a9464f7708a361171469d613d401619fe" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a9464f7708a361171469d613d401619fe" kindref="member">acmod_process_cep</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>***inout_cep,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inout_n_frames,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_utt)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nfeat,<sp/>ncep,<sp/>inptr;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_n_frames;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>full<sp/>utterance,<sp/>process<sp/>it<sp/>all<sp/>at<sp/>once.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full_utt)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod_process_full_cep(acmod,<sp/>inout_cep,<sp/>inout_n_frames);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>log<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a71903df6839f1f9fcfc2ef2a62a94f8e" kindref="member">mfcfh</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_log_mfc(acmod,<sp/>*inout_cep,<sp/>*inout_n_frames);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Maximum<sp/>number<sp/>of<sp/>frames<sp/>we&apos;re<sp/>going<sp/>to<sp/>generate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>orig_n_frames<sp/>=<sp/>ncep<sp/>=<sp/>nfeat<sp/>=<sp/>*inout_n_frames;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>behaviour<sp/>isn&apos;t<sp/>guaranteed...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" kindref="member">ACMOD_ENDED</ref>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfeat<sp/>+=<sp/>feat_window_size(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" kindref="member">ACMOD_STARTED</ref>)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfeat<sp/>-=<sp/>feat_window_size(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clamp<sp/>number<sp/>of<sp/>features<sp/>to<sp/>fit<sp/>available<sp/>space.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfeat<sp/>&gt;<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>-<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Grow<sp/>it<sp/>as<sp/>needed<sp/>-<sp/>we<sp/>have<sp/>to<sp/>grow<sp/>it<sp/>at<sp/>the<sp/>end<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>utterance<sp/>because<sp/>we<sp/>can&apos;t<sp/>return<sp/>a<sp/>short<sp/>read<sp/>there.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref><sp/>||<sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" kindref="member">ACMOD_ENDED</ref>)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>+<sp/>nfeat);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncep<sp/>-=<sp/>(nfeat<sp/>-<sp/>(acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>-<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>));</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Where<sp/>to<sp/>start<sp/>writing<sp/>in<sp/>the<sp/>feature<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Grow<sp/>to<sp/>avoid<sp/>wraparound<sp/>if<sp/>grow_feat<sp/>==<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inptr<sp/>+<sp/>nfeat<sp/>&gt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>(acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>)<sp/>%<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>we<sp/>can&apos;t<sp/>split<sp/>the<sp/>last<sp/>frame<sp/>drop<sp/>properly<sp/>to<sp/>be<sp/>on<sp/>the<sp/>bounary,</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>just<sp/>return</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inptr<sp/>+<sp/>nfeat<sp/>&gt;<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>&amp;&amp;<sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" kindref="member">ACMOD_ENDED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_n_frames<sp/>-=<sp/>ncep;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_cep<sp/>+=<sp/>ncep;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>them<sp/>in<sp/>two<sp/>parts<sp/>if<sp/>there<sp/>is<sp/>wraparound.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inptr<sp/>+<sp/>nfeat<sp/>&gt;<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ncep1<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>-<sp/>inptr;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>end<sp/>the<sp/>utterance<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfeat<sp/>=<sp/>feat_s2mfc2feat_live(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>*inout_cep,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ncep1,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" kindref="member">ACMOD_STARTED</ref>),</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref><sp/>+<sp/>inptr);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfeat<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>the<sp/>output<sp/>feature<sp/>pointer<sp/>forward.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>+=<sp/>nfeat;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>&lt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>+=<sp/>nfeat;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>%=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>the<sp/>input<sp/>feature<sp/>pointers<sp/>forward.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_n_frames<sp/>-=<sp/>ncep1;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_cep<sp/>+=<sp/>ncep1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncep<sp/>-=<sp/>ncep1;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>nfeat<sp/>=<sp/>feat_s2mfc2feat_live(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>*inout_cep,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ncep,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" kindref="member">ACMOD_STARTED</ref>),</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188" kindref="member">ACMOD_ENDED</ref>),</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref><sp/>+<sp/>inptr);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfeat<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>+=<sp/>nfeat;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>&lt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>the<sp/>input<sp/>feature<sp/>pointers<sp/>forward.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>*inout_n_frames<sp/>-=<sp/>ncep;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>*inout_cep<sp/>+=<sp/>ncep;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>==<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3" kindref="member">ACMOD_STARTED</ref>)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a06adf606c11e6f4b9869742510a5c23b" kindref="member">state</ref><sp/>=<sp/><ref refid="acmod_8h_1a6a74b084234e0e7d5e72161545c5040ba1ed8df720ee7006ebaada8c75371d94c" kindref="member">ACMOD_PROCESSING</ref>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orig_n_frames<sp/>-<sp/>*inout_n_frames;</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="acmod_8h_1ab16e414d5a07519d7b462c32377e8a47" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1ab16e414d5a07519d7b462c32377e8a47" kindref="member">acmod_process_feat</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**feat)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>inptr;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>==<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref>)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Grow<sp/>to<sp/>avoid<sp/>wraparound<sp/>if<sp/>grow_feat<sp/>==<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inptr<sp/>+<sp/>1<sp/>&gt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>(acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>)<sp/>%<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>feat_dimension1(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>);<sp/>++i)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>[inptr][i],</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat[i],<sp/>feat_dimension2(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>i)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**feat));</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>++acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>&lt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal">acmod_read_senfh_header(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**name,<sp/>**val;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>swap;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bio_readhdr(acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref>,<sp/>&amp;name,<sp/>&amp;val,<sp/>&amp;swap)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>name[i]<sp/>!=<sp/>NULL;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name[i],<sp/></highlight><highlight class="stringliteral">&quot;n_sen&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi(val[i])<sp/>!=<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>))<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>senones<sp/>in<sp/>senone<sp/>file<sp/>(%d)<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>mdef<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>atoi(val[i]),</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name[i],<sp/></highlight><highlight class="stringliteral">&quot;logbase&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(atof_c(val[i])<sp/>-<sp/>logmath_get_base(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>))<sp/>&gt;<sp/>0.001)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Logbase<sp/>in<sp/>senone<sp/>file<sp/>(%f)<sp/>does<sp/>not<sp/>match<sp/>acmod<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%f)\n&quot;</highlight><highlight class="normal">,<sp/>atof_c(val[i]),</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logmath_get_base(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ae6ed7e1e5b4bec021a0ba17c0ac02bd7" kindref="member">insen_swap</ref><sp/>=<sp/>swap;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>bio_hdrarg_free(name,<sp/>val);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="878"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>bio_hdrarg_free(name,<sp/>val);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="acmod_8h_1ad8da89ae642a4a9a5e57390e9ce387c5" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a58bd6038bec5d3901ac2057cacdd778a" kindref="member">acmod_set_insenfh</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>FILE<sp/>*senfh)</highlight></codeline>
<codeline lineno="885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref><sp/>=<sp/>senfh;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(senfh<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref><sp/>=<sp/>cmd_ln_boolean_r(acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-compallsen&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod_read_senfh_header(acmod);</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="acmod_8h_1a7b5f0b6edac2985b9b56d630cd705b99" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a7b5f0b6edac2985b9b56d630cd705b99" kindref="member">acmod_rewind</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>feature<sp/>buffer<sp/>is<sp/>circular,<sp/>this<sp/>is<sp/>not<sp/>possible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>&gt;<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Circular<sp/>feature<sp/>buffer<sp/>cannot<sp/>be<sp/>rewound<sp/>(output<sp/>frame<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alloc<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Frames<sp/>consumed<sp/>+<sp/>frames<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>output<sp/>pointers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" kindref="member">senscr_frame</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>-&gt;<ref refid="structps__mgau__s_1a19cc836a740e32d0fa88c46fcdc19d75" kindref="member">frame_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="acmod_8h_1a338971ea0aa27fb4796d224e4767642b" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a338971ea0aa27fb4796d224e4767642b" kindref="member">acmod_advance</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>the<sp/>output<sp/>pointers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>==<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>--acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>++acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>-&gt;<ref refid="structps__mgau__s_1a19cc836a740e32d0fa88c46fcdc19d75" kindref="member">frame_idx</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref>;</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931" refid="acmod_8h_1a66d1f73cd1d975ec0da9de00b80b36e2" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a66d1f73cd1d975ec0da9de00b80b36e2" kindref="member">acmod_write_scores</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_active,<sp/>uint8<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*active,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr,<sp/>FILE<sp/>*senfh)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>n_active2;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Uncompressed<sp/>frame<sp/>format:</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(2<sp/>bytes)<sp/>n_active:<sp/>Number<sp/>of<sp/>active<sp/>senones</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>all<sp/>senones<sp/>active:</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(n_active<sp/>*<sp/>2<sp/>bytes)<sp/>scores<sp/>of<sp/>active<sp/>senones</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Otherwise:</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(2<sp/>bytes)<sp/>n_active:<sp/>Number<sp/>of<sp/>active<sp/>senones</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(n_active<sp/>bytes)<sp/>deltas<sp/>to<sp/>active<sp/>senones</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(n_active<sp/>*<sp/>2<sp/>bytes)<sp/>scores<sp/>of<sp/>active<sp/>senones</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>n_active2<sp/>=<sp/>n_active;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;n_active2,<sp/>2,<sp/>1,<sp/>senfh)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_active<sp/>==<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>))<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(senscr,<sp/>2,<sp/>n_active,<sp/>senfh)<sp/>!=<sp/>n_active)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(active,<sp/>1,<sp/>n_active,<sp/>senfh)<sp/>!=<sp/>n_active)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>n<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_active;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>active[i];</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(senscr<sp/>+<sp/>n,<sp/>2,<sp/>1,<sp/>senfh)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>frame<sp/>to<sp/>senone<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal">acmod_read_scores_internal(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*senfh<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>n_active;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref><sp/>==<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref>)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(senfh<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/>fread(&amp;n_active,<sp/>2,<sp/>1,<sp/>senfh))<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref><sp/>=<sp/>n_active;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref><sp/>==<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>))<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/>fread(acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>,<sp/>2,</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>,<sp/>senfh))<sp/>!=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/>fread(acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>,<sp/>senfh))<sp/>!=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>sen<sp/>=<sp/>n<sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>[i];</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>n<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>sen;<sp/>++j)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>[j]<sp/>=<sp/><ref refid="acmod_8h_1ace94548e8c9429394d130e2f9921d59b" kindref="member">SENSCR_DUMMY</ref>;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((rv<sp/>=<sp/>fread(acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref><sp/>+<sp/>sen,<sp/>2,<sp/>1,<sp/>senfh))<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>))</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>[n++]<sp/>=<sp/><ref refid="acmod_8h_1ace94548e8c9429394d130e2f9921d59b" kindref="member">SENSCR_DUMMY</ref>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ferror(senfh))<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>frame<sp/>from<sp/>senone<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="acmod_8h_1a5c193164be78ad42944b7fb1be6299a2" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a5c193164be78ad42944b7fb1be6299a2" kindref="member">acmod_read_scores</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inptr,<sp/>rv;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1acbb3fed9495e7b80da79cb03ff3079a1" kindref="member">grow_feat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Grow<sp/>to<sp/>avoid<sp/>wraparound<sp/>if<sp/>grow_feat<sp/>==<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>to<sp/>be<sp/>+1,<sp/>otherwise,<sp/>next<sp/>time<sp/>acmod_advance()<sp/>is</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>called,<sp/>this<sp/>will<sp/>wrap<sp/>around.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inptr<sp/>+<sp/>1<sp/>&gt;=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod_grow_feat_buf(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>(acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>)<sp/>%</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rv<sp/>=<sp/>acmod_read_scores_internal(acmod))<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>acmod-&gt;senscr_frame<sp/>appropriately<sp/>so<sp/>that<sp/>these<sp/>scores</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get<sp/>reused<sp/>below<sp/>in<sp/>acmod_score().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" kindref="member">senscr_frame</ref><sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>+<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>E_DEBUG(1,(</highlight><highlight class="stringliteral">&quot;Frame<sp/>%d<sp/>has<sp/>%d<sp/>active<sp/>states\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" kindref="member">senscr_frame</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>the<sp/>&quot;feature<sp/>frame<sp/>counter&quot;<sp/>and<sp/>record<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>position<sp/>for<sp/>the<sp/>relevant<sp/>frame<sp/>in<sp/>the<sp/>(possibly<sp/>circular)</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>++acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref>[inptr]<sp/>=<sp/>ftell(acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref>);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal">calc_frame_idx(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inout_frame_idx)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>absolute<sp/>frame<sp/>index<sp/>to<sp/>be<sp/>scored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inout_frame_idx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*inout_frame_idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>+<sp/>1<sp/>+<sp/>*inout_frame_idx;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>*inout_frame_idx;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame_idx;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal">calc_feat_idx(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_backfr,<sp/>feat_idx;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>n_backfr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref><sp/>-<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_idx<sp/>&lt;<sp/>0<sp/>||<sp/>acmod-&gt;output_frame<sp/>-<sp/>frame_idx<sp/>&gt;<sp/>n_backfr)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Frame<sp/>%d<sp/>outside<sp/>queue<sp/>of<sp/>%d<sp/>frames,<sp/>%d<sp/>alloc<sp/>(%d<sp/>&gt;<sp/>%d),<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>score\n&quot;</highlight><highlight class="normal">,<sp/>frame_idx,<sp/>acmod-&gt;<ref refid="structacmod__s_1a861cc097befe7e81473f0ae0972186e0" kindref="member">n_feat_frame</ref>,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref><sp/>-<sp/>frame_idx,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_backfr);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>index<sp/>in<sp/>feat_buf/framepos<sp/>of<sp/>the<sp/>frame<sp/>to<sp/>be<sp/>scored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>feat_idx<sp/>=<sp/>(acmod-&gt;<ref refid="structacmod__s_1ae15076737bcdcbe1d5b4226f7a0b3f5b" kindref="member">feat_outidx</ref><sp/>+<sp/>frame_idx<sp/>-<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref>)<sp/>%</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(feat_idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feat_idx<sp/>+=<sp/>acmod-&gt;<ref refid="structacmod__s_1a8269cb11354683ba83f1994b46e15466" kindref="member">n_feat_alloc</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feat_idx;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal">mfcc_t<sp/>**</highlight></codeline>
<codeline lineno="1108" refid="acmod_8h_1a91c63cce3b20f231aa483bf054eca3c6" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a91c63cce3b20f231aa483bf054eca3c6" kindref="member">acmod_get_frame</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inout_frame_idx)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/>feat_idx;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>absolute<sp/>frame<sp/>index<sp/>requested.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>calc_frame_idx(acmod,<sp/>inout_frame_idx);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>position<sp/>of<sp/>requested<sp/>frame<sp/>in<sp/>circular<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((feat_idx<sp/>=<sp/>calc_feat_idx(acmod,<sp/>frame_idx))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inout_frame_idx)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_frame_idx<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>[feat_idx];</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal">int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1126" refid="acmod_8h_1acd78e9bae06724df9c53f844d90c1c8a" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inout_frame_idx)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/>feat_idx;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>absolute<sp/>frame<sp/>index<sp/>to<sp/>be<sp/>scored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>calc_frame_idx(acmod,<sp/>inout_frame_idx);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>all<sp/>senones<sp/>are<sp/>being<sp/>computed,<sp/>or<sp/>we<sp/>are<sp/>using<sp/>a<sp/>senone<sp/>file,</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>we<sp/>can<sp/>reuse<sp/>existing<sp/>scores.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref><sp/>||<sp/>acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref>)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>frame_idx<sp/>==<sp/>acmod-&gt;<ref refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" kindref="member">senscr_frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inout_frame_idx)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_frame_idx<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>position<sp/>of<sp/>requested<sp/>frame<sp/>in<sp/>circular<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((feat_idx<sp/>=<sp/>calc_feat_idx(acmod,<sp/>frame_idx))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>there<sp/>is<sp/>an<sp/>input<sp/>senone<sp/>file<sp/>locate<sp/>the<sp/>appropriate<sp/>frame<sp/>and<sp/>read</highlight></codeline>
<codeline lineno="1148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it.</highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(acmod-&gt;<ref refid="structacmod__s_1ad0998a9d887db82bd684e9454c9b044e" kindref="member">insenfh</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1abfd364dafee513f523e1566bb706e48b" kindref="member">framepos</ref>[feat_idx],<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod_read_scores_internal(acmod)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>active<sp/>senone<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1ad12224c741f7ea76faf88a29537f83dd" kindref="member">acmod_flags2list</ref>(acmod);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>scores<sp/>for<sp/>the<sp/>next<sp/>available<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_mgau_frame_eval(acmod-&gt;<ref refid="structacmod__s_1a023addd9fe7252d87c683e02485cdafd" kindref="member">mgau</ref>,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1afc52cc0151f6c7e32a230576141d20a3" kindref="member">feat_buf</ref>[feat_idx],</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inout_frame_idx)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inout_frame_idx<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1ab70ba4caf96b656936d499247e921f00" kindref="member">senscr_frame</ref><sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Dump<sp/>scores<sp/>to<sp/>the<sp/>senone<sp/>dump<sp/>file<sp/>if<sp/>one<sp/>exists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="acmod_8c_1a66d1f73cd1d975ec0da9de00b80b36e2" kindref="member">acmod_write_scores</ref>(acmod,<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aba97a9733b64074f3a4699dfbaed5ffd" kindref="member">senfh</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(1,(</highlight><highlight class="stringliteral">&quot;Frame<sp/>%d<sp/>has<sp/>%d<sp/>active<sp/>states\n&quot;</highlight><highlight class="normal">,<sp/>frame_idx,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188" refid="acmod_8h_1a3249e1ce0c8155dc23f332f97ddd493b" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a3249e1ce0c8155dc23f332f97ddd493b" kindref="member">acmod_best_score</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_best_senid)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>best;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="acmod_8h_1ace94548e8c9429394d130e2f9921d59b" kindref="member">SENSCR_DUMMY</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>[i]<sp/>&lt;<sp/>best)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>[i];</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_best_senid<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senscr;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senscr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1aa341539b98a5b13bef8589fc8d948da8" kindref="member">senone_scores</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senscr<sp/>+=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>[i];</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*senscr<sp/>&lt;<sp/>best)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>*senscr;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_best_senid<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="acmod_8h_1aed43f033f434e34fd90c975909d81cb2" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(acmod-&gt;<ref refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" kindref="member">senone_active_vec</ref>,<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>));</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPX_BITVEC_SET(a,h,i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(hmm_mpx_ssid(h,i)<sp/>!=<sp/>BAD_SSID)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set((a)-&gt;senone_active_vec,<sp/>hmm_mpx_senid(h,i))</highlight></codeline>
<codeline lineno="1228"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NONMPX_BITVEC_SET(a,h,i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bitvec_set((a)-&gt;senone_active_vec,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_nonmpx_senid(h,i))</highlight></codeline>
<codeline lineno="1231"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233" refid="acmod_8h_1a2a7f67d462279b2bc4774c7967ae61c7" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_is_mpx(hmm))<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(hmm_n_emit_state(hmm))<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>4);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>3);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>2);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>1);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>0);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>i);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(hmm_n_emit_state(hmm))<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NONMPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>4);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NONMPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>3);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NONMPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>2);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NONMPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>1);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NONMPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>0);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmm_n_emit_state(hmm);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NONMPX_BITVEC_SET(acmod,<sp/>hmm,<sp/>i);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="1274" refid="acmod_8h_1ad12224c741f7ea76faf88a29537f83dd" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1ad12224c741f7ea76faf88a29537f83dd" kindref="member">acmod_flags2list</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>w,<sp/>l,<sp/>n,<sp/>b,<sp/>total_dists,<sp/>total_words,<sp/>extra_bits;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_t<sp/>*flagptr;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>total_dists<sp/>=<sp/>bin_mdef_n_sen(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref><sp/>=<sp/>total_dists;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_dists;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>total_words<sp/>=<sp/>total_dists<sp/>/<sp/>BITVEC_BITS;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>extra_bits<sp/>=<sp/>total_dists<sp/>%<sp/>BITVEC_BITS;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>n<sp/>=<sp/>l<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(flagptr<sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a4a3ad3a3dc9a7b36c024c77729012e55" kindref="member">senone_active_vec</ref>;<sp/>w<sp/>&lt;<sp/>total_words;<sp/>++w,<sp/>++flagptr)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*flagptr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>BITVEC_BITS;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*flagptr<sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>b))<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>sen<sp/>=<sp/>w<sp/>*<sp/>BITVEC_BITS<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>delta<sp/>=<sp/>sen<sp/>-<sp/>l;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>excessive<sp/>deltas<sp/>&quot;lossily&quot;<sp/>by<sp/>adding<sp/>a<sp/>few</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra<sp/>senones<sp/>to<sp/>bridge<sp/>the<sp/>gap.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(delta<sp/>&gt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>[n++]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>255;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>[n++]<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>extra_bits;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*flagptr<sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>b))<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>sen<sp/>=<sp/>w<sp/>*<sp/>BITVEC_BITS<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>delta<sp/>=<sp/>sen<sp/>-<sp/>l;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>excessive<sp/>deltas<sp/>&quot;lossily&quot;<sp/>by<sp/>adding<sp/>a<sp/>few</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra<sp/>senones<sp/>to<sp/>bridge<sp/>the<sp/>gap.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(delta<sp/>&gt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>[n++]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>255;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5c98c727daf4e6bb23534e00b30cb5c2" kindref="member">senone_active</ref>[n++]<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>E_DEBUG(1,<sp/>(</highlight><highlight class="stringliteral">&quot;acmod_flags2list:<sp/>%d<sp/>active<sp/>in<sp/>frame<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>,<sp/>acmod-&gt;<ref refid="structacmod__s_1aec694af0767ac5e8f1022b6252111885" kindref="member">output_frame</ref>));</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="1328" refid="acmod_8h_1a8b52ce1289cc84deda1cf98b4cebbca2" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a8b52ce1289cc84deda1cf98b4cebbca2" kindref="member">acmod_stream_offset</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acmod-&gt;<ref refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" kindref="member">utt_start_frame</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334" refid="acmod_8h_1ae065d2fafc704177e7537988c9d3b5c1" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1ae065d2fafc704177e7537988c9d3b5c1" kindref="member">acmod_start_stream</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_start_stream(acmod-&gt;<ref refid="structacmod__s_1a56eaceb9b6a1cbcccd09cf42cfa87231" kindref="member">fe</ref>);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aecf7cf72f18a8ecb1cc8e96928bc1ad4" kindref="member">utt_start_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341" refid="acmod_8h_1a8c8dce7790c4486d1ee1b20d810805bf" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a8c8dce7790c4486d1ee1b20d810805bf" kindref="member">acmod_set_rawdata_size</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>int32<sp/>size)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(size<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>acmod-&gt;rawdata_size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acmod-&gt;rawdata_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(acmod-&gt;rawdata);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;rawdata<sp/>=<sp/>ckd_calloc(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16));</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352" refid="acmod_8h_1a0804fc79c26de167a95ece1189effbec" refkind="member"><highlight class="normal"><ref refid="acmod_8c_1a0804fc79c26de167a95ece1189effbec" kindref="member">acmod_get_rawdata</ref>(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/>int16<sp/>**buffer,<sp/>int32<sp/>*size)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>acmod-&gt;rawdata;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>acmod-&gt;rawdata_pos;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/acmod.c"/>
  </compounddef>
</doxygen>
