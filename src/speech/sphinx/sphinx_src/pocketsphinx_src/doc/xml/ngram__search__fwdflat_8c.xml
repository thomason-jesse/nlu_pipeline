<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ngram__search__fwdflat_8c" kind="file">
    <compoundname>ngram_search_fwdflat.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/listelem_alloc.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes refid="ngram__search_8h" local="yes">ngram_search.h</includes>
    <includes refid="ps__lattice__internal_8h" local="yes">ps_lattice_internal.h</includes>
    <incdepgraph>
      <node id="1523">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="1527">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1546">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
      </node>
      <node id="1516">
        <label>assert.h</label>
      </node>
      <node id="1548">
        <label>float.h</label>
      </node>
      <node id="1532">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1521">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1542">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
      </node>
      <node id="1531">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1525">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1545">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1514">
        <label>src/libpocketsphinx/ngram_search_fwdflat.c</label>
        <link refid="ngram_search_fwdflat.c"/>
        <childnode refid="1515" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
      </node>
      <node id="1541">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1517">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1518">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1524">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
      </node>
      <node id="1543">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
      </node>
      <node id="1526">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1529">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
      </node>
      <node id="1515">
        <label>string.h</label>
      </node>
      <node id="1534">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1538">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1520">
        <label>ngram_search.h</label>
        <link refid="ngram__search_8h"/>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1539">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1536">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
      </node>
      <node id="1550">
        <label>ps_lattice_internal.h</label>
        <link refid="ps__lattice__internal_8h"/>
      </node>
      <node id="1519">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1537">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="1535">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
      </node>
      <node id="1533">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
      </node>
      <node id="1549">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
      </node>
      <node id="1540">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
      </node>
      <node id="1522">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1547">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
      </node>
      <node id="1544">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
      </node>
      <node id="1528">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="1530">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ngram__search__fwdflat_8c_1a58360b0a332f35742f89edce94c649aa" prot="public" static="no">
        <name>__CHAN_DUMP__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="56" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ngram__search__fwdflat_8c_1a268c1fbc6483e1ab06c007222f08d9ad" prot="public" static="no">
        <name>chan_v_eval</name>
        <param><defname>chan</defname></param>
        <initializer><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(&amp;(chan)-&gt;hmm)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="60" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a4b3bb97f03ae61de2bbf9b9716e88aa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_fwdflat_expand_all</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_expand_all</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="64" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="64" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a97de054e6b7cc42faa34b0d187dbcbbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_fwdflat_allocate_1ph</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_allocate_1ph</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="91" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="91" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a4e213a7bfd73792ae052b01c2ef83449" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_fwdflat_free_1ph</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_free_1ph</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="128" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="128" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1ad4b8ebd904c77f8a28f59cd5ca2c8307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdflat_init</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_init</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Initialize N-Gram search for fwdflat decoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="145" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="145" bodyend="166"/>
        <references refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" compoundref="ngram__search_8h" startline="317">ngram_search_s::fwdflat_wordlist</references>
        <references refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" compoundref="ngram__search_8h" startline="316">ngram_search_s::frm_wordlist</references>
        <references refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" compoundref="ngram__search_8h" startline="307">ngram_search_s::n_frame_alloc</references>
        <referencedby refid="ngram__search_8h_1a04f80b377c847026254fb85596e2f43c" compoundref="ngram__search_8c" startline="140" endline="237">ngram_search_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a8faf467f90162a7273b23304fc6e8586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdflat_deinit</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_deinit</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Release memory associated with fwdflat decoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="169" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="169" bodyend="189"/>
        <references refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" compoundref="ngram__search_8h" startline="317">ngram_search_s::fwdflat_wordlist</references>
        <references refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" compoundref="ngram__search_8h" startline="316">ngram_search_s::frm_wordlist</references>
        <referencedby refid="ngram__search_8h_1a9bafaa4af5a9a4f9e76a8daf54ac4a11" compoundref="ngram__search_8c" startline="289" endline="326">ngram_search_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1aa4879c06ddbc455a6f355084a9c574b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_fwdflat_reinit</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_reinit</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Rebuild search structures for updated language models. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="192" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="192" bodyend="221"/>
        <references refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" compoundref="ngram__search_8h" startline="317">ngram_search_s::fwdflat_wordlist</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" compoundref="dict_8h" startline="151">dict_size</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1ab33d5287ad874715ecc071771b9ba672" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void build_fwdflat_wordlist</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>build_fwdflat_wordlist</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Find all active words in backpointer table and sort by frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="227" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="227" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1abb1b0175545410edebb626d5ed259c7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void build_fwdflat_chan</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>build_fwdflat_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Build HMM network for one utterance of fwdflat search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="309" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="309" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a763c2c7aaa5d7f9c5107af73552a2149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdflat_start</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_start</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Start fwdflat decoding for an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="374" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="374" bodyend="417"/>
        <references refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" compoundref="ngram__search_8h" startline="265">ngram_search_s::n_1ph_words</references>
        <references refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" compoundref="ngram__search_8h" startline="264">ngram_search_s::single_phone_wid</references>
        <references refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" compoundref="ngram__search_8h" startline="246">ngram_search_s::word_chan</references>
        <references refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" compoundref="hmm_8c" startline="183" endline="198">hmm_clear</references>
        <references refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" compoundref="ngram__search_8h" startline="91">root_chan_s::hmm</references>
        <references refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" compoundref="hmm_8c" startline="201" endline="206">hmm_enter</references>
        <references refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" compoundref="ngram__search_8h" startline="287">ngram_search_s::active_word_list</references>
        <references refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" compoundref="ngram__search_8h" startline="288">ngram_search_s::n_active_word</references>
        <references refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" compoundref="ngram__search_8h" startline="325">ngram_search_s::best_score</references>
        <references refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" compoundref="ngram__search_8h" startline="308">ngram_search_s::n_frame</references>
        <references refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" compoundref="ngram__search_8h" startline="335">ngram_search_s::st</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a28d2af5dda6e7e4171f31bc7500323b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_fwdflat_sen_active</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>compute_fwdflat_sen_active</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="420" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="420" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a37f11f6ff87e22e6ff67a0bf24a8ad1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwdflat_eval_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>fwdflat_eval_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="448" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="448" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1af686512ceb9c4a6e4868a1c95cfc8a7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwdflat_prune_chan</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>fwdflat_prune_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="486" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="486" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1af3892420ce2294c08cce4ce49888f089" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_expand_wordlist</definition>
        <argsstring>(ngram_search_t *ngs, int32 frm, int32 win)</argsstring>
        <name>get_expand_wordlist</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>frm</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="613" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="613" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a6eb9500ec9bab725ab69fce7dd1fe19e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwdflat_word_transition</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>fwdflat_word_transition</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="646" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="646" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a46dc6ea4131754bd3de7759460b4b04b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fwdflat_renormalize_scores</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx, int32 norm)</argsstring>
        <name>fwdflat_renormalize_scores</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="788" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="788" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1ae77ef21ae92dbcc4b14f40469fbd4307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_fwdflat_search</definition>
        <argsstring>(ngram_search_t *ngs, int frame_idx)</argsstring>
        <name>ngram_fwdflat_search</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
<para>Search one frame forward in an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="816" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="816" bodyend="877"/>
        <references refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" compoundref="acmod_8c" startline="1126" endline="1185">acmod_score</references>
        <references refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" compoundref="ngram__search_8h" startline="335">ngram_search_s::st</references>
        <references refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" compoundref="ngram__search_8c" startline="329" endline="345">ngram_search_mark_bptable</references>
        <references refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" compoundref="ngram__search_8h" startline="325">ngram_search_s::best_score</references>
        <references refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" compoundref="hmm_8h" startline="100">WORSE_THAN</references>
        <references refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" compoundref="hmm_8h" startline="84">WORST_SCORE</references>
        <references refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" compoundref="hmm_8h" startline="227">hmm_context_set_senscore</references>
        <references refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" compoundref="ngram__search_8h" startline="200">ngram_search_s::hmmctx</references>
        <references refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" compoundref="ngram__search_8h" startline="287">ngram_search_s::active_word_list</references>
        <references refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" compoundref="ngram__search_8h" startline="317">ngram_search_s::fwdflat_wordlist</references>
        <references refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" compoundref="ngram__search_8h" startline="247">ngram_search_s::word_active</references>
        <references refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" compoundref="ngram__search_8h" startline="308">ngram_search_s::n_frame</references>
        <references refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" compoundref="ngram__search_8h" startline="288">ngram_search_s::n_active_word</references>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a226667157f956379c4da4213811179e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_fwdflat_wordlist</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>destroy_fwdflat_wordlist</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Destroy wordlist from the current utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="883" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="883" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1a772ee3056ec201a23ddaf626db3955de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_fwdflat_chan</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>destroy_fwdflat_chan</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Free HMM network for one utterance of fwdflat search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="903" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="903" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="ngram__search__fwdflat_8c_1ac855cf540ac4acdfa320629720ded6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_fwdflat_finish</definition>
        <argsstring>(ngram_search_t *ngs)</argsstring>
        <name>ngram_fwdflat_finish</name>
        <param>
          <type><ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref> *</type>
          <declname>ngs</declname>
        </param>
        <briefdescription>
<para>Finish fwdflat decoding for an utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" line="929" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c" bodystart="929" bodyend="965"/>
        <references refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" compoundref="ngram__search_8h" startline="247">ngram_search_s::word_active</references>
        <references refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" compoundref="ngram__search_8c" startline="329" endline="345">ngram_search_mark_bptable</references>
        <references refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" compoundref="ngram__search_8h" startline="335">ngram_search_s::st</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Flat lexicon search. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/listelem_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__search_8h" kindref="compound">ngram_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ps__lattice__internal_8h" kindref="compound">ps_lattice_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Turn<sp/>this<sp/>on<sp/>to<sp/>dump<sp/>channels<sp/>for<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CHAN_DUMP__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>__CHAN_DUMP__</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>chan_v_eval(chan)<sp/>hmm_dump_vit_eval(&amp;(chan)-&gt;hmm,<sp/>stderr)</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>chan_v_eval(chan)<sp/>hmm_vit_eval(&amp;(chan)-&gt;hmm)</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">ngram_fwdflat_expand_all(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_words,<sp/>i;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>all<sp/>&quot;real<sp/>words&quot;<sp/>(not<sp/>fillers<sp/>or<sp/>&lt;s&gt;/&lt;/s&gt;)<sp/>in<sp/>the<sp/>dictionary,</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>1)<sp/>Add<sp/>the<sp/>ones<sp/>which<sp/>are<sp/>in<sp/>the<sp/>LM<sp/>to<sp/>the<sp/>fwdflat<sp/>wordlist</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>2)<sp/>And<sp/>to<sp/>the<sp/>expansion<sp/>list<sp/>(since<sp/>we<sp/>are<sp/>expanding<sp/>all)</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;n_expand_words<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(ngs-&gt;expand_word_flag,<sp/>ps_search_n_words(ngs));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_words;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngram_model_set_known_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basewid(ps_search_dict(ngs),i)))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[ngs-&gt;n_expand_words]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_list[ngs-&gt;n_expand_words]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;expand_word_flag,<sp/>i);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;n_expand_words++;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Utterance<sp/>vocabulary<sp/>contains<sp/>%d<sp/>words\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;n_expand_words);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_list[ngs-&gt;n_expand_words]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[ngs-&gt;n_expand_words]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">ngram_fwdflat_allocate_1ph(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>ps_search_dict(ngs);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>w;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>single-phone<sp/>words,<sp/>since<sp/>they<sp/>won&apos;t<sp/>have</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>been<sp/>allocated<sp/>for<sp/>us<sp/>by<sp/>fwdtree<sp/>initialization.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(dict,<sp/>w))</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref><sp/>=<sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref><sp/>=<sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict_is_single_phone(dict,<sp/>w))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID<sp/>location<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref><sp/>=<sp/>dict_first_phone(dict,<sp/>w);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref><sp/>=<sp/>bin_mdef_silphone(ps_search_acmod(ngs)-&gt;mdef);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>TRUE,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ssid<sp/>*/</highlight><highlight class="normal"><sp/>bin_mdef_pid2ssid(ps_search_acmod(ngs)-&gt;mdef,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tmatid<sp/>*/</highlight><highlight class="normal"><sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w]<sp/>=<sp/>(<ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*)<sp/>&amp;(ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">ngram_fwdflat_free_1ph(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>w;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>n_words;<sp/>++w)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict_is_single_phone(ps_search_dict(ngs),<sp/>w))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>(&amp;ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>[i].<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a1ffa3c9100252122ae8a2a713c50b527" kindref="member">rhmm_1ph</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="ngram__search__fwdflat_8h_1ad4b8ebd904c77f8a28f59cd5ca2c8307" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdflat_8c_1ad4b8ebd904c77f8a28f59cd5ca2c8307" kindref="member">ngram_fwdflat_init</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_words;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref><sp/>=<sp/>ckd_calloc(n_words<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_flag<sp/>=<sp/>bitvec_alloc(n_words);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_list<sp/>=<sp/>ckd_calloc(n_words<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;expand_word_list));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref><sp/>=<sp/>ckd_calloc(ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;min_ef_width<sp/>=<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-fwdflatefwid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;max_sf_win<sp/>=<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-fwdflatsfwin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fwdflat:<sp/>min_ef_width<sp/>=<sp/>%d,<sp/>max_sf_win<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;min_ef_width,<sp/>ngs-&gt;max_sf_win);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>tree-search;<sp/>pre-build<sp/>the<sp/>expansion<sp/>list,<sp/>including<sp/>all<sp/>LM<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>full<sp/>expansion<sp/>list<sp/>from<sp/>LM<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_fwdflat_expand_all(ngs);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>single<sp/>phone<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_fwdflat_allocate_1ph(ngs);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="ngram__search__fwdflat_8h_1a8faf467f90162a7273b23304fc6e8586" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdflat_8c_1a8faf467f90162a7273b23304fc6e8586" kindref="member">ngram_fwdflat_deinit</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)ngs-&gt;n_tot_frame</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>fwdflat<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_tot_cpu,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_tot_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>fwdflat<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_tot_elapsed,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_tot_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>single-phone<sp/>words<sp/>if<sp/>we<sp/>allocated<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_fwdflat_free_1ph(ngs);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(ngs-&gt;expand_word_flag);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;expand_word_list);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="ngram__search__fwdflat_8h_1aa4879c06ddbc455a6f355084a9c574b4" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdflat_8c_1aa4879c06ddbc455a6f355084a9c574b4" kindref="member">ngram_fwdflat_reinit</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reallocate<sp/>things<sp/>that<sp/>depend<sp/>on<sp/>the<sp/>number<sp/>of<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_words;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;expand_word_list);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_free(ngs-&gt;expand_word_flag);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/>ps_search_n_words(ngs);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref><sp/>=<sp/>ckd_calloc(n_words<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_flag<sp/>=<sp/>bitvec_alloc(n_words);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_list<sp/>=<sp/>ckd_calloc(n_words<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;expand_word_list));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>tree-search;<sp/>take<sp/>care<sp/>of<sp/>the<sp/>expansion<sp/>list<sp/>and<sp/>single<sp/>phone<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>single-phone<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_fwdflat_free_1ph(ngs);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reallocate<sp/>word_chan.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref><sp/>=<sp/>ckd_calloc(<ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(ps_search_dict(ngs)),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rebuild<sp/>full<sp/>expansion<sp/>list<sp/>from<sp/>LM<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_fwdflat_expand_all(ngs);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>single<sp/>phone<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_fwdflat_allocate_1ph(ngs);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>do<sp/>since<sp/>the<sp/>wordlist<sp/>is</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>generated<sp/>anew<sp/>every<sp/>utterance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">build_fwdflat_wordlist(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>f,<sp/>sf,<sp/>ef,<sp/>wid,<sp/>nwd;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bp;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node,<sp/>*prevnode,<sp/>*nextnode;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>tree-search,<sp/>use<sp/>statically<sp/>allocated<sp/>wordlist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>,<sp/>0,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a38ea5de504b3d7ad2390a3f8966d502f" kindref="member">n_frame_alloc</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>the<sp/>backpointer<sp/>table<sp/>for<sp/>all<sp/>active<sp/>words<sp/>and<sp/>record</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>their<sp/>exit<sp/>frames.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>bp<sp/>=<sp/>ngs-&gt;bp_table;<sp/>i<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>i++,<sp/>bp++)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>(bp-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref><sp/>&lt;<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>ngs-&gt;bp_table[bp-&gt;<ref refid="structbptbl__s_1a4ca45ebc4a1ac18fc0596195e7e03bc8" kindref="member">bp</ref>].<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>=<sp/>bp-&gt;<ref refid="structbptbl__s_1ae52081dde905cf6e7d988cdeb4c9b8b3" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>bp-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Anything<sp/>that<sp/>can<sp/>be<sp/>transitioned<sp/>to<sp/>in<sp/>the<sp/>LM<sp/>can<sp/>go<sp/>in</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>word<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!ngram_model_set_known_wid(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basewid(ps_search_dict(ngs),<sp/>wid)))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>it<sp/>in<sp/>the<sp/>wordlist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[sf];<sp/>node<sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>!=<sp/>wid);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>last<sp/>end<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>node;<sp/>link<sp/>to<sp/>head<sp/>of<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" kindref="member">latnode_alloc</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>=<sp/>wid;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref><sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[sf];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[sf]<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Eliminate<sp/>&quot;unlikely&quot;<sp/>words,<sp/>for<sp/>which<sp/>there<sp/>are<sp/>too<sp/>few<sp/>end<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevnode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[f];<sp/>node;<sp/>node<sp/>=<sp/>nextnode)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextnode<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>has<sp/>too<sp/>few<sp/>endpoints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>-<sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>&lt;<sp/>ngs-&gt;min_ef_width)<sp/>||</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>is<sp/>&lt;/s&gt;<sp/>and<sp/>doesn&apos;t<sp/>actually<sp/>end<sp/>in<sp/>last<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs))<sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref><sp/>-<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prevnode)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[f]<sp/>=<sp/>nextnode;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevnode-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref><sp/>=<sp/>nextnode;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listelem_free(ngs-&gt;<ref refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" kindref="member">latnode_alloc</ref>,<sp/>node);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevnode<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Form<sp/>overall<sp/>wordlist<sp/>for<sp/>2nd<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>nwd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>ps_search_n_words(ngs));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[f];<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitvec_is_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[nwd++]<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[nwd]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Utterance<sp/>vocabulary<sp/>contains<sp/>%d<sp/>words\n&quot;</highlight><highlight class="normal">,<sp/>nwd);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">build_fwdflat_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>wid,<sp/>p;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*prevhmm;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>ps_search_dict(ngs);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>d2p<sp/>=<sp/>ps_search_dict2pid(ngs);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>word<sp/>HMMs<sp/>for<sp/>each<sp/>word<sp/>in<sp/>the<sp/>lattice.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[i]<sp/>&gt;=<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[i];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single-phone<sp/>words<sp/>are<sp/>permanently<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(dict,<sp/>wid))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid]<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiplex<sp/>root<sp/>HMM<sp/>for<sp/>first<sp/>phone<sp/>(one<sp/>root<sp/>per<sp/>word,<sp/>flat</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lexicon).<sp/><sp/>diphone<sp/>is<sp/>irrelevant<sp/>here,<sp/>for<sp/>the<sp/>time<sp/>being,</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>at<sp/>least.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1a576470858bfa44c671f0e677902ab424" kindref="member">root_chan_alloc</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref><sp/>=<sp/>dict_second_phone(dict,<sp/>wid);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref><sp/>=<sp/>dict_first_phone(dict,<sp/>wid);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>TRUE,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2ssid(ps_search_acmod(ngs)-&gt;mdef,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>),</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HMMs<sp/>for<sp/>word-internal<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevhmm<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>1;<sp/>p<sp/>&lt;<sp/>dict_pronlen(dict,<sp/>wid)<sp/>-<sp/>1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>listelem_malloc(ngs-&gt;<ref refid="structngram__search__s_1abe9fe60f6e48b9a6e3d41856bb1dc109" kindref="member">chan_alloc</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref><sp/>=<sp/><ref refid="dict_8h_1a8785ab6264a5c6cf0b8da6bf79a46de4" kindref="member">dict_pron</ref>(dict,<sp/>wid,<sp/>p);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref><sp/>=<sp/>(p<sp/>==<sp/>dict_pronlen(dict,<sp/>wid)<sp/>-<sp/>1)<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>FALSE,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict2pid_8c_1a720e15c92ef6930e722bccb014e11b7b" kindref="member">dict2pid_internal</ref>(d2p,wid,p),<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2tmatid(ps_search_acmod(ngs)-&gt;mdef,<sp/>hmm-&gt;<ref refid="structchan__s_1a33da51d8524073abc792519d0738ca0b" kindref="member">ciphone</ref>));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevhmm)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevhmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevhmm<sp/>=<sp/>hmm;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Right-context<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a1ddcc1a9cb3e164ceb2140097ed23a3e" kindref="member">ngram_search_alloc_all_rc</ref>(ngs,<sp/>wid);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Link<sp/>in<sp/>just<sp/>allocated<sp/>right-context<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevhmm)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevhmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref><sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid];</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref><sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid]<sp/>=<sp/>(<ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*)<sp/>rhmm;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="ngram__search__fwdflat_8h_1a763c2c7aaa5d7f9c5107af73552a2149" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdflat_8c_1a763c2c7aaa5d7f9c5107af73552a2149" kindref="member">ngram_fwdflat_start</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_reset(&amp;ngs-&gt;fwdflat_perf);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_start(&amp;ngs-&gt;fwdflat_perf);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>build_fwdflat_wordlist(ngs);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>build_fwdflat_chan(ngs);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bpidx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;bss_head<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ps_search_n_words(ngs);<sp/>i++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx[i]<sp/>=<sp/>NO_BP;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>permanently<sp/>allocated<sp/>single-phone<sp/>words,<sp/>since<sp/>they</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>may<sp/>have<sp/>junk<sp/>left<sp/>over<sp/>in<sp/>them<sp/>from<sp/>previous<sp/>searches.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a9168184c862d6f63bd7926e6581b25d9" kindref="member">n_1ph_words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>w<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a1157923e0060b947e05caa819c8abe2c" kindref="member">single_phone_wid</ref>[i];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>search<sp/>with<sp/>&lt;s&gt;;<sp/>word_chan[&lt;s&gt;]<sp/>is<sp/>permanently<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[ps_search_start_wid(ngs)];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0,<sp/>NO_BP,<sp/>0);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[0][0]<sp/>=<sp/>ps_search_start_wid(ngs);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;renormalized<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ps_search_n_words(ngs);<sp/>i++)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;last_ltrans[i].sf<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_chan<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_words<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_word_transition<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">compute_fwdflat_sen_active(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>nw,<sp/>w;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*awl;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(ps_search_acmod(ngs));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nw;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>*(awl++);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(ngs),<sp/>&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(ngs),<sp/>&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">fwdflat_eval_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>w,<sp/>nw,<sp/>bestscore;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*awl;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[frame_idx<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_words<sp/>+=<sp/>nw;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>all<sp/>active<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nw;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>*(awl++);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score<sp/>=<sp/>chan_v_eval(rhmm);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)<sp/>&amp;&amp;<sp/>(w<sp/>!=<sp/>ps_search_finish_wid(ngs)))</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_chan++;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>==<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score<sp/>=<sp/>chan_v_eval(hmm);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_chan++;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/>bestscore;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">fwdflat_prune_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>nw,<sp/>cf,<sp/>nf,<sp/>w,<sp/>pip,<sp/>newscore,<sp/>thresh,<sp/>wordthresh;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*awl;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm,<sp/>*nexthmm;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>cf<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>ps_search_n_words(ngs));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;fwdflatbeam;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>wordthresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;fwdflatwbeam;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>pip<sp/>=<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>E_DEBUG(3,(</highlight><highlight class="stringliteral">&quot;frame<sp/>%d<sp/>thresh<sp/>%d<sp/>wordthresh<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>frame_idx,<sp/>thresh,<sp/>wordthresh));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>all<sp/>active<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nw;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>*(awl++);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Propagate<sp/>active<sp/>root<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>cf</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>hmm_bestscore(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transitions<sp/>out<sp/>of<sp/>root<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>hmm_out_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!dict_is_single_phone(ps_search_dict(ngs),<sp/>w));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>+=<sp/>pip;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>all<sp/>right<sp/>context<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>newscore,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>nf);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>a<sp/>normal<sp/>word<sp/>internal<sp/>phone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>newscore,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>nf);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(dict_is_single_phone(ps_search_dict(ngs),<sp/>w));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>exit<sp/>for<sp/>single-phone<sp/>words<sp/>(where<sp/>did<sp/>their</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>whmms<sp/>come<sp/>from?)<sp/>(either<sp/>from</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ngram_search_fwdtree,<sp/>or<sp/>from</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ngram_fwdflat_allocate_1ph(),<sp/>that&apos;s<sp/>where)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>wordthresh)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1ae36649be6f5a2190e759e7ed13bd7b6b" kindref="member">ngram_search_save_bp</ref>(ngs,<sp/>cf,<sp/>w,<sp/>newscore,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transitions<sp/>out<sp/>of<sp/>non-root<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&gt;=<sp/>cf)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Propagate<sp/>forward<sp/>HMMs<sp/>inside<sp/>the<sp/>beam.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>hmm_out_score(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word-internal<sp/>phones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>+=<sp/>pip;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nexthmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>all<sp/>right-context<sp/>phones.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nexthmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>nexthmm;<sp/>nexthmm<sp/>=<sp/>nexthmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nf);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>single<sp/>word-internal<sp/>phone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_in_score(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;nexthmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>newscore,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>),<sp/>nf);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Right-context<sp/>phones<sp/>-<sp/>apply<sp/>word<sp/>beam<sp/>and<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>wordthresh)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1ae36649be6f5a2190e759e7ed13bd7b6b" kindref="member">ngram_search_save_bp</ref>(ngs,<sp/>cf,<sp/>w,<sp/>newscore,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>),</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm-&gt;info.<ref refid="structchan__s_1acf84a2fa662e7ff626769e7d8152a608" kindref="member">rc_id</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>out<sp/>inactive<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>!=<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a9561d7ffa1e61c99de2d2b900774152f" kindref="member">hmm_clear_scores</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">get_expand_wordlist(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/>int32<sp/>frm,<sp/>int32<sp/>win)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>f,<sp/>sf,<sp/>ef;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_word_transition<sp/>+=<sp/>ngs-&gt;n_expand_words;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>frm<sp/>-<sp/>win;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>ef<sp/>=<sp/>frm<sp/>+<sp/>win;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ef<sp/>&gt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(ngs-&gt;expand_word_flag,<sp/>ps_search_n_words(ngs));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;n_expand_words<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>sf;<sp/>f<sp/>&lt;<sp/>ef;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[f];<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitvec_is_set(ngs-&gt;expand_word_flag,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_list[ngs-&gt;n_expand_words++]<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;expand_word_flag,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;expand_word_list[ngs-&gt;n_expand_words]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_word_transition<sp/>+=<sp/>ngs-&gt;n_expand_words;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">fwdflat_word_transition(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>cf,<sp/>nf,<sp/>b,<sp/>thresh,<sp/>pip,<sp/>i,<sp/>nw,<sp/>w,<sp/>newscore;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>best_silrc_score<sp/>=<sp/>0,<sp/>best_silrc_bp<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>good<sp/>defaults?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbptbl__s" kindref="compound">bptbl_t</ref><sp/>*bp;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*rcss;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*awl;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>lwf;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>ps_search_dict(ngs);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p<sp/>=<sp/>ps_search_dict2pid(ngs);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>cf<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>ngs-&gt;fwdflatbeam;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>pip<sp/>=<sp/>ngs-&gt;pip;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>best_silrc_score<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>lwf<sp/>=<sp/>ngs-&gt;fwdflat_fwdtree_lw_ratio;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>for<sp/>all<sp/>words<sp/>starting<sp/>within<sp/>a<sp/>window<sp/>of<sp/>this<sp/>frame.</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>These<sp/>are<sp/>the<sp/>successors<sp/>for<sp/>words<sp/>exiting<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>get_expand_wordlist(ngs,<sp/>cf,<sp/>ngs-&gt;max_sf_win);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>words<sp/>exited<sp/>in<sp/>current<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>ngs-&gt;bp_table_idx[cf];<sp/>b<sp/>&lt;<sp/>ngs-&gt;bpidx;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxwdssid__t" kindref="compound">xwdssid_t</ref><sp/>*rssid;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>silscore;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>ngs-&gt;bp_table<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;word_lat_idx[bp-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>]<sp/>=<sp/>NO_BP;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bp-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref><sp/>==<sp/>ps_search_finish_wid(ngs))</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID<sp/>location<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>mapping<sp/>from<sp/>right<sp/>context<sp/>phone<sp/>ID<sp/>to<sp/>index<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>right<sp/>context<sp/>table<sp/>and<sp/>the<sp/>bscore_stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcss<sp/>=<sp/>ngs-&gt;bscore_stack<sp/>+<sp/>bp-&gt;<ref refid="structbptbl__s_1abf9e4bcf1927aa09fb2b30c59e99f551" kindref="member">s_idx</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bp-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rssid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rssid<sp/>=<sp/><ref refid="dict2pid_8h_1a453a98931cad95a19b4c4ab770fc79f1" kindref="member">dict2pid_rssid</ref>(d2p,<sp/>bp-&gt;<ref refid="structbptbl__s_1aa7704ba76d3dcde6b8a24855362a4289" kindref="member">last_phone</ref>,<sp/>bp-&gt;<ref refid="structbptbl__s_1a27b8e54bb7552e6afc15e4f44f42e3b7" kindref="member">last2_phone</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>to<sp/>all<sp/>successor<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>ngs-&gt;expand_word_list[i]<sp/>&gt;=<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ngs-&gt;expand_word_list[i];</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>exit<sp/>score<sp/>we<sp/>recorded<sp/>in<sp/>save_bwd_ptr(),<sp/>or</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>something<sp/>approximating<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rssid)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>rcss[rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[dict_first_phone(dict,<sp/>w)]];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>bp-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/>==<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Floating<sp/>point...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>+=<sp/>lwf</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(ngram_tg_score(ngs-&gt;<ref refid="structngram__search__s_1a6127a6d8fb53832e67456c11aa6ad9c4" kindref="member">lmset</ref>,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_basewid(dict,<sp/>w),</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="structbptbl__s_1a91247e4f807cf780afe8f5ac45e720b8" kindref="member">real_wid</ref>,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="structbptbl__s_1a83784e3b0121bc365d485151ab277920" kindref="member">prev_real_wid</ref>,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_used)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>+=<sp/>pip;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>the<sp/>next<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>newscore,<sp/>b,<sp/>nf);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DICT2PID:<sp/>This<sp/>is<sp/>where<sp/>mpx<sp/>ssids<sp/>get<sp/>introduced.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>up<sp/>the<sp/>ssid<sp/>to<sp/>use<sp/>when<sp/>entering<sp/>this<sp/>mpx<sp/>triphone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)<sp/>=</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict2pid_ldiph_lc(d2p,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>,<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref>,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_last_phone(dict,<sp/>bp-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(IS_S3SSID(hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(6,(</highlight><highlight class="stringliteral">&quot;ssid<sp/>%d(%d,%d)<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ad67c37bf4183f518acd7760c09a806f6" kindref="member">ciphone</ref>,<sp/>dict_last_phone(dict,<sp/>bp-&gt;<ref refid="structbptbl__s_1a143ff0891fafd471000df7c73123b8a7" kindref="member">wid</ref>),<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1a0c0cf22caf4c97879af86865764f1675" kindref="member">ci2phone</ref>,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_mpx_ssid(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>0)));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>best<sp/>exit<sp/>into<sp/>silence.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rssid)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silscore<sp/>=<sp/>rcss[rssid-&gt;<ref refid="structxwdssid__t_1a502f9241a70383aa260d3390e4ff58fb" kindref="member">cimap</ref>[ps_search_acmod(ngs)-&gt;mdef-&gt;sil]];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silscore<sp/>=<sp/>bp-&gt;<ref refid="structbptbl__s_1aa5643c0c19ce4d39d51ddf7376f4d508" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(silscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>best_silrc_score)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_silrc_score<sp/>=<sp/>silscore;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_silrc_bp<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>to<sp/>&lt;sil&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>best_silrc_score<sp/>+<sp/>ngs-&gt;silpen<sp/>+<sp/>pip;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>&amp;&amp;<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ps_search_silence_wid(ngs);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>newscore,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_silrc_bp,<sp/>nf);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>to<sp/>noise<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>best_silrc_score<sp/>+<sp/>ngs-&gt;fillpen<sp/>+<sp/>pip;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>&amp;&amp;<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>WORST_SCORE))<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>dict_filler_start(dict);<sp/>w<sp/>&lt;=<sp/>dict_filler_end(dict);<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>ps_search_silence_wid(ngs))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Noise<sp/>words<sp/>that<sp/>aren&apos;t<sp/>a<sp/>single<sp/>phone<sp/>will<sp/>have<sp/>NULL<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rhmm<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>&lt;<sp/>cf)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>newscore,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_silrc_bp,<sp/>nf);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>w);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>initial<sp/>channels<sp/>of<sp/>words<sp/>that<sp/>have<sp/>become<sp/>inactive<sp/>even<sp/>after<sp/>word<sp/>trans.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nw;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>*(awl++);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>cf)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a9561d7ffa1e61c99de2d2b900774152f" kindref="member">hmm_clear_scores</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal">fwdflat_renormalize_scores(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/>int32<sp/>norm)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>nw,<sp/>cf,<sp/>w,<sp/>*awl;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>individual<sp/>word<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>nw<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>awl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[cf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nw;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>*(awl++);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)<sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[w];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>)<sp/>==<sp/>cf)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(&amp;rhmm-&gt;<ref refid="structroot__chan__s_1a9d4d92ffa8b4079202ddebe3ba0eb290" kindref="member">hmm</ref>,<sp/>norm);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;<sp/>hmm;<sp/>hmm<sp/>=<sp/>hmm-&gt;<ref refid="structchan__s_1a260b68eff64150d0ae9ce4db7feb1300" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>)<sp/>==<sp/>cf)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>(&amp;hmm-&gt;<ref refid="structchan__s_1a742d6a125ac468b95a1ddd880a956e35" kindref="member">hmm</ref>,<sp/>norm);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;renormalized<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816" refid="ngram__search__fwdflat_8h_1ae77ef21ae92dbcc4b14f40469fbd4307" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdflat_8c_1ae77ef21ae92dbcc4b14f40469fbd4307" kindref="member">ngram_fwdflat_search</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nf,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*nawl;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Activate<sp/>our<sp/>HMMs<sp/>for<sp/>the<sp/>current<sp/>frame<sp/>if<sp/>need<sp/>be.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ps_search_acmod(ngs)-&gt;compallsen)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_fwdflat_sen_active(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>GMM<sp/>scores<sp/>for<sp/>the<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>senscr<sp/>=<sp/><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(ps_search_acmod(ngs),<sp/>&amp;frame_idx);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt<sp/>+=<sp/>ps_search_acmod(ngs)-&gt;n_senone_active;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>backpointer<sp/>table<sp/>for<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" kindref="member">ngram_search_mark_bptable</ref>(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>best<sp/>score<sp/>is<sp/>equal<sp/>to<sp/>or<sp/>worse<sp/>than<sp/>WORST_SCORE,</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>recognition<sp/>has<sp/>failed,<sp/>don&apos;t<sp/>bother<sp/>to<sp/>keep<sp/>trying.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>==<sp/>WORST_SCORE<sp/>||<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>+<sp/>(2<sp/>*<sp/>ngs-&gt;beam)<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/>WORST_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Renormalizing<sp/>Scores<sp/>at<sp/>frame<sp/>%d,<sp/>best<sp/>score<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwdflat_renormalize_scores(ngs,<sp/>frame_idx,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a150d99157e2f37a6f0dbb4b02682d9c3" kindref="member">best_score</ref><sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" kindref="member">hmm_context_set_senscore</ref>(ngs-&gt;<ref refid="structngram__search__s_1acfbdd34e3dadbaa384818402f1dd59bf" kindref="member">hmmctx</ref>,<sp/>senscr);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>HMMs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>fwdflat_eval_chan(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prune<sp/>HMMs<sp/>and<sp/>do<sp/>phone<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>fwdflat_prune_chan(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>word<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>fwdflat_word_transition(ngs,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>next<sp/>active<sp/>word<sp/>list,<sp/>skip<sp/>fillers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>nawl<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5056573bf95990cc28c97a56cd76ce9a" kindref="member">active_word_list</ref>[nf<sp/>&amp;<sp/>0x1];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[i]<sp/>&gt;=<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[i];</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>wid)<sp/>&amp;&amp;<sp/>wid<sp/>&lt;<sp/>ps_search_start_wid(ngs))<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nawl++)<sp/>=<sp/>wid;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>fillers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ps_search_start_wid(ngs);<sp/>i<sp/>&lt;<sp/>ps_search_n_words(ngs);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_set(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(nawl++)<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5c864f1fe331fc95c04e0d87a5bdf9ee" kindref="member">n_active_word</ref>[nf<sp/>&amp;<sp/>0x1]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal">destroy_fwdflat_wordlist(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node,<sp/>*tnode;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>f;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ngs-&gt;fwdtree)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5255e56d28c239a4e1d9b1721e8a2f8d" kindref="member">n_frame</ref>;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1aa54544457c363ccccb87fc7ec63a5f3e" kindref="member">frm_wordlist</ref>[f];<sp/>node;<sp/>node<sp/>=<sp/>tnode)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tnode<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listelem_free(ngs-&gt;<ref refid="structngram__search__s_1a21600dc2e23744f0be9c64a4db8d7e50" kindref="member">latnode_alloc</ref>,<sp/>node);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal">destroy_fwdflat_chan(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>wid;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[i]<sp/>&gt;=<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*rhmm;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchan__s" kindref="compound">chan_t</ref><sp/>*thmm;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>ngs-&gt;<ref refid="structngram__search__s_1a774f1640c5ece856f4bef98d98e7c959" kindref="member">fwdflat_wordlist</ref>[i];</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_is_single_phone(ps_search_dict(ngs),wid))</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid]<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>HMM<sp/>in<sp/>ngs-&gt;word_chan[wid]<sp/>was<sp/>allocated<sp/>with</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ngs-&gt;root_chan_alloc,<sp/>but<sp/>this<sp/>will<sp/>attempt<sp/>to<sp/>free<sp/>it</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>using<sp/>ngs-&gt;chan_alloc,<sp/>which<sp/>will<sp/>not<sp/>work.<sp/><sp/>Therefore<sp/>we</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>free<sp/>it<sp/>manually<sp/>and<sp/>move<sp/>the<sp/>list<sp/>forward<sp/>before<sp/>handing</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>off.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhmm<sp/>=<sp/>(<ref refid="structroot__chan__s" kindref="compound">root_chan_t</ref><sp/>*)ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid];</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thmm<sp/>=<sp/>rhmm-&gt;<ref refid="structroot__chan__s_1ae0f0b90a7cb2fcb54cd7b30502dd497e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listelem_free(ngs-&gt;<ref refid="structngram__search__s_1a576470858bfa44c671f0e677902ab424" kindref="member">root_chan_alloc</ref>,<sp/>rhmm);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a79deb7295a261cd82d2a6b48cb119e77" kindref="member">word_chan</ref>[wid]<sp/>=<sp/>thmm;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a15477192481dffcb29e9c4167eff6c3c" kindref="member">ngram_search_free_all_rc</ref>(ngs,<sp/>wid);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="ngram__search__fwdflat_8h_1ac855cf540ac4acdfa320629720ded6fe" refkind="member"><highlight class="normal"><ref refid="ngram__search__fwdflat_8c_1ac855cf540ac4acdfa320629720ded6fe" kindref="member">ngram_fwdflat_finish</ref>(<ref refid="structngram__search__s" kindref="compound">ngram_search_t</ref><sp/>*ngs)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>cf;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>destroy_fwdflat_chan(ngs);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>destroy_fwdflat_wordlist(ngs);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(ngs-&gt;<ref refid="structngram__search__s_1aeb4c98851bf9b239ca607ca59f59ff4c" kindref="member">word_active</ref>,<sp/>ps_search_n_words(ngs));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>ps_search_acmod(ngs)-&gt;output_frame;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>a<sp/>mark<sp/>in<sp/>the<sp/>backpointer<sp/>table<sp/>for<sp/>one<sp/>past<sp/>the<sp/>final<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ngram__search_8c_1a7772e007b7d7fdf437c87aeb08b59c71" kindref="member">ngram_search_mark_bptable</ref>(ngs,<sp/>cf);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_stop(&amp;ngs-&gt;fwdflat_perf);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>some<sp/>statistics.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cf<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)(cf<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(ngs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>words<sp/>recognized<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;bpidx,<sp/>(ngs-&gt;bpidx<sp/>+<sp/>(cf<sp/>&gt;&gt;<sp/>1))<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>senones<sp/>evaluated<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_senone_active_utt<sp/>+<sp/>(cf<sp/>&gt;&gt;<sp/>1))<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>channels<sp/>searched<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_chan,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_chan<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>words<sp/>searched<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_words,<sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_words<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%8d<sp/>word<sp/>transitions<sp/>(%d/fr)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_word_transition,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;<ref refid="structngram__search__s_1a5758d167fbb48e824a6a58186620e06d" kindref="member">st</ref>.n_fwdflat_word_transition<sp/>/<sp/>(cf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fwdflat<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_cpu,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fwdflat<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_elapsed,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngs-&gt;fwdflat_perf.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ngram_search_fwdflat.c"/>
  </compounddef>
</doxygen>
