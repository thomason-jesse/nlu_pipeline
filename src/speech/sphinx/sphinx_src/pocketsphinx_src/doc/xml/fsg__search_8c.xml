<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="fsg__search_8c" kind="file">
    <compoundname>fsg_search.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/strfuncs.h</includes>
    <includes local="no">sphinxbase/cmd_ln.h</includes>
    <includes refid="pocketsphinx__internal_8h" local="yes">pocketsphinx_internal.h</includes>
    <includes refid="ps__lattice__internal_8h" local="yes">ps_lattice_internal.h</includes>
    <includes refid="fsg__search__internal_8h" local="yes">fsg_search_internal.h</includes>
    <includes refid="fsg__history_8h" local="yes">fsg_history.h</includes>
    <includes refid="fsg__lextree_8h" local="yes">fsg_lextree.h</includes>
    <incdepgraph>
      <node id="827">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="819">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="840">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
      </node>
      <node id="811">
        <label>assert.h</label>
      </node>
      <node id="842">
        <label>float.h</label>
      </node>
      <node id="849">
        <label>fsg_lextree.h</label>
        <link refid="fsg__lextree_8h_source"/>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
      <node id="824">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="815">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="835">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
      </node>
      <node id="823">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="817">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="838">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="808">
        <label>src/libpocketsphinx/fsg_search.c</label>
        <link refid="fsg_search.c"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="814" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="834">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="845">
        <label>fsg_search_internal.h</label>
        <link refid="fsg__search__internal_8h_source"/>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="813">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="839">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="816">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
      </node>
      <node id="818">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="847">
        <label>fsg_history.h</label>
        <link refid="fsg__history_8h_source"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="822">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="825" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
        <childnode refid="829" relation="include">
        </childnode>
      </node>
      <node id="810">
        <label>string.h</label>
      </node>
      <node id="826">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="831">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
      </node>
      <node id="832">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="848">
        <label>blkarray_list.h</label>
        <link refid="blkarray__list_8h_source"/>
        <childnode refid="826" relation="include">
        </childnode>
      </node>
      <node id="829">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
      </node>
      <node id="814">
        <label>sphinxbase/strfuncs.h</label>
      </node>
      <node id="844">
        <label>ps_lattice_internal.h</label>
        <link refid="ps__lattice__internal_8h"/>
      </node>
      <node id="812">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="830">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="828">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
      </node>
      <node id="825">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
      </node>
      <node id="843">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="833">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="835" relation="include">
        </childnode>
      </node>
      <node id="820">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="841">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
      </node>
      <node id="837">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
      </node>
      <node id="821">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="809">
        <label>stdio.h</label>
      </node>
      <node id="846">
        <label>sphinxbase/glist.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fsg__search_8c_1a7acaaaaea00ab148fa241f7ce86cab14" prot="public" static="no">
        <name>__FSG_DBG__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="70" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fsg__search_8c_1a193ec18a1163dbb4bd0210cc7dd7e90f" prot="public" static="no">
        <name>__FSG_DBG_CHAN__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="71" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fsg__search_8c_1a365d52ca8eccf30d33182bb24985fbc2" prot="public" static="yes" mutable="no">
        <type><ref refid="pocketsphinx__internal_8h_1a0eae078e32bd5f339792884c68aad8b3" kindref="member">ps_searchfuncs_t</ref></type>
        <definition>ps_searchfuncs_t fsg_funcs</definition>
        <argsstring></argsstring>
        <name>fsg_funcs</name>
        <initializer>= {
      fsg_search_start,
       fsg_search_step,
     fsg_search_finish,
     fsg_search_reinit,
       fsg_search_free,
      fsg_search_lattice,
          fsg_search_hyp,
         fsg_search_prob,
     fsg_search_seg_iter,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="77" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fsg__search_8c_1afed671016c9eb24e94e48b9192bbfdbe" prot="public" static="yes" mutable="no">
        <type><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref></type>
        <definition>ps_segfuncs_t fsg_segfuncs</definition>
        <argsstring></argsstring>
        <name>fsg_segfuncs</name>
        <initializer>= {
     fsg_seg_next,
     fsg_seg_free
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1113" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fsg__search_8c_1a22ba2838be3e489dead5497ab999a807" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t * fsg_search_seg_iter</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>fsg_search_seg_iter</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="73" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1119" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a62d3eeb2f31180ea476439a844688f7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
        <definition>static ps_lattice_t * fsg_search_lattice</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>fsg_search_lattice</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Generate a lattice from FSG search results. </para>        </briefdescription>
        <detaileddescription>
<para>One might think that this is simply a matter of adding acoustic scores to the FSG&apos;s edges. However, one would be wrong. The crucial difference here is that the word lattice is acyclic, and it also contains timing information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="74" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1381" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a5c3b5389efc2fc3213a915a360a3bcf2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fsg_search_prob</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>fsg_search_prob</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="75" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1179" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a81a84ff979782f1d54535166f0287241" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fsg_search_add_silences</definition>
        <argsstring>(fsg_search_t *fsgs, fsg_model_t *fsg)</argsstring>
        <name>fsg_search_add_silences</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type>fsg_model_t *</type>
          <declname>fsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="90" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="90" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a0c89bfc83e905104db57e0a2f84193cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fsg_search_check_dict</definition>
        <argsstring>(fsg_search_t *fsgs, fsg_model_t *fsg)</argsstring>
        <name>fsg_search_check_dict</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type>fsg_model_t *</type>
          <declname>fsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="128" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="128" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1ad57f83dadbe3b7bd0e3e2d8a8b93f5ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fsg_search_add_altpron</definition>
        <argsstring>(fsg_search_t *fsgs, fsg_model_t *fsg)</argsstring>
        <name>fsg_search_add_altpron</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type>fsg_model_t *</type>
          <declname>fsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="150" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="150" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a961e760e4ce0921c16aee14bb7e735e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
        <definition>ps_search_t* fsg_search_init</definition>
        <argsstring>(const char *name, fsg_model_t *fsg, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>fsg_search_init</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>fsg_model_t *</type>
          <declname>fsg</declname>
        </param>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Create, initialize and return a search module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="178" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="178" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1ad91ddd650a83267d358b64aa5b6c6dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsg_search_free</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>fsg_search_free</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Deallocate search structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="256" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="256" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1ab5b499b941e2111bba6602ee02030867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fsg_search_reinit</definition>
        <argsstring>(ps_search_t *search, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>fsg_search_reinit</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
<para>Update FSG search module for new or updated FSGs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="283" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="283" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a46a905b3522c6b17cb52ef3bf6c24aaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_sen_active</definition>
        <argsstring>(fsg_search_t *fsgs)</argsstring>
        <name>fsg_search_sen_active</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="310" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="310" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1aa88488fa88bfa6506d527dbda7f5f683" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_hmm_eval</definition>
        <argsstring>(fsg_search_t *fsgs)</argsstring>
        <name>fsg_search_hmm_eval</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="332" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="332" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a866b584fd9282d809852f28612d19f1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_pnode_trans</definition>
        <argsstring>(fsg_search_t *fsgs, fsg_pnode_t *pnode)</argsstring>
        <name>fsg_search_pnode_trans</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref> *</type>
          <declname>pnode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="408" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="408" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a5224e63ed8544175f79e7f11cc3f1c7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_pnode_exit</definition>
        <argsstring>(fsg_search_t *fsgs, fsg_pnode_t *pnode)</argsstring>
        <name>fsg_search_pnode_exit</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref> *</type>
          <declname>pnode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="443" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="443" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a30a3db80a983f4fef212cd812f27a832" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_hmm_prune_prop</definition>
        <argsstring>(fsg_search_t *fsgs)</argsstring>
        <name>fsg_search_hmm_prune_prop</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="506" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="506" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a1aa103cbab981e4cd67f6d2cb812f47a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_null_prop</definition>
        <argsstring>(fsg_search_t *fsgs)</argsstring>
        <name>fsg_search_null_prop</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="556" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="556" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1af6a5cfb6afd2106f298d981741e45b43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_search_word_trans</definition>
        <argsstring>(fsg_search_t *fsgs)</argsstring>
        <name>fsg_search_word_trans</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="613" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="613" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1aac409939ff29de466887055f50e34266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fsg_search_step</definition>
        <argsstring>(ps_search_t *search, int frame_idx)</argsstring>
        <name>fsg_search_step</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
<para>Step one frame forward through the Viterbi search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="687" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="687" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a6b8ee3b617bbafce3a5e6130cc0b4d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fsg_search_start</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>fsg_search_start</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Prepare the FSG search structure for beginning decoding of the next utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="770" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="770" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1ac606357e94f5dfe895b915fc0214df02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fsg_search_finish</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>fsg_search_finish</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
<para>Windup and clean the FSG search structure after utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="827" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="827" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a0e3c5886fc74ab97bbda5807f86a3ba9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fsg_search_find_exit</definition>
        <argsstring>(fsg_search_t *fsgs, int frame_idx, int final, int32 *out_score, int32 *out_is_final)</argsstring>
        <name>fsg_search_find_exit</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>final</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="879" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="879" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a1f394c9ddec68e6872e304101bbc9aac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1a58ba3066b0b611f07c7ae57d77f8e776" kindref="member">ps_latlink_t</ref> *</type>
        <definition>static ps_latlink_t* fsg_search_bestpath</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int backward)</argsstring>
        <name>fsg_search_bestpath</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="961" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="961" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a6313817ada4d9d888e02d06e37b566e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const* fsg_search_hyp</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int32 *out_is_final)</argsstring>
        <name>fsg_search_hyp</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
<para>Get hypothesis string from the FSG search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="981" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="981" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1ac5f1cef6c7faf92dbe7ab0cd6980c413" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_seg_bp2itor</definition>
        <argsstring>(ps_seg_t *seg, fsg_hist_entry_t *hist_entry)</argsstring>
        <name>fsg_seg_bp2itor</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref> *</type>
          <declname>hist_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1065" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1065" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1af26b01f6017fe6cc03db72cc8f035d83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fsg_seg_free</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>fsg_seg_free</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1092" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1092" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1adfca877b7d4a8e005108bb1c05683bbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t* fsg_seg_next</definition>
        <argsstring>(ps_seg_t *seg)</argsstring>
        <name>fsg_seg_next</name>
        <param>
          <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1100" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1100" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1aa42872219b531b21d174278c519160ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
        <definition>static ps_latnode_t* find_node</definition>
        <argsstring>(ps_lattice_t *dag, fsg_model_t *fsg, int sf, int32 wid, int32 node_id)</argsstring>
        <name>find_node</name>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <param>
          <type>fsg_model_t *</type>
          <declname>fsg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1201" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1201" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a54d61356efd0aeb0b90fcf897d8d20b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
        <definition>static ps_latnode_t* new_node</definition>
        <argsstring>(ps_lattice_t *dag, fsg_model_t *fsg, int sf, int ef, int32 wid, int32 node_id, int32 ascr)</argsstring>
        <name>new_node</name>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <param>
          <type>fsg_model_t *</type>
          <declname>fsg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ef</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>node_id</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>ascr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1212" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1212" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1ac4ab5c98577c89d06b4b0d0461f97542" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
        <definition>static ps_latnode_t* find_start_node</definition>
        <argsstring>(fsg_search_t *fsgs, ps_lattice_t *dag)</argsstring>
        <name>find_start_node</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1249" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1249" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1aee3d89bb1884641628224fda2581a4e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
        <definition>static ps_latnode_t* find_end_node</definition>
        <argsstring>(fsg_search_t *fsgs, ps_lattice_t *dag)</argsstring>
        <name>find_end_node</name>
        <param>
          <type><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref> *</type>
          <declname>fsgs</declname>
        </param>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1288" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1288" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="fsg__search_8c_1a31f71d1b1d4e8e9fa98de5657a4f91d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mark_reachable</definition>
        <argsstring>(ps_lattice_t *dag, ps_latnode_t *end)</argsstring>
        <name>mark_reachable</name>
        <param>
          <type><ref refid="ps__lattice_8h_1af3c03aa650aafdaea0cbcfabe1a1c1e5" kindref="member">ps_lattice_t</ref> *</type>
          <declname>dag</declname>
        </param>
        <param>
          <type><ref refid="ps__lattice_8h_1ad570c45dd72ad9ea8d57391fd2cd1c07" kindref="member">ps_latnode_t</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" line="1348" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c" bodystart="1348" bodyend="1370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>fsg_search.c<sp/>--<sp/>Search<sp/>structures<sp/>for<sp/>FSM<sp/>decoding.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2004<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>18-Feb-2004<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Started.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/strfuncs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/cmd_ln.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pocketsphinx__internal_8h" kindref="compound">pocketsphinx_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ps__lattice__internal_8h" kindref="compound">ps_lattice_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsg_search_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsg_history.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsg_lextree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Turn<sp/>this<sp/>on<sp/>for<sp/>detailed<sp/>debugging<sp/>dump<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FSG_DBG__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__FSG_DBG_CHAN__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*fsg_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*fsg_search_lattice(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fsg_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__searchfuncs__s" kindref="compound">ps_searchfuncs_t</ref><sp/>fsg_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start:<sp/>*/</highlight><highlight class="normal"><sp/><sp/>fsg_search_start,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/>fsg_search_step,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish:<sp/>*/</highlight><highlight class="normal"><sp/>fsg_search_finish,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reinit:<sp/>*/</highlight><highlight class="normal"><sp/>fsg_search_reinit,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/>fsg_search_free,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lattice:<sp/>*/</highlight><highlight class="normal"><sp/><sp/>fsg_search_lattice,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hyp:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_hyp,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prob:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fsg_search_prob,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_iter:<sp/>*/</highlight><highlight class="normal"><sp/>fsg_search_seg_iter,</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">fsg_search_add_silences(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/>fsg_model_t<sp/>*fsg)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sil;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>ps_search_dict(fsgs);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>NOTE:<sp/>Unlike<sp/>N-Gram<sp/>search,<sp/>we<sp/>do<sp/>not<sp/>use<sp/>explicit<sp/>start<sp/>and</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>end<sp/>symbols.<sp/><sp/>This<sp/>is<sp/>because<sp/>the<sp/>start<sp/>and<sp/>end<sp/>nodes<sp/>are</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>defined<sp/>in<sp/>the<sp/>grammar.<sp/><sp/>We<sp/>do<sp/>add<sp/>silence/filler<sp/>self-loops<sp/>to</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>states<sp/>in<sp/>order<sp/>to<sp/>allow<sp/>for<sp/>silence<sp/>between<sp/>words<sp/>and<sp/>at</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>beginning<sp/>and<sp/>end<sp/>of<sp/>utterances.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>has<sp/>some<sp/>implications<sp/>for<sp/>word<sp/>graph<sp/>generation,<sp/>namely,</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>there<sp/>can<sp/>(and<sp/>usually<sp/>will)<sp/>be<sp/>multiple<sp/>start<sp/>and<sp/>end</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>states<sp/>in<sp/>the<sp/>word<sp/>graph.<sp/><sp/>We<sp/>therefore<sp/>do<sp/>add<sp/>explicit<sp/>start</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>end<sp/>nodes<sp/>to<sp/>the<sp/>graph.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>silence<sp/>self-loops<sp/>to<sp/>all<sp/>states.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_model_add_silence(fsg,<sp/></highlight><highlight class="stringliteral">&quot;&lt;sil&gt;&quot;</highlight><highlight class="normal">,<sp/>-1,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-silprob&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>n_sil<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>self-loops<sp/>for<sp/>all<sp/>other<sp/>fillers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(wid<sp/>=<sp/>dict_filler_start(dict);<sp/>wid<sp/>&lt;<sp/>dict_filler_end(dict);<sp/>++wid)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*word<sp/>=<sp/>dict_wordstr(dict,<sp/>wid);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/>dict_startwid(dict)<sp/>||<sp/>wid<sp/>==<sp/>dict_finishwid(dict))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_add_silence(fsg,<sp/>word,<sp/>-1,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-fillprob&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_sil;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_sil;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scans<sp/>the<sp/>dictionary<sp/>and<sp/>check<sp/>if<sp/>all<sp/>words<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">fsg_search_check_dict(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/>fsg_model_t<sp/>*fsg)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>ps_search_dict(fsgs);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fsg_model_n_word(fsg);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*word;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>=<sp/>fsg_model_word_str(fsg,<sp/>i);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,<sp/>word);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;The<sp/>word<sp/>&apos;%s&apos;<sp/>is<sp/>missing<sp/>in<sp/>the<sp/>dictionary\n&quot;</highlight><highlight class="normal">,<sp/>word);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">fsg_search_add_altpron(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/>fsg_model_t<sp/>*fsg)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_alt,<sp/>n_word;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>ps_search_dict(fsgs);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>FSG&apos;s<sp/>vocabulary<sp/>for<sp/>words<sp/>that<sp/>have<sp/>alternate<sp/>pronunciations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>n_alt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>n_word<sp/>=<sp/>fsg_model_n_word(fsg);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_word;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*word;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>=<sp/>fsg_model_word_str(fsg,<sp/>i);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,<sp/>word);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>!=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((wid<sp/>=<sp/>dict_nextalt(dict,<sp/>wid))<sp/>!=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_alt<sp/>+=<sp/>fsg_model_add_alt(fsg,<sp/>word,<sp/>dict_wordstr(dict,<sp/>wid));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Added<sp/>%d<sp/>alternate<sp/>word<sp/>transitions\n&quot;</highlight><highlight class="normal">,<sp/>n_alt);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_alt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*</highlight></codeline>
<codeline lineno="178"><highlight class="normal">fsg_search_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_t<sp/>*fsg,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_t<sp/>*config,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*fsgs));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" kindref="member">ps_search_init</ref>(ps_search_base(fsgs),<sp/>&amp;fsg_funcs,<sp/>PS_SEARCH_TYPE_FSG,<sp/>name,<sp/>config,<sp/>acmod,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref><sp/>=<sp/>fsg_model_retain(fsg);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>HMM<sp/>context.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7407bdf5f311caf9d46817b3387b798c" kindref="member">hmmctx</ref><sp/>=<sp/><ref refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" kindref="member">hmm_context_init</ref>(bin_mdef_n_emit_state(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>-&gt;<ref refid="structtmat__t_1a9f518c96b30dab9efdb69bd779a7b5bf" kindref="member">tp</ref>,<sp/>NULL,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1a7407bdf5f311caf9d46817b3387b798c" kindref="member">hmmctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_free(ps_search_base(fsgs));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intialize<sp/>the<sp/>search<sp/>history<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref><sp/>=<sp/>fsg_history_init(NULL,<sp/>dict);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>search<sp/>pruning<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;beam<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a0cdf7dc3d3eed0d37f46cb71fdea206e" kindref="member">beam_orig</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-beam&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;pbeam<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7cdf0ab2591b95d89940d51e3ab01529" kindref="member">pbeam_orig</ref></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pbeam&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1af28ddecbb5115a50712c61f8a72dcf51" kindref="member">wbeam</ref><sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7f3ecc2f769143e42ed958744478db3c" kindref="member">wbeam_orig</ref></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(int32)<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-wbeam&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LM<sp/>related<sp/>weights/penalties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;lw<sp/>=<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;pip<sp/>=<sp/>(int32)<sp/>(logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pip&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fsgs-&gt;lw)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ae9ddc3b50d0f164926392f8ab4b019a0" kindref="member">wip</ref><sp/>=<sp/>(int32)<sp/>(logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-wip&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fsgs-&gt;lw)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acoustic<sp/>score<sp/>scale<sp/>for<sp/>posterior<sp/>probabilities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a4d13fff2e14882b0125386fc27a4097f" kindref="member">ascale</ref><sp/>=<sp/>1.0<sp/>/<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-ascale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;FSG(beam:<sp/>%d,<sp/>pbeam:<sp/>%d,<sp/>wbeam:<sp/>%d;<sp/>wip:<sp/>%d,<sp/>pip:<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a0cdf7dc3d3eed0d37f46cb71fdea206e" kindref="member">beam_orig</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7cdf0ab2591b95d89940d51e3ab01529" kindref="member">pbeam_orig</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7f3ecc2f769143e42ed958744478db3c" kindref="member">wbeam_orig</ref>,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ae9ddc3b50d0f164926392f8ab4b019a0" kindref="member">wip</ref>,<sp/>fsgs-&gt;pip);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fsg_search_check_dict(fsgs,<sp/>fsg))<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_free(ps_search_base(fsgs));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fsgusefiller&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!fsg_model_has_sil(fsg))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_add_silences(fsgs,<sp/>fsg);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-fsgusealtpron&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!fsg_model_has_alt(fsg))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_add_altpron(fsgs,<sp/>fsg);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsg_search_reinit(ps_search_base(fsgs),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_dict(fsgs),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_dict2pid(fsgs))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_free(ps_search_base(fsgs));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_init(&amp;fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ps_search_base(fsgs);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">fsg_search_free(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)fsgs-&gt;n_tot_frame</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>fsg<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_tot_cpu,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_tot_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>fsg<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_tot_elapsed,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_tot_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" kindref="member">ps_search_base_free</ref>(search);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a2f1ab965df1214f4d0e2008833aa20da" kindref="member">fsg_lextree_free</ref>(fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_history_reset(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_history_set_fsg(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_history_free(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(fsgs-&gt;<ref refid="structfsg__search__s_1a7407bdf5f311caf9d46817b3387b798c" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_model_free(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(fsgs);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">fsg_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>old<sp/>lextree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a2f1ab965df1214f4d0e2008833aa20da" kindref="member">fsg_lextree_free</ref>(fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>old<sp/>dict2pid,<sp/>dict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" kindref="member">ps_search_base_reinit</ref>(search,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>number<sp/>of<sp/>words<sp/>(not<sp/>used<sp/>by<sp/>this<sp/>module<sp/>though).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1ad4d98deb905bd664ec44313ea0065b1a" kindref="member">n_words</ref><sp/>=<sp/><ref refid="dict_8h_1a361b948b42f9cfdf5c7fa9dfc8a71a94" kindref="member">dict_size</ref>(dict);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>new<sp/>lextree<sp/>for<sp/>the<sp/>given<sp/>FSG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref><sp/>=<sp/><ref refid="fsg__lextree_8c_1a8c47b2983b3952886a4c889a711e1d65" kindref="member">fsg_lextree_init</ref>(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>dict,<sp/>d2p,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_acmod(fsgs)-&gt;mdef,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7407bdf5f311caf9d46817b3387b798c" kindref="member">hmmctx</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ae9ddc3b50d0f164926392f8ab4b019a0" kindref="member">wip</ref>,<sp/>fsgs-&gt;pip);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inform<sp/>the<sp/>history<sp/>module<sp/>of<sp/>the<sp/>new<sp/>fsg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_history_set_fsg(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>dict);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">fsg_search_sen_active(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*pnode;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(ps_search_acmod(fsgs));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/>(<ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*)<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>fsg_pnode_hmmptr(pnode);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(hmm)<sp/>==<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(ps_search_acmod(fsgs),<sp/>hmm);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>Evaluate<sp/>all<sp/>the<sp/>active<sp/>HMMs.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>(Executed<sp/>once<sp/>per<sp/>frame.)</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">fsg_search_hmm_eval(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*pnode;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestscore;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n,<sp/>maxhmmpf;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Frame<sp/>%d:<sp/>No<sp/>active<sp/>HMM!!\n&quot;</highlight><highlight class="normal">,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0,<sp/>gn<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn),<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/>(<ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*)<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>fsg_pnode_hmmptr(pnode);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(hmm)<sp/>==<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__FSG_DBG__</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;pnode(%08x)<sp/>active<sp/>@frm<sp/>%5d\n&quot;</highlight><highlight class="normal">,<sp/>(int32)<sp/>pnode,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" kindref="member">hmm_dump</ref>(hmm,<sp/>stdout);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(hmm);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__FSG_DBG_CHAN__</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;pnode(%08x)<sp/>after<sp/>eval<sp/>@frm<sp/>%5d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>pnode,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ad747fa967b5e414ad48fdffb9b767baf" kindref="member">hmm_dump</ref>(hmm,<sp/>stdout);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__FSG_DBG__</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;[%5d]<sp/>%6d<sp/>HMM;<sp/>bestscr:<sp/>%11d\n&quot;</highlight><highlight class="normal">,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>n,<sp/>bestscore);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7e3d7375b4a33af339e8b55885677faa" kindref="member">n_hmm_eval</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjust<sp/>beams<sp/>if<sp/>#active<sp/>HMMs<sp/>larger<sp/>than<sp/>absolute<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>maxhmmpf<sp/>=<sp/>cmd_ln_int32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-maxhmmpf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxhmmpf<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>n<sp/>&gt;<sp/>maxhmmpf)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Too<sp/>many<sp/>HMMs<sp/>active;<sp/>reduce<sp/>the<sp/>beam<sp/>factor<sp/>applied<sp/>to<sp/>the<sp/>default</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>beams,<sp/>but<sp/>not<sp/>if<sp/>the<sp/>factor<sp/>is<sp/>already<sp/>at<sp/>a<sp/>floor<sp/>(0.1).</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref><sp/>&gt;<sp/>0.1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hack!!<sp/><sp/>Hardwired<sp/>constant<sp/>0.1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref><sp/>*=<sp/>0.9f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hack!!<sp/><sp/>Hardwired<sp/>constant<sp/>0.9<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;beam<sp/>=</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1a0cdf7dc3d3eed0d37f46cb71fdea206e" kindref="member">beam_orig</ref><sp/>*<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;pbeam<sp/>=</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1a7cdf0ab2591b95d89940d51e3ab01529" kindref="member">pbeam_orig</ref><sp/>*<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1af28ddecbb5115a50712c61f8a72dcf51" kindref="member">wbeam</ref><sp/>=</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32)<sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1a7f3ecc2f769143e42ed958744478db3c" kindref="member">wbeam_orig</ref><sp/>*<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;beam<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a0cdf7dc3d3eed0d37f46cb71fdea206e" kindref="member">beam_orig</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;pbeam<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7cdf0ab2591b95d89940d51e3ab01529" kindref="member">pbeam_orig</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1af28ddecbb5115a50712c61f8a72dcf51" kindref="member">wbeam</ref><sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7f3ecc2f769143e42ed958744478db3c" kindref="member">wbeam_orig</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>fsg_lextree_n_pnode(fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref>))</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;PANIC!<sp/>Frame<sp/>%d:<sp/>#HMM<sp/>evaluated(%d)<sp/>&gt;<sp/>#PNodes(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>n,<sp/>fsg_lextree_n_pnode(fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref>));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>=<sp/>bestscore;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">fsg_search_pnode_trans(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*<sp/>pnode)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*child;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>newscore,<sp/>thresh,<sp/>nf;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(pnode);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!fsg_pnode_leaf(pnode));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>+<sp/>fsgs-&gt;beam;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>fsg_pnode_hmmptr(pnode);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(child<sp/>=<sp/>fsg_pnode_succ(pnode);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child;<sp/>child<sp/>=<sp/>fsg_pnode_sibling(child))<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>hmm_out_score(hmm)<sp/>+<sp/>child-&gt;logs2prob;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;child-&gt;hmm)))<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Incoming<sp/>score<sp/>&gt;<sp/>pruning<sp/>threshold<sp/>and<sp/>&gt;<sp/>target&apos;s<sp/>existing<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;child-&gt;hmm)<sp/>&lt;<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Child<sp/>node<sp/>not<sp/>yet<sp/>activated;<sp/>do<sp/>so<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>=</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glist_add_ptr(fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>child);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;child-&gt;hmm,<sp/>newscore,<sp/>hmm_out_history(hmm),<sp/>nf);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">fsg_search_pnode_exit(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*<sp/>pnode)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*fl;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__ctxt__t" kindref="compound">fsg_pnode_ctxt_t</ref><sp/>ctxt;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(pnode);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(fsg_pnode_leaf(pnode));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>fsg_pnode_hmmptr(pnode);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>fl<sp/>=<sp/>fsg_pnode_fsglink(pnode);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(fl);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>fsg_link_wid(fl);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(wid<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__FSG_DBG__</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;[%5d]<sp/>Exit(%08x)<sp/>%10d(score)<sp/>%5d(pred)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>(int32)<sp/>pnode,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(hmm),<sp/>hmm_out_history(hmm));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>filler<sp/>or<sp/>single<sp/>phone<sp/>word;<sp/>these<sp/>do<sp/>not<sp/>model<sp/>right</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>context<sp/>(i.e.,<sp/>the<sp/>exit<sp/>score<sp/>applies<sp/>to<sp/>all<sp/>right<sp/>contexts).</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsg_model_is_filler(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>wid)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>might<sp/>be<sp/>slow<sp/>due<sp/>to<sp/>repeated<sp/>calls<sp/>to<sp/>dict_to_id().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(dict_is_single_phone(ps_search_dict(fsgs),</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(ps_search_dict(fsgs),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>wid)))))<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>dummy<sp/>context<sp/>structure<sp/>that<sp/>applies<sp/>to<sp/>all<sp/>right<sp/>contexts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a98fd94d024df264025e30c909c82cb56" kindref="member">fsg_pnode_add_all_ctxt</ref>(&amp;ctxt);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>history<sp/>table<sp/>entry<sp/>for<sp/>this<sp/>word<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_history_entry_add(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(hmm),</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm),</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;ci_ext,<sp/>ctxt);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>history<sp/>table<sp/>entry<sp/>for<sp/>this<sp/>word<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_history_entry_add(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_score(hmm),</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_out_history(hmm),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode-&gt;ci_ext,<sp/>pnode-&gt;ctxt);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>(Beam)<sp/>prune<sp/>the<sp/>just<sp/>evaluated<sp/>HMMs,<sp/>determine<sp/>which<sp/>ones<sp/>remain</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>active,<sp/>which<sp/>ones<sp/>transition<sp/>to<sp/>successors,<sp/>which<sp/>ones<sp/>exit<sp/>and</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>terminate<sp/>in<sp/>their<sp/>respective<sp/>destination<sp/>FSM<sp/>states.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>(Executed<sp/>once<sp/>per<sp/>frame.)</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">fsg_search_hmm_prune_prop(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*pnode;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh,<sp/>word_thresh,<sp/>phone_thresh;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>+<sp/>fsgs-&gt;beam;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>phone_thresh<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>+<sp/>fsgs-&gt;pbeam;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>word_thresh<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>+<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1af28ddecbb5115a50712c61f8a72dcf51" kindref="member">wbeam</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/>(<ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*)<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>fsg_pnode_hmmptr(pnode);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(hmm)<sp/>&gt;=<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>this<sp/>HMM<sp/>active<sp/>in<sp/>the<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(hmm)<sp/>==<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(hmm)<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>=</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glist_add_ptr(fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>pnode);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(hmm)<sp/>==<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fsg_pnode_leaf(pnode))<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(hmm)<sp/>&gt;=<sp/>phone_thresh)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>out<sp/>of<sp/>this<sp/>phone<sp/>into<sp/>its<sp/>children<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_pnode_trans(fsgs,<sp/>pnode);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_out_score(hmm)<sp/>&gt;=<sp/>word_thresh)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>out<sp/>of<sp/>leaf<sp/>node<sp/>into<sp/>destination<sp/>FSG<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_pnode_exit(fsgs,<sp/>pnode);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>Propagate<sp/>newly<sp/>created<sp/>history<sp/>entries<sp/>through<sp/>null<sp/>transitions.</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">fsg_search_null_prop(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bpidx,<sp/>n_entries,<sp/>thresh,<sp/>newscore;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*l;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>s;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_model_t<sp/>*fsg;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>+<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1af28ddecbb5115a50712c61f8a72dcf51" kindref="member">wbeam</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Which<sp/>beam<sp/>really??<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>n_entries<sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bpidx<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a24d59609008ac132dca256d36a89f9c8" kindref="member">bpidx_start</ref>;<sp/>bpidx<sp/>&lt;<sp/>n_entries;<sp/>bpidx++)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_arciter_t<sp/>*itor;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bpidx);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>fsg_hist_entry_fsglink(hist_entry);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destination<sp/>FSG<sp/>state<sp/>for<sp/>history<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>l<sp/>?<sp/>fsg_link_to_state(l)<sp/>:<sp/>fsg_model_start_state(fsg);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Check<sp/>null<sp/>transitions<sp/>from<sp/>d<sp/>to<sp/>all<sp/>other<sp/>states.<sp/><sp/>(Only<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>propagate<sp/>one<sp/>step,<sp/>since<sp/>FSG<sp/>contains<sp/>transitive<sp/>closure<sp/>of<sp/>null</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>transitions.)</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>all<sp/>links<sp/>from<sp/>from_state<sp/>to<sp/>dst<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itor<sp/>=<sp/>fsg_model_arcs(fsg,<sp/>s);<sp/>itor;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor<sp/>=<sp/>fsg_arciter_next(itor))<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*l<sp/>=<sp/>fsg_arciter_get(itor);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Need<sp/>to<sp/>deal<sp/>with<sp/>tag<sp/>transitions<sp/>somehow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsg_link_wid(l)<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_hist_entry_score(hist_entry)<sp/>+</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fsg_link_logs2prob(l)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newscore<sp/>&gt;=<sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_history_entry_add(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>l,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_hist_entry_frame(hist_entry),</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpidx,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_hist_entry_lc(hist_entry),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_hist_entry_rc(hist_entry));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>Perform<sp/>cross-word<sp/>transitions;<sp/>propagate<sp/>each<sp/>history<sp/>entry<sp/>created<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/>frame<sp/>to<sp/>lextree<sp/>roots<sp/>attached<sp/>to<sp/>the<sp/>target<sp/>FSG<sp/>state<sp/>for<sp/>that<sp/>entry.</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">fsg_search_word_trans(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bpidx,<sp/>n_entries;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*l;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score,<sp/>newscore,<sp/>thresh,<sp/>nf,<sp/>d;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*root;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>lc,<sp/>rc;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>n_entries<sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>+<sp/>fsgs-&gt;beam;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bpidx<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a24d59609008ac132dca256d36a89f9c8" kindref="member">bpidx_start</ref>;<sp/>bpidx<sp/>&lt;<sp/>n_entries;<sp/>bpidx++)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bpidx);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hist_entry);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>fsg_hist_entry_score(hist_entry);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>==<sp/>fsg_hist_entry_frame(hist_entry));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>fsg_hist_entry_fsglink(hist_entry);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destination<sp/>state<sp/>for<sp/>hist_entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>l<sp/>?<sp/>fsg_link_to_state(l)<sp/>:<sp/>fsg_model_start_state(fsgs-&gt;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc<sp/>=<sp/>fsg_hist_entry_lc(hist_entry);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>to<sp/>all<sp/>root<sp/>nodes<sp/>attached<sp/>to<sp/>state<sp/>d<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(root<sp/>=<sp/>fsg_lextree_root(fsgs-&gt;<ref refid="structfsg__search__s_1ac2c756ff6c1a2f1059011756d22441f8" kindref="member">lextree</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root;<sp/>root<sp/>=<sp/>root-&gt;sibling)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>root-&gt;ci_ext;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((root-&gt;ctxt.bv[lc<sp/>&gt;&gt;<sp/>5]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(lc<sp/>&amp;<sp/>0x001f)))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hist_entry-&gt;rc.bv[rc<sp/>&gt;&gt;<sp/>5]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(rc<sp/>&amp;<sp/>0x001f))))<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Last<sp/>CIphone<sp/>of<sp/>history<sp/>entry<sp/>is<sp/>in<sp/>left-context<sp/>list<sp/>supported<sp/>by</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>target<sp/>root<sp/>node,<sp/>and</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>first<sp/>CIphone<sp/>of<sp/>target<sp/>root<sp/>node<sp/>is<sp/>in<sp/>right<sp/>context<sp/>list<sp/>supported</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>history<sp/>entry;</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>So<sp/>the<sp/>transition<sp/>can<sp/>go<sp/>ahead<sp/>(if<sp/>new<sp/>score<sp/>is<sp/>good<sp/>enough).</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newscore<sp/>=<sp/>score<sp/>+<sp/>root-&gt;logs2prob;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(newscore<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(&amp;root-&gt;hmm)))<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(&amp;root-&gt;hmm)<sp/>&lt;<sp/>nf)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Newly<sp/>activated<sp/>node;<sp/>add<sp/>to<sp/>active<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>=</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glist_add_ptr(fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>root);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__FSG_DBG__</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;[%5d]<sp/>WordTrans<sp/>bpidx[%d]<sp/>-&gt;<sp/>pnode[%08x]<sp/>(activated)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>bpidx,<sp/>(int32)<sp/>root);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__FSG_DBG__</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;[%5d]<sp/>WordTrans<sp/>bpidx[%d]<sp/>-&gt;<sp/>pnode[%08x]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>bpidx,<sp/>(int32)<sp/>root);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(&amp;root-&gt;hmm,<sp/>newscore,<sp/>bpidx,<sp/>nf);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">fsg_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1a0fdf6fe8c4d9c28f10c48c09517c6b91" kindref="member">acmod</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*pnode;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Activate<sp/>our<sp/>HMMs<sp/>for<sp/>the<sp/>current<sp/>frame<sp/>if<sp/>need<sp/>be.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acmod-&gt;<ref refid="structacmod__s_1ac08227365e3ed4354e26f013bc0df2bd" kindref="member">compallsen</ref>)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_search_sen_active(fsgs);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>GMM<sp/>scores<sp/>for<sp/>the<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>senscr<sp/>=<sp/><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(acmod,<sp/>&amp;frame_idx);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a56494e3b30d0c66367c7ef055b8addb2" kindref="member">n_sen_eval</ref><sp/>+=<sp/>acmod-&gt;<ref refid="structacmod__s_1a5081a507e3ca6de6c5695217245dc9f9" kindref="member">n_senone_active</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" kindref="member">hmm_context_set_senscore</ref>(fsgs-&gt;<ref refid="structfsg__search__s_1a7407bdf5f311caf9d46817b3387b798c" kindref="member">hmmctx</ref>,<sp/>senscr);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>backpointer<sp/>table<sp/>for<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a24d59609008ac132dca256d36a89f9c8" kindref="member">bpidx_start</ref><sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>all<sp/>active<sp/>pnodes<sp/>(HMMs)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_search_hmm_eval(fsgs);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Prune<sp/>and<sp/>propagate<sp/>the<sp/>HMMs<sp/>evaluated;<sp/>create<sp/>history<sp/>entries<sp/>for</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>word<sp/>exits.<sp/><sp/>The<sp/>words<sp/>exits<sp/>are<sp/>tentative,<sp/>and<sp/>may<sp/>be<sp/>pruned;<sp/>make</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>survivors<sp/>permanent<sp/>via<sp/>fsg_history_end_frame().</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_search_hmm_prune_prop(fsgs);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_history_end_frame(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Propagate<sp/>new<sp/>history<sp/>entries<sp/>through<sp/>any<sp/>null<sp/>transitions,<sp/>creating</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>new<sp/>history<sp/>entries,<sp/>and<sp/>then<sp/>make<sp/>the<sp/>survivors<sp/>permanent.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_search_null_prop(fsgs);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_history_end_frame(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Perform<sp/>cross-word<sp/>transitions;<sp/>propagate<sp/>each<sp/>history<sp/>entry<sp/>across<sp/>its</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>terminating<sp/>state<sp/>to<sp/>the<sp/>root<sp/>nodes<sp/>of<sp/>the<sp/>lextree<sp/>attached<sp/>to<sp/>the<sp/>state.</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_search_word_trans(fsgs);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We&apos;ve<sp/>now<sp/>come<sp/>full<sp/>circle,<sp/>HMM<sp/>and<sp/>FSG<sp/>states<sp/>have<sp/>been<sp/>updated<sp/>for</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>next<sp/>frame.</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Update<sp/>the<sp/>active<sp/>lists,<sp/>deactivate<sp/>any<sp/>currently<sp/>active<sp/>HMMs<sp/>that</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>did<sp/>not<sp/>survive<sp/>into<sp/>the<sp/>next<sp/>frame</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/>(<ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*)<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>fsg_pnode_hmmptr(pnode);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_frame(hmm)<sp/>==<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>HMM<sp/>NOT<sp/>activated<sp/>for<sp/>the<sp/>next<sp/>frame;<sp/>reset<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a6dc55ff3873855fb7b2c0390aa072516" kindref="member">fsg_psubtree_pnode_deactivate</ref>(pnode);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hmm_frame(hmm)<sp/>==<sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>currently<sp/>active<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>the<sp/>next-frame<sp/>active<sp/>list<sp/>the<sp/>current<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref><sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>this<sp/>frame;<sp/>ready<sp/>for<sp/>the<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>++fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/>*<sp/>Set<sp/>all<sp/>HMMs<sp/>to<sp/>inactive,<sp/>clear<sp/>active<sp/>lists,<sp/>initialize<sp/>FSM<sp/>start</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/>state<sp/>to<sp/>be<sp/>the<sp/>only<sp/>active<sp/>node.</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*<sp/>(Executed<sp/>at<sp/>the<sp/>start<sp/>of<sp/>each<sp/>utterance.)</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">fsg_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>silcipid;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__ctxt__t" kindref="compound">fsg_pnode_ctxt_t</ref><sp/>ctxt;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>dynamic<sp/>adjustment<sp/>factor<sp/>for<sp/>beams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a8e86d9f82189f8429d71ee2f67ecaaa2" kindref="member">beam_factor</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;beam<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a0cdf7dc3d3eed0d37f46cb71fdea206e" kindref="member">beam_orig</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;pbeam<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7cdf0ab2591b95d89940d51e3ab01529" kindref="member">pbeam_orig</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1af28ddecbb5115a50712c61f8a72dcf51" kindref="member">wbeam</ref><sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7f3ecc2f769143e42ed958744478db3c" kindref="member">wbeam_orig</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>silcipid<sp/>=<sp/><ref refid="bin__mdef_8h_1af592f710731474b77166a29530716672" kindref="member">bin_mdef_ciphone_id</ref>(ps_search_acmod(fsgs)-&gt;mdef,<sp/></highlight><highlight class="stringliteral">&quot;SIL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>EVERYTHING<sp/>to<sp/>be<sp/>inactive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_history_reset(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_history_utt_start(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Dummy<sp/>context<sp/>structure<sp/>that<sp/>allows<sp/>all<sp/>right<sp/>contexts<sp/>to<sp/>use<sp/>this<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a98fd94d024df264025e30c909c82cb56" kindref="member">fsg_pnode_add_all_ctxt</ref>(&amp;ctxt);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>dummy<sp/>history<sp/>entry<sp/>leading<sp/>to<sp/>start<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a52880ad440412d76f7aae7e05977ba4b" kindref="member">bestscore</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_history_entry_add(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>-1,<sp/>0,<sp/>-1,<sp/>silcipid,<sp/>ctxt);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a24d59609008ac132dca256d36a89f9c8" kindref="member">bpidx_start</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Propagate<sp/>dummy<sp/>history<sp/>entry<sp/>through<sp/>NULL<sp/>transitions<sp/>from<sp/>start<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_search_null_prop(fsgs);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>word<sp/>transitions<sp/>from<sp/>this<sp/>dummy<sp/>history<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_search_word_trans(fsgs);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>the<sp/>next-frame<sp/>active<sp/>list<sp/>the<sp/>current<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref><sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>++fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7e3d7375b4a33af339e8b55885677faa" kindref="member">n_hmm_eval</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a56494e3b30d0c66367c7ef055b8addb2" kindref="member">n_sen_eval</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_reset(&amp;fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_start(&amp;fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*<sp/>Cleanup<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>utterance.</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal">fsg_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*pnode;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_hist,<sp/>cf;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Deactivate<sp/>all<sp/>nodes<sp/>in<sp/>the<sp/>current<sp/>and<sp/>next-frame<sp/>active<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/>(<ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*)<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a6dc55ff3873855fb7b2c0390aa072516" kindref="member">fsg_psubtree_pnode_deactivate</ref>(pnode);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnode<sp/>=<sp/>(<ref refid="structfsg__pnode__s" kindref="compound">fsg_pnode_t</ref><sp/>*)<sp/>gnode_ptr(gn);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fsg__lextree_8c_1a6dc55ff3873855fb7b2c0390aa072516" kindref="member">fsg_psubtree_pnode_deactivate</ref>(pnode);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a318ff42978c1e645f01962345ac08215" kindref="member">pnode_active</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1aa2dfc00e1f34041dacd9572b0d659775" kindref="member">pnode_active_next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs-&gt;n_tot_frame<sp/>+=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>frames,<sp/>%d<sp/>HMMs<sp/>(%d/fr),<sp/>%d<sp/>senones<sp/>(%d/fr),<sp/>%d<sp/>history<sp/>entries<sp/>(%d/fr)\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7e3d7375b4a33af339e8b55885677faa" kindref="member">n_hmm_eval</ref>,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a7e3d7375b4a33af339e8b55885677faa" kindref="member">n_hmm_eval</ref><sp/>/<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a56494e3b30d0c66367c7ef055b8addb2" kindref="member">n_sen_eval</ref>,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a56494e3b30d0c66367c7ef055b8addb2" kindref="member">n_sen_eval</ref><sp/>/<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hist,<sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>n_hist<sp/>/<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>some<sp/>statistics.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>ptmr_stop(&amp;fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>cf<sp/>=<sp/>ps_search_acmod(fsgs)-&gt;output_frame;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cf<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_speech<sp/>=<sp/>(double)<sp/>(cf<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>cmd_ln_int32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-frate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fsg<sp/>%.2f<sp/>CPU<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_cpu,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_cpu<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;fsg<sp/>%.2f<sp/>wall<sp/>%.3f<sp/>xRT\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_elapsed,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1add677e47865b37fb38068a78abc7b2c4" kindref="member">perf</ref>.t_elapsed<sp/>/<sp/>n_speech);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">fsg_search_find_exit(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">,<sp/>int32<sp/>*out_score,<sp/>int32*<sp/>out_is_final)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_model_t<sp/>*fsg;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpidx,<sp/>frm,<sp/>last_frm,<sp/>besthist;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bestscore;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_is_final)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_is_final<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_idx<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>last_frm<sp/>=<sp/>frm<sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>backwards<sp/>to<sp/>find<sp/>a<sp/>word<sp/>exit<sp/>in<sp/>frame_idx.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>bpidx<sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bpidx<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bpidx);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsg_hist_entry_frame(hist_entry)<sp/>&lt;=<sp/>frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm<sp/>=<sp/>last_frm<sp/>=<sp/>fsg_hist_entry_frame(hist_entry);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpidx--;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>hypothesis<sp/>(yet).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpidx<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bpidx;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>find<sp/>best<sp/>word<sp/>exit<sp/>in<sp/>this<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>INT_MIN;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>besthist<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(frm<sp/>==<sp/>last_frm)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*fl;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl<sp/>=<sp/>fsg_hist_entry_fsglink(hist_entry);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>fsg_hist_entry_score(hist_entry);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fl<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prefer<sp/>final<sp/>hypothesis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>==<sp/>bestscore<sp/>&amp;&amp;<sp/>fsg_link_to_state(fl)<sp/>==<sp/>fsg_model_final_state(fsg))<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>besthist<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bestscore)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>enforce<sp/>the<sp/>final<sp/>state<sp/>constraint<sp/>if<sp/>this<sp/>is<sp/>a<sp/>final<sp/>hypothesis.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!</highlight><highlight class="keyword">final</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>fsg_link_to_state(fl)<sp/>==<sp/>fsg_model_final_state(fsg))<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>besthist<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--bpidx;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpidx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bpidx);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm<sp/>=<sp/>fsg_hist_entry_frame(hist_entry);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Final<sp/>state<sp/>not<sp/>reached.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(besthist<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Final<sp/>result<sp/>does<sp/>not<sp/>match<sp/>the<sp/>grammar<sp/>in<sp/>frame<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>here&apos;s<sp/>the<sp/>one<sp/>we<sp/>want.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_score)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_score<sp/>=<sp/>bestscore;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_is_final)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*fl;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>besthist);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl<sp/>=<sp/>fsg_hist_entry_fsglink(hist_entry);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_is_final<sp/>=<sp/>(fsg_link_to_state(fl)<sp/>==<sp/>fsg_model_final_state(fsg));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>besthist;</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Mostly<sp/>duplicated<sp/>with<sp/>ngram_search_bestpath().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*</highlight></codeline>
<codeline lineno="961"><highlight class="normal">fsg_search_bestpath(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backward)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref><sp/>=<sp/><ref refid="ps__lattice_8h_1af19b8f0749af01d4874595e80fc612ba" kindref="member">ps_lattice_bestpath</ref>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a4d13fff2e14882b0125386fc27a4097f" kindref="member">ascale</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>calculate<sp/>betas<sp/>so<sp/>we<sp/>can<sp/>fill<sp/>in<sp/>the<sp/>posterior</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>probability<sp/>field<sp/>in<sp/>the<sp/>segmentation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1a721a656d0e34f7604ea8c52a1bdf14ff" kindref="member">post</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a721a656d0e34f7604ea8c52a1bdf14ff" kindref="member">post</ref><sp/>=<sp/><ref refid="ps__lattice_8h_1a8c5c6ef260ab006099ab34d09b5b1d06" kindref="member">ps_lattice_posterior</ref>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>,<sp/>NULL,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a4d13fff2e14882b0125386fc27a4097f" kindref="member">ascale</ref>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_score)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_score<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref>-&gt;<ref refid="structps__latlink__s_1a704fcfbdb57b1461325544c782289599" kindref="member">path_scr</ref><sp/>+<sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>-&gt;<ref refid="structps__lattice__s_1aba113d4134c72d7405423c77bcc1247e" kindref="member">final_node_ascr</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1aa3020ef7bd4e56713dfe2fbad52e6e4f" kindref="member">last_link</ref>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="981"><highlight class="normal">fsg_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/>int32<sp/>*out_is_final)</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict<sp/>=<sp/>ps_search_dict(search);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bp,<sp/>bpidx;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>last<sp/>backpointer<sp/>table<sp/>index.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>bpidx<sp/>=<sp/>fsg_search_find_exit(fsgs,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref>,<sp/>out_score,<sp/>out_is_final);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>hypothesis<sp/>(yet).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpidx<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>bestpath<sp/>is<sp/>enabled<sp/>and<sp/>the<sp/>utterance<sp/>is<sp/>complete,<sp/>then<sp/>run<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1aba7eff57919c5a1de55eab3a62ff055a" kindref="member">bestpath</ref><sp/>&amp;&amp;<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref>)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*link;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag<sp/>=<sp/>fsg_search_lattice(search))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>obtain<sp/>the<sp/>lattice<sp/>while<sp/>bestpath<sp/>enabled\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((link<sp/>=<sp/>fsg_search_bestpath(search,<sp/>out_score,<sp/>FALSE))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>the<sp/>bestpath<sp/>in<sp/>a<sp/>lattice\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ps__lattice_8c_1a02b07c009d23b852bd4db54700dfac5b" kindref="member">ps_lattice_hyp</ref>(dag,<sp/>link);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bp);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*fl<sp/>=<sp/>fsg_hist_entry_fsglink(hist_entry);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*baseword;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>fsg_hist_entry_pred(hist_entry);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>fsg_link_wid(fl);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>&lt;<sp/>0<sp/>||<sp/>fsg_model_is_filler(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>wid))</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseword<sp/>=<sp/>dict_basestr(dict,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>wid)));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>strlen(baseword)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>=<sp/>ckd_calloc(1,<sp/>len);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref><sp/>+<sp/>len<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bp);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*fl<sp/>=<sp/>fsg_hist_entry_fsglink(hist_entry);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*baseword;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>fsg_hist_entry_pred(hist_entry);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>fsg_link_wid(fl);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>&lt;<sp/>0<sp/>||<sp/>fsg_model_is_filler(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>wid))</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseword<sp/>=<sp/>dict_basestr(dict,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dict,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>wid)));</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(baseword);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(c,<sp/>baseword,<sp/>len);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--c;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1aa398c736a887af97e42b2a562359adc3" kindref="member">hyp_str</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">fsg_seg_bp2itor(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg,<sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)seg-&gt;<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*ph<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bp;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((bp<sp/>=<sp/>fsg_hist_entry_pred(hist_entry))<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bp);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a97a0dc7db931c7e3f98d23d21ce27f04" kindref="member">word</ref><sp/>=<sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>hist_entry-&gt;fsglink-&gt;wid);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1ab25ecc6af8d2695c6097cf7e934eadd4" kindref="member">ef</ref><sp/>=<sp/>fsg_hist_entry_frame(hist_entry);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a885a599726cd0efba573d106d016e6e2" kindref="member">sf</ref><sp/>=<sp/>ph<sp/>?<sp/>fsg_hist_entry_frame(ph)<sp/>+<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>kind<sp/>of<sp/>silly<sp/>but<sp/>it<sp/>happens<sp/>for<sp/>null<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;<ref refid="structps__seg__s_1a885a599726cd0efba573d106d016e6e2" kindref="member">sf</ref><sp/>&gt;<sp/>seg-&gt;<ref refid="structps__seg__s_1ab25ecc6af8d2695c6097cf7e934eadd4" kindref="member">ef</ref>)<sp/>seg-&gt;<ref refid="structps__seg__s_1a885a599726cd0efba573d106d016e6e2" kindref="member">sf</ref><sp/>=<sp/>seg-&gt;<ref refid="structps__seg__s_1ab25ecc6af8d2695c6097cf7e934eadd4" kindref="member">ef</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1ae683244d90d0a5339930b47757778432" kindref="member">prob</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Bogus<sp/>value...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;Language<sp/>model&quot;<sp/>score<sp/>=<sp/>transition<sp/>probability.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a4d86c21f1ed2dc3eb3b1b1b37ce9bb48" kindref="member">lback</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref><sp/>=<sp/>fsg_link_logs2prob(hist_entry-&gt;fsglink)<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ph)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Not<sp/>sure<sp/>exactly<sp/>how<sp/>cross-word<sp/>triphones<sp/>are<sp/>handled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a6f7706ec4c0d0ec8ecafaf0f29f41f4b" kindref="member">ascr</ref><sp/>=<sp/>hist_entry-&gt;score<sp/>-<sp/>ph-&gt;score<sp/>-<sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref>;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;<ref refid="structps__seg__s_1a6f7706ec4c0d0ec8ecafaf0f29f41f4b" kindref="member">ascr</ref><sp/>=<sp/>hist_entry-&gt;score<sp/>-<sp/>seg-&gt;<ref refid="structps__seg__s_1a69e605f422eeed1a9c67437e8ddd8b08" kindref="member">lscr</ref>;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal">fsg_seg_free(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__seg__s" kindref="compound">fsg_seg_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structfsg__seg__s" kindref="compound">fsg_seg_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(itor-&gt;<ref refid="structfsg__seg__s_1ae41fbe837c6c921133c91453c58ba68e" kindref="member">hist</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(itor);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">fsg_seg_next(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*seg)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__seg__s" kindref="compound">fsg_seg_t</ref><sp/>*itor<sp/>=<sp/>(<ref refid="structfsg__seg__s" kindref="compound">fsg_seg_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++itor-&gt;<ref refid="structfsg__seg__s_1a4b5e46bf79915c97845974e80355ebbe" kindref="member">cur</ref><sp/>==<sp/>itor-&gt;<ref refid="structfsg__seg__s_1aca806a5b88f77803fff4c4c984034515" kindref="member">n_hist</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_seg_free(seg);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_seg_bp2itor(seg,<sp/>itor-&gt;<ref refid="structfsg__seg__s_1ae41fbe837c6c921133c91453c58ba68e" kindref="member">hist</ref>[itor-&gt;<ref refid="structfsg__seg__s_1a4b5e46bf79915c97845974e80355ebbe" kindref="member">cur</ref>]);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__segfuncs__s" kindref="compound">ps_segfuncs_t</ref><sp/>fsg_segfuncs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_next<sp/>*/</highlight><highlight class="normal"><sp/>fsg_seg_next,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_free<sp/>*/</highlight><highlight class="normal"><sp/>fsg_seg_free</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">fsg_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__seg__s" kindref="compound">fsg_seg_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>out_score;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bp,<sp/>bpidx,<sp/>cur;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>bpidx<sp/>=<sp/>fsg_search_find_exit(fsgs,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref>,<sp/>&amp;out_score,<sp/>NULL);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>hypothesis<sp/>(yet).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bpidx<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>bestpath<sp/>is<sp/>enabled<sp/>and<sp/>the<sp/>utterance<sp/>is<sp/>complete,<sp/>then<sp/>run<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1aba7eff57919c5a1de55eab3a62ff055a" kindref="member">bestpath</ref><sp/>&amp;&amp;<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*link;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag<sp/>=<sp/>fsg_search_lattice(search))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((link<sp/>=<sp/>fsg_search_bestpath(search,<sp/>&amp;out_score,<sp/>TRUE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ps__lattice_8c_1afedbc5558c18f7d029e84a4e27e38187" kindref="member">ps_lattice_seg_iter</ref>(dag,<sp/>link,<sp/>1.0);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calling<sp/>this<sp/>an<sp/>&quot;iterator&quot;<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>misnomer<sp/>since<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>get<sp/>the<sp/>entire<sp/>backtrace<sp/>in<sp/>order<sp/>to<sp/>produce<sp/>it.<sp/><sp/>On<sp/>the</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>hand,<sp/>all<sp/>we<sp/>actually<sp/>need<sp/>is<sp/>the<sp/>bptbl<sp/>IDs,<sp/>and<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>allocate<sp/>a<sp/>fixed-size<sp/>array<sp/>of<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>itor<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structfsg__seg__s_1a9f977be4814ec887aadb3cea35f96bab" kindref="member">base</ref>.<ref refid="structps__seg__s_1a510362a2281e374c839397c3e5488515" kindref="member">vt</ref><sp/>=<sp/>&amp;fsg_segfuncs;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structfsg__seg__s_1a9f977be4814ec887aadb3cea35f96bab" kindref="member">base</ref>.<ref refid="structps__seg__s_1a14168ddcb60e094dad36c7c920a79bb3" kindref="member">search</ref><sp/>=<sp/>search;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structfsg__seg__s_1a9f977be4814ec887aadb3cea35f96bab" kindref="member">base</ref>.<ref refid="structps__seg__s_1a2249c012b83c902f4f8ed8d98ded7d20" kindref="member">lwf</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structfsg__seg__s_1aca806a5b88f77803fff4c4c984034515" kindref="member">n_hist</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bp);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>fsg_hist_entry_pred(hist_entry);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++itor-&gt;<ref refid="structfsg__seg__s_1aca806a5b88f77803fff4c4c984034515" kindref="member">n_hist</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structfsg__seg__s_1aca806a5b88f77803fff4c4c984034515" kindref="member">n_hist</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(itor);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structfsg__seg__s_1ae41fbe837c6c921133c91453c58ba68e" kindref="member">hist</ref><sp/>=<sp/>ckd_calloc(itor-&gt;<ref refid="structfsg__seg__s_1aca806a5b88f77803fff4c4c984034515" kindref="member">n_hist</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor-&gt;<ref refid="structfsg__seg__s_1ae41fbe837c6c921133c91453c58ba68e" kindref="member">hist</ref>));</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>itor-&gt;<ref refid="structfsg__seg__s_1aca806a5b88f77803fff4c4c984034515" kindref="member">n_hist</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>bpidx;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*hist_entry<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>bp);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structfsg__seg__s_1ae41fbe837c6c921133c91453c58ba68e" kindref="member">hist</ref>[cur]<sp/>=<sp/>hist_entry;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp<sp/>=<sp/>fsg_hist_entry_pred(hist_entry);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--cur;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>relevant<sp/>fields<sp/>for<sp/>first<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_seg_bp2itor((<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)itor,<sp/>itor-&gt;<ref refid="structfsg__seg__s_1ae41fbe837c6c921133c91453c58ba68e" kindref="member">hist</ref>[0]);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*)itor;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal">fsg_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>bestpath<sp/>is<sp/>enabled<sp/>and<sp/>the<sp/>utterance<sp/>is<sp/>complete,<sp/>then<sp/>run<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1aba7eff57919c5a1de55eab3a62ff055a" kindref="member">bestpath</ref><sp/>&amp;&amp;<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1a5139d7ab35ae18407e06e78e1778f857" kindref="member">final</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latlink__s" kindref="compound">ps_latlink_t</ref><sp/>*link;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag<sp/>=<sp/>fsg_search_lattice(search))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((link<sp/>=<sp/>fsg_search_bestpath(search,<sp/>NULL,<sp/>TRUE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1a721a656d0e34f7604ea8c52a1bdf14ff" kindref="member">post</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Give<sp/>some<sp/>kind<sp/>of<sp/>good<sp/>estimate<sp/>here,<sp/>eventually.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">find_node(<ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag,<sp/>fsg_model_t<sp/>*fsg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf,<sp/>int32<sp/>wid,<sp/>int32<sp/>node_id)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>==<sp/>sf)<sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>==<sp/>wid)<sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="structps__latnode__s_1a50d14c033652a4fb387f76881df1c3f6" kindref="member">node_id</ref><sp/>==<sp/>node_id))</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">new_node(<ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag,<sp/>fsg_model_t<sp/>*fsg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ef,<sp/>int32<sp/>wid,<sp/>int32<sp/>node_id,<sp/>int32<sp/>ascr)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>find_node(dag,<sp/>fsg,<sp/>sf,<sp/>wid,<sp/>node_id);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>end<sp/>frames.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>==<sp/>-1<sp/>||<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>&lt;<sp/>ef)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>==<sp/>-1<sp/>||<sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>&gt;<sp/>ef)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>best<sp/>link<sp/>score.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ascr<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>node-&gt;info.<ref refid="structps__latnode__s_1a855680c8e26809995d6a341308858984" kindref="member">best_exit</ref>)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;info.<ref refid="structps__latnode__s_1a855680c8e26809995d6a341308858984" kindref="member">best_exit</ref><sp/>=<sp/>ascr;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>node;<sp/>link<sp/>to<sp/>head<sp/>of<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>listelem_malloc(dag-&gt;<ref refid="structps__lattice__s_1a14e4e87550647d5119cd1cc48ff4f3f1" kindref="member">latnode_alloc</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>=<sp/>wid;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>=<sp/>sf;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref><sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>=<sp/>ef;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a051a7eed31e29dd75151d1b34cc4eefa" kindref="member">entries</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a5232eefbc6e800b77e7a3c8ee3f4135d" kindref="member">exits</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;info.<ref refid="structps__latnode__s_1a855680c8e26809995d6a341308858984" kindref="member">best_exit</ref><sp/>=<sp/>ascr;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a50d14c033652a4fb387f76881df1c3f6" kindref="member">node_id</ref><sp/>=<sp/>node_id;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref><sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dag-&gt;<ref refid="structps__lattice__s_1adcc3bdadae1f3e3ace2d36548983ae78" kindref="member">n_nodes</ref>;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">find_start_node(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_t<sp/>start<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>all<sp/>nodes<sp/>starting<sp/>in<sp/>frame<sp/>zero<sp/>with<sp/>some<sp/>exits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="structps__latnode__s_1a5232eefbc6e800b77e7a3c8ee3f4135d" kindref="member">exits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Start<sp/>node<sp/>%s.%d:%d:%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>glist_add_ptr(start,<sp/>node);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nstart;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>was<sp/>more<sp/>than<sp/>one<sp/>start<sp/>node<sp/>candidate,<sp/>then<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>create<sp/>an<sp/>artificial<sp/>start<sp/>node<sp/>with<sp/>epsilon<sp/>transitions<sp/>to</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>of<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nstart<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>gnode_ptr(start);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnode_t<sp/>*st;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>fsg_model_word_add(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;s&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>-&gt;silwords)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>-&gt;silwords,<sp/>wid);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>new_node(dag,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>0,<sp/>0,<sp/>wid,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(st<sp/>=<sp/>start;<sp/>st;<sp/>st<sp/>=<sp/>gnode_next(st))</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" kindref="member">ps_lattice_link</ref>(dag,<sp/>node,<sp/>gnode_ptr(st),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(start);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">find_end_node(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs,<sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_t<sp/>end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nend<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>all<sp/>nodes<sp/>ending<sp/>in<sp/>last<sp/>frame<sp/>with<sp/>some<sp/>entries.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>==<sp/>dag-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref><sp/>-<sp/>1<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="structps__latnode__s_1a051a7eed31e29dd75151d1b34cc4eefa" kindref="member">entries</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;End<sp/>node<sp/>%s.%d:%d:%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>,<sp/>node-&gt;info.<ref refid="structps__latnode__s_1a855680c8e26809995d6a341308858984" kindref="member">best_exit</ref>);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>glist_add_ptr(end,<sp/>node);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nend;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nend<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>gnode_ptr(end);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nend<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*last<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ef<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>were<sp/>no<sp/>end<sp/>node<sp/>candidates,<sp/>then<sp/>just<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>node<sp/>with<sp/>the<sp/>last<sp/>exit<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref><sp/>&gt;<sp/>ef<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="structps__latnode__s_1a051a7eed31e29dd75151d1b34cc4eefa" kindref="member">entries</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ef<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>last;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;End<sp/>node<sp/>%s.%d:%d:%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1a584ee5a303355d851ac903718998df14" kindref="member">fef</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1a5c7b9114d131151d6ce85228ea9f829d" kindref="member">lef</ref>,<sp/>node-&gt;info.<ref refid="structps__latnode__s_1a855680c8e26809995d6a341308858984" kindref="member">best_exit</ref>);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>was<sp/>more<sp/>than<sp/>one<sp/>end<sp/>node<sp/>candidate,<sp/>then<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>create<sp/>an<sp/>artificial<sp/>end<sp/>node<sp/>with<sp/>epsilon<sp/>transitions</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>out<sp/>of<sp/>all<sp/>of<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnode_t<sp/>*st;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>fsg_model_word_add(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;/s&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>-&gt;silwords)</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>-&gt;silwords,<sp/>wid);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>new_node(dag,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>,<sp/>wid,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>&quot;best&quot;<sp/>(in<sp/>reality<sp/>it<sp/>will<sp/>be<sp/>the<sp/>only)<sp/>exit<sp/>link</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>score<sp/>from<sp/>this<sp/>final<sp/>node<sp/>as<sp/>the<sp/>link<sp/>score.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(st<sp/>=<sp/>end;<sp/>st;<sp/>st<sp/>=<sp/>gnode_next(st))<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*src<sp/>=<sp/>gnode_ptr(st);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" kindref="member">ps_lattice_link</ref>(dag,<sp/>src,<sp/>node,<sp/>src-&gt;info.<ref refid="structps__latnode__s_1a855680c8e26809995d6a341308858984" kindref="member">best_exit</ref>,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(end);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal">mark_reachable(<ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag,<sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*end)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_t<sp/>q;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>doesn&apos;t<sp/>matter<sp/>which<sp/>order<sp/>we<sp/>do<sp/>this<sp/>in.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>end-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/>glist_add_ptr(NULL,<sp/>end);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(q)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node<sp/>=<sp/>gnode_ptr(q);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlatlink__list__s" kindref="compound">latlink_list_t</ref><sp/>*x;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pop<sp/>the<sp/>front<sp/>of<sp/>the<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>gnode_free(q,<sp/>NULL);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>all<sp/>its<sp/>predecessors<sp/>that<sp/>haven&apos;t<sp/>been<sp/>seen<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1a051a7eed31e29dd75151d1b34cc4eefa" kindref="member">entries</ref>;<sp/>x;<sp/>x<sp/>=<sp/>x-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*next<sp/>=<sp/>x-&gt;link-&gt;<ref refid="structps__latlink__s_1ab0912c26d1472b4c5c07042c19ffb979" kindref="member">from</ref>;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!next-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;<ref refid="structps__latnode__s_1af9c4c69f5f85bbc36818357a52432565" kindref="member">reachable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>glist_add_ptr(q,<sp/>next);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">fsg_search_lattice(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*fsgs;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg_model_t<sp/>*fsg;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*node;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__lattice__s" kindref="compound">ps_lattice_t</ref><sp/>*dag;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>fsgs<sp/>=<sp/>(<ref refid="structfsg__search__s" kindref="compound">fsg_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>a<sp/>lattice<sp/>has<sp/>previously<sp/>been<sp/>created<sp/>over<sp/>the</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>same<sp/>number<sp/>of<sp/>frames,<sp/>and<sp/>reuse<sp/>it<sp/>if<sp/>so.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref><sp/>&amp;&amp;<sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>-&gt;<ref refid="structps__lattice__s_1a3a997dc60d28b84d5bfc01f9ce25a891" kindref="member">n_frames</ref><sp/>==<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nope,<sp/>create<sp/>a<sp/>new<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a3f90e846bde47cd1acdff165b92f5c22" kindref="member">ps_lattice_free</ref>(search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>dag<sp/>=<sp/><ref refid="ps__lattice_8c_1a606f6ee0fd569dd5829d7f84ae7e61bd" kindref="member">ps_lattice_init_search</ref>(search,<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1acdac4164d14d531b14c11a823dd22893" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>fsg<sp/>=<sp/>fsgs-&gt;<ref refid="structfsg__search__s_1ab1877ffe7d77ddb79bab53fb95577946" kindref="member">fsg</ref>;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Each<sp/>history<sp/>table<sp/>entry<sp/>represents<sp/>a<sp/>link<sp/>in<sp/>the<sp/>word<sp/>graph.</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>set<sp/>of<sp/>nodes<sp/>is<sp/>determined<sp/>by<sp/>the<sp/>number<sp/>of<sp/>unique</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(word,start-frame)<sp/>pairs<sp/>in<sp/>the<sp/>history<sp/>table.<sp/><sp/>So<sp/>we<sp/>will</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>first<sp/>find<sp/>all<sp/>those<sp/>nodes.</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*fh<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ascr;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>null<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fh-&gt;fsglink<sp/>==<sp/>NULL<sp/>||<sp/>fh-&gt;fsglink-&gt;wid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>start<sp/>node<sp/>of<sp/>this<sp/>link.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fh-&gt;pred)<sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*pfh<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>fh-&gt;pred);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>We<sp/>include<sp/>the<sp/>transition<sp/>score<sp/>in<sp/>the<sp/>lattice</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>link<sp/>score.<sp/><sp/>This<sp/>is<sp/>because<sp/>of<sp/>the<sp/>practical</highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>difficulty<sp/>of<sp/>obtaining<sp/>it<sp/>separately<sp/>in<sp/>bestpath<sp/>or</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>forward-backward<sp/>search,<sp/>and<sp/>because<sp/>it<sp/>is<sp/>essentially</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>unigram<sp/>probability,<sp/>so<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>treat<sp/>it</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>separately<sp/>from<sp/>the<sp/>acoustic<sp/>score.<sp/><sp/>However,<sp/>it&apos;s<sp/>not</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>clear<sp/>that<sp/>this<sp/>will<sp/>actually<sp/>yield<sp/>correct<sp/>results.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascr<sp/>=<sp/>fh-&gt;score<sp/>-<sp/>pfh-&gt;score;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>pfh-&gt;frame<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascr<sp/>=<sp/>fh-&gt;score;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>although<sp/>scores<sp/>are<sp/>tied<sp/>to<sp/>links<sp/>rather<sp/>than</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>nodes,<sp/>it&apos;s<sp/>possible<sp/>that<sp/>there<sp/>are<sp/>no<sp/>links<sp/>out<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>destination<sp/>node,<sp/>and<sp/>thus<sp/>we<sp/>need<sp/>to<sp/>preserve<sp/>its<sp/>score<sp/>in</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>case<sp/>it<sp/>turns<sp/>out<sp/>to<sp/>be<sp/>utterance-final.</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_node(dag,<sp/>fsg,<sp/>sf,<sp/>fh-&gt;frame,<sp/>fh-&gt;fsglink-&gt;wid,<sp/>fsg_link_to_state(fh-&gt;fsglink),<sp/>ascr);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Now,<sp/>we<sp/>will<sp/>create<sp/>links<sp/>only<sp/>to<sp/>nodes<sp/>that<sp/>actually<sp/>exist.</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>fsg_history_n_entries(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*fh<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_arciter_t<sp/>*itor;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__latnode__s" kindref="compound">ps_latnode_t</ref><sp/>*src,<sp/>*dest;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ascr;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>null<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fh-&gt;fsglink<sp/>==<sp/>NULL<sp/>||<sp/>fh-&gt;fsglink-&gt;wid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>start<sp/>node<sp/>of<sp/>this<sp/>link<sp/>and<sp/>calculate<sp/>its<sp/>link<sp/>score.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fh-&gt;pred)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfsg__hist__entry__s" kindref="compound">fsg_hist_entry_t</ref><sp/>*pfh<sp/>=<sp/>fsg_history_entry_get(fsgs-&gt;<ref refid="structfsg__search__s_1abc949ccaab380bcf5b452d1cac54469b" kindref="member">history</ref>,<sp/>fh-&gt;pred);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>pfh-&gt;frame<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascr<sp/>=<sp/>fh-&gt;score<sp/>-<sp/>pfh-&gt;score;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascr<sp/>=<sp/>fh-&gt;score;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>=<sp/>find_node(dag,<sp/>fsg,<sp/>sf,<sp/>fh-&gt;fsglink-&gt;wid,<sp/>fsg_link_to_state(fh-&gt;fsglink));</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>fh-&gt;frame<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itor<sp/>=<sp/>fsg_model_arcs(fsg,<sp/>fsg_link_to_state(fh-&gt;fsglink));</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor;<sp/>itor<sp/>=<sp/>fsg_arciter_next(itor))<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*link<sp/>=<sp/>fsg_arciter_get(itor);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Need<sp/>to<sp/>figure<sp/>out<sp/>what<sp/>to<sp/>do<sp/>about<sp/>tag<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link-&gt;wid<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>each<sp/>non-epsilon<sp/>link<sp/>following<sp/>this<sp/>one,<sp/>look<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>matching<sp/>node<sp/>in<sp/>the<sp/>lattice<sp/>and<sp/>link<sp/>to<sp/>it.</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dest<sp/>=<sp/>find_node(dag,<sp/>fsg,<sp/>sf,<sp/>link-&gt;wid,<sp/>fsg_link_to_state(link)))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" kindref="member">ps_lattice_link</ref>(dag,<sp/>src,<sp/>dest,<sp/>ascr,<sp/>fh-&gt;frame);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Transitive<sp/>closure<sp/>on<sp/>nulls<sp/>has<sp/>already<sp/>been<sp/>done,<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>need<sp/>to<sp/>look<sp/>one<sp/>link<sp/>forward<sp/>from<sp/>them.</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_arciter_t<sp/>*itor2;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>all<sp/>non-null<sp/>links<sp/>out<sp/>of<sp/>j.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itor2<sp/>=<sp/>fsg_model_arcs(fsg,<sp/>fsg_link_to_state(link));</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor2;<sp/>itor2<sp/>=<sp/>fsg_arciter_next(itor2))<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_link_t<sp/>*link<sp/>=<sp/>fsg_arciter_get(itor2);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link-&gt;wid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dest<sp/>=<sp/>find_node(dag,<sp/>fsg,<sp/>sf,<sp/>link-&gt;wid,<sp/>fsg_link_to_state(link)))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a4aaae70904361b23a78cdcb632c298c4" kindref="member">ps_lattice_link</ref>(dag,<sp/>src,<sp/>dest,<sp/>ascr,<sp/>fh-&gt;frame);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>out<sp/>which<sp/>nodes<sp/>are<sp/>the<sp/>start<sp/>and<sp/>end<sp/>nodes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref><sp/>=<sp/>find_start_node(fsgs,<sp/>dag))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>the<sp/>start<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref><sp/>=<sp/>find_end_node(fsgs,<sp/>dag))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>the<sp/>end<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;lattice<sp/>start<sp/>node<sp/>%s.%d<sp/>end<sp/>node<sp/>%s.%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsg,<sp/>dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref>-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),<sp/>dag-&gt;<ref refid="structps__lattice__s_1a5d936695a3813e117d20b585d48db8fe" kindref="member">start</ref>-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsg,<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>),<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>-&gt;<ref refid="structps__latnode__s_1a4171e956043e7856c04d84498f16cf29" kindref="member">sf</ref>);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Need<sp/>to<sp/>calculate<sp/>final_node_ascr<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Convert<sp/>word<sp/>IDs<sp/>from<sp/>FSG<sp/>to<sp/>dictionary.</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node<sp/>=<sp/>dag-&gt;<ref refid="structps__lattice__s_1a838bd9223e35d012419e6225b54e393d" kindref="member">nodes</ref>;<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structps__latnode__s_1aca6f3d543a1712a1ca3bb8ec60f71c84" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref><sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(dag-&gt;<ref refid="structps__lattice__s_1a9ebaeb7be7a83980569f0c544eb6babb" kindref="member">search</ref>-&gt;<ref refid="structps__search__s_1a918f243fa966e72c47f697fb9e60089d" kindref="member">dict</ref>,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsg_model_word_str(fsg,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structps__latnode__s_1ae3b3dc7d14347e6380859c74b9a02589" kindref="member">basewid</ref><sp/>=<sp/>dict_basewid(dag-&gt;<ref refid="structps__lattice__s_1a9ebaeb7be7a83980569f0c544eb6babb" kindref="member">search</ref>-&gt;<ref refid="structps__search__s_1a918f243fa966e72c47f697fb9e60089d" kindref="member">dict</ref>,<sp/>node-&gt;<ref refid="structps__latnode__s_1afd85dbd410d6e6d970c73088bc6fb97e" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Now<sp/>we<sp/>are<sp/>done,<sp/>because<sp/>the<sp/>links<sp/>in<sp/>the<sp/>graph<sp/>are<sp/>uniquely</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>defined<sp/>by<sp/>the<sp/>history<sp/>table.<sp/><sp/>However<sp/>we<sp/>should<sp/>remove<sp/>any</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>nodes<sp/>which<sp/>are<sp/>not<sp/>reachable<sp/>from<sp/>the<sp/>end<sp/>node<sp/>of<sp/>the<sp/>FSG.</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Everything<sp/>is<sp/>reachable<sp/>from<sp/>the<sp/>start<sp/>node<sp/>by<sp/>definition.</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>mark_reachable(dag,<sp/>dag-&gt;<ref refid="structps__lattice__s_1a00f30e2689853d6bcb31c8005a69dc7b" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8c_1a6da4e36322aaab4d2ebe812bee9a4439" kindref="member">ps_lattice_delete_unreachable</ref>(dag);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>silpen,<sp/>fillpen;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silpen<sp/>=<sp/>(int32)(logmath_log(fsg-&gt;lmath,</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-silprob&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fsg-&gt;lw)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillpen<sp/>=<sp/>(int32)(logmath_log(fsg-&gt;lmath,</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(ps_search_config(fsgs),<sp/></highlight><highlight class="stringliteral">&quot;-fillprob&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fsg-&gt;lw)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8c_1a551b8246b45e8953491a24db438c59c1" kindref="member">ps_lattice_penalize_fillers</ref>(dag,<sp/>silpen,<sp/>fillpen);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structps__search__s_1a897f46c55d17e817ff1364f555b31463" kindref="member">dag</ref><sp/>=<sp/>dag;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dag;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ps__lattice_8h_1a3f90e846bde47cd1acdff165b92f5c22" kindref="member">ps_lattice_free</ref>(dag);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/fsg_search.c"/>
  </compounddef>
</doxygen>
