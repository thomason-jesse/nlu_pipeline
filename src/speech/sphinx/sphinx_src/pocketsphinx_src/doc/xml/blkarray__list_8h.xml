<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="blkarray__list_8h" kind="file">
    <compoundname>blkarray_list.h</compoundname>
    <includes local="no">sphinxbase/prim_type.h</includes>
    <includedby refid="allphone__search_8h" local="yes">src/libpocketsphinx/allphone_search.h</includedby>
    <includedby refid="blkarray__list_8c" local="yes">src/libpocketsphinx/blkarray_list.c</includedby>
    <includedby refid="fsg__history_8h" local="yes">src/libpocketsphinx/fsg_history.h</includedby>
    <incdepgraph>
      <node id="520">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="519">
        <label>src/libpocketsphinx/blkarray_list.h</label>
        <link refid="blkarray_list.h"/>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="529">
        <label>src/libpocketsphinx/fsg_search.c</label>
        <link refid="fsg__search_8c_source"/>
      </node>
      <node id="527">
        <label>src/libpocketsphinx/fsg_search_internal.h</label>
        <link refid="fsg__search__internal_8h_source"/>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="528">
        <label>src/libpocketsphinx/fsg_history.c</label>
        <link refid="fsg__history_8c_source"/>
      </node>
      <node id="526">
        <label>src/libpocketsphinx/fsg_history.h</label>
        <link refid="fsg__history_8h_source"/>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="525">
        <label>src/libpocketsphinx/blkarray_list.c</label>
        <link refid="blkarray__list_8c_source"/>
      </node>
      <node id="521">
        <label>src/libpocketsphinx/blkarray_list.h</label>
        <link refid="blkarray_list.h"/>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
      </node>
      <node id="523">
        <label>src/libpocketsphinx/allphone_search.c</label>
        <link refid="allphone__search_8c_source"/>
      </node>
      <node id="522">
        <label>src/libpocketsphinx/allphone_search.h</label>
        <link refid="allphone__search_8h_source"/>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>src/libpocketsphinx/pocketsphinx.c</label>
        <link refid="pocketsphinx_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structblkarray__list__s" prot="public">blkarray_list_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="blkarray__list_8h_1add97c9b04cdfe8855d9b32634bf4aefa" prot="public" static="no">
        <name>blkarray_list_ptr</name>
        <param><defname>l</defname></param>
        <param><defname>r</defname></param>
        <param><defname>c</defname></param>
        <initializer>((l)-&gt;ptr[r][c])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="89" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="blkarray__list_8h_1aefd71aa5832d6142449d0dca9af53d6f" prot="public" static="no">
        <name>blkarray_list_maxblks</name>
        <param><defname>l</defname></param>
        <initializer>((l)-&gt;maxblks)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="90" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="blkarray__list_8h_1aa7d19e3dba9164af04ff8afbf6cee4de" prot="public" static="no">
        <name>blkarray_list_blksize</name>
        <param><defname>l</defname></param>
        <initializer>((l)-&gt;blksize)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="91" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="blkarray__list_8h_1a28ee5522bbcdd367dcabf0d3c1926a66" prot="public" static="no">
        <name>blkarray_list_n_valid</name>
        <param><defname>l</defname></param>
        <initializer>((l)-&gt;n_valid)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="92" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="blkarray__list_8h_1abe19cad2bc349d0d5081027c7e3a3e11" prot="public" static="no">
        <name>blkarray_list_cur_row</name>
        <param><defname>l</defname></param>
        <initializer>((l)-&gt;cur_row)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="93" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="blkarray__list_8h_1acf5650b33f00774e39c9aa20f74fd1b2" prot="public" static="no">
        <name>blkarray_list_cur_row_free</name>
        <param><defname>l</defname></param>
        <initializer>((l)-&gt;cur_row_free)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="94" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="blkarray__list_8h_1ab8754072e59616f41842c7f8c0b9bfd6" prot="public" static="no">
        <type>struct <ref refid="structblkarray__list__s" kindref="compound">blkarray_list_s</ref></type>
        <definition>typedef struct blkarray_list_s  blkarray_list_t</definition>
        <argsstring></argsstring>
        <name>blkarray_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="blkarray__list_8h_1aaa8064d6e4cc096496e0ff2b5cb926d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref> *</type>
        <definition>blkarray_list_t* _blkarray_list_init</definition>
        <argsstring>(int32 maxblks, int32 blksize)</argsstring>
        <name>_blkarray_list_init</name>
        <param>
          <type>int32</type>
          <declname>maxblks</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>blksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="104" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.c" bodystart="61" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="blkarray__list_8h_1afeb42e5d0a2f040c4e8c78a441cdaaa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref> *</type>
        <definition>blkarray_list_t* blkarray_list_init</definition>
        <argsstring>(void)</argsstring>
        <name>blkarray_list_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="111" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.c" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="blkarray__list_8h_1a756b9cc11da1e1a9575439d763158e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blkarray_list_free</definition>
        <argsstring>(blkarray_list_t *bl)</argsstring>
        <name>blkarray_list_free</name>
        <param>
          <type><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref> *</type>
          <declname>bl</declname>
        </param>
        <briefdescription>
<para>Completely finalize a blkarray_list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="116" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.c" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="blkarray__list_8h_1ac83f8f87a5e026e1e066f43e20c00526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 blkarray_list_append</definition>
        <argsstring>(blkarray_list_t *, void *data)</argsstring>
        <name>blkarray_list_append</name>
        <param>
          <type><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref> *</type>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="126" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.c" bodystart="99" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="blkarray__list_8h_1ad2610668760f60a375bfd421545a9903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blkarray_list_reset</definition>
        <argsstring>(blkarray_list_t *)</argsstring>
        <name>blkarray_list_reset</name>
        <param>
          <type><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="133" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.c" bodystart="135" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="blkarray__list_8h_1ae1d667c241df22c84e8d7b4282650f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* blkarray_list_get</definition>
        <argsstring>(blkarray_list_t *, int32 n)</argsstring>
        <name>blkarray_list_get</name>
        <param>
          <type><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref> *</type>
        </param>
        <param>
          <type>int32</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h" line="137" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.c" bodystart="161" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>blkarray_list.h<sp/>--<sp/>array-based<sp/>list<sp/>structure,<sp/>for<sp/>memory<sp/>and<sp/>access</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>efficiency.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>blkarray_list.h,v<sp/>$</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1.1.1<sp/><sp/>2006/05/23<sp/>18:45:02<sp/><sp/>dhuggins</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>re-importation</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2004/12/10<sp/>16:48:58<sp/><sp/>rkm</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Added<sp/>continuous<sp/>density<sp/>acoustic<sp/>model<sp/>handling</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2004/07/16<sp/>00:57:12<sp/><sp/>egouvea</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Added<sp/>Ravi&apos;s<sp/>implementation<sp/>of<sp/>FSG<sp/>support.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2004/05/27<sp/>14:22:57<sp/><sp/>rkm</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>FSG<sp/>cross-word<sp/>triphones<sp/>completed<sp/>(but<sp/>for<sp/>single-phone<sp/>words)</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1.1.1<sp/><sp/>2004/03/01<sp/>14:30:31<sp/><sp/>rkm</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2004/02/26<sp/>01:14:48<sp/><sp/>rkm</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>***<sp/>empty<sp/>log<sp/>message<sp/>***</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>18-Feb-2004<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Started.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__S2_BLKARRAY_LIST_H__</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__S2_BLKARRAY_LIST_H__</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/prim_type.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>For<sp/>maintaining<sp/>a<sp/>(conceptual)<sp/>&quot;list&quot;<sp/>of<sp/>pointers<sp/>to<sp/>arbitrary<sp/>data.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>The<sp/>application<sp/>is<sp/>responsible<sp/>for<sp/>knowing<sp/>the<sp/>true<sp/>data<sp/>type.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>Use<sp/>an<sp/>array<sp/>instead<sp/>of<sp/>a<sp/>true<sp/>list<sp/>for<sp/>efficiency<sp/>(both<sp/>memory<sp/>and</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>speed).<sp/><sp/>But<sp/>use<sp/>a<sp/>blocked<sp/>(2-D)<sp/>array<sp/>to<sp/>allow<sp/>dynamic<sp/>resizing<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>coarse<sp/>grain.<sp/><sp/>An<sp/>entire<sp/>block<sp/>is<sp/>allocated<sp/>or<sp/>freed,<sp/>as<sp/>appropriate.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structblkarray__list__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_s</ref><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>***ptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ptr[][]<sp/>is<sp/>the<sp/>user-supplied<sp/>ptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>int32<sp/>maxblks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>ptr<sp/>(#rows)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>int32<sp/>blksize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>ptr[]<sp/>(#cols,<sp/>ie,<sp/>size<sp/>of<sp/>each<sp/>row)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>int32<sp/>n_valid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>entries<sp/>actually<sp/>stored<sp/>in<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>int32<sp/>cur_row;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>current<sp/>row<sp/>being<sp/>that<sp/>has<sp/>empty<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>int32<sp/>cur_row_free;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>entry<sp/>valid<sp/>within<sp/>the<sp/>current<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Access<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>blkarray_list_ptr(l,r,c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((l)-&gt;ptr[r][c])</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blkarray_list_maxblks(l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((l)-&gt;maxblks)</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blkarray_list_blksize(l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((l)-&gt;blksize)</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blkarray_list_n_valid(l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((l)-&gt;n_valid)</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blkarray_list_cur_row(l)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((l)-&gt;cur_row)</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blkarray_list_cur_row_free(l)<sp/><sp/><sp/>((l)-&gt;cur_row_free)</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>and<sp/>return<sp/>a<sp/>new<sp/>blkarray_list<sp/>containing<sp/>an<sp/>empty<sp/>list</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>(i.e.,<sp/>0<sp/>length).<sp/><sp/>Sized<sp/>for<sp/>the<sp/>given<sp/>values<sp/>of<sp/>maxblks<sp/>and<sp/>blksize.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>(maxblks<sp/>*<sp/>blksize)<sp/>should<sp/>not<sp/>overflow<sp/>int32,<sp/>but<sp/>this<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>checked.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>allocated<sp/>entry<sp/>if<sp/>successful,<sp/>NULL<sp/>if<sp/>any<sp/>error.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*_blkarray_list_init<sp/>(int32<sp/>maxblks,<sp/>int32<sp/>blksize);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>Like<sp/>_blkarray_list_init()<sp/>above,<sp/>but<sp/>for<sp/>some<sp/>default<sp/>values<sp/>of</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>maxblks<sp/>and<sp/>blksize.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*blkarray_list_init<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blkarray_list_free(<ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*bl);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>Append<sp/>the<sp/>given<sp/>new<sp/>entry<sp/>(data)<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>index<sp/>of<sp/>the<sp/>entry<sp/>if<sp/>successful,<sp/>-1<sp/>if<sp/>any<sp/>error.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>indices<sp/>are<sp/>guaranteed<sp/>to<sp/>be<sp/>successive<sp/>integers<sp/>(i.e.,</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>0,<sp/>1,<sp/>2...)<sp/>for<sp/>successive<sp/>append<sp/>operations,<sp/>until<sp/>the<sp/>list<sp/>is<sp/>reset,</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>when<sp/>they<sp/>resume<sp/>from<sp/>0.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">int32<sp/>blkarray_list_append<sp/>(<ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>Free<sp/>all<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>list<sp/>(using<sp/>ckd_free)<sp/>and<sp/>reset<sp/>the</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>list<sp/>length<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blkarray_list_reset<sp/>(<ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Gets<sp/>n-th<sp/>element<sp/>of<sp/>the<sp/>array<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>blkarray_list_get(<ref refid="structblkarray__list__s" kindref="compound">blkarray_list_t</ref><sp/>*,<sp/>int32<sp/>n);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/blkarray_list.h"/>
  </compounddef>
</doxygen>
