<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dict_8c" kind="file">
    <compoundname>dict.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">sphinxbase/pio.h</includes>
    <includes local="no">sphinxbase/strfuncs.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <incdepgraph>
      <node id="535">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="530">
        <label>src/libpocketsphinx/dict.c</label>
        <link refid="dict.c"/>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
      </node>
      <node id="534">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
        <childnode refid="542" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
      </node>
      <node id="538">
        <label>assert.h</label>
      </node>
      <node id="537">
        <label>float.h</label>
      </node>
      <node id="544">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="546">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
      </node>
      <node id="545">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="543">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="541">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="532">
        <label>sphinxbase/pio.h</label>
      </node>
      <node id="531">
        <label>string.h</label>
      </node>
      <node id="539">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="533">
        <label>sphinxbase/strfuncs.h</label>
      </node>
      <node id="540">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="542">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
      </node>
      <node id="536">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="538" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
        <childnode refid="541" relation="include">
        </childnode>
      </node>
      <node id="547">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dict_8c_1a1129d7e0bed7c31561c8664cfe73ad07" prot="public" static="no">
        <name>DELIM</name>
        <initializer>&quot; \t\n&quot;         /* Set of field separator characters */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="49" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dict_8c_1a4a57b0a4e10e73c100715f67345ac9ee" prot="public" static="no">
        <name>DEFAULT_NUM_PHONE</name>
        <initializer>(MAX_S3CIPID+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="50" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dict_8c_1a7807f1bc54a6c9256c2102fd5ed3683a" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const cmu6_lts_phone_table[]</definition>
        <argsstring>[]</argsstring>
        <name>cmu6_lts_phone_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="56" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dict_8c_1a0773489a6bb1627f58b5ab3cc17beb2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref></type>
        <definition>static s3cipid_t dict_ciphone_id</definition>
        <argsstring>(dict_t *d, const char *str)</argsstring>
        <name>dict_ciphone_id</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="59" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a8587d077f5303554df0e26a181bfb0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dict_ciphone_str</definition>
        <argsstring>(dict_t *d, s3wid_t wid, int32 pos)</argsstring>
        <name>dict_ciphone_str</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
          <briefdescription><para>In: Dictionary to look up </para></briefdescription>
        </param>
        <param>
          <type>s3wid_t</type>
          <declname>wid</declname>
          <briefdescription><para>In: Component word being looked up </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>pos</declname>
          <briefdescription><para>In: Pronunciation phone position </para></briefdescription>
        </param>
        <briefdescription>
<para>Return value: CI phone string for the given word, phone position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="69" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="69" bodyend="76"/>
        <references refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" compoundref="bin__mdef_8c" startline="737" endline="742">bin_mdef_ciphone_str</references>
        <references refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" compoundref="dict_8h" startline="78">dict_t::mdef</references>
        <references refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" compoundref="dict_8h" startline="79">dict_t::word</references>
        <references refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" compoundref="dict_8h" startline="65">dictword_t::ciphone</references>
        <referencedby refid="dict_8h_1a4bfa8e3b7b9ff30165375d1c97bb04b8" compoundref="dict_8c" startline="221" endline="248">dict_write</referencedby>
        <referencedby refid="pocketsphinx_8h_1ab0a242c645a68a553c2e7c62c96e4ce2" compoundref="pocketsphinx_8c" startline="883" endline="903">ps_lookup_word</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a24888ac8e24259e553c43c4655b38432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s3wid_t</type>
        <definition>s3wid_t dict_add_word</definition>
        <argsstring>(dict_t *d, char const *word, s3cipid_t const *p, int32 np)</argsstring>
        <name>dict_add_word</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
          <briefdescription><para>The dictionary structure. </para></briefdescription>
        </param>
        <param>
          <type>char const *</type>
          <declname>word</declname>
          <briefdescription><para>The word. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref> const *</type>
          <declname>p</declname>
          <briefdescription><para>The pronunciation. </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>np</declname>
          <briefdescription><para>Number of phones. </para></briefdescription>
        </param>
        <briefdescription>
<para>Add a word with the given ciphone pronunciation list to the dictionary. </para>        </briefdescription>
        <detaileddescription>
<para>Return value: Result word id if successful, BAD_S3WID otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="80" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="80" bodyend="145"/>
        <references refid="structdict__t_1af00f60319a7025361e291af5addb6b31" compoundref="dict_8h" startline="82">dict_t::n_word</references>
        <references refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" compoundref="dict_8h" startline="81">dict_t::max_words</references>
        <references refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" compoundref="dict_8h" startline="79">dict_t::word</references>
        <references refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" compoundref="dict_8h" startline="64">dictword_t::word</references>
        <references refid="dict_8h_1a3a128531ae9c077be9882119ed05fe3a" compoundref="dict_8c" startline="442" endline="458">dict_word2basestr</references>
        <references refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" compoundref="dict_8h" startline="80">dict_t::ht</references>
        <references refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" compoundref="s3types_8h" startline="90">BAD_S3WID</references>
        <references refid="structdictword__t_1a53dd72f96a9de21d8925e246cc7c036f" compoundref="dict_8h" startline="68">dictword_t::basewid</references>
        <references refid="structdictword__t_1a84b63cd03706221645f46b2da09e9540" compoundref="dict_8h" startline="67">dictword_t::alt</references>
        <references refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" compoundref="dict_8h" startline="65">dictword_t::ciphone</references>
        <references refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" compoundref="dict_8h" startline="66">dictword_t::pronlen</references>
        <referencedby refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" compoundref="dict_8c" startline="252" endline="395">dict_init</referencedby>
        <referencedby refid="pocketsphinx_8h_1a5f3c4fcdbef34915c4e785ac9a1c6005" compoundref="pocketsphinx_8c" startline="815" endline="880">ps_add_word</referencedby>
        <referencedby refid="ps__lattice_8c_1aaf4a101f324943c7635746ec6ba7ab06" compoundref="ps__lattice_8c" startline="387" endline="630">ps_lattice_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a5b566a53de6e9340c7229b85ab675981" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 dict_read</definition>
        <argsstring>(FILE *fp, dict_t *d)</argsstring>
        <name>dict_read</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="149" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="149" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a4bfa8e3b7b9ff30165375d1c97bb04b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dict_write</definition>
        <argsstring>(dict_t *dict, char const *filename, char const *format)</argsstring>
        <name>dict_write</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Write dictionary to a file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="221" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="221" bodyend="248"/>
        <references refid="structdict__t_1af00f60319a7025361e291af5addb6b31" compoundref="dict_8h" startline="82">dict_t::n_word</references>
        <references refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" compoundref="dict_8c" startline="427" endline="438">dict_real_word</references>
        <references refid="dict_8h_1a8587d077f5303554df0e26a181bfb0bf" compoundref="dict_8c" startline="69" endline="76">dict_ciphone_str</references>
        <referencedby refid="pocketsphinx_8h_1a5e278377cc57d921591ce95b980760d5" compoundref="pocketsphinx_8c" startline="808" endline="812">ps_save_dict</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a05d8dac3e5fe5399ccb8bf7776e203e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
        <definition>dict_t* dict_init</definition>
        <argsstring>(cmd_ln_t *config, bin_mdef_t *mdef)</argsstring>
        <name>dict_init</name>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
          <briefdescription><para>Configuration (-dict, -fdict, -dictcase) or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>mdef</declname>
          <briefdescription><para>For looking up CI phone IDs (or NULL) </para></briefdescription>
        </param>
        <briefdescription>
<para>Initialize a new dictionary. </para>        </briefdescription>
        <detaileddescription>
<para>If config and mdef are supplied, then the dictionary will be read from the files specified by the -dict and -fdict options in config, with case sensitivity determined by the -dictcase option.</para><para>Otherwise an empty case-sensitive dictionary will be created.</para><para>Return ptr to <ref refid="structdict__t" kindref="compound">dict_t</ref> if successful, NULL otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="252" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="252" bodyend="395"/>
        <references refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" compoundref="dict_8h" startline="81">dict_t::max_words</references>
        <references refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" compoundref="dict_8h" startline="79">dict_t::word</references>
        <references refid="structdict__t_1af00f60319a7025361e291af5addb6b31" compoundref="dict_8h" startline="82">dict_t::n_word</references>
        <references refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" compoundref="dict_8h" startline="78">dict_t::mdef</references>
        <references refid="bin__mdef_8h_1a297167f03662a9cbd650743d3f4cf8f8" compoundref="bin__mdef_8c" startline="265" endline="269">bin_mdef_retain</references>
        <references refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" compoundref="dict_8h" startline="80">dict_t::ht</references>
        <references refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" compoundref="dict_8c" startline="399" endline="409">dict_wordid</references>
        <references refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" compoundref="s3types_8h" startline="90">BAD_S3WID</references>
        <references refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" compoundref="dict_8c" startline="468" endline="496">dict_free</references>
        <references refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" compoundref="dict_8h" startline="83">dict_t::filler_start</references>
        <references refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" compoundref="dict_8c" startline="80" endline="145">dict_add_word</references>
        <references refid="structdict__t_1a77c6692e56308968804add1292275cb7" compoundref="dict_8h" startline="84">dict_t::filler_end</references>
        <references refid="structdict__t_1a22bc6c52ce9e04c4f3f7d0ba1972ee51" compoundref="dict_8h" startline="85">dict_t::startwid</references>
        <references refid="structdict__t_1a3875be5336e2d9888f6d5cb83ded82c5" compoundref="dict_8h" startline="86">dict_t::finishwid</references>
        <references refid="structdict__t_1aad07b22b94c360923f151c02890f6e68" compoundref="dict_8h" startline="87">dict_t::silwid</references>
        <references refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" compoundref="dict_8c" startline="413" endline="424">dict_filler_word</references>
        <referencedby refid="pocketsphinx_8h_1a391679e7edb0de1e324aa302ee820287" compoundref="pocketsphinx_8c" startline="241" endline="408">ps_reinit</referencedby>
        <referencedby refid="pocketsphinx_8h_1a824f46e51681d931b7e2706a86c3d86f" compoundref="pocketsphinx_8c" startline="755" endline="805">ps_load_dict</referencedby>
        <referencedby refid="ps__lattice_8c_1aaf4a101f324943c7635746ec6ba7ab06" compoundref="ps__lattice_8c" startline="387" endline="630">ps_lattice_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a0a9f6512e867d38f628f95b868019a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s3wid_t</type>
        <definition>s3wid_t dict_wordid</definition>
        <argsstring>(dict_t *d, const char *word)</argsstring>
        <name>dict_wordid</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>Return word id for given word string if present. </para>        </briefdescription>
        <detaileddescription>
<para>Otherwise return BAD_S3WID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="399" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="399" bodyend="409"/>
        <references refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" compoundref="dict_8h" startline="80">dict_t::ht</references>
        <references refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" compoundref="s3types_8h" startline="90">BAD_S3WID</references>
        <referencedby refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" compoundref="dict_8c" startline="252" endline="395">dict_init</referencedby>
        <referencedby refid="pocketsphinx_8h_1ab0a242c645a68a553c2e7c62c96e4ce2" compoundref="pocketsphinx_8c" startline="883" endline="903">ps_lookup_word</referencedby>
        <referencedby refid="ps__lattice_8c_1aaf4a101f324943c7635746ec6ba7ab06" compoundref="ps__lattice_8c" startline="387" endline="630">ps_lattice_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1aa5cade4dc6464c620718b86344540aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dict_filler_word</definition>
        <argsstring>(dict_t *d, s3wid_t w)</argsstring>
        <name>dict_filler_word</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
          <briefdescription><para>The dictionary structure </para></briefdescription>
        </param>
        <param>
          <type>s3wid_t</type>
          <declname>w</declname>
          <briefdescription><para>The word ID </para></briefdescription>
        </param>
        <briefdescription>
<para>Return 1 if w is a filler word, 0 if not. </para>        </briefdescription>
        <detaileddescription>
<para>A filler word is one that was read in from the filler dictionary; however, sentence START and FINISH words are not filler words. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="413" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="413" bodyend="424"/>
        <references refid="structdict__t_1a22bc6c52ce9e04c4f3f7d0ba1972ee51" compoundref="dict_8h" startline="85">dict_t::startwid</references>
        <references refid="structdict__t_1a3875be5336e2d9888f6d5cb83ded82c5" compoundref="dict_8h" startline="86">dict_t::finishwid</references>
        <references refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" compoundref="dict_8h" startline="83">dict_t::filler_start</references>
        <referencedby refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" compoundref="dict_8c" startline="252" endline="395">dict_init</referencedby>
        <referencedby refid="ngram__search_8h_1ac30e7dec4bbfeee9f5163abf4bbd1014" compoundref="ngram__search_8c" startline="1218" endline="1404">ngram_search_lattice</referencedby>
        <referencedby refid="ps__lattice__internal_8h_1a551b8246b45e8953491a24db438c59c1" compoundref="ps__lattice_8c" startline="106" endline="117">ps_lattice_penalize_fillers</referencedby>
        <referencedby refid="ps__lattice_8c_1a1ac6d846fbecfcaba6094d84e93655f7" compoundref="ps__lattice_8c" startline="270" endline="347">ps_lattice_write_htk</referencedby>
        <referencedby refid="ps__lattice_8c_1aaf4a101f324943c7635746ec6ba7ab06" compoundref="ps__lattice_8c" startline="387" endline="630">ps_lattice_read</referencedby>
        <referencedby refid="ps__lattice_8c_1a0cc8e4824f4f23ecbf511b0bb096a3ea" compoundref="ps__lattice_8c" startline="1215" endline="1386">ps_lattice_bestpath</referencedby>
        <referencedby refid="ps__lattice_8c_1aafee8a8325301db72711a3680bc385c6" compoundref="ps__lattice_8c" startline="1446" endline="1521">ps_lattice_posterior</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a23d12a6b38685c3a187f4a54feb58cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dict_real_word</definition>
        <argsstring>(dict_t *d, s3wid_t w)</argsstring>
        <name>dict_real_word</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
          <briefdescription><para>The dictionary structure </para></briefdescription>
        </param>
        <param>
          <type>s3wid_t</type>
          <declname>w</declname>
          <briefdescription><para>The word ID </para></briefdescription>
        </param>
        <briefdescription>
<para>Test if w is a &quot;real&quot; word, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>neither a filler word nor START/FINISH. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="427" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="427" bodyend="438"/>
        <references refid="structdict__t_1a22bc6c52ce9e04c4f3f7d0ba1972ee51" compoundref="dict_8h" startline="85">dict_t::startwid</references>
        <references refid="structdict__t_1a3875be5336e2d9888f6d5cb83ded82c5" compoundref="dict_8h" startline="86">dict_t::finishwid</references>
        <references refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" compoundref="dict_8h" startline="83">dict_t::filler_start</references>
        <referencedby refid="dict_8h_1a4bfa8e3b7b9ff30165375d1c97bb04b8" compoundref="dict_8c" startline="221" endline="248">dict_write</referencedby>
        <referencedby refid="ngram__search_8h_1aee393a136f8f7e8b98161e6eed7b1dd9" compoundref="ngram__search_8c" startline="553" endline="598">ngram_search_bp_hyp</referencedby>
        <referencedby refid="ps__lattice__internal_8h_1a02b07c009d23b852bd4db54700dfac5b" compoundref="ps__lattice_8c" startline="830" endline="884">ps_lattice_hyp</referencedby>
        <referencedby refid="ps__lattice__internal_8h_1ac7372b5c5ec111f6814ce1ba495593e4" compoundref="ps__lattice_8c" startline="1804" endline="1848">ps_astar_hyp</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a3a128531ae9c077be9882119ed05fe3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 dict_word2basestr</definition>
        <argsstring>(char *word)</argsstring>
        <name>dict_word2basestr</name>
        <param>
          <type>char *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>If the given word contains a trailing &quot;(....)&quot; (i.e., a Sphinx-II style alternative pronunciation specification), strip that trailing portion from it. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the given string is modified. Return value: If string was modified, the character position at which the original string was truncated; otherwise -1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="442" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="442" bodyend="458"/>
        <referencedby refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" compoundref="dict_8c" startline="80" endline="145">dict_add_word</referencedby>
        <referencedby refid="ps__lattice_8c_1aaf4a101f324943c7635746ec6ba7ab06" compoundref="ps__lattice_8c" startline="387" endline="630">ps_lattice_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a0edf70be186e8940af9d21243083cb8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
        <definition>dict_t* dict_retain</definition>
        <argsstring>(dict_t *d)</argsstring>
        <name>dict_retain</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Retain a pointer to an <ref refid="structdict__t" kindref="compound">dict_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="461" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="461" bodyend="465"/>
        <referencedby refid="dict2pid_8h_1addd541f2275b79e284575fb11b7986e1" compoundref="dict2pid_8c" startline="388" endline="497">dict2pid_build</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" compoundref="pocketsphinx_8c" startline="1406" endline="1434">ps_search_init</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" compoundref="pocketsphinx_8c" startline="1450" endline="1472">ps_search_base_reinit</referencedby>
        <referencedby refid="ps__lattice_8c_1aaf4a101f324943c7635746ec6ba7ab06" compoundref="ps__lattice_8c" startline="387" endline="630">ps_lattice_read</referencedby>
        <referencedby refid="ps__lattice__internal_8h_1a606f6ee0fd569dd5829d7f84ae7e61bd" compoundref="ps__lattice_8c" startline="639" endline="655">ps_lattice_init_search</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a51ee6c067decce8dbc182f95f7b33e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dict_free</definition>
        <argsstring>(dict_t *d)</argsstring>
        <name>dict_free</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Release a pointer to a dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="468" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="468" bodyend="496"/>
        <references refid="structdict__t_1af00f60319a7025361e291af5addb6b31" compoundref="dict_8h" startline="82">dict_t::n_word</references>
        <references refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" compoundref="dict_8h" startline="79">dict_t::word</references>
        <references refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" compoundref="dict_8h" startline="64">dictword_t::word</references>
        <references refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" compoundref="dict_8h" startline="65">dictword_t::ciphone</references>
        <references refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" compoundref="dict_8h" startline="80">dict_t::ht</references>
        <references refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" compoundref="dict_8h" startline="78">dict_t::mdef</references>
        <references refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" compoundref="bin__mdef_8c" startline="272" endline="300">bin_mdef_free</references>
        <referencedby refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" compoundref="dict_8c" startline="252" endline="395">dict_init</referencedby>
        <referencedby refid="dict2pid_8h_1a293253226550e812c448ae096b364d0d" compoundref="dict2pid_8c" startline="507" endline="530">dict2pid_free</referencedby>
        <referencedby refid="pocketsphinx_8h_1a391679e7edb0de1e324aa302ee820287" compoundref="pocketsphinx_8c" startline="241" endline="408">ps_reinit</referencedby>
        <referencedby refid="pocketsphinx_8h_1ad8fd9b79ae9f87703af3f4755b3ab567" compoundref="pocketsphinx_8c" startline="443" endline="457">ps_free</referencedby>
        <referencedby refid="pocketsphinx_8h_1a824f46e51681d931b7e2706a86c3d86f" compoundref="pocketsphinx_8c" startline="755" endline="805">ps_load_dict</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" compoundref="pocketsphinx_8c" startline="1437" endline="1447">ps_search_base_free</referencedby>
        <referencedby refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" compoundref="pocketsphinx_8c" startline="1450" endline="1472">ps_search_base_reinit</referencedby>
        <referencedby refid="ps__lattice_8c_1aed9371a246b6565a2142c3baefd08002" compoundref="ps__lattice_8c" startline="665" endline="679">ps_lattice_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="dict_8c_1a41cca433a75fd2663bee115296639666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dict_report</definition>
        <argsstring>(dict_t *d)</argsstring>
        <name>dict_report</name>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>d</declname>
          <briefdescription><para>A dictionary structure </para></briefdescription>
        </param>
        <briefdescription>
<para>Report a dictionary structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" line="499" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c" bodystart="499" bodyend="505"/>
        <references refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" compoundref="dict_8h" startline="81">dict_t::max_words</references>
        <references refid="structdict__t_1af00f60319a7025361e291af5addb6b31" compoundref="dict_8h" startline="82">dict_t::n_word</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>System<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/pio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/strfuncs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELIM<sp/><sp/><sp/>&quot;<sp/>\t\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>of<sp/>field<sp/>separator<sp/>characters<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_NUM_PHONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAX_S3CIPID+1)</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WIN32</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>sprintf_s</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmu6_lts_phone_table[];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">dict_ciphone_id(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;nocase)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bin__mdef_8h_1af437f39a8a9b52dd3187f7f0fc098cab" kindref="member">bin_mdef_ciphone_id_nocase</ref>(d-&gt;<ref refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" kindref="member">mdef</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bin__mdef_8h_1af592f710731474b77166a29530716672" kindref="member">bin_mdef_ciphone_id</ref>(d-&gt;<ref refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" kindref="member">mdef</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="69" refid="dict_8h_1a8587d077f5303554df0e26a181bfb0bf" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a8587d077f5303554df0e26a181bfb0bf" kindref="member">dict_ciphone_str</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>d,<sp/>s3wid_t<sp/>wid,<sp/>int32<sp/>pos)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(d<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((wid<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(wid<sp/>&lt;<sp/>d-&gt;n_word));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((pos<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(pos<sp/>&lt;<sp/>d-&gt;word[wid].pronlen));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bin__mdef_8h_1a9498ffff0caf3965060b8a549348be9b" kindref="member">bin_mdef_ciphone_str</ref>(d-&gt;<ref refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" kindref="member">mdef</ref>,<sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[wid].<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>[pos]);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">s3wid_t</highlight></codeline>
<codeline lineno="80" refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" kindref="member">dict_add_word</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>d,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*word,<sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p,<sp/>int32<sp/>np)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>len;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdictword__t" kindref="compound">dictword_t</ref><sp/>*wordp;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>s3wid_t<sp/>newwid;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wword;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref><sp/>&gt;=<sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reallocating<sp/>to<sp/>%d<sp/>KiB<sp/>for<sp/>word<sp/>entries\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref><sp/>+<sp/>S3DICT_INC_SZ)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdictword__t" kindref="compound">dictword_t</ref>)<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref><sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structdictword__t" kindref="compound">dictword_t</ref><sp/>*)<sp/>ckd_realloc(d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref><sp/>+</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S3DICT_INC_SZ)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdictword__t" kindref="compound">dictword_t</ref>));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref><sp/>=<sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref><sp/>+<sp/>S3DICT_INC_SZ;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>wordp<sp/>=<sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref><sp/>+<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ckd_salloc(word);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Freed<sp/>in<sp/>dict_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>base/alt<sp/>wids<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>wword<sp/>=<sp/>ckd_salloc(word);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/><ref refid="dict_8h_1a3a128531ae9c077be9882119ed05fe3a" kindref="member">dict_word2basestr</ref>(wword))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>w;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Truncated<sp/>to<sp/>a<sp/>baseword<sp/>string;<sp/>find<sp/>its<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash_table_lookup_int32(d-&gt;<ref refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" kindref="member">ht</ref>,<sp/>wword,<sp/>&amp;w)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Missing<sp/>base<sp/>word<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>word);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(wword);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(wordp-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Link<sp/>into<sp/>alt<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a53dd72f96a9de21d8925e246cc7c036f" kindref="member">basewid</ref><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a84b63cd03706221645f46b2da09e9540" kindref="member">alt</ref><sp/>=<sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1a84b63cd03706221645f46b2da09e9540" kindref="member">alt</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1a84b63cd03706221645f46b2da09e9540" kindref="member">alt</ref><sp/>=<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a84b63cd03706221645f46b2da09e9540" kindref="member">alt</ref><sp/>=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a53dd72f96a9de21d8925e246cc7c036f" kindref="member">basewid</ref><sp/>=<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(wword);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Associate<sp/>word<sp/>string<sp/>with<sp/>d-&gt;n_word<sp/>in<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash_table_enter_int32(d-&gt;<ref refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" kindref="member">ht</ref>,<sp/>wordp-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref>,<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>)<sp/>!=<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(wordp-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>word<sp/>entry,<sp/>and<sp/>set<sp/>defaults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&amp;&amp;<sp/>(np<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref><sp/>=<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*)<sp/>ckd_malloc(np<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Freed<sp/>in<sp/>dict_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(wordp-&gt;<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>,<sp/>p,<sp/>np<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" kindref="member">pronlen</ref><sp/>=<sp/>np;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordp-&gt;<ref refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" kindref="member">pronlen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>newwid<sp/>=<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newwid;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="149"><highlight class="normal">dict_read(FILE<sp/>*<sp/>fp,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>lineiter_t<sp/>*li;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**wptr;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*p;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>lineno,<sp/>nwd;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>s3wid_t<sp/>w;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>maxwd;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stralloc,<sp/>phnalloc;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>maxwd<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*)<sp/>ckd_calloc(maxwd<sp/>+<sp/>4,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>wptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>ckd_calloc(maxwd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));<sp/></highlight><highlight class="comment">/*<sp/>Freed<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>stralloc<sp/>=<sp/>phnalloc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(li<sp/>=<sp/>lineiter_start(fp);<sp/>li;<sp/>li<sp/>=<sp/>lineiter_next(li))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno++;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strncmp(li-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;##&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>0<sp/>==<sp/>strncmp(li-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;;;&quot;</highlight><highlight class="normal">,<sp/>2))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nwd<sp/>=<sp/>str2words(li-&gt;buf,<sp/>wptr,<sp/>maxwd))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increase<sp/>size<sp/>of<sp/>p,<sp/>wptr.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwd<sp/>=<sp/>str2words(li-&gt;buf,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nwd<sp/>&gt;<sp/>maxwd);<sp/></highlight><highlight class="comment">/*<sp/>why<sp/>else<sp/>would<sp/>it<sp/>fail?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxwd<sp/>=<sp/>nwd;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>*)<sp/>ckd_realloc(p,<sp/>(maxwd<sp/>+<sp/>4)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>ckd_realloc(wptr,<sp/>maxwd<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wptr));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nwd<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Empty<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wptr[0]<sp/>is<sp/>the<sp/>word-string<sp/>and<sp/>wptr[1..nwd-1]<sp/>the<sp/>pronunciation<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nwd<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Line<sp/>%d:<sp/>No<sp/>pronunciation<sp/>for<sp/>word<sp/>&apos;%s&apos;;<sp/>ignored\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/>wptr[0]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>pronunciation<sp/>string<sp/>to<sp/>CI-phone-ids<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>nwd;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i<sp/>-<sp/>1]<sp/>=<sp/>dict_ciphone_id(d,<sp/>wptr[i]);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NOT_S3CIPID(p[i<sp/>-<sp/>1]))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Line<sp/>%d:<sp/>Phone<sp/>&apos;%s&apos;<sp/>is<sp/>mising<sp/>in<sp/>the<sp/>acoustic<sp/>model;<sp/>word<sp/>&apos;%s&apos;<sp/>ignored\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/>wptr[i],<sp/>wptr[0]);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>nwd)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>CI-phones<sp/>successfully<sp/>converted<sp/>to<sp/>IDs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" kindref="member">dict_add_word</ref>(d,<sp/>wptr[0],<sp/>p,<sp/>nwd<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NOT_S3WID(w))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Line<sp/>%d:<sp/>Failed<sp/>to<sp/>add<sp/>the<sp/>word<sp/>&apos;%s&apos;<sp/>(duplicate?);<sp/>ignored\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/>wptr[0]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stralloc<sp/>+=<sp/>strlen(d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phnalloc<sp/>+=<sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[w].<ref refid="structdictword__t_1a50509f28a4b64d76519bfadea12f0fa0" kindref="member">pronlen</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allocated<sp/>%d<sp/>KiB<sp/>for<sp/>strings,<sp/>%d<sp/>KiB<sp/>for<sp/>phones\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)stralloc<sp/>/<sp/>1024,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)phnalloc<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(p);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(wptr);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="dict_8h_1a4bfa8e3b7b9ff30165375d1c97bb04b8" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a4bfa8e3b7b9ff30165375d1c97bb04b8" kindref="member">dict_write</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*format)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fh;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fh<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dict-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*phones;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>phlen;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(dict,<sp/>i))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(phlen<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>dict_pronlen(dict,<sp/>i);<sp/>++j)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phlen<sp/>+=<sp/>strlen(<ref refid="dict_8h_1a8587d077f5303554df0e26a181bfb0bf" kindref="member">dict_ciphone_str</ref>(dict,<sp/>i,<sp/>j))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phones<sp/>=<sp/>ckd_calloc(1,<sp/>phlen);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>dict_pronlen(dict,<sp/>i);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(phones,<sp/><ref refid="dict_8h_1a8587d077f5303554df0e26a181bfb0bf" kindref="member">dict_ciphone_str</ref>(dict,<sp/>i,<sp/>j));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>dict_pronlen(dict,<sp/>i)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(phones,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fh,<sp/></highlight><highlight class="stringliteral">&quot;%-30s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>dict_wordstr(dict,<sp/>i),<sp/>phones);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(phones);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fh);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*</highlight></codeline>
<codeline lineno="252" refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a05d8dac3e5fe5399ccb8bf7776e203e2" kindref="member">dict_init</ref>(cmd_ln_t<sp/>*config,<sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*<sp/>mdef)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp,<sp/>*fp2;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>lineiter_t<sp/>*li;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*d;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s3types_8h_1ae5f70241ce62a79747f0611029a6409d" kindref="member">s3cipid_t</ref><sp/>sil;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*dictfile<sp/>=<sp/>NULL,<sp/>*fillerfile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictfile<sp/>=<sp/>cmd_ln_str_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-dict&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillerfile<sp/>=<sp/>cmd_ln_str_r(config,<sp/></highlight><highlight class="stringliteral">&quot;_fdict&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>First<sp/>obtain<sp/>#words<sp/>in<sp/>dictionary<sp/>(for<sp/>hash<sp/>table<sp/>allocation).</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Reason:<sp/>The<sp/>PC<sp/>NT<sp/>system<sp/>doesn&apos;t<sp/>like<sp/>to<sp/>grow<sp/>memory<sp/>gradually.<sp/><sp/>Better<sp/>to<sp/>allocate</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>the<sp/>required<sp/>memory<sp/>in<sp/>one<sp/>go.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictfile)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>fopen(dictfile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>dictionary<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>dictfile);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(li<sp/>=<sp/>lineiter_start(fp);<sp/>li;<sp/>li<sp/>=<sp/>lineiter_next(li))<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strncmp(li-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;##&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>0<sp/>!=<sp/>strncmp(li-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;;;&quot;</highlight><highlight class="normal">,<sp/>2))</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(fp,<sp/>0L,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>fp2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillerfile)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp2<sp/>=<sp/>fopen(fillerfile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>filler<sp/>dictionary<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>fillerfile);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(li<sp/>=<sp/>lineiter_start(fp2);<sp/>li;<sp/>li<sp/>=<sp/>lineiter_next(li))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strncmp(li-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;##&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>0<sp/>!=<sp/>strncmp(li-&gt;buf,<sp/></highlight><highlight class="stringliteral">&quot;;;&quot;</highlight><highlight class="normal">,<sp/>2))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(fp2,<sp/>0L,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Allocate<sp/>dict<sp/>entries.<sp/><sp/>HACK!!<sp/><sp/>Allow<sp/>some<sp/>extra<sp/>entries<sp/>for<sp/>words<sp/>not<sp/>in<sp/>file.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Also<sp/>check<sp/>for<sp/>type<sp/>size<sp/>restrictions.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*)<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdict__t" kindref="compound">dict_t</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>freed<sp/>in<sp/>dict_free()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;refcnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref><sp/>=</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(n<sp/>+<sp/>S3DICT_INC_SZ<sp/>&lt;<sp/>MAX_S3WID)<sp/>?<sp/>n<sp/>+<sp/>S3DICT_INC_SZ<sp/>:<sp/>MAX_S3WID;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>MAX_S3WID)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>words<sp/>in<sp/>dictionaries<sp/>(%d)<sp/>exceeds<sp/>limit<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>n,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_S3WID);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp2);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(d);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Allocating<sp/>%d<sp/>*<sp/>%d<sp/>bytes<sp/>(%d<sp/>KiB)<sp/>for<sp/>word<sp/>entries\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdictword__t" kindref="compound">dictword_t</ref>),</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdictword__t" kindref="compound">dictword_t</ref>)<sp/>/<sp/>1024);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref><sp/>=<sp/>(<ref refid="structdictword__t" kindref="compound">dictword_t</ref><sp/>*)<sp/>ckd_calloc(d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdictword__t" kindref="compound">dictword_t</ref>));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>freed<sp/>in<sp/>dict_free()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" kindref="member">mdef</ref><sp/>=<sp/><ref refid="bin__mdef_8h_1a297167f03662a9cbd650743d3f4cf8f8" kindref="member">bin_mdef_retain</ref>(mdef);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>new<sp/>hash<sp/>table<sp/>for<sp/>word<sp/>strings;<sp/>case-insensitive<sp/>word<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config<sp/>&amp;&amp;<sp/>cmd_ln_exists_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-dictcase&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;nocase<sp/>=<sp/>cmd_ln_boolean_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-dictcase&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" kindref="member">ht</ref><sp/>=<sp/>hash_table_new(d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref>,<sp/>d-&gt;nocase);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Digest<sp/>main<sp/>dictionary<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>main<sp/>dictionary:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>dictfile);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_read(fp,<sp/>d);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>words<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_START_WORD)<sp/>!=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Remove<sp/>sentence<sp/>start<sp/>word<sp/>&apos;&lt;s&gt;&apos;<sp/>from<sp/>the<sp/>dictionary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" kindref="member">dict_free</ref>(d);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_FINISH_WORD)<sp/>!=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Remove<sp/>sentence<sp/>start<sp/>word<sp/>&apos;&lt;/s&gt;&apos;<sp/>from<sp/>the<sp/>dictionary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" kindref="member">dict_free</ref>(d);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_SILENCE_WORD)<sp/>!=<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Remove<sp/>silence<sp/>word<sp/>&apos;&lt;sil&gt;&apos;<sp/>from<sp/>the<sp/>dictionary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" kindref="member">dict_free</ref>(d);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>the<sp/>filler<sp/>dictionary<sp/>file,<sp/>if<sp/>it<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" kindref="member">filler_start</ref><sp/>=<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillerfile)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>filler<sp/>dictionary:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fillerfile);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_read(fp2,<sp/>d);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%d<sp/>words<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref><sp/>-<sp/>d-&gt;<ref refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" kindref="member">filler_start</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mdef)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sil<sp/>=<sp/>bin_mdef_silphone(mdef);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sil<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_START_WORD)<sp/>==<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" kindref="member">dict_add_word</ref>(d,<sp/>S3_START_WORD,<sp/>&amp;sil,<sp/>1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_FINISH_WORD)<sp/>==<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" kindref="member">dict_add_word</ref>(d,<sp/>S3_FINISH_WORD,<sp/>&amp;sil,<sp/>1);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_SILENCE_WORD)<sp/>==<sp/><ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a24888ac8e24259e553c43c4655b38432" kindref="member">dict_add_word</ref>(d,<sp/>S3_SILENCE_WORD,<sp/>&amp;sil,<sp/>1);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a77c6692e56308968804add1292275cb7" kindref="member">filler_end</ref><sp/>=<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>distinguished<sp/>word-ids<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a22bc6c52ce9e04c4f3f7d0ba1972ee51" kindref="member">startwid</ref><sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_START_WORD);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1a3875be5336e2d9888f6d5cb83ded82c5" kindref="member">finishwid</ref><sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_FINISH_WORD);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdict__t_1aad07b22b94c360923f151c02890f6e68" kindref="member">silwid</ref><sp/>=<sp/><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(d,<sp/>S3_SILENCE_WORD);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d-&gt;<ref refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" kindref="member">filler_start</ref><sp/>&gt;<sp/>d-&gt;<ref refid="structdict__t_1a77c6692e56308968804add1292275cb7" kindref="member">filler_end</ref>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(!<ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(d,<sp/>d-&gt;<ref refid="structdict__t_1aad07b22b94c360923f151c02890f6e68" kindref="member">silwid</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Word<sp/>&apos;%s&apos;<sp/>must<sp/>occur<sp/>(only)<sp/>in<sp/>filler<sp/>dictionary\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S3_SILENCE_WORD);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" kindref="member">dict_free</ref>(d);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>check<sp/>that<sp/>alternative<sp/>pronunciations<sp/>for<sp/>filler<sp/>words<sp/>are<sp/>in<sp/>filler<sp/>range!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">s3wid_t</highlight></codeline>
<codeline lineno="399" refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" refkind="member"><highlight class="normal"><ref refid="dict_8h_1ad3729eb1a02a9a321e17933f7e90c80e" kindref="member">dict_wordid</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>w;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(d);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(word);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash_table_lookup_int32(d-&gt;<ref refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" kindref="member">ht</ref>,<sp/>word,<sp/>&amp;w)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="s3types_8h_1a5c42410b7125da611210c5a4be29898b" kindref="member">BAD_S3WID</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" refkind="member"><highlight class="normal"><ref refid="dict_8h_1aa5cade4dc6464c620718b86344540aff" kindref="member">dict_filler_word</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*d,<sp/>s3wid_t<sp/>w)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(d);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((w<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(w<sp/>&lt;<sp/>d-&gt;n_word));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>dict_basewid(d,<sp/>w);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w<sp/>==<sp/>d-&gt;<ref refid="structdict__t_1a22bc6c52ce9e04c4f3f7d0ba1972ee51" kindref="member">startwid</ref>)<sp/>||<sp/>(w<sp/>==<sp/>d-&gt;<ref refid="structdict__t_1a3875be5336e2d9888f6d5cb83ded82c5" kindref="member">finishwid</ref>))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w<sp/>&gt;=<sp/>d-&gt;<ref refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" kindref="member">filler_start</ref>)<sp/>&amp;&amp;<sp/>(w<sp/>&lt;=<sp/>d-&gt;filler_end))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" refkind="member"><highlight class="normal"><ref refid="dict_8h_1ad2eba4ca92dd1a3721608e003d95d8c1" kindref="member">dict_real_word</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*d,<sp/>s3wid_t<sp/>w)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(d);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((w<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(w<sp/>&lt;<sp/>d-&gt;n_word));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>dict_basewid(d,<sp/>w);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w<sp/>==<sp/>d-&gt;<ref refid="structdict__t_1a22bc6c52ce9e04c4f3f7d0ba1972ee51" kindref="member">startwid</ref>)<sp/>||<sp/>(w<sp/>==<sp/>d-&gt;<ref refid="structdict__t_1a3875be5336e2d9888f6d5cb83ded82c5" kindref="member">finishwid</ref>))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w<sp/>&gt;=<sp/>d-&gt;<ref refid="structdict__t_1abd48fdafaaa68a8df2fd82163c51a95c" kindref="member">filler_start</ref>)<sp/>&amp;&amp;<sp/>(w<sp/>&lt;=<sp/>d-&gt;filler_end))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="442" refid="dict_8h_1a3a128531ae9c077be9882119ed05fe3a" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a3a128531ae9c077be9882119ed05fe3a" kindref="member">dict_word2basestr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>len;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(word);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>len<sp/>-<sp/>2;<sp/>(i<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(word[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">);<sp/>--i);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>word<sp/>is<sp/>of<sp/>the<sp/>form<sp/>&lt;baseword&gt;(...);<sp/>strip<sp/>from<sp/>left-paren<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*</highlight></codeline>
<codeline lineno="461" refid="dict_8h_1a0edf70be186e8940af9d21243083cb8b" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a0edf70be186e8940af9d21243083cb8b" kindref="member">dict_retain</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>++d-&gt;refcnt;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a51ee6c067decce8dbc182f95f7b33e91" kindref="member">dict_free</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdictword__t" kindref="compound">dictword_t</ref><sp/>*word;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--d-&gt;refcnt<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;refcnt;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>Step,<sp/>free<sp/>all<sp/>memory<sp/>allocated<sp/>for<sp/>each<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>=<sp/>(<ref refid="structdictword__t" kindref="compound">dictword_t</ref><sp/>*)<sp/>&amp;<sp/>(d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>[i]);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>word-&gt;<ref refid="structdictword__t_1a3f3371918a406e26817bd4f2cecd7329" kindref="member">word</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>word-&gt;<ref refid="structdictword__t_1acf5836b5a681485868e9090ad67366d5" kindref="member">ciphone</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>d-&gt;<ref refid="structdict__t_1a9e6636bbe45936a03381fea430addd31" kindref="member">word</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" kindref="member">ht</ref>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_table_free(d-&gt;<ref refid="structdict__t_1a7205aae4fbeef3aaa53f94b6af529af2" kindref="member">ht</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" kindref="member">mdef</ref>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bin__mdef_8h_1afe7ed87e2a2d22b228c14ed8225e4b2c" kindref="member">bin_mdef_free</ref>(d-&gt;<ref refid="structdict__t_1a3a01eb5a3ebda5652d434be26e0cfdd2" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>d);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="dict_8h_1a41cca433a75fd2663bee115296639666" refkind="member"><highlight class="normal"><ref refid="dict_8h_1a41cca433a75fd2663bee115296639666" kindref="member">dict_report</ref>(<ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO_NOFN(</highlight><highlight class="stringliteral">&quot;Initialization<sp/>of<sp/>dict_t,<sp/>report:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO_NOFN(</highlight><highlight class="stringliteral">&quot;Max<sp/>word:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdict__t_1af6142600cef73f846b58ba9bc36b02ac" kindref="member">max_words</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO_NOFN(</highlight><highlight class="stringliteral">&quot;No<sp/>of<sp/>word:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdict__t_1af00f60319a7025361e291af5addb6b31" kindref="member">n_word</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO_NOFN(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/dict.c"/>
  </compounddef>
</doxygen>
