<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="phone__loop__search_8c" kind="file">
    <compoundname>phone_loop_search.c</compoundname>
    <includes local="no">sphinxbase/err.h</includes>
    <includes refid="phone__loop__search_8h" local="yes">phone_loop_search.h</includes>
    <incdepgraph>
      <node id="1673">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="1678">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="1697">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
      </node>
      <node id="1700">
        <label>assert.h</label>
      </node>
      <node id="1699">
        <label>float.h</label>
      </node>
      <node id="1683">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1671">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="1693">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1682">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1676">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1696">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1692">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1701">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="1674">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="1668">
        <label>src/libpocketsphinx/phone_loop_search.c</label>
        <link refid="phone_loop_search.c"/>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1670" relation="include">
        </childnode>
      </node>
      <node id="1675">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
      </node>
      <node id="1670">
        <label>phone_loop_search.h</label>
        <link refid="phone__loop__search_8h"/>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
      </node>
      <node id="1677">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1680">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1685">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1689">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
      </node>
      <node id="1690">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="1687">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
      </node>
      <node id="1669">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="1688">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="1686">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
      </node>
      <node id="1684">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
      </node>
      <node id="1702">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
      </node>
      <node id="1691">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1693" relation="include">
        </childnode>
      </node>
      <node id="1672">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="1698">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
      </node>
      <node id="1695">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
      </node>
      <node id="1679">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="1681">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="phone__loop__search_8c_1ad251eb3a85171f27156b4038a10f0cb0" prot="public" static="yes" mutable="no">
        <type><ref refid="pocketsphinx__internal_8h_1a0eae078e32bd5f339792884c68aad8b3" kindref="member">ps_searchfuncs_t</ref></type>
        <definition>ps_searchfuncs_t phone_loop_search_funcs</definition>
        <argsstring></argsstring>
        <name>phone_loop_search_funcs</name>
        <initializer>= {
      phone_loop_search_start,
       phone_loop_search_step,
     phone_loop_search_finish,
     phone_loop_search_reinit,
       phone_loop_search_free,
      NULL,
          phone_loop_search_hyp,
         phone_loop_search_prob,
     phone_loop_search_seg_iter,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="55" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="phone__loop__search_8c_1a4a53c0187188cfa1c29d994fd814afb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int phone_loop_search_start</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>phone_loop_search_start</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="46" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="165" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a234bacc142041e11598c4cea6cf41cd1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int phone_loop_search_step</definition>
        <argsstring>(ps_search_t *search, int frame_idx)</argsstring>
        <name>phone_loop_search_step</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="47" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="301" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1aa8d8967adf436c3ea150e308aa86111d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int phone_loop_search_finish</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>phone_loop_search_finish</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="48" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a83aa947a2fe909dc7de8f04f91938858" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int phone_loop_search_reinit</definition>
        <argsstring>(ps_search_t *search, dict_t *dict, dict2pid_t *d2p)</argsstring>
        <name>phone_loop_search_reinit</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref> *</type>
          <declname>d2p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="49" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="68" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a257816e0268db0e3ce49a7350902f482" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void phone_loop_search_free</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>phone_loop_search_free</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="50" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="148" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a3c2acb5234869961240e9182a5cbf44c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>static char const * phone_loop_search_hyp</definition>
        <argsstring>(ps_search_t *search, int32 *out_score, int32 *out_is_final)</argsstring>
        <name>phone_loop_search_hyp</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_score</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_is_final</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="51" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="348" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a7dea1c50751366e35b474372d2d53157" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 phone_loop_search_prob</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>phone_loop_search_prob</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="52" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="355" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a6043a7b2e1383c000f9d3e1f1f334b3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx_8h_1a64d3ac229ef945017112bab4c2a5ec94" kindref="member">ps_seg_t</ref> *</type>
        <definition>static ps_seg_t * phone_loop_search_seg_iter</definition>
        <argsstring>(ps_search_t *search)</argsstring>
        <name>phone_loop_search_seg_iter</name>
        <param>
          <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="53" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="363" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a2308707c1a22ea9b0495f6c7f151f806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pocketsphinx__internal_8h_1adc3de4d62e46c5e6cb93d09fb61be8ee" kindref="member">ps_search_t</ref> *</type>
        <definition>ps_search_t* phone_loop_search_init</definition>
        <argsstring>(cmd_ln_t *config, acmod_t *acmod, dict_t *dict)</argsstring>
        <name>phone_loop_search_init</name>
        <param>
          <type>cmd_ln_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="structdict__t" kindref="compound">dict_t</ref> *</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="120" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="120" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1add5a5bcb99dfee763ce144558863c80b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void phone_loop_search_free_renorm</definition>
        <argsstring>(phone_loop_search_t *pls)</argsstring>
        <name>phone_loop_search_free_renorm</name>
        <param>
          <type><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref> *</type>
          <declname>pls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="138" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="138" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a4bc241264c88addd307adf977fc57a0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void renormalize_hmms</definition>
        <argsstring>(phone_loop_search_t *pls, int frame_idx, int32 norm)</argsstring>
        <name>renormalize_hmms</name>
        <param>
          <type><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref> *</type>
          <declname>pls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="187" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="187" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a1b6d8a65993de0b86d0d7ea544484c07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void evaluate_hmms</definition>
        <argsstring>(phone_loop_search_t *pls, int16 const *senscr, int frame_idx)</argsstring>
        <name>evaluate_hmms</name>
        <param>
          <type><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref> *</type>
          <declname>pls</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>senscr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="202" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="202" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a7d0fa2e921fe0570ce6c27b5e538e840" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void store_scores</definition>
        <argsstring>(phone_loop_search_t *pls, int frame_idx)</argsstring>
        <name>store_scores</name>
        <param>
          <type><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref> *</type>
          <declname>pls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="224" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="224" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a5672905fe7b6106a8152dacf898be135" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prune_hmms</definition>
        <argsstring>(phone_loop_search_t *pls, int frame_idx)</argsstring>
        <name>prune_hmms</name>
        <param>
          <type><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref> *</type>
          <declname>pls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="247" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="247" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="phone__loop__search_8c_1a4f36124b28feac6007e83be246663835" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void phone_transition</definition>
        <argsstring>(phone_loop_search_t *pls, int frame_idx)</argsstring>
        <name>phone_transition</name>
        <param>
          <type><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref> *</type>
          <declname>pls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" line="269" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c" bodystart="269" bodyend="298"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="phone__loop__search_8h" kindref="compound">phone_loop_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phone_loop_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phone_loop_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phone_loop_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phone_loop_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>phone_loop_search_free(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*phone_loop_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/>int32<sp/>*out_is_final);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32<sp/>phone_loop_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*phone_loop_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__searchfuncs__s" kindref="compound">ps_searchfuncs_t</ref><sp/>phone_loop_search_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start:<sp/>*/</highlight><highlight class="normal"><sp/><sp/>phone_loop_search_start,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/>phone_loop_search_step,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish:<sp/>*/</highlight><highlight class="normal"><sp/>phone_loop_search_finish,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reinit:<sp/>*/</highlight><highlight class="normal"><sp/>phone_loop_search_reinit,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/>phone_loop_search_free,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lattice:<sp/>*/</highlight><highlight class="normal"><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hyp:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phone_loop_search_hyp,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prob:<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>phone_loop_search_prob,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seg_iter:<sp/>*/</highlight><highlight class="normal"><sp/>phone_loop_search_seg_iter,</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">phone_loop_search_reinit(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict,<sp/><ref refid="structdict2pid__t" kindref="compound">dict2pid_t</ref><sp/>*d2p)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd_ln_t<sp/>*config<sp/>=<sp/>ps_search_config(search);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod<sp/>=<sp/>ps_search_acmod(search);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>old<sp/>dict2pid,<sp/>dict,<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a307801961f27bd5f4b82a3e6b83e0ca1" kindref="member">ps_search_base_reinit</ref>(search,<sp/>dict,<sp/>d2p);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>HMM<sp/>context.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref><sp/>=<sp/><ref refid="hmm_8h_1a4d6e2799cbe290112e8517adcab1b038" kindref="member">hmm_context_init</ref>(bin_mdef_n_emit_state(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acmod-&gt;<ref refid="structacmod__s_1aaa3982184a49f0d61e397ba89f486259" kindref="member">tmat</ref>-&gt;<ref refid="structtmat__t_1a9f518c96b30dab9efdb69bd779a7b5bf" kindref="member">tp</ref>,<sp/>NULL,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>-&gt;<ref refid="structbin__mdef__s_1acb58480658812de7a357dcbd25ad7b41" kindref="member">sseq</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>penalty<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref><sp/>=<sp/>bin_mdef_n_ciphone(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a28788511ed4729a50c1b475312c7b90a" kindref="member">window</ref><sp/>=<sp/>cmd_ln_int32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_window&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref><sp/>=<sp/>(int32<sp/>*)ckd_calloc(pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref><sp/>=<sp/>(int32<sp/>**)ckd_calloc_2d(pls-&gt;<ref refid="structphone__loop__search__s_1a28788511ed4729a50c1b475312c7b90a" kindref="member">window</ref>,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>phone<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>((<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref><sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)ckd_calloc(pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1aa911ae0d1c0eba562692fbeebca90d78" kindref="member">hmm_init</ref>(pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref>,<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i],</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2ssid(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>i),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_mdef_pid2tmatid(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>i));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1adecb101bb21afd9e2a32c3f59b5abdc7" kindref="member">penalty_weight</ref><sp/>=<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_weight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a1aa6103c72ce8159bd21bfa4f97feff3" kindref="member">beam</ref><sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_beam&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1aaace8b677a536e41bb4616e6695b11d3" kindref="member">pbeam</ref><sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float64_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_pbeam&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1ac979bc57a659c7853eec1854dbcbfabe" kindref="member">pip</ref><sp/>=<sp/>logmath_log(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>,<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-pl_pip&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;State<sp/>beam<sp/>%d<sp/>Phone<sp/>exit<sp/>beam<sp/>%d<sp/>Insertion<sp/>penalty<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a1aa6103c72ce8159bd21bfa4f97feff3" kindref="member">beam</ref>,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1aaace8b677a536e41bb4616e6695b11d3" kindref="member">pbeam</ref>,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1ac979bc57a659c7853eec1854dbcbfabe" kindref="member">pip</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="normal">phone_loop_search_init(cmd_ln_t<sp/>*config,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict__t" kindref="compound">dict_t</ref><sp/>*dict)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>and<sp/>initialize.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*pls));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a9e0d66662ea7c64f8bddbbfe57496896" kindref="member">ps_search_init</ref>(ps_search_base(pls),<sp/>&amp;phone_loop_search_funcs,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PS_SEARCH_TYPE_PHONE_LOOP,<sp/>PS_DEFAULT_PL_SEARCH,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config,<sp/>acmod,<sp/>dict,<sp/>NULL);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>phone_loop_search_reinit(ps_search_base(pls),<sp/>ps_search_dict(pls),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps_search_dict2pid(pls));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ps_search_base(pls);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">phone_loop_search_free_renorm(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>gnode_t<sp/>*gn;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a273295fbe1a22ad3ddf7db8695a394ec" kindref="member">renorm</ref>;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free(gnode_ptr(gn));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>glist_free(pls-&gt;<ref refid="structphone__loop__search__s_1a273295fbe1a22ad3ddf7db8695a394ec" kindref="member">renorm</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a273295fbe1a22ad3ddf7db8695a394ec" kindref="member">renorm</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">phone_loop_search_free(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pocketsphinx__internal_8h_1a39db3228c813a2943d47ff3f13e6ef08" kindref="member">ps_search_base_free</ref>(search);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7440ced1649225beb6816bf62481e08b" kindref="member">hmm_deinit</ref>((<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i]);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>phone_loop_search_free_renorm(pls);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free_2d(pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1ab66534ad7970d49527f1b2a1e76bb05e" kindref="member">hmm_context_free</ref>(pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(pls);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">phone_loop_search_start(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>and<sp/>enter<sp/>all<sp/>phone<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1af4c0cefb23087a0b1731b34048cfdaf9" kindref="member">hmm_clear</ref>(hmm);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(hmm,<sp/>0,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>,<sp/>0,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a28788511ed4729a50c1b475312c7b90a" kindref="member">window</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>[i],<sp/>0,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>[i]));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>phone_loop_search_free_renorm(pls);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a630510d46979533e7acfd1e70d80ea97" kindref="member">pen_buf_ptr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">renormalize_hmms(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx,<sp/>int32<sp/>norm)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__renorm__s" kindref="compound">phone_loop_renorm_t</ref><sp/>*rn<sp/>=<sp/>(<ref refid="structphone__loop__renorm__s" kindref="compound">phone_loop_renorm_t</ref><sp/>*)ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*rn));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a273295fbe1a22ad3ddf7db8695a394ec" kindref="member">renorm</ref><sp/>=<sp/>glist_add_ptr(pls-&gt;<ref refid="structphone__loop__search__s_1a273295fbe1a22ad3ddf7db8695a394ec" kindref="member">renorm</ref>,<sp/>rn);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>rn-&gt;<ref refid="structphone__loop__renorm__s_1af54c31c6d417b769b088b898294a135e" kindref="member">frame_idx</ref><sp/>=<sp/>frame_idx;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>rn-&gt;<ref refid="structphone__loop__renorm__s_1a9a76415892efce2e4b53bc5ea6599010" kindref="member">norm</ref><sp/>=<sp/>norm;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a0438bc7672ff9200274ffe7b5051eb92" kindref="member">hmm_normalize</ref>((<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i],<sp/>norm);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">evaluate_hmms(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>bs<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a44d0b5515cb269bf9b95f62aada18cbb" kindref="member">hmm_context_set_senscore</ref>(pls-&gt;<ref refid="structphone__loop__search__s_1a67c44a95de79cb421fbeed4432686f48" kindref="member">hmmctx</ref>,<sp/>senscr);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(hmm)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="hmm_8h_1a24ed030b10cb07e12173b45d3800db4b" kindref="member">hmm_vit_eval</ref>(hmm);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>bs)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref><sp/>=<sp/>bs;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">store_scores(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>itr;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>[pls-&gt;<ref refid="structphone__loop__search__s_1a630510d46979533e7acfd1e70d80ea97" kindref="member">pen_buf_ptr</ref>][i]<sp/>=<sp/>(hmm_bestscore(hmm)<sp/>-<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref>)<sp/>*<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1adecb101bb21afd9e2a32c3f59b5abdc7" kindref="member">penalty_weight</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a630510d46979533e7acfd1e70d80ea97" kindref="member">pen_buf_ptr</ref>++;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a630510d46979533e7acfd1e70d80ea97" kindref="member">pen_buf_ptr</ref><sp/>=<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a630510d46979533e7acfd1e70d80ea97" kindref="member">pen_buf_ptr</ref><sp/>%<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a28788511ed4729a50c1b475312c7b90a" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>penalties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>[i]<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0,<sp/>itr<sp/>=<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a630510d46979533e7acfd1e70d80ea97" kindref="member">pen_buf_ptr</ref><sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>pls-&gt;window;<sp/>j++,<sp/>itr++)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>itr<sp/>%<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a28788511ed4729a50c1b475312c7b90a" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>[itr][i]<sp/>&gt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>[i])</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a0d01d1eabc94239673b4040e2a6d84fd" kindref="member">penalties</ref>[i]<sp/>=<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1ad9233a565738a5097097bab89193e2c5" kindref="member">pen_buf</ref>[itr][i];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">prune_hmms(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh<sp/>=<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref><sp/>+<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a1aa6103c72ce8159bd21bfa4f97feff3" kindref="member">beam</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>all<sp/>phones<sp/>to<sp/>see<sp/>if<sp/>they<sp/>remain<sp/>active<sp/>in<sp/>the<sp/>next<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(hmm)<sp/>&lt;<sp/>frame_idx)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retain<sp/>if<sp/>score<sp/>better<sp/>than<sp/>threshold.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmm_bestscore(hmm)<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm_frame(hmm)<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a9561d7ffa1e61c99de2d2b900774152f" kindref="member">hmm_clear_scores</ref>(hmm);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">phone_transition(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>thresh<sp/>=<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref><sp/>+<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1aaace8b677a536e41bb4616e6695b11d3" kindref="member">pbeam</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>frame_idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>transition<sp/>out<sp/>of<sp/>phones<sp/>whose<sp/>last<sp/>states<sp/>are<sp/>inside<sp/>the</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>phone<sp/>transition<sp/>beam.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*hmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>newphone_score;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(hmm)<sp/>!=<sp/>nf)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newphone_score<sp/>=<sp/>hmm_out_score(hmm)<sp/>+<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1ac979bc57a659c7853eec1854dbcbfabe" kindref="member">pip</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newphone_score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>thresh)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transition<sp/>into<sp/>all<sp/>phones<sp/>using<sp/>the<sp/>usual<sp/>Viterbi<sp/>rule.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*nhmm<sp/>=<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[j];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hmm_frame(nhmm)<sp/>&lt;<sp/>frame_idx</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>newphone_score<sp/><ref refid="hmm_8h_1a2874ab52613ff781c96f570ec0eb0d98" kindref="member">BETTER_THAN</ref><sp/>hmm_in_score(nhmm))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hmm_8h_1a7285d01d533996d750c78e0d96042716" kindref="member">hmm_enter</ref>(nhmm,<sp/>newphone_score,<sp/>hmm_out_history(hmm),<sp/>nf);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">phone_loop_search_step(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_idx)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*pls<sp/>=<sp/>(<ref refid="structphone__loop__search__s" kindref="compound">phone_loop_search_t</ref><sp/>*)search;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod<sp/>=<sp/>ps_search_acmod(search);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*senscr;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>CI<sp/>senones<sp/>are<sp/>active<sp/>all<sp/>the<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ps_search_acmod(pls)-&gt;compallsen)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1aed43f033f434e34fd90c975909d81cb2" kindref="member">acmod_clear_active</ref>(ps_search_acmod(pls));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a7844f45806d19d229504378da16bdc4c" kindref="member">n_phones</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="acmod_8c_1a2a7f67d462279b2bc4774c7967ae61c7" kindref="member">acmod_activate_hmm</ref>(acmod,<sp/>(<ref refid="structhmm__t" kindref="compound">hmm_t</ref><sp/>*)&amp;pls-&gt;<ref refid="structphone__loop__search__s_1a6f29f6a259a1ee07108bb55036cec9d0" kindref="member">hmms</ref>[i]);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>senone<sp/>scores<sp/>for<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>senscr<sp/>=<sp/><ref refid="acmod_8c_1acd78e9bae06724df9c53f844d90c1c8a" kindref="member">acmod_score</ref>(acmod,<sp/>&amp;frame_idx);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize,<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref><sp/>+<sp/>(2<sp/>*<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1a1aa6103c72ce8159bd21bfa4f97feff3" kindref="member">beam</ref>)<sp/><ref refid="hmm_8h_1aa930fb8fb6fce7f34bcf4018b81d7066" kindref="member">WORSE_THAN</ref><sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Renormalizing<sp/>Scores<sp/>at<sp/>frame<sp/>%d,<sp/>best<sp/>score<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_idx,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renormalize_hmms(pls,<sp/>frame_idx,<sp/>pls-&gt;<ref refid="structphone__loop__search__s_1af6bf0231db2587a3f7ffa3f838b84db5" kindref="member">best_score</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>phone<sp/>HMMs<sp/>for<sp/>current<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>evaluate_hmms(pls,<sp/>senscr,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>hmm<sp/>scores<sp/>for<sp/>senone<sp/>penaly<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>store_scores(pls,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prune<sp/>phone<sp/>HMMs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>prune_hmms(pls,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>phone<sp/>transitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>phone_transition(pls,<sp/>frame_idx);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">phone_loop_search_finish(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Actually<sp/>nothing<sp/>to<sp/>do<sp/>here<sp/>really.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="348"><highlight class="normal">phone_loop_search_hyp(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search,<sp/>int32<sp/>*out_score,<sp/>int32<sp/>*out_is_final)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Hypotheses<sp/>are<sp/>not<sp/>returned<sp/>from<sp/>phone<sp/>loop<sp/>search&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="355"><highlight class="normal">phone_loop_search_prob(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Actually...<sp/>they<sp/>ought<sp/>to<sp/>be.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Posterior<sp/>probabilities<sp/>are<sp/>not<sp/>returned<sp/>from<sp/>phone<sp/>loop<sp/>search&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__seg__s" kindref="compound">ps_seg_t</ref><sp/>*</highlight></codeline>
<codeline lineno="363"><highlight class="normal">phone_loop_search_seg_iter(<ref refid="structps__search__s" kindref="compound">ps_search_t</ref><sp/>*search)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Hypotheses<sp/>are<sp/>not<sp/>returned<sp/>from<sp/>phone<sp/>loop<sp/>search&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/phone_loop_search.c"/>
  </compounddef>
</doxygen>
