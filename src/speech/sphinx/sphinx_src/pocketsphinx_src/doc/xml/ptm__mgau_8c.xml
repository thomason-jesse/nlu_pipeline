<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ptm__mgau_8c" kind="file">
    <compoundname>ptm_mgau.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sphinx_config.h</includes>
    <includes local="no">sphinxbase/cmd_ln.h</includes>
    <includes local="no">sphinxbase/fixpoint.h</includes>
    <includes local="no">sphinxbase/ckd_alloc.h</includes>
    <includes local="no">sphinxbase/bio.h</includes>
    <includes local="no">sphinxbase/err.h</includes>
    <includes local="no">sphinxbase/prim_type.h</includes>
    <includes refid="tied__mgau__common_8h" local="yes">tied_mgau_common.h</includes>
    <includes refid="ptm__mgau_8h" local="yes">ptm_mgau.h</includes>
    <incdepgraph>
      <node id="2003">
        <label>sphinxbase/ngram_model.h</label>
      </node>
      <node id="2007">
        <label>sphinxbase/hash_table.h</label>
      </node>
      <node id="2020">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="2007" relation="include">
        </childnode>
        <childnode refid="2021" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
      </node>
      <node id="1983">
        <label>assert.h</label>
      </node>
      <node id="2022">
        <label>float.h</label>
      </node>
      <node id="2016">
        <label>cmdln_macro.h</label>
        <link refid="cmdln__macro_8h_source"/>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
      </node>
      <node id="1988">
        <label>sphinxbase/cmd_ln.h</label>
      </node>
      <node id="2006">
        <label>mdef.h</label>
        <link refid="mdef_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="2007" relation="include">
        </childnode>
      </node>
      <node id="2004">
        <label>pocketsphinx_export.h</label>
        <link refid="pocketsphinx__export_8h_source"/>
      </node>
      <node id="1981">
        <label>stdlib.h</label>
      </node>
      <node id="1997">
        <label>sphinxbase/fe.h</label>
      </node>
      <node id="1989">
        <label>sphinxbase/fixpoint.h</label>
      </node>
      <node id="1998">
        <label>sphinxbase/mmio.h</label>
      </node>
      <node id="1990">
        <label>sphinxbase/ckd_alloc.h</label>
      </node>
      <node id="2011">
        <label>ms_gauden.h</label>
        <link refid="ms__gauden_8h"/>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="2012" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2009" relation="include">
        </childnode>
      </node>
      <node id="2010">
        <label>sphinxbase/listelem_alloc.h</label>
      </node>
      <node id="2013">
        <label>pocketsphinx_internal.h</label>
        <link refid="pocketsphinx__internal_8h"/>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2007" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="2014" relation="include">
        </childnode>
        <childnode refid="2015" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
        <childnode refid="2020" relation="include">
        </childnode>
        <childnode refid="2023" relation="include">
        </childnode>
      </node>
      <node id="1991">
        <label>sphinxbase/bio.h</label>
      </node>
      <node id="1984">
        <label>limits.h</label>
      </node>
      <node id="1979">
        <label>src/libpocketsphinx/ptm_mgau.c</label>
        <link refid="ptm_mgau.c"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1982" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1986" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="1994" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
      </node>
      <node id="1996">
        <label>ptm_mgau.h</label>
        <link refid="ptm__mgau_8h"/>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
        <childnode refid="2009" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
      </node>
      <node id="2008">
        <label>tmat.h</label>
        <link refid="tmat_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
      </node>
      <node id="2000">
        <label>sphinxbase/feat.h</label>
      </node>
      <node id="1987">
        <label>sphinx_config.h</label>
      </node>
      <node id="1986">
        <label>sys/types.h</label>
      </node>
      <node id="2015">
        <label>pocketsphinx.h</label>
        <link refid="pocketsphinx_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
        <childnode refid="2016" relation="include">
        </childnode>
        <childnode refid="2017" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
        <childnode refid="2018" relation="include">
        </childnode>
      </node>
      <node id="1982">
        <label>string.h</label>
      </node>
      <node id="2012">
        <label>vector.h</label>
        <link refid="vector_8h_source"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
      </node>
      <node id="1993">
        <label>sphinxbase/prim_type.h</label>
      </node>
      <node id="1999">
        <label>acmod.h</label>
        <link refid="acmod_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2008" relation="include">
        </childnode>
        <childnode refid="2009" relation="include">
        </childnode>
      </node>
      <node id="2001">
        <label>sphinxbase/bitvec.h</label>
      </node>
      <node id="2018">
        <label>ps_search.h</label>
        <link refid="ps__search_8h"/>
        <childnode refid="2019" relation="include">
        </childnode>
        <childnode refid="2003" relation="include">
        </childnode>
      </node>
      <node id="1985">
        <label>math.h</label>
      </node>
      <node id="1994">
        <label>tied_mgau_common.h</label>
        <link refid="tied__mgau__common_8h"/>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
      </node>
      <node id="1992">
        <label>sphinxbase/err.h</label>
      </node>
      <node id="2019">
        <label>sphinxbase/fsg_model.h</label>
      </node>
      <node id="2002">
        <label>ps_mllr.h</label>
        <link refid="ps__mllr_8h"/>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
      </node>
      <node id="2017">
        <label>ps_lattice.h</label>
        <link refid="ps__lattice_8h"/>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
      </node>
      <node id="2023">
        <label>dict2pid.h</label>
        <link refid="dict2pid_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
        <childnode refid="2021" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2020" relation="include">
        </childnode>
      </node>
      <node id="2005">
        <label>bin_mdef.h</label>
        <link refid="bin__mdef_8h"/>
        <childnode refid="1998" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
        <childnode refid="2006" relation="include">
        </childnode>
      </node>
      <node id="1995">
        <label>sphinxbase/logmath.h</label>
      </node>
      <node id="2021">
        <label>s3types.h</label>
        <link refid="s3types_8h"/>
        <childnode refid="2022" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
      </node>
      <node id="2009">
        <label>hmm.h</label>
        <link refid="hmm_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
      </node>
      <node id="2014">
        <label>sphinxbase/profile.h</label>
      </node>
      <node id="1980">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ptm__mgau_8c_1a93fe0fa2630a33eaf9cfe3d5d6e6f465" prot="public" static="no">
        <name>COMPUTE_GMM_MAP</name>
        <param><defname>_idx</defname></param>
        <initializer>diff[_idx] = obs[_idx] - mean[_idx];                \
    sqdiff[_idx] = MFCCMUL(diff[_idx], diff[_idx]);     \
    compl[_idx] = MFCCMUL(sqdiff[_idx], var[_idx]);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="70" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptm__mgau_8c_1a7dba014cfdefe859ea3f6768d22f8cbf" prot="public" static="no">
        <name>COMPUTE_GMM_REDUCE</name>
        <param><defname>_idx</defname></param>
        <initializer>d = <ref refid="tied__mgau__common_8h_1a740dfe5b30e702ba8b2ec7426bd4d57e" kindref="member">GMMSUB</ref>(d, compl[_idx]);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="74" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ptm__mgau_8c_1ab16b339c70d2dfb22e0fcc8245c7bd7b" prot="public" static="yes" mutable="no">
        <type><ref refid="structps__mgaufuncs__s" kindref="compound">ps_mgaufuncs_t</ref></type>
        <definition>ps_mgaufuncs_t ptm_mgau_funcs</definition>
        <argsstring></argsstring>
        <name>ptm_mgau_funcs</name>
        <initializer>= {
    &quot;ptm&quot;,
    ptm_mgau_frame_eval,      
    ptm_mgau_mllr_transform,  
    ptm_mgau_free             
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="63" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ptm__mgau_8c_1aec6582a7a6ae65294432e0fc7342a75f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void insertion_sort_topn</definition>
        <argsstring>(ptm_topn_t *topn, int i, int32 d)</argsstring>
        <name>insertion_sort_topn</name>
        <param>
          <type><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref> *</type>
          <declname>topn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="78" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="78" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a2aa3af9d389b733c43cc1d76078789f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int eval_topn</definition>
        <argsstring>(ptm_mgau_t *s, int cb, int feat, mfcc_t *z)</argsstring>
        <name>eval_topn</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="94" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="94" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a61aaed269ec777e7176af1a7bddbf91a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void insertion_sort_cb</definition>
        <argsstring>(ptm_topn_t **cur, ptm_topn_t *worst, ptm_topn_t *best, int cw, int32 intd)</argsstring>
        <name>insertion_sort_cb</name>
        <param>
          <type><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref> **</type>
          <declname>cur</declname>
        </param>
        <param>
          <type><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref> *</type>
          <declname>worst</declname>
        </param>
        <param>
          <type><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref> *</type>
          <declname>best</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cw</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>intd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="144" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1af57c668c87c4c839a04df4bb6e0c6452" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int eval_cb</definition>
        <argsstring>(ptm_mgau_t *s, int cb, int feat, mfcc_t *z)</argsstring>
        <name>eval_cb</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="155" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="155" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a9609f39e7a6d62cf67b94f5ef675dc8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ptm_mgau_codebook_eval</definition>
        <argsstring>(ptm_mgau_t *s, mfcc_t **z, int frame)</argsstring>
        <name>ptm_mgau_codebook_eval</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Compute top-N densities for active codebooks (and prune) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="232" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="232" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1ac0fb04b9938deed52630b044f7db862b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ptm_mgau_codebook_norm</definition>
        <argsstring>(ptm_mgau_t *s, mfcc_t **z, int frame)</argsstring>
        <name>ptm_mgau_codebook_norm</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Normalize densities to produce &quot;posterior probabilities&quot;, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>things with a reasonable dynamic range, then scale and clamp them to the acceptable range. This is actually done solely to ensure that we can use <ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add()</ref>. Note that unless we share the same normalizer across all codebooks for each feature stream we get defective scores (that&apos;s why these loops are inside out - doing it per-feature should give us greater precision). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="266" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="266" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a6113400e702283a4879ff36c2ecb0051" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ptm_mgau_calc_cb_active</definition>
        <argsstring>(ptm_mgau_t *s, uint8 *senone_active, int32 n_senone_active, int compallsen)</argsstring>
        <name>ptm_mgau_calc_cb_active</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compallsen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="297" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="297" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a337193d948e35d48a61329d0b4c52775" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ptm_mgau_senone_eval</definition>
        <argsstring>(ptm_mgau_t *s, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active, int compall)</argsstring>
        <name>ptm_mgau_senone_eval</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compall</declname>
        </param>
        <briefdescription>
<para>Compute senone scores from top-N densities for active codebooks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="327" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="327" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a98876ffd44188bc448f9f64b25b3ace0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ptm_mgau_frame_eval</definition>
        <argsstring>(ps_mgau_t *ps, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active, mfcc_t **featbuf, int32 frame, int32 compallsen)</argsstring>
        <name>ptm_mgau_frame_eval</name>
        <param>
          <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>int16 *</type>
          <declname>senone_scores</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>senone_active</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_senone_active</declname>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>featbuf</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>compallsen</declname>
        </param>
        <briefdescription>
<para>Compute senone scores for the active senones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="409" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="409" bodyend="454"/>
        <references refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" compoundref="ptm__mgau_8h" startline="82">ptm_mgau_s::n_fast_hist</references>
        <references refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" compoundref="ptm__mgau_8h" startline="81">ptm_mgau_s::f</references>
        <references refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" compoundref="ptm__mgau_8h" startline="80">ptm_mgau_s::hist</references>
        <references refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" compoundref="ptm__mgau_8h" startline="64">ptm_fast_eval_s::topn</references>
        <references refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" compoundref="ptm__mgau_8h" startline="71">ptm_mgau_s::g</references>
        <references refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" compoundref="ms__gauden_8h" startline="88">gauden_t::n_mgau</references>
        <references refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" compoundref="ms__gauden_8h" startline="89">gauden_t::n_feat</references>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a35f85cee0d340697411eb159476137cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 read_sendump</definition>
        <argsstring>(ptm_mgau_t *s, bin_mdef_t *mdef, char const *file)</argsstring>
        <name>read_sendump</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>mdef</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="457" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="457" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a5a2d7dfec5838be7fb764c193aa6ea95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 read_mixw</definition>
        <argsstring>(ptm_mgau_t *s, char const *file_name, double SmoothMin)</argsstring>
        <name>read_mixw</name>
        <param>
          <type><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>SmoothMin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="657" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="657" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a712679ca84e5b9f7351d969abbe1021a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
        <definition>ps_mgau_t* ptm_mgau_init</definition>
        <argsstring>(acmod_t *acmod, bin_mdef_t *mdef)</argsstring>
        <name>ptm_mgau_init</name>
        <param>
          <type><ref refid="structacmod__s" kindref="compound">acmod_t</ref> *</type>
          <declname>acmod</declname>
        </param>
        <param>
          <type><ref refid="bin__mdef_8h_1a269082d84ae254593b79f1eafe9b2d12" kindref="member">bin_mdef_t</ref> *</type>
          <declname>mdef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="770" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="770" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1abdc8c1a98c467db012d46d65b48132f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ptm_mgau_mllr_transform</definition>
        <argsstring>(ps_mgau_t *ps, ps_mllr_t *mllr)</argsstring>
        <name>ptm_mgau_mllr_transform</name>
        <param>
          <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type><ref refid="ps__mllr_8h_1ad4b6bf4c3cb6a671f79f1d709857d5b1" kindref="member">ps_mllr_t</ref> *</type>
          <declname>mllr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="880" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="880" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="ptm__mgau_8c_1a9a50edb0da1c769d328b25e21f4f0fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ptm_mgau_free</definition>
        <argsstring>(ps_mgau_t *ps)</argsstring>
        <name>ptm_mgau_free</name>
        <param>
          <type><ref refid="acmod_8h_1ab7a75abad7044b2ab494823d2ae8bbd4" kindref="member">ps_mgau_t</ref> *</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" line="888" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c" bodystart="888" bodyend="912"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2010<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>System<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__ADSPBLACKFIN__)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>!defined(_WIN32_WCE)</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SphinxBase<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinx_config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/cmd_ln.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/fixpoint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/ckd_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/prim_type.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tied__mgau__common_8h" kindref="compound">tied_mgau_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ptm__mgau_8h" kindref="compound">ptm_mgau.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structps__mgaufuncs__s" kindref="compound">ps_mgaufuncs_t</ref><sp/>ptm_mgau_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ptm&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptm__mgau_8h_1ae9fb76ef388e6541bd6c1b20fe8bc094" kindref="member">ptm_mgau_frame_eval</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frame_eval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ptm_mgau_mllr_transform,<sp/><sp/></highlight><highlight class="comment">/*<sp/>transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ptm_mgau_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPUTE_GMM_MAP(_idx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>diff[_idx]<sp/>=<sp/>obs[_idx]<sp/>-<sp/>mean[_idx];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sqdiff[_idx]<sp/>=<sp/>MFCCMUL(diff[_idx],<sp/>diff[_idx]);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>compl[_idx]<sp/>=<sp/>MFCCMUL(sqdiff[_idx],<sp/>var[_idx]);</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COMPUTE_GMM_REDUCE(_idx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>GMMSUB(d,<sp/>compl[_idx]);</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">insertion_sort_topn(<ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*topn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>int32<sp/>d)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>vtmp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>topn[i].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>vtmp<sp/>=<sp/>topn[i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>d<sp/>&gt;<sp/>topn[j].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;<sp/>j--)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topn[j<sp/>+<sp/>1]<sp/>=<sp/>topn[j];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>topn[j<sp/>+<sp/>1]<sp/>=<sp/>vtmp;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">eval_topn(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cb,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feat,<sp/>mfcc_t<sp/>*z)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*topn;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>ceplen;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>topn<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[cb][feat];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ceplen<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[feat];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*mean,<sp/>diff[4],<sp/>sqdiff[4],<sp/>compl[4];<sp/></highlight><highlight class="comment">/*<sp/>diff,<sp/>diff^2,<sp/>component<sp/>likelihood<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*var,<sp/>d;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*obs;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>cw,<sp/>j;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>topn[i].<ref refid="structptm__topn__s_1a8a46095488efefa2714214a7a74117b1" kindref="member">cw</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1aa76d63009601dcb6b99f17db96167f37" kindref="member">mean</ref>[cb][feat][0]<sp/>+<sp/>cw<sp/>*<sp/>ceplen;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a172cb69c018608ab8c33d54e6f0fdf19" kindref="member">var</ref>[cb][feat][0]<sp/>+<sp/>cw<sp/>*<sp/>ceplen;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a315918a44ff97b95a6fcdf8739d8089b" kindref="member">det</ref>[cb][feat][cw];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ceplen<sp/>%<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff[0]<sp/>=<sp/>*obs++<sp/>-<sp/>*mean++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqdiff[0]<sp/>=<sp/>MFCCMUL(diff[0],<sp/>diff[0]);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compl[0]<sp/>=<sp/>MFCCMUL(sqdiff[0],<sp/>*var);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a740dfe5b30e702ba8b2ec7426bd4d57e" kindref="member">GMMSUB</ref>(d,<sp/>compl[0]);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++var;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>could<sp/>vectorize<sp/>this<sp/>but<sp/>it&apos;s<sp/>unlikely<sp/>to<sp/>make<sp/>much</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>difference<sp/>as<sp/>the<sp/>outer<sp/>loop<sp/>here<sp/>isn&apos;t<sp/>very<sp/>big.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;j<sp/>&lt;<sp/>ceplen;<sp/>j<sp/>+=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(2);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(3);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(2);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(3);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertion_sort_topn(topn,<sp/>i,<sp/>(int32)d);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>topn[0].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>looks<sp/>bad,<sp/>but<sp/>it<sp/>actually<sp/>isn&apos;t.<sp/><sp/>Less<sp/>than<sp/>1%<sp/>of<sp/>eval_cb&apos;s</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>time<sp/>is<sp/>spent<sp/>doing<sp/>this.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">insertion_sort_cb(<ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>**cur,<sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*worst,<sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*best,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cw,<sp/>int32<sp/>intd)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(*cur<sp/>=<sp/>worst<sp/>-<sp/>1;<sp/>*cur<sp/>&gt;=<sp/>best<sp/>&amp;&amp;<sp/>intd<sp/>&gt;=<sp/>(*cur)-&gt;<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;<sp/>--*cur)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(*cur<sp/>+<sp/>1,<sp/>*cur,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**cur));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>++*cur;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cur)-&gt;<ref refid="structptm__topn__s_1a8a46095488efefa2714214a7a74117b1" kindref="member">cw</ref><sp/>=<sp/>cw;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cur)-&gt;score<sp/>=<sp/>intd;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">eval_cb(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cb,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feat,<sp/>mfcc_t<sp/>*z)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*worst,<sp/>*best,<sp/>*topn;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>*mean;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>*var,<sp/>*det,<sp/>*detP,<sp/>*detE;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>ceplen;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>topn<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[cb][feat];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>worst<sp/>=<sp/>topn<sp/>+<sp/>(s-&gt;max_topn<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>mean<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1aa76d63009601dcb6b99f17db96167f37" kindref="member">mean</ref>[cb][feat][0];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a172cb69c018608ab8c33d54e6f0fdf19" kindref="member">var</ref>[cb][feat][0];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>det<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a315918a44ff97b95a6fcdf8739d8089b" kindref="member">det</ref>[cb][feat];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>detE<sp/>=<sp/>det<sp/>+<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ceplen<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[feat];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(detP<sp/>=<sp/>det;<sp/>detP<sp/>&lt;<sp/>detE;<sp/>++detP)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>diff[4],<sp/>sqdiff[4],<sp/>compl[4];<sp/></highlight><highlight class="comment">/*<sp/>diff,<sp/>diff^2,<sp/>component<sp/>likelihood<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>d,<sp/>thresh;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>*obs;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*cur;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>cw,<sp/>j;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>*detP;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thresh<sp/>=<sp/>(mfcc_t)<sp/>worst-&gt;<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Avoid<sp/>int-to-float<sp/>conversions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cw<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(detP<sp/>-<sp/>det);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unroll<sp/>the<sp/>loop<sp/>starting<sp/>with<sp/>the<sp/>first<sp/>dimension(s).<sp/><sp/>In</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>theory<sp/>this<sp/>might<sp/>be<sp/>a<sp/>bit<sp/>faster<sp/>if<sp/>this<sp/>Gaussian<sp/>gets</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;knocked<sp/>out&quot;<sp/>by<sp/>C0.<sp/>In<sp/>practice<sp/>not.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>(j<sp/>&lt;<sp/>ceplen<sp/>%<sp/>4)<sp/>&amp;&amp;<sp/>(d<sp/>&gt;=<sp/>thresh);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff[0]<sp/>=<sp/>*obs++<sp/>-<sp/>*mean++;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqdiff[0]<sp/>=<sp/>MFCCMUL(diff[0],<sp/>diff[0]);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compl[0]<sp/>=<sp/>MFCCMUL(sqdiff[0],<sp/>*var++);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a740dfe5b30e702ba8b2ec7426bd4d57e" kindref="member">GMMSUB</ref>(d,<sp/>compl[0]);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>do<sp/>4<sp/>dimensions<sp/>at<sp/>a<sp/>time.<sp/><sp/>You&apos;d<sp/>think<sp/>that<sp/>GCC<sp/>would</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>vectorize<sp/>this?<sp/><sp/>Apparently<sp/>not.<sp/><sp/>And<sp/>it&apos;s<sp/>right,<sp/>because</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>won&apos;t<sp/>make<sp/>this<sp/>any<sp/>faster,<sp/>at<sp/>least<sp/>on<sp/>x86-64.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/>ceplen<sp/>&amp;&amp;<sp/>d<sp/>&gt;=<sp/>thresh;<sp/>j<sp/>+=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(2);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_MAP(3);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(2);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE_GMM_REDUCE(3);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>ceplen)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>terminated<sp/>early,<sp/>so<sp/>not<sp/>in<sp/>topn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>+=<sp/>(ceplen<sp/>-<sp/>j);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>+=<sp/>(ceplen<sp/>-<sp/>j);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>thresh)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>already<sp/>there,<sp/>so<sp/>don&apos;t<sp/>need<sp/>to<sp/>insert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topn[i].cw<sp/>==<sp/>cw)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>s-&gt;max_topn)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>already<sp/>there.<sp/><sp/>Don&apos;t<sp/>insert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertion_sort_cb(&amp;cur,<sp/>worst,<sp/>best,<sp/>cw,<sp/>(int32)d);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best-&gt;<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">ptm_mgau_codebook_eval(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/>mfcc_t<sp/>**z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>evaluate<sp/>top-N<sp/>from<sp/>previous<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval_topn(s,<sp/>i,<sp/>j,<sp/>z[j]);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>frame<sp/>downsampling<sp/>is<sp/>in<sp/>effect,<sp/>possibly<sp/>do<sp/>nothing<sp/>else.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame<sp/>%<sp/>s-&gt;ds_ratio)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>remaining<sp/>codebooks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>i))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval_cb(s,<sp/>i,<sp/>j,<sp/>z[j]);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">ptm_mgau_codebook_norm(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/>mfcc_t<sp/>**z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>norm<sp/>=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>i))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm<sp/>&lt;<sp/>s-&gt;f-&gt;topn[i][j][0].score<sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][0].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>&gt;&gt;<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(norm<sp/>!=<sp/><ref refid="hmm_8h_1a833f100ee293ad0f1c03f2a5ef9be77a" kindref="member">WORST_SCORE</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>k;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>i))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][k].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>&gt;&gt;=<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][k].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>-=<sp/>norm;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][k].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>=<sp/>-s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][k].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][k].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>&gt;<sp/><ref refid="tied__mgau__common_8h_1a965d50d73044c3f2dc2589662fd2e89e" kindref="member">MAX_NEG_ASCR</ref>)<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[i][j][k].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>=<sp/><ref refid="tied__mgau__common_8h_1a965d50d73044c3f2dc2589662fd2e89e" kindref="member">MAX_NEG_ASCR</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">ptm_mgau_calc_cb_active(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compallsen)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>lastsen;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compallsen)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set_all(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>bitvec_clear_all(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lastsen<sp/>=<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_senone_active;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen<sp/>=<sp/>senone_active[i]<sp/>+<sp/>lastsen;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1a5e677255165b8abda63dd1d6dbed1be7" kindref="member">sen2cb</ref>[sen];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>cb);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastsen<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>E_DEBUG(1,<sp/>(</highlight><highlight class="stringliteral">&quot;Active<sp/>codebooks:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>i))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUGCONT(1,<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>E_DEBUGCONT(1,<sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">ptm_mgau_senone_eval(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/>int16<sp/>*senone_scores,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*senone_active,<sp/>int32<sp/>n_senone_active,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compall)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>lastsen,<sp/>bestscore;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(senone_scores,<sp/>0,<sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*senone_scores));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>is<sp/>the<sp/>non-cache-efficient<sp/>way<sp/>to<sp/>do<sp/>this.<sp/><sp/>We<sp/>want</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>evaluate<sp/>one<sp/>codeword<sp/>at<sp/>a<sp/>time<sp/>but<sp/>this<sp/>requires<sp/>us<sp/>to<sp/>have</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>reverse<sp/>codebook<sp/>to<sp/>senone<sp/>mapping,<sp/>which<sp/>we<sp/>don&apos;t<sp/>have</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(yet),<sp/>since<sp/>different<sp/>codebooks<sp/>have<sp/>different<sp/>top-N</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>codewords.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compall)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_senone_active<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>bestscore<sp/>=<sp/>0x7fffffff;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lastsen<sp/>=<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_senone_active;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sen,<sp/>f,<sp/>cb;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ascore;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compall)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sen<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sen<sp/>=<sp/>senone_active[i]<sp/>+<sp/>lastsen;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastsen<sp/>=<sp/>sen;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1a5e677255165b8abda63dd1d6dbed1be7" kindref="member">sen2cb</ref>[sen];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitvec_is_clear(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>cb))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Because<sp/>senone_active<sp/>is<sp/>deltas<sp/>we<sp/>can&apos;t<sp/>really<sp/>&quot;knock</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>out&quot;<sp/>senones<sp/>from<sp/>pruned<sp/>codebooks,<sp/>and<sp/>in<sp/>any<sp/>case,</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>wouldn&apos;t<sp/>make<sp/>any<sp/>difference<sp/>to<sp/>the<sp/>search<sp/>code,</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>which<sp/>doesn&apos;t<sp/>expect<sp/>senone_active<sp/>to<sp/>change.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++f)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[cb][f][j].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>=<sp/><ref refid="tied__mgau__common_8h_1a965d50d73044c3f2dc2589662fd2e89e" kindref="member">MAX_NEG_ASCR</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>feature,<sp/>log-sum<sp/>codeword<sp/>scores<sp/>+<sp/>mixw<sp/>to<sp/>get</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>feature<sp/>density,<sp/>then<sp/>sum<sp/>(multiply)<sp/>to<sp/>get<sp/>ascore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++f)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref><sp/>*topn;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>fden<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topn<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[cb][f];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mixw;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>mixture<sp/>weight<sp/>for<sp/>this<sp/>codeword.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;mixw_cb)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcw<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>[f][topn[j].<ref refid="structptm__topn__s_1a8a46095488efefa2714214a7a74117b1" kindref="member">cw</ref>][sen/2];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcw<sp/>=<sp/>(dcw<sp/>&amp;<sp/>1)<sp/>?<sp/>dcw<sp/>&gt;&gt;<sp/>4<sp/>:<sp/>dcw<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixw<sp/>=<sp/>s-&gt;mixw_cb[dcw];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixw<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>[f][topn[j].<ref refid="structptm__topn__s_1a8a46095488efefa2714214a7a74117b1" kindref="member">cw</ref>][sen];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fden<sp/>=<sp/>mixw<sp/>+<sp/>topn[j].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fden<sp/>=<sp/><ref refid="tied__mgau__common_8h_1a947ea19b4351ecbf70330e089994c3a1" kindref="member">fast_logmath_add</ref>(s-&gt;lmath_8b,<sp/>fden,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixw<sp/>+<sp/>topn[j].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_DEBUG(3,<sp/>(</highlight><highlight class="stringliteral">&quot;fden[%d][%d]<sp/>l+=<sp/>%d<sp/>+<sp/>%d<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sen,<sp/>f,<sp/>mixw,<sp/>topn[j].score,<sp/>fden));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascore<sp/>+=<sp/>fden;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ascore<sp/>&lt;<sp/>bestscore)<sp/>bestscore<sp/>=<sp/>ascore;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[sen]<sp/>=<sp/>ascore;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>the<sp/>scores<sp/>again<sp/>(finishing<sp/>the<sp/>job<sp/>we<sp/>started<sp/>above</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>ptm_mgau_codebook_eval...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senone_scores[i]<sp/>-=<sp/>bestscore;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="409" refid="ptm__mgau_8h_1ae9fb76ef388e6541bd6c1b20fe8bc094" refkind="member"><highlight class="normal"><ref refid="ptm__mgau_8h_1ae9fb76ef388e6541bd6c1b20fe8bc094" kindref="member">ptm_mgau_frame_eval</ref>(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16<sp/>*senone_scores,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>*senone_active,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_senone_active,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**<sp/>featbuf,<sp/>int32<sp/>frame,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>compallsen)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s<sp/>=<sp/>(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*)ps;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fast_eval_idx;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>appropriate<sp/>frame<sp/>in<sp/>the<sp/>rotating<sp/>history<sp/>buffer</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>corresponding<sp/>to<sp/>the<sp/>requested<sp/>input<sp/>frame.<sp/><sp/>No<sp/>bounds<sp/>checking</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>done<sp/>here,<sp/>which<sp/>just<sp/>means<sp/>you&apos;ll<sp/>get<sp/>semi-random<sp/>crap<sp/>if</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>request<sp/>a<sp/>frame<sp/>in<sp/>the<sp/>future<sp/>or<sp/>one<sp/>that&apos;s<sp/>too<sp/>far<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>past.<sp/><sp/>Since<sp/>the<sp/>history<sp/>buffer<sp/>is<sp/>just<sp/>used<sp/>for<sp/>fast<sp/>match</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>might<sp/>not<sp/>be<sp/>fatal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>fast_eval_idx<sp/>=<sp/>frame<sp/>%<sp/>s-&gt;<ref refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" kindref="member">n_fast_hist</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref><sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref><sp/>+<sp/>fast_eval_idx;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>top-N<sp/>codewords<sp/>for<sp/>every<sp/>codebook,<sp/>unless<sp/>this</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>a<sp/>past<sp/>frame,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>already<sp/>have<sp/>them<sp/>(we</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>hope!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame<sp/>&gt;=<sp/>ps_mgau_base(ps)-&gt;frame_idx)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structptm__fast__eval__s" kindref="compound">ptm_fast_eval_t</ref><sp/>*lastf;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>previous<sp/>frame&apos;s<sp/>top-N<sp/>information<sp/>(on<sp/>the</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>first<sp/>frame<sp/>of<sp/>the<sp/>input<sp/>this<sp/>is<sp/>just<sp/>all<sp/>WORST_DIST,</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>no<sp/>harm<sp/>in<sp/>that)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fast_eval_idx<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastf<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref><sp/>+<sp/>s-&gt;<ref refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" kindref="member">n_fast_hist</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastf<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref><sp/>+<sp/>fast_eval_idx<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>in<sp/>initial<sp/>top-N<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref>-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[0][0],<sp/>lastf-&gt;<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[0][0],</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref><sp/>*<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref><sp/>*<sp/>s-&gt;max_topn<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref>));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>initial<sp/>active<sp/>codebook<sp/>list<sp/>(this<sp/>might<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>necessary)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm_mgau_calc_cb_active(s,<sp/>senone_active,<sp/>n_senone_active,<sp/>compallsen);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>evaluate<sp/>top-N,<sp/>prune,<sp/>and<sp/>evaluate<sp/>remaining<sp/>codebooks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm_mgau_codebook_eval(s,<sp/>featbuf,<sp/>frame);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptm_mgau_codebook_norm(s,<sp/>featbuf,<sp/>frame);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>intersection<sp/>of<sp/>active<sp/>senones<sp/>and<sp/>active<sp/>codebooks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ptm_mgau_senone_eval(s,<sp/>senone_scores,<sp/>senone_active,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_senone_active,<sp/>compallsen);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="457"><highlight class="normal">read_sendump(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s,<sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[1000];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>n,<sp/>r,<sp/>c;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>do_swap,<sp/>do_mmap;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_clust<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_feat<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_density<sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sen<sp/>=<sp/>bin_mdef_n_sen(mdef);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_bits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref><sp/>=<sp/>n_sen;<sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Should<sp/>have<sp/>been<sp/>done<sp/>earlier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>do_mmap<sp/>=<sp/>cmd_ln_boolean_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-mmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>fopen(file,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Loading<sp/>senones<sp/>from<sp/>dump<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>title<sp/>size,<sp/>title<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>title<sp/>size<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>extremely<sp/>bogus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>do_swap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1<sp/>||<sp/>n<sp/>&gt;<sp/>999)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT32(&amp;n);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1<sp/>||<sp/>n<sp/>&gt;<sp/>999)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Title<sp/>length<sp/>%x<sp/>in<sp/>dump<sp/>file<sp/>%s<sp/>out<sp/>of<sp/>range\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>file);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_swap<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>n,<sp/>fp)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>title&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[n<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Bad<sp/>title<sp/>in<sp/>dump<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>line);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>header<sp/>size,<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>size<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>n,<sp/>fp)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[n<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Bad<sp/>header<sp/>in<sp/>dump<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>other<sp/>header<sp/>strings<sp/>until<sp/>string<sp/>length<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>string<sp/>size<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;n);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>n,<sp/>fp)<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>a<sp/>cluster<sp/>count,<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;feature_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;feature_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_feat<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;feature_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;mixture_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;mixture_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_density<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;mixture_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;model_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;model_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_sen<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;model_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;cluster_count<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_count<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_clust<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_count<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(line,<sp/></highlight><highlight class="stringliteral">&quot;cluster_bits<sp/>&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_bits<sp/>&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_bits<sp/>=<sp/>atoi(line<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;cluster_bits<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Defaults<sp/>for<sp/>#rows,<sp/>#columns<sp/>in<sp/>mixw<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>n_sen;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>n_density;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Older<sp/>mixw<sp/>files<sp/>have<sp/>them<sp/>here,<sp/>and<sp/>they<sp/>might<sp/>be<sp/>padded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;r,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(r),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>#rows&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;r);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;c,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(c),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR_SYSTEM(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>#columns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_swap)<sp/>SWAP_INT32(&amp;c);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Rows:<sp/>%d,<sp/>Columns:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>r,<sp/>c);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_feat<sp/>!=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>feature<sp/>streams<sp/>mismatch:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_feat,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_density<sp/>!=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>densities<sp/>mismatch:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_density,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_sen<sp/>!=<sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref>)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>senones<sp/>mismatch:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_sen,<sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((n_clust<sp/>==<sp/>0)<sp/>||<sp/>(n_clust<sp/>==<sp/>15)<sp/>||<sp/>(n_clust<sp/>==<sp/>16)))<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>count<sp/>must<sp/>be<sp/>0,<sp/>15,<sp/>or<sp/>16\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust<sp/>==<sp/>15)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_clust;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((n_bits<sp/>==<sp/>8)<sp/>||<sp/>(n_bits<sp/>==<sp/>4)))<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>count<sp/>must<sp/>be<sp/>4<sp/>or<sp/>8\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Using<sp/>memory-mapped<sp/>I/O<sp/>for<sp/>senones\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>memory<sp/>for<sp/>pdfs<sp/>(or<sp/>memory<sp/>map<sp/>them)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_mmap)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sendump_mmap<sp/>=<sp/>mmio_file_read(file);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>cluster<sp/>codebook<sp/>if<sp/>any.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw_cb<sp/>=<sp/>((uint8<sp/>*)<sp/>mmio_file_ptr(s-&gt;sendump_mmap))<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>n_clust;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>cluster<sp/>codebook<sp/>if<sp/>any.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_clust)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;mixw_cb<sp/>=<sp/>ckd_calloc(1,<sp/>n_clust);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(s-&gt;mixw_cb,<sp/>1,<sp/>n_clust,<sp/>fp)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>n_clust)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>%d<sp/>bytes<sp/>from<sp/>sendump\n&quot;</highlight><highlight class="normal">,<sp/>n_clust);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>pointers,<sp/>or<sp/>read,<sp/>or<sp/>whatever<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sendump_mmap)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref><sp/>=<sp/>ckd_calloc_2d(n_feat,<sp/>n_density,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>n_feat;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bits<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>(step<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>r;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>[n][i]<sp/>=<sp/>((uint8<sp/>*)<sp/>mmio_file_ptr(s-&gt;sendump_mmap))<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref><sp/>=<sp/>ckd_calloc_3d(n_feat,<sp/>n_density,<sp/>n_sen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>pdf<sp/>values<sp/>and<sp/>ids<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>n_feat;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bits<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>(step<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>r;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>[n][i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>),<sp/>step,<sp/>fp)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>(size_t)<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>%d<sp/>bytes<sp/>from<sp/>sendump\n&quot;</highlight><highlight class="normal">,<sp/>step);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="657"><highlight class="normal">read_mixw(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SmoothMin)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argname,<sp/>**argval;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>eofchk;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>byteswap,<sp/>chksum_present;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>chksum;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>*pdf;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>f,<sp/>c,<sp/>n;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_sen;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_feat;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_comp;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_err;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Reading<sp/>mixture<sp/>weights<sp/>file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>fopen(file_name,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL_SYSTEM(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>mixture<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>header,<sp/>including<sp/>argument-value<sp/>info<sp/>and<sp/>32-bit<sp/>byteorder<sp/>magic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bio_readhdr(fp,<sp/>&amp;argname,<sp/>&amp;argval,<sp/>&amp;byteswap)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>header<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parse<sp/>argument-value<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>chksum_present<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>argname[i];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argname[i],<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argval[i],<sp/>MGAU_MIXW_VERSION)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Version<sp/>mismatch(%s):<sp/>%s,<sp/>expecting<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name,<sp/>argval[i],<sp/>MGAU_MIXW_VERSION);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argname[i],<sp/></highlight><highlight class="stringliteral">&quot;chksum0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chksum_present<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>the<sp/>associated<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>bio_hdrarg_free(argname,<sp/>argval);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>argname<sp/>=<sp/>argval<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>chksum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>#senones,<sp/>#features,<sp/>#codewords,<sp/>arraysize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bio_fread(&amp;n_sen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bio_fread(&amp;n_feat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bio_fread(&amp;n_comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bio_fread(&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/>1,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;bio_fread(%s)<sp/>(arraysize)<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_feat<sp/>!=<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;#Features<sp/>streams(%d)<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n_feat,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>n_sen<sp/>*<sp/>n_feat<sp/>*<sp/>n_comp)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>#float32s(%d)<sp/>doesn&apos;t<sp/>match<sp/>header<sp/>dimensions:<sp/>%d<sp/>x<sp/>%d<sp/>x<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name,<sp/>i,<sp/>n_sen,<sp/>n_feat,<sp/>n_comp);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>n_sen<sp/>=<sp/>number<sp/>of<sp/>mixture<sp/>weights<sp/>per<sp/>codeword,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>fixed<sp/>at<sp/>the<sp/>number<sp/>of<sp/>senones<sp/>since<sp/>we<sp/>have<sp/>only<sp/>one<sp/>codebook.</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref><sp/>=<sp/>n_sen;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quantized<sp/>mixture<sp/>weight<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref><sp/>=<sp/>ckd_calloc_3d(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1ab5104d8fa59bc94b12b36104dd4c19ac" kindref="member">n_density</ref>,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_sen,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>structure<sp/>to<sp/>read<sp/>in<sp/>floats<sp/>before<sp/>conversion<sp/>to<sp/>(int32)<sp/>logs3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>pdf<sp/>=<sp/>(float32<sp/>*)<sp/>ckd_calloc(n_comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32));</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>senone<sp/>probs<sp/>data,<sp/>normalize,<sp/>floor,<sp/>convert<sp/>to<sp/>logs3,<sp/>truncate<sp/>to<sp/>8<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>n_err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_sen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>n_feat;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bio_fread((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>pdf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float32),</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_comp,<sp/>fp,<sp/>byteswap,<sp/>&amp;chksum)<sp/>!=<sp/>n_comp)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;bio_fread(%s)<sp/>(arraydata)<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>and<sp/>floor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector_sum_norm(pdf,<sp/>n_comp)<sp/>&lt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_err++;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_floor(pdf,<sp/>n_comp,<sp/>SmoothMin);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_sum_norm(pdf,<sp/>n_comp);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>LOG,<sp/>quantize,<sp/>and<sp/>transpose<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>n_comp;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>qscr;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qscr<sp/>=<sp/>-logmath_log(s-&gt;lmath_8b,<sp/>pdf[c]);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((qscr<sp/>&gt;<sp/><ref refid="tied__mgau__common_8h_1ad739d757ed78293c18dc2386fd3b750e" kindref="member">MAX_NEG_MIXW</ref>)<sp/>||<sp/>(qscr<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qscr<sp/>=<sp/><ref refid="tied__mgau__common_8h_1ad739d757ed78293c18dc2386fd3b750e" kindref="member">MAX_NEG_MIXW</ref>;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>[f][c][i]<sp/>=<sp/>qscr;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_err<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_WARN(</highlight><highlight class="stringliteral">&quot;Weight<sp/>normalization<sp/>failed<sp/>for<sp/>%d<sp/>mixture<sp/>weights<sp/>components\n&quot;</highlight><highlight class="normal">,<sp/>n_err);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(pdf);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chksum_present)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bio_verify_chksum(fp,<sp/>byteswap,<sp/>chksum);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;eofchk,<sp/>1,<sp/>1,<sp/>fp)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_FATAL(</highlight><highlight class="stringliteral">&quot;More<sp/>data<sp/>than<sp/>expected<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>x<sp/>%d<sp/>x<sp/>%d<sp/>mixture<sp/>weights\n&quot;</highlight><highlight class="normal">,<sp/>n_sen,<sp/>n_feat,<sp/>n_comp);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_sen;</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*</highlight></codeline>
<codeline lineno="770"><highlight class="normal">ptm_mgau_init(<ref refid="structacmod__s" kindref="compound">acmod_t</ref><sp/>*acmod,<sp/><ref refid="structbin__mdef__s" kindref="compound">bin_mdef_t</ref><sp/>*mdef)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sendump_path;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>ckd_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref><sp/>=<sp/>acmod-&gt;<ref refid="structacmod__s_1a3563f4d0bdc48d3ee140b9e28806279d" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;lmath<sp/>=<sp/>logmath_retain(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log-add<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;lmath_8b<sp/>=<sp/>logmath_init(logmath_get_base(acmod-&gt;<ref refid="structacmod__s_1a9de7e8ac9c0c4df3d2a9ad5406787f3c" kindref="member">lmath</ref>),<sp/><ref refid="hmm_8h_1af94da16e3e5b550b9be05b0f07402cc7" kindref="member">SENSCR_SHIFT</ref>,<sp/>TRUE);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;lmath_8b<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>it<sp/>is<sp/>only<sp/>8<sp/>bits<sp/>wide<sp/>so<sp/>that<sp/>fast_logmath_add()<sp/>works.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logmath_get_width(s-&gt;lmath_8b)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Log<sp/>base<sp/>%f<sp/>is<sp/>too<sp/>small<sp/>to<sp/>represent<sp/>add<sp/>table<sp/>in<sp/>8<sp/>bits\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logmath_get_base(s-&gt;lmath_8b));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>means<sp/>and<sp/>variances.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref><sp/>=<sp/><ref refid="ms__gauden_8h_1ae4587b0aeb39fd926622a422969ecebc" kindref="member">gauden_init</ref>(cmd_ln_str_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_mean&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_str_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_var&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-varfloor&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;lmath))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>only<sp/>support<sp/>256<sp/>codebooks<sp/>or<sp/>less<sp/>(like<sp/>640k<sp/>or<sp/>2GB,<sp/>this</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>be<sp/>enough<sp/>for<sp/>anyone)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref><sp/>&gt;<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>codebooks<sp/>exceeds<sp/>256:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref><sp/>!=<sp/>bin_mdef_n_ciphone(mdef))<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>codebooks<sp/>doesn&apos;t<sp/>match<sp/>number<sp/>of<sp/>ciphones,<sp/>doesn&apos;t<sp/>look<sp/>like<sp/>PTM:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>,<sp/>bin_mdef_n_ciphone(mdef));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>n_feat<sp/>and<sp/>veclen,<sp/>against<sp/>acmod.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref><sp/>!=<sp/>feat_dimension1(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>))<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>streams<sp/>does<sp/>not<sp/>match:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>,<sp/>feat_dimension1(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[i]<sp/>!=<sp/>feat_dimension2(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_ERROR(</highlight><highlight class="stringliteral">&quot;Dimension<sp/>of<sp/>stream<sp/>%d<sp/>does<sp/>not<sp/>match:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1aca099d830de926e628ac0b523046b32c" kindref="member">featlen</ref>[i],<sp/>feat_dimension2(acmod-&gt;<ref refid="structacmod__s_1a37ec6c2b1f3ada764842e08481239b34" kindref="member">fcb</ref>,<sp/>i));</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>mixture<sp/>weights.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sendump_path<sp/>=<sp/>cmd_ln_str_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_sendump&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_sendump(s,<sp/>acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>sendump_path)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_mixw(s,<sp/>cmd_ln_str_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;_mixw&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_ln_float32_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-mixwfloor&quot;</highlight><highlight class="normal">))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;ds_ratio<sp/>=<sp/>cmd_ln_int32_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-ds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;max_topn<sp/>=<sp/>cmd_ln_int32_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-topn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>E_INFO(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>top-N:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;max_topn);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assume<sp/>mapping<sp/>of<sp/>senones<sp/>to<sp/>their<sp/>base<sp/>phones,<sp/>though<sp/>this</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>become<sp/>more<sp/>flexible<sp/>in<sp/>the<sp/>future.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a5e677255165b8abda63dd1d6dbed1be7" kindref="member">sen2cb</ref><sp/>=<sp/>ckd_calloc(s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;<ref refid="structptm__mgau__s_1a5e677255165b8abda63dd1d6dbed1be7" kindref="member">sen2cb</ref>));</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1ab0f6c452efe082383e906ac2a4f75de4" kindref="member">n_sen</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a5e677255165b8abda63dd1d6dbed1be7" kindref="member">sen2cb</ref>[i]<sp/>=<sp/>bin_mdef_sen2cimap(acmod-&gt;<ref refid="structacmod__s_1a351548ff5547c29b4a684e10434a51dd" kindref="member">mdef</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>fast-match<sp/>history<sp/>buffers.<sp/><sp/>We<sp/>need<sp/>enough<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>phoneme<sp/>lookahead<sp/>window,<sp/>plus<sp/>the<sp/>current<sp/>frame,<sp/>plus<sp/>one<sp/>for</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>good<sp/>measure?<sp/>(FIXME:<sp/>I<sp/>don&apos;t<sp/>remember<sp/>why)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" kindref="member">n_fast_hist</ref><sp/>=<sp/>cmd_ln_int32_r(s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-pl_window&quot;</highlight><highlight class="normal">)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref><sp/>=<sp/>ckd_calloc(s-&gt;<ref refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" kindref="member">n_fast_hist</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>));</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>s-&gt;f<sp/>will<sp/>be<sp/>a<sp/>rotating<sp/>pointer<sp/>into<sp/>s-&gt;hist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1aad0c43234e33c2307ce0df2ddb1c05c9" kindref="member">f</ref><sp/>=<sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" kindref="member">n_fast_hist</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>k,<sp/>m;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Top-N<sp/>codewords<sp/>for<sp/>every<sp/>codebook<sp/>and<sp/>feature.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref><sp/>=<sp/>ckd_calloc_3d(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;max_topn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structptm__topn__s" kindref="compound">ptm_topn_t</ref>));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>them<sp/>to<sp/>sane<sp/>(yet<sp/>arbitrary)<sp/>defaults.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1a6dea221962b4a278dbae4806925a7be0" kindref="member">n_feat</ref>;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>s-&gt;max_topn;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[j][k][m].<ref refid="structptm__topn__s_1a8a46095488efefa2714214a7a74117b1" kindref="member">cw</ref><sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>[j][k][m].<ref refid="structptm__topn__s_1aa2080ad2d4f038cdbfbf46bf90884f56" kindref="member">score</ref><sp/>=<sp/>WORST_DIST;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Active<sp/>codebook<sp/>mapping<sp/>(just<sp/>codebook,<sp/>not<sp/>features,</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>least<sp/>not<sp/>yet)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref><sp/>=<sp/>bitvec_alloc(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>with<sp/>them<sp/>all<sp/>on,<sp/>prune<sp/>them<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_set_all(s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>,<sp/>s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>-&gt;<ref refid="structgauden__t_1af15df11bd2f3ab0290e0a33ca15c836c" kindref="member">n_mgau</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*)s;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>ps-&gt;<ref refid="structps__mgau__s_1a931f7cbf334b8ed50b0e1c2803a10c67" kindref="member">vt</ref><sp/>=<sp/>&amp;ptm_mgau_funcs;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ps;</highlight></codeline>
<codeline lineno="874"><highlight class="normal">error_out:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>ptm_mgau_free(ps_mgau_base(s));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal">ptm_mgau_mllr_transform(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structps__mllr__s" kindref="compound">ps_mllr_t</ref><sp/>*mllr)</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s<sp/>=<sp/>(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*)ps;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ms__gauden_8h_1ab640722f2c2b1e8bc6e883d9b5b72494" kindref="member">gauden_mllr_transform</ref>(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>,<sp/>mllr,<sp/>s-&gt;<ref refid="structptm__mgau__s_1aa9cd83ce89052bd6d112ecff54d118f9" kindref="member">config</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal">ptm_mgau_free(<ref refid="structps__mgau__s" kindref="compound">ps_mgau_t</ref><sp/>*ps)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*s<sp/>=<sp/>(<ref refid="structptm__mgau__s" kindref="compound">ptm_mgau_t</ref><sp/>*)ps;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>logmath_free(s-&gt;lmath);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>logmath_free(s-&gt;lmath_8b);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sendump_mmap)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_2d(s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>);<sp/></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmio_file_unmap(s-&gt;sendump_mmap);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_3d(s-&gt;<ref refid="structptm__mgau__s_1af0898f6d5b5b863901a4a4858a10d32a" kindref="member">mixw</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(s-&gt;<ref refid="structptm__mgau__s_1a5e677255165b8abda63dd1d6dbed1be7" kindref="member">sen2cb</ref>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;<ref refid="structptm__mgau__s_1ac491c223199ed5374dfb13fc41854601" kindref="member">n_fast_hist</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckd_free_3d(s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1a95e382028ed8a0af8b56bfcb797af96b" kindref="member">topn</ref>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitvec_free(s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>[i].<ref refid="structptm__fast__eval__s_1ac5d3b21239d567b395015d7c4fea157c" kindref="member">mgau_active</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(s-&gt;<ref refid="structptm__mgau__s_1a68c75460ebffecc786d7eb2840ed7631" kindref="member">hist</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ms__gauden_8h_1a0306e088fa33894ca40182d2392ffe4d" kindref="member">gauden_free</ref>(s-&gt;<ref refid="structptm__mgau__s_1adfba8a590e8d71812ea8082f485e7ad3" kindref="member">g</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>ckd_free(s);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/ptm_mgau.c"/>
  </compounddef>
</doxygen>
