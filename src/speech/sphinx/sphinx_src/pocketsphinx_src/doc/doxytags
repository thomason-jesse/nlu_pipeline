<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>pocketsphinx.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/include/</path>
    <filename>pocketsphinx_8h</filename>
    <includes id="ps__lattice_8h" name="ps_lattice.h" local="no" imported="no">ps_lattice.h</includes>
    <includes id="ps__mllr_8h" name="ps_mllr.h" local="no" imported="no">ps_mllr.h</includes>
    <includes id="ps__search_8h" name="ps_search.h" local="no" imported="no">ps_search.h</includes>
    <member kind="typedef">
      <type>struct ps_decoder_s</type>
      <name>ps_decoder_t</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ac6ba825b5a9e1c9003b257221eb6e055</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_astar_s</type>
      <name>ps_nbest_t</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a73090e41024a1f07f5552b83ac7e0993</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_seg_s</type>
      <name>ps_seg_t</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a64d3ac229ef945017112bab4c2a5ec94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_default_search_args</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a887e4cdcbef98d5594458c5934cc9471</anchor>
      <arglist>(cmd_ln_t *)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_decoder_t *</type>
      <name>ps_init</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ad033da98d0f7785d6ab89a41dac3cc7c</anchor>
      <arglist>(cmd_ln_t *config)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_reinit</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a391679e7edb0de1e324aa302ee820287</anchor>
      <arglist>(ps_decoder_t *ps, cmd_ln_t *config)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT arg_t const *</type>
      <name>ps_args</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ad873ea6e20f91a3284963d5c34331c58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_decoder_t *</type>
      <name>ps_retain</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a8d912ce9a5fea61b7b10db1750531c34</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_free</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ad8fd9b79ae9f87703af3f4755b3ab567</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT cmd_ln_t *</type>
      <name>ps_get_config</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>abb9256d8f7217a1e929509090df1f35b</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT logmath_t *</type>
      <name>ps_get_logmath</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a249cfc383b7d9111a28b550945a606b5</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT fe_t *</type>
      <name>ps_get_fe</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a6237e2822756f230b88019b533a28724</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT feat_t *</type>
      <name>ps_get_feat</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a0d74d90f0db0782386487cc061a09218</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_mllr_t *</type>
      <name>ps_update_mllr</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a85e04bcbf5366f1bdad555dbb4d73d5d</anchor>
      <arglist>(ps_decoder_t *ps, ps_mllr_t *mllr)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_load_dict</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a824f46e51681d931b7e2706a86c3d86f</anchor>
      <arglist>(ps_decoder_t *ps, char const *dictfile, char const *fdictfile, char const *format)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_save_dict</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a5e278377cc57d921591ce95b980760d5</anchor>
      <arglist>(ps_decoder_t *ps, char const *dictfile, char const *format)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_add_word</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a5f3c4fcdbef34915c4e785ac9a1c6005</anchor>
      <arglist>(ps_decoder_t *ps, char const *word, char const *phones, int update)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char *</type>
      <name>ps_lookup_word</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ab0a242c645a68a553c2e7c62c96e4ce2</anchor>
      <arglist>(ps_decoder_t *ps, const char *word)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT long</type>
      <name>ps_decode_raw</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a43b378f9c42bcb19fdff0ebe71c25adb</anchor>
      <arglist>(ps_decoder_t *ps, FILE *rawfh, long maxsamps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_decode_senscr</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a466d1d718873e7b1cf0881e4f552a4a2</anchor>
      <arglist>(ps_decoder_t *ps, FILE *senfh)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_start_stream</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a89be3b2a8f83291a225db0bcd9ee65b2</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_start_utt</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ade3909b1c12c1b70afe284639e70cbff</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_process_raw</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a572ad08651b4caae820d178a12c8f95f</anchor>
      <arglist>(ps_decoder_t *ps, int16 const *data, size_t n_samples, int no_search, int full_utt)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_process_cep</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>adc0ab735d6460142126bc31a9e9d2ba0</anchor>
      <arglist>(ps_decoder_t *ps, mfcc_t **data, int n_frames, int no_search, int full_utt)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_get_n_frames</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>abb3527e41c2f4cd64dccbdbd5f812d1d</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_end_utt</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ab9339de730713b68cbd68a7f36dc8730</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_get_hyp</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ada74b12d71e9d4db5d959b94004ff812</anchor>
      <arglist>(ps_decoder_t *ps, int32 *out_best_score)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_get_hyp_final</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>af3431cf96766564d6ab2a3cc8e056860</anchor>
      <arglist>(ps_decoder_t *ps, int32 *out_is_final)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int32</type>
      <name>ps_get_prob</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ac8ac154482457740173caa1c0d699c49</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_lattice_t *</type>
      <name>ps_get_lattice</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ac7e8897e5eed452f284bef3ee53d2429</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_seg_t *</type>
      <name>ps_seg_iter</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a7653b0ec5249effa01f6d0cc1fd6cdf8</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_seg_t *</type>
      <name>ps_seg_next</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ae16ba181f654ffc9bfbbe861e9315f12</anchor>
      <arglist>(ps_seg_t *seg)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_seg_word</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a8a4fed34b58885627b53e99e90514169</anchor>
      <arglist>(ps_seg_t *seg)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_seg_frames</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a045a044726b816678965514f2ee7d8c7</anchor>
      <arglist>(ps_seg_t *seg, int *out_sf, int *out_ef)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int32</type>
      <name>ps_seg_prob</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>adfd45d93c3fc9de6b7be89d5417f6abb</anchor>
      <arglist>(ps_seg_t *seg, int32 *out_ascr, int32 *out_lscr, int32 *out_lback)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_seg_free</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ac02cea69794b0fbd17e6a4c5265b2255</anchor>
      <arglist>(ps_seg_t *seg)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_nbest_t *</type>
      <name>ps_nbest</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>af1dd2460e3a93f1ca305ab59f4f2aad5</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_nbest_t *</type>
      <name>ps_nbest_next</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a0942b8c0570009319a5be20ef1b52821</anchor>
      <arglist>(ps_nbest_t *nbest)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_nbest_hyp</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a250c5f72d3addd0d0254f3ceeaa17ace</anchor>
      <arglist>(ps_nbest_t *nbest, int32 *out_score)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_seg_t *</type>
      <name>ps_nbest_seg</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>ad0250c26806cc47568d9007f5bd41db6</anchor>
      <arglist>(ps_nbest_t *nbest)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_nbest_free</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a83379b2da95eebdf5070d29196a9b067</anchor>
      <arglist>(ps_nbest_t *nbest)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_get_utt_time</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>aac7070c934a2d03d0d5b34e19614360f</anchor>
      <arglist>(ps_decoder_t *ps, double *out_nspeech, double *out_ncpu, double *out_nwall)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_get_all_time</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a61fb92154c5c731cf4a24e0976263da0</anchor>
      <arglist>(ps_decoder_t *ps, double *out_nspeech, double *out_ncpu, double *out_nwall)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT uint8</type>
      <name>ps_get_in_speech</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a25a1d0e35f0c1ca8b018e1a27c0c1966</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_set_rawdata_size</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a4aef468e7959d9a7605f344d6759721c</anchor>
      <arglist>(ps_decoder_t *ps, int32 size)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_get_rawdata</name>
      <anchorfile>pocketsphinx_8h.html</anchorfile>
      <anchor>a0ea0a24f578b1eeff2fccdb0b61e5527</anchor>
      <arglist>(ps_decoder_t *ps, int16 **buffer, int32 *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_lattice.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/include/</path>
    <filename>ps__lattice_8h</filename>
    <member kind="typedef">
      <type>struct ps_lattice_s</type>
      <name>ps_lattice_t</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>af3c03aa650aafdaea0cbcfabe1a1c1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_latnode_s</type>
      <name>ps_latnode_t</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>ad570c45dd72ad9ea8d57391fd2cd1c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_latnode_s</type>
      <name>ps_latnode_iter_t</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>afd06dd0a4f63e1b1912c1a53b6a75de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_latlink_s</type>
      <name>ps_latlink_t</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a58ba3066b0b611f07c7ae57d77f8e776</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct latlink_list_s</type>
      <name>ps_latlink_iter_t</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a3a6312ccf7e1697399822c47a99c4645</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_lattice_t *</type>
      <name>ps_lattice_read</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a26f4a34c81b112109621b7ecacd57ee0</anchor>
      <arglist>(struct ps_decoder_s *ps, char const *file)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_lattice_t *</type>
      <name>ps_lattice_retain</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a9efc5f2836e2a0bd5d58326303516df5</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_lattice_free</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a3f90e846bde47cd1acdff165b92f5c22</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_lattice_write</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a3f2e2b88d0aa80346cc64d2b7934b863</anchor>
      <arglist>(ps_lattice_t *dag, char const *filename)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_lattice_write_htk</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>aefd25c0f49a0d70f999187a26fa2ff06</anchor>
      <arglist>(ps_lattice_t *dag, char const *filename)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT logmath_t *</type>
      <name>ps_lattice_get_logmath</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a5c9d9171c9846c46c107bfe41a9120cf</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latnode_iter_t *</type>
      <name>ps_latnode_iter</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>aaf073a0617c446aa5424513f7c1045b8</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latnode_iter_t *</type>
      <name>ps_latnode_iter_next</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a48aaf30b9396b38ccaf3a1b6e9225a01</anchor>
      <arglist>(ps_latnode_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_latnode_iter_free</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>ae9a6464b83d37bfa2ce570206eff6aad</anchor>
      <arglist>(ps_latnode_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latnode_t *</type>
      <name>ps_latnode_iter_node</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a591bd15a350284b938deb84242736acc</anchor>
      <arglist>(ps_latnode_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_latnode_times</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a42bd0fbfe8b0cab1a9a7e799a3fc30a2</anchor>
      <arglist>(ps_latnode_t *node, int16 *out_fef, int16 *out_lef)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_latnode_word</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a54888a8a7379c5c63613504b9a847ea3</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_latnode_baseword</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a0b3b6a843b49deab080bf1c6e99c875d</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_iter_t *</type>
      <name>ps_latnode_exits</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a13fb923cd41fae910457df2643e58738</anchor>
      <arglist>(ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_iter_t *</type>
      <name>ps_latnode_entries</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a16ad0cfb8d4b02f9cf90a8b52756a7f7</anchor>
      <arglist>(ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int32</type>
      <name>ps_latnode_prob</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a68253946c2405d7f9090de7530f33b9d</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *node, ps_latlink_t **out_link)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_iter_t *</type>
      <name>ps_latlink_iter_next</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>af737b31c2570d321c26a79b5002f2ba7</anchor>
      <arglist>(ps_latlink_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_latlink_iter_free</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>aa19aaa4a38a922ff28fe071f69b8272d</anchor>
      <arglist>(ps_latlink_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_latlink_iter_link</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>aec0e905415e724e6d6eed9b12c2f8584</anchor>
      <arglist>(ps_latlink_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_latlink_times</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>aef48bb18865b449e69316ed5959eae9f</anchor>
      <arglist>(ps_latlink_t *link, int16 *out_sf)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latnode_t *</type>
      <name>ps_latlink_nodes</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a7344aa4fdb94a3a0af47901cb77185ed</anchor>
      <arglist>(ps_latlink_t *link, ps_latnode_t **out_src)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_latlink_word</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a04c080f501883fe5d4c5500afb28e53a</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT char const *</type>
      <name>ps_latlink_baseword</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a392d98f9dc8fdae7f1092dced0738a43</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_latlink_pred</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a8f37d188bd1dff70293adebdb2453ab4</anchor>
      <arglist>(ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int32</type>
      <name>ps_latlink_prob</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>aa393fbcf215acc8116e18aac2847cc59</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link, int32 *out_ascr)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_lattice_link</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a4aaae70904361b23a78cdcb632c298c4</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *from, ps_latnode_t *to, int32 score, int32 ef)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_lattice_traverse_edges</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a997fce2eb1eaf316d463ddfb3d8395b8</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *start, ps_latnode_t *end)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_lattice_traverse_next</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a2682f3cbbb4e6aee040fbe570ca983a9</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *end)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_lattice_reverse_edges</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>ad712e99a75ab8e9eb2f636aac8d5e2cb</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *start, ps_latnode_t *end)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_lattice_reverse_next</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>ae94a8b82335f782370faa66bb4801c72</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *start)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_latlink_t *</type>
      <name>ps_lattice_bestpath</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>af19b8f0749af01d4874595e80fc612ba</anchor>
      <arglist>(ps_lattice_t *dag, ngram_model_t *lmset, float32 lwf, float32 ascale)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int32</type>
      <name>ps_lattice_posterior</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a8c5c6ef260ab006099ab34d09b5b1d06</anchor>
      <arglist>(ps_lattice_t *dag, ngram_model_t *lmset, float32 ascale)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int32</type>
      <name>ps_lattice_posterior_prune</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a30d83a5fd158d2acaa5107be7a09ed09</anchor>
      <arglist>(ps_lattice_t *dag, int32 beam)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_lattice_n_frames</name>
      <anchorfile>ps__lattice_8h.html</anchorfile>
      <anchor>a44a196a35a8aeb044251c6c152034c90</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_mllr.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/include/</path>
    <filename>ps__mllr_8h</filename>
    <member kind="typedef">
      <type>struct ps_mllr_s</type>
      <name>ps_mllr_t</name>
      <anchorfile>ps__mllr_8h.html</anchorfile>
      <anchor>ad4b6bf4c3cb6a671f79f1d709857d5b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_mllr_t *</type>
      <name>ps_mllr_read</name>
      <anchorfile>ps__mllr_8h.html</anchorfile>
      <anchor>a05d268b1d79a1be2ae96093c96aad79d</anchor>
      <arglist>(char const *file)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_mllr_t *</type>
      <name>ps_mllr_retain</name>
      <anchorfile>ps__mllr_8h.html</anchorfile>
      <anchor>a2f40deff6976bf03a845aa474494edfb</anchor>
      <arglist>(ps_mllr_t *mllr)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_mllr_free</name>
      <anchorfile>ps__mllr_8h.html</anchorfile>
      <anchor>ae56a8c52dd7513b1883536f2a729e1d0</anchor>
      <arglist>(ps_mllr_t *mllr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_search.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/include/</path>
    <filename>ps__search_8h</filename>
    <member kind="typedef">
      <type>struct ps_search_iter_s</type>
      <name>ps_search_iter_t</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>ae3fe90e6eb1fa74e30783e20468280c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_search</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a4072a93e8ce9a4229d17c9bce6ad1083</anchor>
      <arglist>(ps_decoder_t *ps, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT const char *</type>
      <name>ps_get_search</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>ae2b728c9b05e733605d33fa19472ef8e</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_unset_search</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a300fd82f4b1621663a0d870da61497b0</anchor>
      <arglist>(ps_decoder_t *ps, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_search_iter_t *</type>
      <name>ps_search_iter</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a661c72707484ec2528319c9f6976fb7c</anchor>
      <arglist>(ps_decoder_t *ps)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ps_search_iter_t *</type>
      <name>ps_search_iter_next</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a4bd6d4f2b19be2351987c11694eaec9a</anchor>
      <arglist>(ps_search_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT const char *</type>
      <name>ps_search_iter_val</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a86d9b5968b9fe317a6335345fb9a2dd0</anchor>
      <arglist>(ps_search_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT void</type>
      <name>ps_search_iter_free</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a41e404de59cbd7bfc32f2da3ec7e6137</anchor>
      <arglist>(ps_search_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT ngram_model_t *</type>
      <name>ps_get_lm</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>af55ad6ec21a7e67845f3c74149a34b1a</anchor>
      <arglist>(ps_decoder_t *ps, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_lm</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>aa76b495c63c665a21a49d7cb51c66d74</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, ngram_model_t *lm)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_lm_file</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a78372effd2aa6bddf7b71d6e2e9c3776</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, const char *path)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT fsg_model_t *</type>
      <name>ps_get_fsg</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a3a15f664d2d004d610e999adb4339dbe</anchor>
      <arglist>(ps_decoder_t *ps, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_fsg</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>afde3539cbbf8c67cb98a02ca779055af</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, fsg_model_t *fsg)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_jsgf_file</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>ae845bbf6a3e5b859e833f6cc0d1ba55f</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, const char *path)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_jsgf_string</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a3c51b0eab27ac9df20ee54e1d87b3ca3</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, const char *jsgf_string)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT const char *</type>
      <name>ps_get_kws</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a8e2e66391b7c1e6cd1aac24d635ed3ea</anchor>
      <arglist>(ps_decoder_t *ps, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_kws</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a0780564ad3f12179b0291ac87774cea1</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, const char *keyfile)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_keyphrase</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a7965534ad5e48f0b46f326d7da186a2a</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, const char *keyphrase)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_allphone</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>aa38c96913dd3a06cbab54ce834af5141</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, ngram_model_t *lm)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>ps_set_allphone_file</name>
      <anchorfile>ps__search_8h.html</anchorfile>
      <anchor>a66bebfccb8ece9e7bff411329f25ee5e</anchor>
      <arglist>(ps_decoder_t *ps, const char *name, const char *path)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>acmod.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>acmod_8c</filename>
    <includes id="acmod_8h" name="acmod.h" local="yes" imported="no">acmod.h</includes>
    <includes id="ptm__mgau_8h" name="ptm_mgau.h" local="yes" imported="no">ptm_mgau.h</includes>
    <includes id="ms__mgau_8h" name="ms_mgau.h" local="yes" imported="no">ms_mgau.h</includes>
    <member kind="function">
      <type>acmod_t *</type>
      <name>acmod_init</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a6f32b623cbc3d15a1e3c5d09aba7dabf</anchor>
      <arglist>(cmd_ln_t *config, logmath_t *lmath, fe_t *fe, feat_t *fcb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_free</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a1e3345e8ef8b060fc04e88f86e6afa4a</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>ps_mllr_t *</type>
      <name>acmod_update_mllr</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a4205b92d38db562577eafc3c432593ab</anchor>
      <arglist>(acmod_t *acmod, ps_mllr_t *mllr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_write_senfh_header</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>ac561943e80e1478d7153d3c6320d57d9</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_senfh</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>ab35cb48cdf326a3fb5223589d73ae0ce</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_mfcfh</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a5753caa516c75bdc74b385d7aa66a97c</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_rawfh</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a6979441ae866ea846ef41f8471b105a0</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_grow</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a1555dac8fa27f644d709c5c89bbfa881</anchor>
      <arglist>(acmod_t *acmod, int grow_feat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_start_utt</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>aa3a5a89f76338e3e1bcfa7a2cecc5845</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_end_utt</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a262372bdd6063f61e64b5417a449c1a9</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_process_raw</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a23e63c8833e6128ae248e183d42f9b2b</anchor>
      <arglist>(acmod_t *acmod, int16 const **inout_raw, size_t *inout_n_samps, int full_utt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_process_cep</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a9464f7708a361171469d613d401619fe</anchor>
      <arglist>(acmod_t *acmod, mfcc_t ***inout_cep, int *inout_n_frames, int full_utt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_process_feat</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>ab16e414d5a07519d7b462c32377e8a47</anchor>
      <arglist>(acmod_t *acmod, mfcc_t **feat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_insenfh</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a58bd6038bec5d3901ac2057cacdd778a</anchor>
      <arglist>(acmod_t *acmod, FILE *senfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_rewind</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a7b5f0b6edac2985b9b56d630cd705b99</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_advance</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a338971ea0aa27fb4796d224e4767642b</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_write_scores</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a66d1f73cd1d975ec0da9de00b80b36e2</anchor>
      <arglist>(acmod_t *acmod, int n_active, uint8 const *active, int16 const *senscr, FILE *senfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_read_scores</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a5c193164be78ad42944b7fb1be6299a2</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>mfcc_t **</type>
      <name>acmod_get_frame</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a91c63cce3b20f231aa483bf054eca3c6</anchor>
      <arglist>(acmod_t *acmod, int *inout_frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>int16 const *</type>
      <name>acmod_score</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>acd78e9bae06724df9c53f844d90c1c8a</anchor>
      <arglist>(acmod_t *acmod, int *inout_frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_best_score</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a3249e1ce0c8155dc23f332f97ddd493b</anchor>
      <arglist>(acmod_t *acmod, int *out_best_senid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_clear_active</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>aed43f033f434e34fd90c975909d81cb2</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_activate_hmm</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a2a7f67d462279b2bc4774c7967ae61c7</anchor>
      <arglist>(acmod_t *acmod, hmm_t *hmm)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>acmod_flags2list</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>ad12224c741f7ea76faf88a29537f83dd</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>acmod_stream_offset</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a8b52ce1289cc84deda1cf98b4cebbca2</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_start_stream</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>ae065d2fafc704177e7537988c9d3b5c1</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_set_rawdata_size</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a8c8dce7790c4486d1ee1b20d810805bf</anchor>
      <arglist>(acmod_t *acmod, int32 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_get_rawdata</name>
      <anchorfile>acmod_8c.html</anchorfile>
      <anchor>a0804fc79c26de167a95ece1189effbec</anchor>
      <arglist>(acmod_t *acmod, int16 **buffer, int32 *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>acmod.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>acmod_8h</filename>
    <includes id="ps__mllr_8h" name="ps_mllr.h" local="yes" imported="no">ps_mllr.h</includes>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <includes id="tmat_8h" name="tmat.h" local="yes" imported="no">tmat.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <class kind="struct">ps_mllr_s</class>
    <class kind="struct">ps_mgaufuncs_s</class>
    <class kind="struct">ps_mgau_s</class>
    <class kind="struct">acmod_s</class>
    <member kind="define">
      <type>#define</type>
      <name>SENSCR_DUMMY</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ace94548e8c9429394d130e2f9921d59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>acmod_activate_sen</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a2ad4e2308e0e87230833466844bbccbc</anchor>
      <arglist>(acmod, sen)</arglist>
    </member>
    <member kind="typedef">
      <type>enum acmod_state_e</type>
      <name>acmod_state_t</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a702be741f97505cdddf04a4448ab1ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_mgau_s</type>
      <name>ps_mgau_t</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ab7a75abad7044b2ab494823d2ae8bbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>acmod_state_e</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6a74b084234e0e7d5e72161545c5040b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACMOD_IDLE</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6a74b084234e0e7d5e72161545c5040ba09f7964816ae844c445acd4cf3e33253</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACMOD_STARTED</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6a74b084234e0e7d5e72161545c5040ba71f39dbe81403dbb045f4312d1bbaae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACMOD_PROCESSING</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6a74b084234e0e7d5e72161545c5040ba1ed8df720ee7006ebaada8c75371d94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACMOD_ENDED</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6a74b084234e0e7d5e72161545c5040ba3d936d27ce644db26a862830f3b6d188</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>acmod_t *</type>
      <name>acmod_init</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6f32b623cbc3d15a1e3c5d09aba7dabf</anchor>
      <arglist>(cmd_ln_t *config, logmath_t *lmath, fe_t *fe, feat_t *fcb)</arglist>
    </member>
    <member kind="function">
      <type>ps_mllr_t *</type>
      <name>acmod_update_mllr</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a4205b92d38db562577eafc3c432593ab</anchor>
      <arglist>(acmod_t *acmod, ps_mllr_t *mllr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_senfh</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a8e7bd5781f5232395f29fd0cd7f56004</anchor>
      <arglist>(acmod_t *acmod, FILE *senfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_mfcfh</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a5753caa516c75bdc74b385d7aa66a97c</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_rawfh</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a6979441ae866ea846ef41f8471b105a0</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_free</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a1e3345e8ef8b060fc04e88f86e6afa4a</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_start_utt</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>aa3a5a89f76338e3e1bcfa7a2cecc5845</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_end_utt</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a262372bdd6063f61e64b5417a449c1a9</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_rewind</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a7b5f0b6edac2985b9b56d630cd705b99</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_advance</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a338971ea0aa27fb4796d224e4767642b</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_grow</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a1555dac8fa27f644d709c5c89bbfa881</anchor>
      <arglist>(acmod_t *acmod, int grow_feat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_process_raw</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a23e63c8833e6128ae248e183d42f9b2b</anchor>
      <arglist>(acmod_t *acmod, int16 const **inout_raw, size_t *inout_n_samps, int full_utt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_process_cep</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a9464f7708a361171469d613d401619fe</anchor>
      <arglist>(acmod_t *acmod, mfcc_t ***inout_cep, int *inout_n_frames, int full_utt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_process_feat</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ab16e414d5a07519d7b462c32377e8a47</anchor>
      <arglist>(acmod_t *acmod, mfcc_t **feat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_set_insenfh</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ad8da89ae642a4a9a5e57390e9ce387c5</anchor>
      <arglist>(acmod_t *acmod, FILE *insenfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_read_scores</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a5c193164be78ad42944b7fb1be6299a2</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>mfcc_t **</type>
      <name>acmod_get_frame</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a91c63cce3b20f231aa483bf054eca3c6</anchor>
      <arglist>(acmod_t *acmod, int *inout_frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>int16 const *</type>
      <name>acmod_score</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>acd78e9bae06724df9c53f844d90c1c8a</anchor>
      <arglist>(acmod_t *acmod, int *inout_frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_write_senfh_header</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ac561943e80e1478d7153d3c6320d57d9</anchor>
      <arglist>(acmod_t *acmod, FILE *logfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_write_scores</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a66d1f73cd1d975ec0da9de00b80b36e2</anchor>
      <arglist>(acmod_t *acmod, int n_active, uint8 const *active, int16 const *senscr, FILE *senfh)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>acmod_best_score</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a3249e1ce0c8155dc23f332f97ddd493b</anchor>
      <arglist>(acmod_t *acmod, int *out_best_senid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_clear_active</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>aed43f033f434e34fd90c975909d81cb2</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_activate_hmm</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a2a7f67d462279b2bc4774c7967ae61c7</anchor>
      <arglist>(acmod_t *acmod, hmm_t *hmm)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>acmod_flags2list</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ad12224c741f7ea76faf88a29537f83dd</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>acmod_stream_offset</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a8b52ce1289cc84deda1cf98b4cebbca2</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_start_stream</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>ae065d2fafc704177e7537988c9d3b5c1</anchor>
      <arglist>(acmod_t *acmod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_set_rawdata_size</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a8c8dce7790c4486d1ee1b20d810805bf</anchor>
      <arglist>(acmod_t *acmod, int32 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acmod_get_rawdata</name>
      <anchorfile>acmod_8h.html</anchorfile>
      <anchor>a0804fc79c26de167a95ece1189effbec</anchor>
      <arglist>(acmod_t *acmod, int16 **buffer, int32 *size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bin_mdef.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>bin__mdef_8h</filename>
    <includes id="mdef_8h" name="mdef.h" local="yes" imported="no">mdef.h</includes>
    <class kind="struct">mdef_entry_s</class>
    <class kind="struct">cd_tree_s</class>
    <class kind="struct">bin_mdef_s</class>
    <member kind="define">
      <type>#define</type>
      <name>BAD_SSID</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a8ee283c316e9f4aa8e6d18c1d44026bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_SENID</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>ab6c771eca798ab8c94e0933a1f8daafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct mdef_entry_s</type>
      <name>mdef_entry_t</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a424238fea86ab5ecfc89ca0cc885ad38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct cd_tree_s</type>
      <name>cd_tree_t</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a8cf08e6d9d721c8cf5911f2c3f722645</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct bin_mdef_s</type>
      <name>bin_mdef_t</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a269082d84ae254593b79f1eafe9b2d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT bin_mdef_t *</type>
      <name>bin_mdef_read</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a3930ae6b3309a615335585db4b46306f</anchor>
      <arglist>(cmd_ln_t *config, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT bin_mdef_t *</type>
      <name>bin_mdef_read_text</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a00dab94d45d1adc5f7778fd1e2398031</anchor>
      <arglist>(cmd_ln_t *config, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>bin_mdef_write</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a982b8e598afed47805fab1509e8fc4bb</anchor>
      <arglist>(bin_mdef_t *m, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>bin_mdef_write_text</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>af89d79226df33947019efcfe7377d586</anchor>
      <arglist>(bin_mdef_t *m, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>bin_mdef_t *</type>
      <name>bin_mdef_retain</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a297167f03662a9cbd650743d3f4cf8f8</anchor>
      <arglist>(bin_mdef_t *m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bin_mdef_free</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>afe7ed87e2a2d22b228c14ed8225e4b2c</anchor>
      <arglist>(bin_mdef_t *m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bin_mdef_ciphone_id</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>af592f710731474b77166a29530716672</anchor>
      <arglist>(bin_mdef_t *m, const char *ciphone)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bin_mdef_ciphone_id_nocase</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>af437f39a8a9b52dd3187f7f0fc098cab</anchor>
      <arglist>(bin_mdef_t *m, const char *ciphone)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>bin_mdef_ciphone_str</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a9498ffff0caf3965060b8a549348be9b</anchor>
      <arglist>(bin_mdef_t *m, int32 ci)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bin_mdef_phone_id</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a99cd766df3a6a74eab9e316586189d54</anchor>
      <arglist>(bin_mdef_t *m, int32 b, int32 l, int32 r, int32 pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bin_mdef_phone_str</name>
      <anchorfile>bin__mdef_8h.html</anchorfile>
      <anchor>a35d0676dd56e11508c62e84947901503</anchor>
      <arglist>(bin_mdef_t *m, int pid, char *buf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dict.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>dict_8h</filename>
    <includes id="s3types_8h" name="s3types.h" local="yes" imported="no">s3types.h</includes>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <class kind="struct">dictword_t</class>
    <class kind="struct">dict_t</class>
    <member kind="define">
      <type>#define</type>
      <name>dict_size</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a361b948b42f9cfdf5c7fa9dfc8a71a94</anchor>
      <arglist>(d)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dict_num_real_words</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a529d92f69f39e1f8c4a94e60a9509201</anchor>
      <arglist>(d)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dict_pron</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a8785ab6264a5c6cf0b8da6bf79a46de4</anchor>
      <arglist>(d, w, p)</arglist>
    </member>
    <member kind="function">
      <type>dict_t *</type>
      <name>dict_init</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a05d8dac3e5fe5399ccb8bf7776e203e2</anchor>
      <arglist>(cmd_ln_t *config, bin_mdef_t *mdef)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict_write</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a4bfa8e3b7b9ff30165375d1c97bb04b8</anchor>
      <arglist>(dict_t *dict, char const *filename, char const *format)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT s3wid_t</type>
      <name>dict_wordid</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>ad3729eb1a02a9a321e17933f7e90c80e</anchor>
      <arglist>(dict_t *d, const char *word)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict_filler_word</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>aa5cade4dc6464c620718b86344540aff</anchor>
      <arglist>(dict_t *d, s3wid_t w)</arglist>
    </member>
    <member kind="function">
      <type>POCKETSPHINX_EXPORT int</type>
      <name>dict_real_word</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>ad2eba4ca92dd1a3721608e003d95d8c1</anchor>
      <arglist>(dict_t *d, s3wid_t w)</arglist>
    </member>
    <member kind="function">
      <type>s3wid_t</type>
      <name>dict_add_word</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a24888ac8e24259e553c43c4655b38432</anchor>
      <arglist>(dict_t *d, char const *word, s3cipid_t const *p, int32 np)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>dict_ciphone_str</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a8587d077f5303554df0e26a181bfb0bf</anchor>
      <arglist>(dict_t *d, s3wid_t wid, int32 pos)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>dict_word2basestr</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a3a128531ae9c077be9882119ed05fe3a</anchor>
      <arglist>(char *word)</arglist>
    </member>
    <member kind="function">
      <type>dict_t *</type>
      <name>dict_retain</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a0edf70be186e8940af9d21243083cb8b</anchor>
      <arglist>(dict_t *d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict_free</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a51ee6c067decce8dbc182f95f7b33e91</anchor>
      <arglist>(dict_t *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dict_report</name>
      <anchorfile>dict_8h.html</anchorfile>
      <anchor>a41cca433a75fd2663bee115296639666</anchor>
      <arglist>(dict_t *d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dict2pid.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>dict2pid_8c</filename>
    <includes id="dict2pid_8h" name="dict2pid.h" local="yes" imported="no">dict2pid.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <member kind="function">
      <type>void</type>
      <name>compress_table</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>af437f4d3a798db6828c42df69256f762</anchor>
      <arglist>(s3ssid_t *uncomp_tab, s3ssid_t *com_tab, s3cipid_t *ci_map, int32 n_ci)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>get_rc_nssid</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>aa77890032a2c171ed9944b1d81fd5cb0</anchor>
      <arglist>(dict2pid_t *d2p, s3wid_t w)</arglist>
    </member>
    <member kind="function">
      <type>s3cipid_t *</type>
      <name>dict2pid_get_rcmap</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>a34aca68c98588e7e1a3f0e6d0800e1bf</anchor>
      <arglist>(dict2pid_t *d2p, s3wid_t w)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict2pid_add_word</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>aa94120dcea4b17807576e29484b8a008</anchor>
      <arglist>(dict2pid_t *d2p, int32 wid)</arglist>
    </member>
    <member kind="function">
      <type>s3ssid_t</type>
      <name>dict2pid_internal</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>a720e15c92ef6930e722bccb014e11b7b</anchor>
      <arglist>(dict2pid_t *d2p, int32 wid, int pos)</arglist>
    </member>
    <member kind="function">
      <type>dict2pid_t *</type>
      <name>dict2pid_build</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>addd541f2275b79e284575fb11b7986e1</anchor>
      <arglist>(bin_mdef_t *mdef, dict_t *dict)</arglist>
    </member>
    <member kind="function">
      <type>dict2pid_t *</type>
      <name>dict2pid_retain</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>a85a8de8009445e1129766186ddaa949a</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict2pid_free</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>a293253226550e812c448ae096b364d0d</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dict2pid_report</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>a36c486f1ac64991c95c4c0ef75ceaa46</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dict2pid_dump</name>
      <anchorfile>dict2pid_8c.html</anchorfile>
      <anchor>a32320cd5d020620ac913b46bafeb5cae</anchor>
      <arglist>(FILE *fp, dict2pid_t *d2p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dict2pid.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>dict2pid_8h</filename>
    <includes id="s3types_8h" name="s3types.h" local="yes" imported="no">s3types.h</includes>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <includes id="dict_8h" name="dict.h" local="yes" imported="no">dict.h</includes>
    <class kind="struct">xwdssid_t</class>
    <class kind="struct">dict2pid_t</class>
    <member kind="define">
      <type>#define</type>
      <name>dict2pid_rssid</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a453a98931cad95a19b4c4ab770fc79f1</anchor>
      <arglist>(d, ci, lc)</arglist>
    </member>
    <member kind="function">
      <type>dict2pid_t *</type>
      <name>dict2pid_build</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>addd541f2275b79e284575fb11b7986e1</anchor>
      <arglist>(bin_mdef_t *mdef, dict_t *dict)</arglist>
    </member>
    <member kind="function">
      <type>dict2pid_t *</type>
      <name>dict2pid_retain</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a85a8de8009445e1129766186ddaa949a</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict2pid_free</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a293253226550e812c448ae096b364d0d</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>s3ssid_t</type>
      <name>dict2pid_internal</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a720e15c92ef6930e722bccb014e11b7b</anchor>
      <arglist>(dict2pid_t *d2p, int32 wid, int pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dict2pid_add_word</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>aa94120dcea4b17807576e29484b8a008</anchor>
      <arglist>(dict2pid_t *d2p, int32 wid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dict2pid_dump</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a32320cd5d020620ac913b46bafeb5cae</anchor>
      <arglist>(FILE *fp, dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dict2pid_report</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a36c486f1ac64991c95c4c0ef75ceaa46</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>get_rc_nssid</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>aa77890032a2c171ed9944b1d81fd5cb0</anchor>
      <arglist>(dict2pid_t *d2p, s3wid_t w)</arglist>
    </member>
    <member kind="function">
      <type>s3cipid_t *</type>
      <name>dict2pid_get_rcmap</name>
      <anchorfile>dict2pid_8h.html</anchorfile>
      <anchor>a34aca68c98588e7e1a3f0e6d0800e1bf</anchor>
      <arglist>(dict2pid_t *d2p, s3wid_t w)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fsg_lextree.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>fsg__lextree_8c</filename>
    <class kind="struct">fsg_glist_linklist_t</class>
    <member kind="function">
      <type>fsg_lextree_t *</type>
      <name>fsg_lextree_init</name>
      <anchorfile>fsg__lextree_8c.html</anchorfile>
      <anchor>a8c47b2983b3952886a4c889a711e1d65</anchor>
      <arglist>(fsg_model_t *fsg, dict_t *dict, dict2pid_t *d2p, bin_mdef_t *mdef, hmm_context_t *ctx, int32 wip, int32 pip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fsg_lextree_dump</name>
      <anchorfile>fsg__lextree_8c.html</anchorfile>
      <anchor>a5c267f09b8dc214dd7deb41232d84726</anchor>
      <arglist>(fsg_lextree_t *lextree, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fsg_lextree_free</name>
      <anchorfile>fsg__lextree_8c.html</anchorfile>
      <anchor>a2f1ab965df1214f4d0e2008833aa20da</anchor>
      <arglist>(fsg_lextree_t *lextree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fsg_pnode_add_all_ctxt</name>
      <anchorfile>fsg__lextree_8c.html</anchorfile>
      <anchor>a98fd94d024df264025e30c909c82cb56</anchor>
      <arglist>(fsg_pnode_ctxt_t *ctxt)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>fsg_pnode_ctxt_sub_generic</name>
      <anchorfile>fsg__lextree_8c.html</anchorfile>
      <anchor>aa9ff81fb4f5d873188fcf3be3f5fc18e</anchor>
      <arglist>(fsg_pnode_ctxt_t *src, fsg_pnode_ctxt_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fsg_psubtree_pnode_deactivate</name>
      <anchorfile>fsg__lextree_8c.html</anchorfile>
      <anchor>a6dc55ff3873855fb7b2c0390aa072516</anchor>
      <arglist>(fsg_pnode_t *pnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hmm.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>hmm_8h</filename>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <class kind="struct">hmm_context_s</class>
    <class kind="struct">hmm_s</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_N_FRAMES</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a5b6b9157cfaaec312508eaed602f0698</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SENSCR_SHIFT</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>af94da16e3e5b550b9be05b0f07402cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WORST_SCORE</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a833f100ee293ad0f1c03f2a5ef9be77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TMAT_WORST_SCORE</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a9b38399b544dbb93bc9b7d0094e91db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BETTER_THAN</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a2874ab52613ff781c96f570ec0eb0d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WORSE_THAN</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>aa930fb8fb6fce7f34bcf4018b81d7066</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_MAX_NSTATE</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a1eb055ab0e55008f27d78e7b07a55a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>hmm_context</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a3756f3c269d928924bf783f57c90adef</anchor>
      <arglist>(h)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>hmm_context_set_senscore</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a44d0b5515cb269bf9b95f62aada18cbb</anchor>
      <arglist>(ctx, senscr)</arglist>
    </member>
    <member kind="typedef">
      <type>int32</type>
      <name>frame_idx_t</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>ac9c9bae34d05f32736ae1743316737ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>hmm_context_t *</type>
      <name>hmm_context_init</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a4d6e2799cbe290112e8517adcab1b038</anchor>
      <arglist>(int32 n_emit_state, uint8 **const *tp, int16 const *senscore, uint16 *const *sseq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_context_free</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>ab66534ad7970d49527f1b2a1e76bb05e</anchor>
      <arglist>(hmm_context_t *ctx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_init</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>aa911ae0d1c0eba562692fbeebca90d78</anchor>
      <arglist>(hmm_context_t *ctx, hmm_t *hmm, int mpx, int ssid, int tmatid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_deinit</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a7440ced1649225beb6816bf62481e08b</anchor>
      <arglist>(hmm_t *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_clear</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>af4c0cefb23087a0b1731b34048cfdaf9</anchor>
      <arglist>(hmm_t *h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_clear_scores</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a9561d7ffa1e61c99de2d2b900774152f</anchor>
      <arglist>(hmm_t *h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_normalize</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a0438bc7672ff9200274ffe7b5051eb92</anchor>
      <arglist>(hmm_t *h, int32 bestscr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_enter</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a7285d01d533996d750c78e0d96042716</anchor>
      <arglist>(hmm_t *h, int32 score, int32 histid, int frame)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>hmm_vit_eval</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a24ed030b10cb07e12173b45d3800db4b</anchor>
      <arglist>(hmm_t *hmm)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>hmm_dump_vit_eval</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a84947383bf7940f799918c37ece85cf0</anchor>
      <arglist>(hmm_t *hmm, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_dump</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>ad747fa967b5e414ad48fdffb9b767baf</anchor>
      <arglist>(hmm_t *h, FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdef.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>mdef_8h</filename>
    <class kind="struct">ciphone_t</class>
    <class kind="struct">phone_t</class>
    <class kind="struct">ph_rc_s</class>
    <class kind="struct">ph_lc_s</class>
    <class kind="struct">mdef_t</class>
    <member kind="define">
      <type>#define</type>
      <name>N_WORD_POSN</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>ac271413770c3e95b993b856967b61487</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WPOS_NAME</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a89ef0442ded2ff90176ba6d02563923d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S3_SILENCE_CIPHONE</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a87b279af2566a60666495e16d09a8aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>mdef_is_fillerphone</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>aa75eb2e79e7b9a3c8f4ab3722b997b83</anchor>
      <arglist>(m, p)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>word_posn_t</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a71b2bcae7b6e79bad584cc5500b20e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WORD_POSN_INTERNAL</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a71b2bcae7b6e79bad584cc5500b20e8fa034bedf5019d94429746634bc0d37464</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WORD_POSN_BEGIN</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a71b2bcae7b6e79bad584cc5500b20e8fa8ca058a8d25d38d074e028460833c8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WORD_POSN_END</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a71b2bcae7b6e79bad584cc5500b20e8fa85b62e42f20399f933b33099290989c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WORD_POSN_SINGLE</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a71b2bcae7b6e79bad584cc5500b20e8fa34f808e43d8f6e9312054f34a8bd74ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WORD_POSN_UNDEFINED</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a71b2bcae7b6e79bad584cc5500b20e8fa6b0544f6dcc29f8f4f46de22f28ff9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>mdef_t *</type>
      <name>mdef_init</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a8f2fb119373324175bf82ad2c403e2be</anchor>
      <arglist>(char *mdeffile, int breport)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mdef_ciphone_id</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>aa2c122222a6c9826f16df4644eb6cfd1</anchor>
      <arglist>(mdef_t *m, char *ciphone)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>mdef_ciphone_str</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a445bee881e1af552b1bc33c3d4d3e6f3</anchor>
      <arglist>(mdef_t *m, int ci)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mdef_is_ciphone</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a9e3f89c3fe09a235beafe056be18c6ce</anchor>
      <arglist>(mdef_t *m, int p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mdef_is_cisenone</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>ab6d74ce89ba1f174789a8c5a4add9946</anchor>
      <arglist>(mdef_t *m, int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mdef_phone_id</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a34cafc86f7db4e18389556c8eaca5f02</anchor>
      <arglist>(mdef_t *m, int b, int l, int r, word_posn_t pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mdef_phone_str</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a2e23174c9285fbb98f60670644c89712</anchor>
      <arglist>(mdef_t *m, int pid, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mdef_hmm_cmp</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a49424df076ebbabc5c8e34bd9db54616</anchor>
      <arglist>(mdef_t *m, int p1, int p2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mdef_report</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>ad6748527975b2653049b80dabfaa69f1</anchor>
      <arglist>(mdef_t *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mdef_free_recursive_lc</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a237854c5a842ee89a099209014a68eba</anchor>
      <arglist>(ph_lc_t *lc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mdef_free_recursive_rc</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>ab8db39894feff4c891bc062eae5ea6dd</anchor>
      <arglist>(ph_rc_t *rc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mdef_free</name>
      <anchorfile>mdef_8h.html</anchorfile>
      <anchor>a38d2a4b150ecb10a3c80f3504cfdc63d</anchor>
      <arglist>(mdef_t *mdef)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ms_gauden.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ms__gauden_8h</filename>
    <includes id="pocketsphinx__internal_8h" name="pocketsphinx_internal.h" local="yes" imported="no">pocketsphinx_internal.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <class kind="struct">gauden_dist_t</class>
    <class kind="struct">gauden_t</class>
    <member kind="function">
      <type>gauden_t *</type>
      <name>gauden_init</name>
      <anchorfile>ms__gauden_8h.html</anchorfile>
      <anchor>ae4587b0aeb39fd926622a422969ecebc</anchor>
      <arglist>(char const *meanfile, char const *varfile, float32 varfloor, logmath_t *lmath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gauden_free</name>
      <anchorfile>ms__gauden_8h.html</anchorfile>
      <anchor>a0306e088fa33894ca40182d2392ffe4d</anchor>
      <arglist>(gauden_t *g)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>gauden_mllr_transform</name>
      <anchorfile>ms__gauden_8h.html</anchorfile>
      <anchor>ab640722f2c2b1e8bc6e883d9b5b72494</anchor>
      <arglist>(gauden_t *s, ps_mllr_t *mllr, cmd_ln_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>gauden_dist</name>
      <anchorfile>ms__gauden_8h.html</anchorfile>
      <anchor>a68cd25af0a2faf05eacd17afd5407ea4</anchor>
      <arglist>(gauden_t *g, int mgau, int n_top, mfcc_t **obs, gauden_dist_t **out_dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gauden_dump</name>
      <anchorfile>ms__gauden_8h.html</anchorfile>
      <anchor>a8efb2c45fd5ac2b34bbff067a15fe6f5</anchor>
      <arglist>(const gauden_t *g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gauden_dump_ind</name>
      <anchorfile>ms__gauden_8h.html</anchorfile>
      <anchor>a9489d75ad3dbdc2bb413b43a17f48188</anchor>
      <arglist>(const gauden_t *g, int senidx)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ms_mgau.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ms__mgau_8h</filename>
    <includes id="acmod_8h" name="acmod.h" local="yes" imported="no">acmod.h</includes>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <includes id="ms__gauden_8h" name="ms_gauden.h" local="yes" imported="no">ms_gauden.h</includes>
    <includes id="ms__senone_8h" name="ms_senone.h" local="yes" imported="no">ms_senone.h</includes>
    <class kind="struct">ms_mgau_model_t</class>
  </compound>
  <compound kind="file">
    <name>ms_senone.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ms__senone_8h</filename>
    <includes id="ms__gauden_8h" name="ms_gauden.h" local="yes" imported="no">ms_gauden.h</includes>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <class kind="struct">senone_t</class>
    <member kind="typedef">
      <type>uint8</type>
      <name>senprob_t</name>
      <anchorfile>ms__senone_8h.html</anchorfile>
      <anchor>af5f6b21f81649ae1d6ce57f5564d3be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>senone_t *</type>
      <name>senone_init</name>
      <anchorfile>ms__senone_8h.html</anchorfile>
      <anchor>a757e0e72a8e5db3c69611f83143b8887</anchor>
      <arglist>(gauden_t *g, char const *mixwfile, char const *mgau_mapfile, float32 mixwfloor, logmath_t *lmath, bin_mdef_t *mdef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>senone_free</name>
      <anchorfile>ms__senone_8h.html</anchorfile>
      <anchor>a86881df5bbbd615e2cd8171e3b086fa6</anchor>
      <arglist>(senone_t *s)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>senone_eval</name>
      <anchorfile>ms__senone_8h.html</anchorfile>
      <anchor>a0ef3f343c1f7a9504a1ceda2d7383000</anchor>
      <arglist>(senone_t *s, int id, gauden_dist_t **dist, int n_top)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_search.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ngram__search_8c</filename>
    <includes id="pocketsphinx__internal_8h" name="pocketsphinx_internal.h" local="yes" imported="no">pocketsphinx_internal.h</includes>
    <includes id="ps__lattice__internal_8h" name="ps_lattice_internal.h" local="yes" imported="no">ps_lattice_internal.h</includes>
    <includes id="ngram__search_8h" name="ngram_search.h" local="yes" imported="no">ngram_search.h</includes>
    <includes id="ngram__search__fwdtree_8h" name="ngram_search_fwdtree.h" local="yes" imported="no">ngram_search_fwdtree.h</includes>
    <includes id="ngram__search__fwdflat_8h" name="ngram_search_fwdflat.h" local="yes" imported="no">ngram_search_fwdflat.h</includes>
    <member kind="function">
      <type>ps_search_t *</type>
      <name>ngram_search_init</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>a04f80b377c847026254fb85596e2f43c</anchor>
      <arglist>(const char *name, ngram_model_t *lm, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_free</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>aeaf140dc2bbeaa5c274f73480b5328f3</anchor>
      <arglist>(ps_search_t *search)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_search_mark_bptable</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>a7772e007b7d7fdf437c87aeb08b59c71</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_save_bp</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>ae36649be6f5a2190e759e7ed13bd7b6b</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx, int32 w, int32 score, int32 path, int32 rc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_search_find_exit</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>ac6a01bb08e7b8d1deb39763a98148cb0</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx, int32 *out_best_score, int32 *out_is_final)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ngram_search_bp_hyp</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>aee393a136f8f7e8b98161e6eed7b1dd9</anchor>
      <arglist>(ngram_search_t *ngs, int bpidx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_alloc_all_rc</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>a1ddcc1a9cb3e164ceb2140097ed23a3e</anchor>
      <arglist>(ngram_search_t *ngs, int32 w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_free_all_rc</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>a15477192481dffcb29e9c4167eff6c3c</anchor>
      <arglist>(ngram_search_t *ngs, int32 w)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ngram_search_exit_score</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>a25a80e488425b2bd4e24eb753c9295a5</anchor>
      <arglist>(ngram_search_t *ngs, bptbl_t *pbe, int rcphone)</arglist>
    </member>
    <member kind="function">
      <type>ps_lattice_t *</type>
      <name>ngram_search_lattice</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>ac30e7dec4bbfeee9f5163abf4bbd1014</anchor>
      <arglist>(ps_search_t *search)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_set_lm</name>
      <anchorfile>ngram__search_8c.html</anchorfile>
      <anchor>a0e681022d3fa0e63da066aad123245e7</anchor>
      <arglist>(ngram_model_t *lm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_search.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ngram__search_8h</filename>
    <includes id="pocketsphinx__internal_8h" name="pocketsphinx_internal.h" local="yes" imported="no">pocketsphinx_internal.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <class kind="struct">chan_s</class>
    <class kind="struct">root_chan_s</class>
    <class kind="struct">bptbl_s</class>
    <class kind="struct">bptbl_seg_s</class>
    <class kind="struct">lastphn_cand_s</class>
    <class kind="struct">last_ltrans_t</class>
    <class kind="struct">cand_sf_t</class>
    <class kind="struct">bestbp_rc_s</class>
    <class kind="struct">ngram_search_stats_s</class>
    <class kind="struct">ngram_search_s</class>
    <member kind="typedef">
      <type>struct chan_s</type>
      <name>chan_t</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a2c5740fe4792d870b73f4100b32e9324</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct root_chan_s</type>
      <name>root_chan_t</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>aab8eee3f73f666d0e12c5b355a651cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct bptbl_s</type>
      <name>bptbl_t</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a81093c091a82066374627744595840e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct bptbl_seg_s</type>
      <name>bptbl_seg_t</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a89d7d2a948a3cc2d55c77120cbd35e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ngram_search_stats_s</type>
      <name>ngram_search_stats_t</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>ae68375016e7d208d22042a7dd4a0f37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ps_search_t *</type>
      <name>ngram_search_init</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a04f80b377c847026254fb85596e2f43c</anchor>
      <arglist>(const char *name, ngram_model_t *lm, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_free</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a9bafaa4af5a9a4f9e76a8daf54ac4a11</anchor>
      <arglist>(ps_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_search_mark_bptable</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a7772e007b7d7fdf437c87aeb08b59c71</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_save_bp</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>ae36649be6f5a2190e759e7ed13bd7b6b</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx, int32 w, int32 score, int32 path, int32 rc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_alloc_all_rc</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a1ddcc1a9cb3e164ceb2140097ed23a3e</anchor>
      <arglist>(ngram_search_t *ngs, int32 w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_free_all_rc</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a15477192481dffcb29e9c4167eff6c3c</anchor>
      <arglist>(ngram_search_t *ngs, int32 w)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_search_find_exit</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>ac6a01bb08e7b8d1deb39763a98148cb0</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx, int32 *out_best_score, int32 *out_is_final)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ngram_search_bp_hyp</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>aee393a136f8f7e8b98161e6eed7b1dd9</anchor>
      <arglist>(ngram_search_t *ngs, int bpidx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_compute_seg_scores</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a2fa760c99f77eb075157304f4359941e</anchor>
      <arglist>(ngram_search_t *ngs, float32 lwf)</arglist>
    </member>
    <member kind="function">
      <type>ps_lattice_t *</type>
      <name>ngram_search_lattice</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>ac30e7dec4bbfeee9f5163abf4bbd1014</anchor>
      <arglist>(ps_search_t *search)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ngram_search_exit_score</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a25a80e488425b2bd4e24eb753c9295a5</anchor>
      <arglist>(ngram_search_t *ngs, bptbl_t *pbe, int rcphone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_search_set_lm</name>
      <anchorfile>ngram__search_8h.html</anchorfile>
      <anchor>a0e681022d3fa0e63da066aad123245e7</anchor>
      <arglist>(ngram_model_t *lm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_search_fwdflat.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ngram__search__fwdflat_8c</filename>
    <includes id="ngram__search_8h" name="ngram_search.h" local="yes" imported="no">ngram_search.h</includes>
    <includes id="ps__lattice__internal_8h" name="ps_lattice_internal.h" local="yes" imported="no">ps_lattice_internal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_init</name>
      <anchorfile>ngram__search__fwdflat_8c.html</anchorfile>
      <anchor>ad4b8ebd904c77f8a28f59cd5ca2c8307</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_deinit</name>
      <anchorfile>ngram__search__fwdflat_8c.html</anchorfile>
      <anchor>a8faf467f90162a7273b23304fc6e8586</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdflat_reinit</name>
      <anchorfile>ngram__search__fwdflat_8c.html</anchorfile>
      <anchor>aa4879c06ddbc455a6f355084a9c574b4</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_start</name>
      <anchorfile>ngram__search__fwdflat_8c.html</anchorfile>
      <anchor>a763c2c7aaa5d7f9c5107af73552a2149</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdflat_search</name>
      <anchorfile>ngram__search__fwdflat_8c.html</anchorfile>
      <anchor>ae77ef21ae92dbcc4b14f40469fbd4307</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_finish</name>
      <anchorfile>ngram__search__fwdflat_8c.html</anchorfile>
      <anchor>ac855cf540ac4acdfa320629720ded6fe</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_search_fwdflat.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ngram__search__fwdflat_8h</filename>
    <includes id="ngram__search_8h" name="ngram_search.h" local="yes" imported="no">ngram_search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_init</name>
      <anchorfile>ngram__search__fwdflat_8h.html</anchorfile>
      <anchor>ad4b8ebd904c77f8a28f59cd5ca2c8307</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_deinit</name>
      <anchorfile>ngram__search__fwdflat_8h.html</anchorfile>
      <anchor>a8faf467f90162a7273b23304fc6e8586</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdflat_reinit</name>
      <anchorfile>ngram__search__fwdflat_8h.html</anchorfile>
      <anchor>aa4879c06ddbc455a6f355084a9c574b4</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_start</name>
      <anchorfile>ngram__search__fwdflat_8h.html</anchorfile>
      <anchor>a763c2c7aaa5d7f9c5107af73552a2149</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdflat_search</name>
      <anchorfile>ngram__search__fwdflat_8h.html</anchorfile>
      <anchor>ae77ef21ae92dbcc4b14f40469fbd4307</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdflat_finish</name>
      <anchorfile>ngram__search__fwdflat_8h.html</anchorfile>
      <anchor>ac855cf540ac4acdfa320629720ded6fe</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_search_fwdtree.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ngram__search__fwdtree_8c</filename>
    <includes id="ngram__search__fwdtree_8h" name="ngram_search_fwdtree.h" local="yes" imported="no">ngram_search_fwdtree.h</includes>
    <includes id="phone__loop__search_8h" name="phone_loop_search.h" local="yes" imported="no">phone_loop_search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_init</name>
      <anchorfile>ngram__search__fwdtree_8c.html</anchorfile>
      <anchor>a72c89a2a1f189495abee00e1853cddcc</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_deinit</name>
      <anchorfile>ngram__search__fwdtree_8c.html</anchorfile>
      <anchor>a0e0e0436b30e1074114e1d37991c5d6b</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdtree_reinit</name>
      <anchorfile>ngram__search__fwdtree_8c.html</anchorfile>
      <anchor>aa53827b47025d4e7a63f3ddce763d84e</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_start</name>
      <anchorfile>ngram__search__fwdtree_8c.html</anchorfile>
      <anchor>af736200cd01a5d743dbab447ecc85d08</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdtree_search</name>
      <anchorfile>ngram__search__fwdtree_8c.html</anchorfile>
      <anchor>a9e2828ba0d249424a234b6cf7d3ee530</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_finish</name>
      <anchorfile>ngram__search__fwdtree_8c.html</anchorfile>
      <anchor>af32a83dbb9187542577a0c500b000840</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_search_fwdtree.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ngram__search__fwdtree_8h</filename>
    <includes id="ngram__search_8h" name="ngram_search.h" local="yes" imported="no">ngram_search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_init</name>
      <anchorfile>ngram__search__fwdtree_8h.html</anchorfile>
      <anchor>a72c89a2a1f189495abee00e1853cddcc</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_deinit</name>
      <anchorfile>ngram__search__fwdtree_8h.html</anchorfile>
      <anchor>a0e0e0436b30e1074114e1d37991c5d6b</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdtree_reinit</name>
      <anchorfile>ngram__search__fwdtree_8h.html</anchorfile>
      <anchor>aa53827b47025d4e7a63f3ddce763d84e</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_start</name>
      <anchorfile>ngram__search__fwdtree_8h.html</anchorfile>
      <anchor>af736200cd01a5d743dbab447ecc85d08</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_fwdtree_search</name>
      <anchorfile>ngram__search__fwdtree_8h.html</anchorfile>
      <anchor>a9e2828ba0d249424a234b6cf7d3ee530</anchor>
      <arglist>(ngram_search_t *ngs, int frame_idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_fwdtree_finish</name>
      <anchorfile>ngram__search__fwdtree_8h.html</anchorfile>
      <anchor>af32a83dbb9187542577a0c500b000840</anchor>
      <arglist>(ngram_search_t *ngs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>phone_loop_search.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>phone__loop__search_8h</filename>
    <includes id="pocketsphinx__internal_8h" name="pocketsphinx_internal.h" local="yes" imported="no">pocketsphinx_internal.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <class kind="struct">phone_loop_renorm_s</class>
    <class kind="struct">phone_loop_search_s</class>
    <member kind="define">
      <type>#define</type>
      <name>phone_loop_search_score</name>
      <anchorfile>phone__loop__search_8h.html</anchorfile>
      <anchor>ab49609ce2ff4d1827f57693f463e360b</anchor>
      <arglist>(pls, ci)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pocketsphinx_internal.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>pocketsphinx__internal_8h</filename>
    <includes id="pocketsphinx_8h" name="pocketsphinx.h" local="yes" imported="no">pocketsphinx.h</includes>
    <includes id="acmod_8h" name="acmod.h" local="yes" imported="no">acmod.h</includes>
    <includes id="dict_8h" name="dict.h" local="yes" imported="no">dict.h</includes>
    <includes id="dict2pid_8h" name="dict2pid.h" local="yes" imported="no">dict2pid.h</includes>
    <class kind="struct">ps_searchfuncs_s</class>
    <class kind="struct">ps_search_s</class>
    <class kind="struct">ps_segfuncs_s</class>
    <class kind="struct">ps_seg_s</class>
    <class kind="struct">ps_decoder_s</class>
    <class kind="struct">ps_search_iter_s</class>
    <member kind="typedef">
      <type>struct ps_search_s</type>
      <name>ps_search_t</name>
      <anchorfile>pocketsphinx__internal_8h.html</anchorfile>
      <anchor>adc3de4d62e46c5e6cb93d09fb61be8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_searchfuncs_s</type>
      <name>ps_searchfuncs_t</name>
      <anchorfile>pocketsphinx__internal_8h.html</anchorfile>
      <anchor>a0eae078e32bd5f339792884c68aad8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_search_init</name>
      <anchorfile>pocketsphinx__internal_8h.html</anchorfile>
      <anchor>a9e0d66662ea7c64f8bddbbfe57496896</anchor>
      <arglist>(ps_search_t *search, ps_searchfuncs_t *vt, const char *type, const char *name, cmd_ln_t *config, acmod_t *acmod, dict_t *dict, dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_search_base_free</name>
      <anchorfile>pocketsphinx__internal_8h.html</anchorfile>
      <anchor>a39db3228c813a2943d47ff3f13e6ef08</anchor>
      <arglist>(ps_search_t *search)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_search_base_reinit</name>
      <anchorfile>pocketsphinx__internal_8h.html</anchorfile>
      <anchor>a307801961f27bd5f4b82a3e6b83e0ca1</anchor>
      <arglist>(ps_search_t *search, dict_t *dict, dict2pid_t *d2p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_alignment.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ps__alignment_8c</filename>
    <includes id="ps__alignment_8h" name="ps_alignment.h" local="yes" imported="no">ps_alignment.h</includes>
    <member kind="function">
      <type>ps_alignment_t *</type>
      <name>ps_alignment_init</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>abe7668d9a53be1401896623ed42f02be</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_free</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>ab8fa505f155e38d7e6f8b7dbbd070282</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_add_word</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>ab6264685976a8270971c86deae7a488e</anchor>
      <arglist>(ps_alignment_t *al, int32 wid, int duration)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_populate</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a59e81853dad3d935755dcb309d8cc926</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_populate_ci</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>ae17f691c36070955e32a2c987910acde</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_propagate</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>adc8ea5411f8500a0affcec636d65fa8d</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_n_words</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a89fdf321c5a6ee6edeb9c2757d7509cf</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_n_phones</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>ab541dcf586611d20e84fd9ec562e7a52</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_n_states</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>acfed230b07c1e09fae89eeb74c468460</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_words</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a8d2b39bad3a4f6018155e9101dee63f8</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_phones</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a5d4fe03d7eef6a96ca8f1b21b9fd3a33</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_states</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a8c6ba334f7dcf512f8485ca7a0b2d2c0</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_entry_t *</type>
      <name>ps_alignment_iter_get</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>aa2962940b54a4e2b73a9a4937d1b245a</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_iter_free</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a80e0020539ea622706bf63883e24d301</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_goto</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a7cec3eabbedf8d94295d98541bbbaa10</anchor>
      <arglist>(ps_alignment_iter_t *itor, int pos)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_next</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>aa7fdb0dbac92be80e2182d340be8b8e1</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_prev</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a75e333f3b8a0d14b29d4853a7245b0f9</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_up</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>ae546c5daf7bc78fe2924200b99187aa0</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_down</name>
      <anchorfile>ps__alignment_8c.html</anchorfile>
      <anchor>a6356f643a01e2071c6f00f8a5d56565a</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_alignment.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ps__alignment_8h</filename>
    <includes id="dict2pid_8h" name="dict2pid.h" local="yes" imported="no">dict2pid.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <class kind="struct">ps_alignment_entry_s</class>
    <class kind="struct">ps_alignment_vector_s</class>
    <class kind="struct">ps_alignment_s</class>
    <class kind="struct">ps_alignment_iter_s</class>
    <member kind="function">
      <type>ps_alignment_t *</type>
      <name>ps_alignment_init</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>abe7668d9a53be1401896623ed42f02be</anchor>
      <arglist>(dict2pid_t *d2p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_free</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>ab8fa505f155e38d7e6f8b7dbbd070282</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_add_word</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>ab6264685976a8270971c86deae7a488e</anchor>
      <arglist>(ps_alignment_t *al, int32 wid, int duration)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_populate</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a59e81853dad3d935755dcb309d8cc926</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_populate_ci</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>ae17f691c36070955e32a2c987910acde</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_propagate</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>adc8ea5411f8500a0affcec636d65fa8d</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_n_words</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a89fdf321c5a6ee6edeb9c2757d7509cf</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_n_phones</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>ab541dcf586611d20e84fd9ec562e7a52</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_n_states</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>acfed230b07c1e09fae89eeb74c468460</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_words</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a8d2b39bad3a4f6018155e9101dee63f8</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_phones</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a5d4fe03d7eef6a96ca8f1b21b9fd3a33</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_states</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a8c6ba334f7dcf512f8485ca7a0b2d2c0</anchor>
      <arglist>(ps_alignment_t *al)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_entry_t *</type>
      <name>ps_alignment_iter_get</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>aa2962940b54a4e2b73a9a4937d1b245a</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_goto</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a7cec3eabbedf8d94295d98541bbbaa10</anchor>
      <arglist>(ps_alignment_iter_t *itor, int pos)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_next</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>aa7fdb0dbac92be80e2182d340be8b8e1</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_prev</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a75e333f3b8a0d14b29d4853a7245b0f9</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_up</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>ae546c5daf7bc78fe2924200b99187aa0</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_alignment_iter_t *</type>
      <name>ps_alignment_iter_down</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a6356f643a01e2071c6f00f8a5d56565a</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_alignment_iter_free</name>
      <anchorfile>ps__alignment_8h.html</anchorfile>
      <anchor>a80e0020539ea622706bf63883e24d301</anchor>
      <arglist>(ps_alignment_iter_t *itor)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_lattice.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ps__lattice_8c</filename>
    <includes id="pocketsphinx__internal_8h" name="pocketsphinx_internal.h" local="yes" imported="no">pocketsphinx_internal.h</includes>
    <includes id="ps__lattice__internal_8h" name="ps_lattice_internal.h" local="yes" imported="no">ps_lattice_internal.h</includes>
    <includes id="ngram__search_8h" name="ngram_search.h" local="yes" imported="no">ngram_search.h</includes>
    <includes id="dict_8h" name="dict.h" local="yes" imported="no">dict.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_link</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a4dd3235b91f1c7202127893203c6d2a0</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *from, ps_latnode_t *to, int32 score, int32 ef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_penalize_fillers</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a551b8246b45e8953491a24db438c59c1</anchor>
      <arglist>(ps_lattice_t *dag, int32 silpen, int32 fillpen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_delete_unreachable</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a6da4e36322aaab4d2ebe812bee9a4439</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ps_lattice_write</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a520b99eff2c1dba89927f0f3d258b8aa</anchor>
      <arglist>(ps_lattice_t *dag, char const *filename)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ps_lattice_write_htk</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a1ac6d846fbecfcaba6094d84e93655f7</anchor>
      <arglist>(ps_lattice_t *dag, char const *filename)</arglist>
    </member>
    <member kind="function">
      <type>ps_lattice_t *</type>
      <name>ps_lattice_read</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>aaf4a101f324943c7635746ec6ba7ab06</anchor>
      <arglist>(ps_decoder_t *ps, char const *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_lattice_n_frames</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a60b5a6a96a68e9b778dbef2156d859c8</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>ps_lattice_t *</type>
      <name>ps_lattice_init_search</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a606f6ee0fd569dd5829d7f84ae7e61bd</anchor>
      <arglist>(ps_search_t *search, int n_frame)</arglist>
    </member>
    <member kind="function">
      <type>ps_lattice_t *</type>
      <name>ps_lattice_retain</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>af8a33c587f5b7a6f5b8c86e6068dc297</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_lattice_free</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>aed9371a246b6565a2142c3baefd08002</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>logmath_t *</type>
      <name>ps_lattice_get_logmath</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a4a952a1cb88b833989fb39476da5fe1b</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>ps_latnode_iter_t *</type>
      <name>ps_latnode_iter</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a607bfd65847baff33f404936c1543d16</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>ps_latnode_iter_t *</type>
      <name>ps_latnode_iter_next</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a77c4bbb13e260c72ed04ad93b02fdf0e</anchor>
      <arglist>(ps_latnode_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_latnode_iter_free</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>ae1d64649785989033826329b9fcce309</anchor>
      <arglist>(ps_latnode_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_latnode_t *</type>
      <name>ps_latnode_iter_node</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a990f488a747f95bc94777a755401710d</anchor>
      <arglist>(ps_latnode_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_latnode_times</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a89b67432447f693f787ec14460cfa2a4</anchor>
      <arglist>(ps_latnode_t *node, int16 *out_fef, int16 *out_lef)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_latnode_word</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a5827c1004a64e7e6c5208928c28d403d</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_latnode_baseword</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a42212e56eb6e881a0ceb1b8ad029427a</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ps_latnode_prob</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>ad9c31352fa8e6286b1221221208075e9</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *node, ps_latlink_t **out_link)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_iter_t *</type>
      <name>ps_latnode_exits</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a6169f8a8d8b7f84596438e5bb3095bc6</anchor>
      <arglist>(ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_iter_t *</type>
      <name>ps_latnode_entries</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a36f3fa1635d251b908c553153f614e22</anchor>
      <arglist>(ps_latnode_t *node)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_iter_t *</type>
      <name>ps_latlink_iter_next</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a6caee73548f9a6c17626e959256d721c</anchor>
      <arglist>(ps_latlink_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_latlink_iter_free</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>aab5953eafb2e632307259a7fc40c01e3</anchor>
      <arglist>(ps_latlink_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_latlink_iter_link</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a33a6c95621d4c8980a8c6b0f8af3bc67</anchor>
      <arglist>(ps_latlink_iter_t *itor)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_latlink_times</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>afc4403b067467f3c74c97998f1c91886</anchor>
      <arglist>(ps_latlink_t *link, int16 *out_sf)</arglist>
    </member>
    <member kind="function">
      <type>ps_latnode_t *</type>
      <name>ps_latlink_nodes</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a891d9c5aa6a5cbe8631812fbd6e87e25</anchor>
      <arglist>(ps_latlink_t *link, ps_latnode_t **out_src)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_latlink_word</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a3c765dfc290549e8f27e619269d20e5a</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_latlink_baseword</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a1f8f4dba5bbcf9056c5bd3e97e39839d</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_latlink_pred</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a6ea04952718752806ad92773c98ac33d</anchor>
      <arglist>(ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ps_latlink_prob</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a7025b47d1224f01fef725ffdae71becc</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link, int32 *out_ascr)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_lattice_hyp</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a02b07c009d23b852bd4db54700dfac5b</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>ps_seg_t *</type>
      <name>ps_lattice_seg_iter</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>afedbc5558c18f7d029e84a4e27e38187</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link, float32 lwf)</arglist>
    </member>
    <member kind="function">
      <type>latlink_list_t *</type>
      <name>latlink_list_new</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a7197508af770064ea825bb812dd6eddc</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link, latlink_list_t *next)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_pushq</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a04896ebe0e2592bc7950d413b5d5c52e</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_popq</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a481c4d941368597e11b0af4709bd03b0</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_delq</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>ad128ca75e8bc7ca4ba41094fb5b68ee9</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_traverse_edges</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a3bd22d7b0561c81f874c115a200e84b9</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *start, ps_latnode_t *end)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_traverse_next</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a8ab5c5bbbcf02a087a81232476dbd2a3</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *end)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_reverse_edges</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a33e1a31ff250c7e7d555e179e2693f5d</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *start, ps_latnode_t *end)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_reverse_next</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a7a6e0cb0510310b13fd4286cf8f48792</anchor>
      <arglist>(ps_lattice_t *dag, ps_latnode_t *start)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_bestpath</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a0cc8e4824f4f23ecbf511b0bb096a3ea</anchor>
      <arglist>(ps_lattice_t *dag, ngram_model_t *lmset, float32 lwf, float32 ascale)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ps_lattice_posterior</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>aafee8a8325301db72711a3680bc385c6</anchor>
      <arglist>(ps_lattice_t *dag, ngram_model_t *lmset, float32 ascale)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>ps_lattice_posterior_prune</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a54c24dc8436c39d0ccc044f7b0ef8f3a</anchor>
      <arglist>(ps_lattice_t *dag, int32 beam)</arglist>
    </member>
    <member kind="function">
      <type>ps_astar_t *</type>
      <name>ps_astar_start</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>aaf9aedd3cd8bd1d45053e10828215a25</anchor>
      <arglist>(ps_lattice_t *dag, ngram_model_t *lmset, float32 lwf, int sf, int ef, int w1, int w2)</arglist>
    </member>
    <member kind="function">
      <type>ps_latpath_t *</type>
      <name>ps_astar_next</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>a6bea95f8fb827af790bbe6ce1920908c</anchor>
      <arglist>(ps_astar_t *nbest)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_astar_hyp</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>ac7372b5c5ec111f6814ce1ba495593e4</anchor>
      <arglist>(ps_astar_t *nbest, ps_latpath_t *path)</arglist>
    </member>
    <member kind="function">
      <type>ps_seg_t *</type>
      <name>ps_astar_seg_iter</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>ac8e3dff7276c03c93377d0cb79fbdbd7</anchor>
      <arglist>(ps_astar_t *astar, ps_latpath_t *path, float32 lwf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_astar_finish</name>
      <anchorfile>ps__lattice_8c.html</anchorfile>
      <anchor>abfb03e9e0fcbe3def45120f5ba43be14</anchor>
      <arglist>(ps_astar_t *nbest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_lattice_internal.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ps__lattice__internal_8h</filename>
    <class kind="struct">latlink_list_s</class>
    <class kind="struct">ps_lattice_s</class>
    <class kind="struct">ps_latlink_s</class>
    <class kind="struct">ps_latnode_s</class>
    <class kind="struct">dag_seg_s</class>
    <class kind="struct">ps_latpath_s</class>
    <class kind="struct">ps_astar_s</class>
    <class kind="struct">astar_seg_s</class>
    <member kind="typedef">
      <type>struct latlink_list_s</type>
      <name>latlink_list_t</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a32dd9511afc2f024dc63c9c060261e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dag_seg_s</type>
      <name>dag_seg_t</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a58a548300316e58e8c3b9e2bb90f980a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_latpath_s</type>
      <name>ps_latpath_t</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>aba5a485290f665fb2e7e514a32ba3073</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ps_astar_s</type>
      <name>ps_astar_t</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a756a1b6f5dfe4e3f35052380f9acb8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct astar_seg_s</type>
      <name>astar_seg_t</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>ac9ad8a97a222c2fa9e5c2bb66d26d74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ps_lattice_t *</type>
      <name>ps_lattice_init_search</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a606f6ee0fd569dd5829d7f84ae7e61bd</anchor>
      <arglist>(ps_search_t *search, int n_frame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_penalize_fillers</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a551b8246b45e8953491a24db438c59c1</anchor>
      <arglist>(ps_lattice_t *dag, int32 silpen, int32 fillpen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_delete_unreachable</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a6da4e36322aaab4d2ebe812bee9a4439</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_pushq</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a04896ebe0e2592bc7950d413b5d5c52e</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>ps_latlink_t *</type>
      <name>ps_lattice_popq</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a481c4d941368597e11b0af4709bd03b0</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_lattice_delq</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>ad128ca75e8bc7ca4ba41094fb5b68ee9</anchor>
      <arglist>(ps_lattice_t *dag)</arglist>
    </member>
    <member kind="function">
      <type>latlink_list_t *</type>
      <name>latlink_list_new</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a7197508af770064ea825bb812dd6eddc</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link, latlink_list_t *next)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_lattice_hyp</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a02b07c009d23b852bd4db54700dfac5b</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link)</arglist>
    </member>
    <member kind="function">
      <type>ps_seg_t *</type>
      <name>ps_lattice_seg_iter</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>afedbc5558c18f7d029e84a4e27e38187</anchor>
      <arglist>(ps_lattice_t *dag, ps_latlink_t *link, float32 lwf)</arglist>
    </member>
    <member kind="function">
      <type>ps_astar_t *</type>
      <name>ps_astar_start</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>aaf9aedd3cd8bd1d45053e10828215a25</anchor>
      <arglist>(ps_lattice_t *dag, ngram_model_t *lmset, float32 lwf, int sf, int ef, int w1, int w2)</arglist>
    </member>
    <member kind="function">
      <type>ps_latpath_t *</type>
      <name>ps_astar_next</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>a6bea95f8fb827af790bbe6ce1920908c</anchor>
      <arglist>(ps_astar_t *nbest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ps_astar_finish</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>abfb03e9e0fcbe3def45120f5ba43be14</anchor>
      <arglist>(ps_astar_t *nbest)</arglist>
    </member>
    <member kind="function">
      <type>char const *</type>
      <name>ps_astar_hyp</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>ac7372b5c5ec111f6814ce1ba495593e4</anchor>
      <arglist>(ps_astar_t *nbest, ps_latpath_t *path)</arglist>
    </member>
    <member kind="function">
      <type>ps_seg_t *</type>
      <name>ps_astar_seg_iter</name>
      <anchorfile>ps__lattice__internal_8h.html</anchorfile>
      <anchor>ac8e3dff7276c03c93377d0cb79fbdbd7</anchor>
      <arglist>(ps_astar_t *astar, ps_latpath_t *path, float32 lwf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ps_mllr.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ps__mllr_8c</filename>
    <includes id="acmod_8h" name="acmod.h" local="yes" imported="no">acmod.h</includes>
    <member kind="function">
      <type>ps_mllr_t *</type>
      <name>ps_mllr_read</name>
      <anchorfile>ps__mllr_8c.html</anchorfile>
      <anchor>ab62fb9c8cf3bdeed75a7ac2870d56a5a</anchor>
      <arglist>(char const *regmatfile)</arglist>
    </member>
    <member kind="function">
      <type>ps_mllr_t *</type>
      <name>ps_mllr_retain</name>
      <anchorfile>ps__mllr_8c.html</anchorfile>
      <anchor>ae21e7d8a0fa751aaccc5ef39dc5d1fe0</anchor>
      <arglist>(ps_mllr_t *mllr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ps_mllr_free</name>
      <anchorfile>ps__mllr_8c.html</anchorfile>
      <anchor>a240194a6ef30b01da38e3654c984b017</anchor>
      <arglist>(ps_mllr_t *mllr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ptm_mgau.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>ptm__mgau_8h</filename>
    <includes id="acmod_8h" name="acmod.h" local="yes" imported="no">acmod.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <includes id="bin__mdef_8h" name="bin_mdef.h" local="yes" imported="no">bin_mdef.h</includes>
    <includes id="ms__gauden_8h" name="ms_gauden.h" local="yes" imported="no">ms_gauden.h</includes>
    <class kind="struct">ptm_topn_s</class>
    <class kind="struct">ptm_fast_eval_s</class>
    <class kind="struct">ptm_mgau_s</class>
    <member kind="function">
      <type>int</type>
      <name>ptm_mgau_frame_eval</name>
      <anchorfile>ptm__mgau_8h.html</anchorfile>
      <anchor>ae9fb76ef388e6541bd6c1b20fe8bc094</anchor>
      <arglist>(ps_mgau_t *s, int16 *senone_scores, uint8 *senone_active, int32 n_senone_active, mfcc_t **featbuf, int32 frame, int32 compallsen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>s3types.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>s3types_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>BAD_S3CIPID</name>
      <anchorfile>s3types_8h.html</anchorfile>
      <anchor>af9c51863cdbb10d58b6aad21e896666b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_S3PID</name>
      <anchorfile>s3types_8h.html</anchorfile>
      <anchor>a4037acb07f1abc6c8a1aac0841556440</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_S3SSID</name>
      <anchorfile>s3types_8h.html</anchorfile>
      <anchor>ade0bee313d69b3d324b5622fa0507ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_S3TMATID</name>
      <anchorfile>s3types_8h.html</anchorfile>
      <anchor>a0ffaad3d41b251f6fa9b3bf100c65e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BAD_S3WID</name>
      <anchorfile>s3types_8h.html</anchorfile>
      <anchor>a5c42410b7125da611210c5a4be29898b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16</type>
      <name>s3cipid_t</name>
      <anchorfile>s3types_8h.html</anchorfile>
      <anchor>ae5f70241ce62a79747f0611029a6409d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>state_align_search.c</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>state__align__search_8c</filename>
    <includes id="state__align__search_8h" name="state_align_search.h" local="yes" imported="no">state_align_search.h</includes>
  </compound>
  <compound kind="file">
    <name>state_align_search.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>state__align__search_8h</filename>
    <includes id="pocketsphinx__internal_8h" name="pocketsphinx_internal.h" local="yes" imported="no">pocketsphinx_internal.h</includes>
    <includes id="ps__alignment_8h" name="ps_alignment.h" local="yes" imported="no">ps_alignment.h</includes>
    <includes id="hmm_8h" name="hmm.h" local="yes" imported="no">hmm.h</includes>
    <class kind="struct">state_align_hist_s</class>
    <class kind="struct">state_align_search_s</class>
  </compound>
  <compound kind="file">
    <name>tied_mgau_common.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>tied__mgau__common_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>GMMSUB</name>
      <anchorfile>tied__mgau__common_8h.html</anchorfile>
      <anchor>a740dfe5b30e702ba8b2ec7426bd4d57e</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NEG_MIXW</name>
      <anchorfile>tied__mgau__common_8h.html</anchorfile>
      <anchor>ad739d757ed78293c18dc2386fd3b750e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_NEG_ASCR</name>
      <anchorfile>tied__mgau__common_8h.html</anchorfile>
      <anchor>a965d50d73044c3f2dc2589662fd2e89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>LOGMATH_INLINE int</type>
      <name>fast_logmath_add</name>
      <anchorfile>tied__mgau__common_8h.html</anchorfile>
      <anchor>a947ea19b4351ecbf70330e089994c3a1</anchor>
      <arglist>(logmath_t *lmath, int mlx, int mly)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tmat.h</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>tmat_8h</filename>
    <class kind="struct">tmat_t</class>
    <member kind="function">
      <type>tmat_t *</type>
      <name>tmat_init</name>
      <anchorfile>tmat_8h.html</anchorfile>
      <anchor>a33fc2f994068e2667eb728d7118ea038</anchor>
      <arglist>(char const *tmatfile, logmath_t *lmath, float64 tpfloor, int32 breport)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tmat_dump</name>
      <anchorfile>tmat_8h.html</anchorfile>
      <anchor>af222f1a75e4bbbc76e1141ef0d0e41c7</anchor>
      <arglist>(tmat_t *tmat, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tmat_free</name>
      <anchorfile>tmat_8h.html</anchorfile>
      <anchor>a8f98e68e4a868728a89cf9996c48a6c9</anchor>
      <arglist>(tmat_t *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tmat_report</name>
      <anchorfile>tmat_8h.html</anchorfile>
      <anchor>a898dd73b6f40d9323f2d6e688733a0a5</anchor>
      <arglist>(tmat_t *t)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>acmod_s</name>
    <filename>structacmod__s.html</filename>
    <member kind="variable">
      <type>cmd_ln_t *</type>
      <name>config</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a3563f4d0bdc48d3ee140b9e28806279d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>logmath_t *</type>
      <name>lmath</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a9de7e8ac9c0c4df3d2a9ad5406787f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glist_t</type>
      <name>strings</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a9f6b699a0fbd43cf7ababab6f0ab81be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fe_t *</type>
      <name>fe</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a56eaceb9b6a1cbcccd09cf42cfa87231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>feat_t *</type>
      <name>fcb</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a37ec6c2b1f3ada764842e08481239b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bin_mdef_t *</type>
      <name>mdef</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a351548ff5547c29b4a684e10434a51dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tmat_t *</type>
      <name>tmat</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>aaa3982184a49f0d61e397ba89f486259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_mgau_t *</type>
      <name>mgau</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a023addd9fe7252d87c683e02485cdafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_mllr_t *</type>
      <name>mllr</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a4edbfa1a1324c6db27b74de7d0158e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 *</type>
      <name>senone_scores</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>aa341539b98a5b13bef8589fc8d948da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bitvec_t *</type>
      <name>senone_active_vec</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a4a3ad3a3dc9a7b36c024c77729012e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 *</type>
      <name>senone_active</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a5c98c727daf4e6bb23534e00b30cb5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>senscr_frame</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>ab70ba4caf96b656936d499247e921f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_senone_active</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a5081a507e3ca6de6c5695217245dc9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>log_zero</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a95d5195647b6395d95433d45e3f74d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mfcc_t **</type>
      <name>mfc_buf</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a5ded3dce0428a6ecba97b5d3486e7fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mfcc_t ***</type>
      <name>feat_buf</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>afc52cc0151f6c7e32a230576141d20a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>rawfh</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>aeac89442a04744ca607c4c66dab053e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>mfcfh</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a71903df6839f1f9fcfc2ef2a62a94f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>senfh</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>aba97a9733b64074f3a4699dfbaed5ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>insenfh</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>ad0998a9d887db82bd684e9454c9b044e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long *</type>
      <name>framepos</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>abfd364dafee513f523e1566bb706e48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>state</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a06adf606c11e6f4b9869742510a5c23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>compallsen</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>ac08227365e3ed4354e26f013bc0df2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>grow_feat</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>acbb3fed9495e7b80da79cb03ff3079a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>insen_swap</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>ae6ed7e1e5b4bec021a0ba17c0ac02bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>utt_start_frame</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>aecf7cf72f18a8ecb1cc8e96928bc1ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>output_frame</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>aec694af0767ac5e8f1022b6252111885</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>n_mfc_alloc</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>af4fa71ce8be75356a1f472959a9ff6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>n_mfc_frame</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a1c5d63882997211e57ed698e33080958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>mfc_outidx</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>afc6ef051f5de03c3f51aa740ff10a99b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>n_feat_alloc</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a8269cb11354683ba83f1994b46e15466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>n_feat_frame</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>a861cc097befe7e81473f0ae0972186e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>feat_outidx</name>
      <anchorfile>structacmod__s.html</anchorfile>
      <anchor>ae15076737bcdcbe1d5b4226f7a0b3f5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>allphone_search_s</name>
    <filename>structallphone__search__s.html</filename>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>hmmctx</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>aa82fce72da16af69af92aeca29beed3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ngram_model_t *</type>
      <name>lm</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>ac1220a564a57a418312800df44bd95ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>ci_only</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>ab4d9470249d15abca8e9fd01f1d437a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>phmm_t **</type>
      <name>ci_phmm</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a2646c8ad402da8a644ecebd28386de0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>ci2lmwid</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a9021eb4d9645cc3138535dfad8272601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pbeam</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>af1c69cfc6361bfed4ed0726cbdd4fbfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>inspen</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>ac4f20ffb4acb7c36a8e04cf7b88eafb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>frame</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a458aad951cc506c072d67d8d9f163fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32</type>
      <name>ascale</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a9ad3ecc228af52131028fb91927563dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_tot_frame</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a83712f4d89a500720b5bb3e8b2b67297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_hmm_eval</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a24d1b4b58c797ff488651b6238040433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sen_eval</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a5759743790af0ec17f85f14f18004b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>blkarray_list_t *</type>
      <name>history</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>a6f01de182b60ca03ab9fed3bc63fadc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ptmr_t</type>
      <name>perf</name>
      <anchorfile>structallphone__search__s.html</anchorfile>
      <anchor>ab933d7d82322055b5d0c62e27d7c1f5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>astar_seg_s</name>
    <filename>structastar__seg__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>bestbp_rc_s</name>
    <filename>structbestbp__rc__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>bin_mdef_s</name>
    <filename>structbin__mdef__s.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>n_ciphone</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a84d5f7acc6d85ba8c7611945f9c5e4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_phone</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ad746dbb3f8108f575a95182f96b4b18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_emit_state</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a2ad87254182be424ac6ff1234274f134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_ci_sen</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ad7c318d6db85fd4b8ac13a81c145bbb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sen</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a3d1c202165d8e5e153a73d708ca28109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_tmat</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a979557ad4f8369e84d93f633512345ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sseq</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ab9dad211cbc12eb6f848482bcf78d47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_ctx</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a31b5cda5136c6f72816da8889719bfe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_cd_tree</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ad625c3c55d5f42ed275b8b5638a6d80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>sil</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a9071b7698132c1c2ce92a6f742e1c82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mmio_file_t *</type>
      <name>filemap</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a3358a80c50bf3f62417596553adf9c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>ciname</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>afdd0df913746b0656186fc8c3e8a9206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cd_tree_t *</type>
      <name>cd_tree</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a0642be2bb56149689ad3fc1dad1e5d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mdef_entry_t *</type>
      <name>phone</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a2c73ae900d198460a30bce4f641d8398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16 **</type>
      <name>sseq</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>acb58480658812de7a357dcbd25ad7b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 *</type>
      <name>sseq_len</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ab534bbd280015795b8e8ca4e296f4946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 *</type>
      <name>cd2cisen</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ad5e814ffa116c85d46359e3ffd40bff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 *</type>
      <name>sen2cimap</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>a457e5352e52a57de5d1536bcd6b331a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum bin_mdef_s::@4</type>
      <name>alloc_mode</name>
      <anchorfile>structbin__mdef__s.html</anchorfile>
      <anchor>ab8d852b6cc4f9899da72da03d1607c92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>blkarray_list_s</name>
    <filename>structblkarray__list__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>bptbl_s</name>
    <filename>structbptbl__s.html</filename>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>frame</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>ae52081dde905cf6e7d988cdeb4c9b8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>valid</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>a4948439666e1e2204a6d1c6d9cfd1cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>refcnt</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>acdc7410a4069418879aa022f9b61c13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>wid</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>a143ff0891fafd471000df7c73123b8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bp</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>a4ca45ebc4a1ac18fc0596195e7e03bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>score</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>aa5643c0c19ce4d39d51ddf7376f4d508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>s_idx</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>abf9e4bcf1927aa09fb2b30c59e99f551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>real_wid</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>a91247e4f807cf780afe8f5ac45e720b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>prev_real_wid</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>a83784e3b0121bc365d485151ab277920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>last_phone</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>aa7704ba76d3dcde6b8a24855362a4289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>last2_phone</name>
      <anchorfile>structbptbl__s.html</anchorfile>
      <anchor>a27b8e54bb7552e6afc15e4f44f42e3b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>bptbl_seg_s</name>
    <filename>structbptbl__seg__s.html</filename>
    <member kind="variable">
      <type>ps_seg_t</type>
      <name>base</name>
      <anchorfile>structbptbl__seg__s.html</anchorfile>
      <anchor>ac21f715b189c7e452385252bfcee47fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>bpidx</name>
      <anchorfile>structbptbl__seg__s.html</anchorfile>
      <anchor>a81e3d422fb2307c1a83e9490525dce7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_bpidx</name>
      <anchorfile>structbptbl__seg__s.html</anchorfile>
      <anchor>a8d1f0aa7dd09e2d6321a00b68ab6a051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>cur</name>
      <anchorfile>structbptbl__seg__s.html</anchorfile>
      <anchor>a1649196a2c03fb61b31624086ee998b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cand_sf_t</name>
    <filename>structcand__sf__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>cd_tree_s</name>
    <filename>structcd__tree__s.html</filename>
    <member kind="variable">
      <type>int16</type>
      <name>ctx</name>
      <anchorfile>structcd__tree__s.html</anchorfile>
      <anchor>a2168538bf6cc21ad1a2c99fa2deb4559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_down</name>
      <anchorfile>structcd__tree__s.html</anchorfile>
      <anchor>ae5e735d325b0f278ff2ad55293faa616</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>chan_s</name>
    <filename>structchan__s.html</filename>
    <member kind="variable">
      <type>hmm_t</type>
      <name>hmm</name>
      <anchorfile>structchan__s.html</anchorfile>
      <anchor>a742d6a125ac468b95a1ddd880a956e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct chan_s *</type>
      <name>next</name>
      <anchorfile>structchan__s.html</anchorfile>
      <anchor>a260b68eff64150d0ae9ce4db7feb1300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct chan_s *</type>
      <name>alt</name>
      <anchorfile>structchan__s.html</anchorfile>
      <anchor>a52e85d037ca3a8b21ff1eed1d469ca15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>ciphone</name>
      <anchorfile>structchan__s.html</anchorfile>
      <anchor>a33da51d8524073abc792519d0738ca0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ciphone_t</name>
    <filename>structciphone__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structciphone__t.html</anchorfile>
      <anchor>a2327c5f09fa245c25926c718fdab642d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>filler</name>
      <anchorfile>structciphone__t.html</anchorfile>
      <anchor>a96e20b175c00c4edcd75d922dba067cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dag_seg_s</name>
    <filename>structdag__seg__s.html</filename>
    <member kind="variable">
      <type>ps_seg_t</type>
      <name>base</name>
      <anchorfile>structdag__seg__s.html</anchorfile>
      <anchor>a72f90e137c1f83ab3df6ecd5e1b6dc71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_latlink_t **</type>
      <name>links</name>
      <anchorfile>structdag__seg__s.html</anchorfile>
      <anchor>a5fcc22d787e4db1bdc728ff8faead738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>norm</name>
      <anchorfile>structdag__seg__s.html</anchorfile>
      <anchor>a4517656eeaa40d33109d39a251a75dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_links</name>
      <anchorfile>structdag__seg__s.html</anchorfile>
      <anchor>a2a858ea6ef051074be2bd1716a4939fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>cur</name>
      <anchorfile>structdag__seg__s.html</anchorfile>
      <anchor>a0fed697e06d12e5a0405fdcb0d97faf1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dict2pid_t</name>
    <filename>structdict2pid__t.html</filename>
    <member kind="variable">
      <type>bin_mdef_t *</type>
      <name>mdef</name>
      <anchorfile>structdict2pid__t.html</anchorfile>
      <anchor>ab0dcb283a0cf5ad40836bc418fd535b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict_t *</type>
      <name>dict</name>
      <anchorfile>structdict2pid__t.html</anchorfile>
      <anchor>ae1fecad64884980e9d8355844abc3512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3ssid_t ***</type>
      <name>ldiph_lc</name>
      <anchorfile>structdict2pid__t.html</anchorfile>
      <anchor>a609288c1f4cee2ea2e82bc5e391b894a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xwdssid_t **</type>
      <name>rssid</name>
      <anchorfile>structdict2pid__t.html</anchorfile>
      <anchor>a2cf69a0437b33969d54ef2ae669b90aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3ssid_t ***</type>
      <name>lrdiph_rc</name>
      <anchorfile>structdict2pid__t.html</anchorfile>
      <anchor>a4eec4de961e2374a6a4c06bb9dde39d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>xwdssid_t **</type>
      <name>lrssid</name>
      <anchorfile>structdict2pid__t.html</anchorfile>
      <anchor>a6c1de8a269f6ff37dce3dd8cbec4235a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dict_t</name>
    <filename>structdict__t.html</filename>
    <member kind="variable">
      <type>bin_mdef_t *</type>
      <name>mdef</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>a3a01eb5a3ebda5652d434be26e0cfdd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dictword_t *</type>
      <name>word</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>a9e6636bbe45936a03381fea430addd31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hash_table_t *</type>
      <name>ht</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>a7205aae4fbeef3aaa53f94b6af529af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>max_words</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>af6142600cef73f846b58ba9bc36b02ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_word</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>af00f60319a7025361e291af5addb6b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>filler_start</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>abd48fdafaaa68a8df2fd82163c51a95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>filler_end</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>a77c6692e56308968804add1292275cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3wid_t</type>
      <name>startwid</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>a22bc6c52ce9e04c4f3f7d0ba1972ee51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3wid_t</type>
      <name>finishwid</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>a3875be5336e2d9888f6d5cb83ded82c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3wid_t</type>
      <name>silwid</name>
      <anchorfile>structdict__t.html</anchorfile>
      <anchor>aad07b22b94c360923f151c02890f6e68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dictword_t</name>
    <filename>structdictword__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>word</name>
      <anchorfile>structdictword__t.html</anchorfile>
      <anchor>a3f3371918a406e26817bd4f2cecd7329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3cipid_t *</type>
      <name>ciphone</name>
      <anchorfile>structdictword__t.html</anchorfile>
      <anchor>acf5836b5a681485868e9090ad67366d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pronlen</name>
      <anchorfile>structdictword__t.html</anchorfile>
      <anchor>a50509f28a4b64d76519bfadea12f0fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3wid_t</type>
      <name>alt</name>
      <anchorfile>structdictword__t.html</anchorfile>
      <anchor>a84b63cd03706221645f46b2da09e9540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3wid_t</type>
      <name>basewid</name>
      <anchorfile>structdictword__t.html</anchorfile>
      <anchor>a53dd72f96a9de21d8925e246cc7c036f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fsg_glist_linklist_t</name>
    <filename>structfsg__glist__linklist__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>fsg_hist_entry_s</name>
    <filename>structfsg__hist__entry__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>fsg_history_s</name>
    <filename>structfsg__history__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>fsg_lextree_s</name>
    <filename>structfsg__lextree__s.html</filename>
    <member kind="variable">
      <type>fsg_model_t *</type>
      <name>fsg</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>a161ff35c65373388f18e51236bf7ef5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>ctx</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>afbbd5d59a74dfb287289aa20a9a3979a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict_t *</type>
      <name>dict</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>abf077af1c0dd1246b2032b917bfacba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict2pid_t *</type>
      <name>d2p</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>add12fb7151ebdecb74deaf6aca86d95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bin_mdef_t *</type>
      <name>mdef</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>ae2c059413a1cb4cda7068ab30a7a477c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 **</type>
      <name>lc</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>a0655f40ec98c9d971aba1fa8a894575d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 **</type>
      <name>rc</name>
      <anchorfile>structfsg__lextree__s.html</anchorfile>
      <anchor>a307d5351803d409aa51395333294c0f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fsg_pnode_ctxt_t</name>
    <filename>structfsg__pnode__ctxt__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>fsg_pnode_s</name>
    <filename>structfsg__pnode__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>fsg_search_s</name>
    <filename>structfsg__search__s.html</filename>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>hmmctx</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a7407bdf5f311caf9d46817b3387b798c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fsg_model_t *</type>
      <name>fsg</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>ab1877ffe7d77ddb79bab53fb95577946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct fsg_lextree_s *</type>
      <name>lextree</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>ac2c756ff6c1a2f1059011756d22441f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct fsg_history_s *</type>
      <name>history</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>abc949ccaab380bcf5b452d1cac54469b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glist_t</type>
      <name>pnode_active</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a318ff42978c1e645f01962345ac08215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glist_t</type>
      <name>pnode_active_next</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>aa2dfc00e1f34041dacd9572b0d659775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>beam_orig</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a0cdf7dc3d3eed0d37f46cb71fdea206e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pbeam_orig</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a7cdf0ab2591b95d89940d51e3ab01529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>wbeam_orig</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a7f3ecc2f769143e42ed958744478db3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32</type>
      <name>beam_factor</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a8e86d9f82189f8429d71ee2f67ecaaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>wbeam</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>af28ddecbb5115a50712c61f8a72dcf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>wip</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>ae9ddc3b50d0f164926392f8ab4b019a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>frame</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>acdac4164d14d531b14c11a823dd22893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>final</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a5139d7ab35ae18407e06e78e1778f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>bestpath</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>aba7eff57919c5a1de55eab3a62ff055a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32</type>
      <name>ascale</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a4d13fff2e14882b0125386fc27a4097f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bestscore</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a52880ad440412d76f7aae7e05977ba4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bpidx_start</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a24d59609008ac132dca256d36a89f9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>lscr</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a709277a80e9418ecc3e63296f8eb6bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_hmm_eval</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a7e3d7375b4a33af339e8b55885677faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sen_eval</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>a56494e3b30d0c66367c7ef055b8addb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ptmr_t</type>
      <name>perf</name>
      <anchorfile>structfsg__search__s.html</anchorfile>
      <anchor>add677e47865b37fb38068a78abc7b2c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fsg_seg_s</name>
    <filename>structfsg__seg__s.html</filename>
    <member kind="variable">
      <type>ps_seg_t</type>
      <name>base</name>
      <anchorfile>structfsg__seg__s.html</anchorfile>
      <anchor>a9f977be4814ec887aadb3cea35f96bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fsg_hist_entry_t **</type>
      <name>hist</name>
      <anchorfile>structfsg__seg__s.html</anchorfile>
      <anchor>ae41fbe837c6c921133c91453c58ba68e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_hist</name>
      <anchorfile>structfsg__seg__s.html</anchorfile>
      <anchor>aca806a5b88f77803fff4c4c984034515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>cur</name>
      <anchorfile>structfsg__seg__s.html</anchorfile>
      <anchor>a4b5e46bf79915c97845974e80355ebbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gauden_dist_t</name>
    <filename>structgauden__dist__t.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>id</name>
      <anchorfile>structgauden__dist__t.html</anchorfile>
      <anchor>a93e978149bae5b5bf089769458c42ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mfcc_t</type>
      <name>dist</name>
      <anchorfile>structgauden__dist__t.html</anchorfile>
      <anchor>ab08100d4953998dad76bfcf30864c0c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gauden_t</name>
    <filename>structgauden__t.html</filename>
    <member kind="variable">
      <type>mfcc_t ****</type>
      <name>mean</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>aa76d63009601dcb6b99f17db96167f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mfcc_t ****</type>
      <name>var</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>a172cb69c018608ab8c33d54e6f0fdf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mfcc_t ***</type>
      <name>det</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>a315918a44ff97b95a6fcdf8739d8089b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>logmath_t *</type>
      <name>lmath</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>ae05c9b82d8a586bea347681ebe04bb83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_mgau</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>af15df11bd2f3ab0290e0a33ca15c836c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_feat</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>a6dea221962b4a278dbae4806925a7be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_density</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>ab5104d8fa59bc94b12b36104dd4c19ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>featlen</name>
      <anchorfile>structgauden__t.html</anchorfile>
      <anchor>aca099d830de926e628ac0b523046b32c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>history_s</name>
    <filename>structhistory__s.html</filename>
    <member kind="variable">
      <type>phmm_t *</type>
      <name>phmm</name>
      <anchorfile>structhistory__s.html</anchorfile>
      <anchor>a548a5d7505c78278114ab9b1d5e0ceaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>score</name>
      <anchorfile>structhistory__s.html</anchorfile>
      <anchor>af24720abad5e2e17a99c5aeffa7dc95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>tscore</name>
      <anchorfile>structhistory__s.html</anchorfile>
      <anchor>a09096eb94eba8ad29dc19f231192a24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>ef</name>
      <anchorfile>structhistory__s.html</anchorfile>
      <anchor>a59e1a1053ba224c4d015f08192c7fd96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>hist</name>
      <anchorfile>structhistory__s.html</anchorfile>
      <anchor>a0e9457246e140d8af571eea044178551</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hmm_context_s</name>
    <filename>structhmm__context__s.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>n_emit_state</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>a27ba4c5db11110bddf240dd52ed36084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 **const *</type>
      <name>tp</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>a9ef2d83f67525050bea8b05f8a118f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 const *</type>
      <name>senscore</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>a1cca9eb94bc20d9c5e60f2da18074397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16 *const *</type>
      <name>sseq</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>abbb0a32aadcc1938d9f21b04204c52da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>st_sen_scr</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>a671c02e0443f41914471a7acfac6125c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>mpx_ssid_alloc</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>a63486d186a984a87d060064e65fab564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>udata</name>
      <anchorfile>structhmm__context__s.html</anchorfile>
      <anchor>a1f80af93746230d41b4ee7e89786a4c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hmm_context_t</name>
    <filename>structhmm__context__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>hmm_s</name>
    <filename>structhmm__s.html</filename>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>ctx</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>aa47f90a8a9387d4f721cf0de9129b059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>score</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a5aa78f8b09547dc90d83fa1e3d8cf3c3</anchor>
      <arglist>[HMM_MAX_NSTATE]</arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>history</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>ab7be2a31a64eb152eee76b5192ad03e7</anchor>
      <arglist>[HMM_MAX_NSTATE]</arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>out_score</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a9d9c7fc2468f7725cd0d8fcc7d731f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>out_history</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a849e7be0748c36446c2f9e72088efab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>ssid</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>ad4b029868ba7dd9c27e7be2067651be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>senid</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>abbe5d689b86ce9d3c5dfa2290a33285b</anchor>
      <arglist>[HMM_MAX_NSTATE]</arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bestscore</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a574850d7092b1e574addf0027b32ea61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>tmatid</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a041bb6bd205ce1e0e5e1082d2c8a3586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>frame</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>ab89d10923ba5a0dc14dc46d76d8daaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>mpx</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a25329f2f580cbdbe37be29bc9c2352be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>n_emit_state</name>
      <anchorfile>structhmm__s.html</anchorfile>
      <anchor>a6a2b5c90489a11d79e4c65984b69bf7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hmm_t</name>
    <filename>structhmm__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>kws_detection_s</name>
    <filename>structkws__detection__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>kws_detections_s</name>
    <filename>structkws__detections__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>kws_keyword_s</name>
    <filename>structkws__keyword__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>kws_search_s</name>
    <filename>structkws__search__s.html</filename>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>hmmctx</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a0069d57702f921cbd1e2093148e7b672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>kws_detections_t *</type>
      <name>detections</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>ac7bd23ef33f85b4173a8d9a7cc9b9a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>kws_keyword_t *</type>
      <name>keyphrases</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a0eec404435d9f8ad2700487f8a178f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_keyphrases</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>acd47cbdc3c0708d869888b99e6f5982c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>frame</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a68a833afd9d01bdf4c2cc640b575eea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>plp</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a3bfc1d19e39d1cd321ce47280f1abe00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bestscore</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a0a04bba471516468d1b2bea14632f255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>def_threshold</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>afce4456a796dbc72149d7a47159ccca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>delay</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>acf2597fd017db4c2f90a9ba54e08a20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_pl</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>aab6e42d0c93af992c16e2a75db386df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_t *</type>
      <name>pl_hmms</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a7b501f4cc5f4efb7b4ca0259afcf4e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ptmr_t</type>
      <name>perf</name>
      <anchorfile>structkws__search__s.html</anchorfile>
      <anchor>a0cc9f5fcc60e181adfef86acf781076d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>kws_seg_s</name>
    <filename>structkws__seg__s.html</filename>
    <member kind="variable">
      <type>ps_seg_t</type>
      <name>base</name>
      <anchorfile>structkws__seg__s.html</anchorfile>
      <anchor>ab8b059f475f5e64301195cf9816bde2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gnode_t *</type>
      <name>detection</name>
      <anchorfile>structkws__seg__s.html</anchorfile>
      <anchor>a5de99d98b2be6e0348033c9fc05ec139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>last_frame</name>
      <anchorfile>structkws__seg__s.html</anchorfile>
      <anchor>a7c7afd51e8b0484936fe23039f111151</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>last_ltrans_t</name>
    <filename>structlast__ltrans__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>lastphn_cand_s</name>
    <filename>structlastphn__cand__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>latlink_list_s</name>
    <filename>structlatlink__list__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>mdef_entry_s</name>
    <filename>structmdef__entry__s.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>ssid</name>
      <anchorfile>structmdef__entry__s.html</anchorfile>
      <anchor>a12986649de9c59de3cc805e375b2c9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>tmat</name>
      <anchorfile>structmdef__entry__s.html</anchorfile>
      <anchor>a90758df5d6eb00d3a70135ac4475c7a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mdef_t</name>
    <filename>structmdef__t.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>n_ciphone</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>af460d8d703782cf50ed99164cee17347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_phone</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a987f0b9bc4c951ac031f5d283960bd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_emit_state</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a4a7ffa9d1b9a95a3bf3cca7bd955020a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_ci_sen</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a68c3cc85b849363609fd5dadf412a38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sen</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a966e28ae25bd8e766dbe81549cbdcd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_tmat</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a44d1d9fd99db66f1c37937e89172fed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hash_table_t *</type>
      <name>ciphone_ht</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a1091b9f34193255ccf6038d75523187b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ciphone_t *</type>
      <name>ciphone</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>aae4a51202b87f71394b6c5b3138b77c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>phone_t *</type>
      <name>phone</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a2b9aaf78e5648fe14655d1fe8da5f164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16 **</type>
      <name>sseq</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a2472170a66d451d2d4873a9a6e64adc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sseq</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>ad9afd537734fe1f336e20218da28fb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 *</type>
      <name>cd2cisen</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>ae2ba90b39a79603022daae3c9270a0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16 *</type>
      <name>sen2cimap</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a4aafd791a1e1adaa9b5b28bf0cfbd624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>sil</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>acc9a57b57bbecaef55cc72be57b875f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ph_lc_t ***</type>
      <name>wpos_ci_lclist</name>
      <anchorfile>structmdef__t.html</anchorfile>
      <anchor>a5dd5c3d3058a314f4c971a14d1df5f38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ms_mgau_model_t</name>
    <filename>structms__mgau__model__t.html</filename>
    <member kind="variable">
      <type>gauden_t *</type>
      <name>g</name>
      <anchorfile>structms__mgau__model__t.html</anchorfile>
      <anchor>a91027cdb757280ac557668068e6f1b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>senone_t *</type>
      <name>s</name>
      <anchorfile>structms__mgau__model__t.html</anchorfile>
      <anchor>a551527ce9cd5702d854a1a5600122985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>topn</name>
      <anchorfile>structms__mgau__model__t.html</anchorfile>
      <anchor>a0a67ef79bd74c55734b0944f0d61b668</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ms_mgau_t</name>
    <filename>structms__mgau__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>ngram_search_s</name>
    <filename>structngram__search__s.html</filename>
    <member kind="variable">
      <type>ngram_model_t *</type>
      <name>lmset</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a6127a6d8fb53832e67456c11aa6ad9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>hmmctx</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>acfbdd34e3dadbaa384818402f1dd59bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>chan_alloc</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>abe9fe60f6e48b9a6e3d41856bb1dc109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>root_chan_alloc</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a576470858bfa44c671f0e677902ab424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>latnode_alloc</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a21600dc2e23744f0be9c64a4db8d7e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>root_chan_t *</type>
      <name>root_chan</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>ae1b0a51cfcddc1e4b6ac94fa1e48887a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_root_chan_alloc</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>abc8a67e3f64adc470c78dfdd23be4126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_root_chan</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a297d8bdb856617490ee8ccd99df70e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_nonroot_chan</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a043723786367f5026dce99c261f7086d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>max_nonroot_chan</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a4b2b42349e9e3df7e93b4a7d6994f63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>root_chan_t *</type>
      <name>rhmm_1ph</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a1ffa3c9100252122ae8a2a713c50b527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>chan_t **</type>
      <name>word_chan</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a79deb7295a261cd82d2a6b48cb119e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bitvec_t *</type>
      <name>word_active</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>aeb4c98851bf9b239ca607ca59f59ff4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>homophone_set</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>ab251bb3d0ddd33dd99ed390b61e481f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>single_phone_wid</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a1157923e0060b947e05caa819c8abe2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_1ph_words</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a9168184c862d6f63bd7926e6581b25d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_1ph_LMwords</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a988672d895f1ee61dbf790b2065df4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>chan_t ***</type>
      <name>active_chan_list</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a83731bf0e2234e632c5e78f2321f5b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_active_chan</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>ac33f60894871671ec5c2173ca56d600f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int32 **</type>
      <name>active_word_list</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a5056573bf95990cc28c97a56cd76ce9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_active_word</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a5c864f1fe331fc95c04e0d87a5bdf9ee</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_frame_alloc</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a38ea5de504b3d7ad2390a3f8966d502f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_frame</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a5255e56d28c239a4e1d9b1721e8a2f8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_latnode_t **</type>
      <name>frm_wordlist</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>aa54544457c363ccccb87fc7ec63a5f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>fwdflat_wordlist</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a774f1640c5ece856f4bef98d98e7c959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>best_score</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a150d99157e2f37a6f0dbb4b02682d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>last_phone_best_score</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a81ee45f3c184568e2b5f8b79c58e0b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32</type>
      <name>ascale</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a1e3d4b67e4b11c6c11ebe16552d53d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ngram_search_stats_t</type>
      <name>st</name>
      <anchorfile>structngram__search__s.html</anchorfile>
      <anchor>a5758d167fbb48e824a6a58186620e06d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ngram_search_stats_s</name>
    <filename>structngram__search__stats__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ph_lc_s</name>
    <filename>structph__lc__s.html</filename>
    <member kind="variable">
      <type>int16</type>
      <name>lc</name>
      <anchorfile>structph__lc__s.html</anchorfile>
      <anchor>adfb4e9553a4e2314543f9f1ef661185e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ph_rc_t *</type>
      <name>rclist</name>
      <anchorfile>structph__lc__s.html</anchorfile>
      <anchor>aac24b848d70d96894c312d16050c4051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ph_lc_s *</type>
      <name>next</name>
      <anchorfile>structph__lc__s.html</anchorfile>
      <anchor>a5cda7044037678163c2242dde19df13a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ph_lc_t</name>
    <filename>structph__lc__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>ph_rc_s</name>
    <filename>structph__rc__s.html</filename>
    <member kind="variable">
      <type>int16</type>
      <name>rc</name>
      <anchorfile>structph__rc__s.html</anchorfile>
      <anchor>ab0f0852e254c04a1cb11de805b698733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pid</name>
      <anchorfile>structph__rc__s.html</anchorfile>
      <anchor>a9762d0f7b4b9f284fd2b3ff735b4256b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ph_rc_s *</type>
      <name>next</name>
      <anchorfile>structph__rc__s.html</anchorfile>
      <anchor>ae05aead721c5cfdd27ac90378bb80f3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ph_rc_t</name>
    <filename>structph__rc__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>phmm_s</name>
    <filename>structphmm__s.html</filename>
    <member kind="variable">
      <type>hmm_t</type>
      <name>hmm</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>a829311265f8df700c9fb628f5bdff0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3pid_t</type>
      <name>pid</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>aee52956004053c676230cd8567366b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3cipid_t</type>
      <name>ci</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>afe385b65ca02fb4e3a087a0997ea4eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bitvec_t *</type>
      <name>lc</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>aad9f810256dea9ee491d21eb3a349d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bitvec_t *</type>
      <name>rc</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>a94ead49959a95398643178d8dc1609f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct phmm_s *</type>
      <name>next</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>a62c94d334abbbd2431d5e7e0ace79a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct plink_s *</type>
      <name>succlist</name>
      <anchorfile>structphmm__s.html</anchorfile>
      <anchor>a152d26f99b39098c8027cd2d8372e05c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>phone_loop_renorm_s</name>
    <filename>structphone__loop__renorm__s.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>frame_idx</name>
      <anchorfile>structphone__loop__renorm__s.html</anchorfile>
      <anchor>af54c31c6d417b769b088b898294a135e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>norm</name>
      <anchorfile>structphone__loop__renorm__s.html</anchorfile>
      <anchor>a9a76415892efce2e4b53bc5ea6599010</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>phone_loop_search_s</name>
    <filename>structphone__loop__search__s.html</filename>
    <member kind="variable">
      <type>ps_search_t</type>
      <name>base</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>aea1cf9ffda814f681b57f32c1f8cc3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_t *</type>
      <name>hmms</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a6f29f6a259a1ee07108bb55036cec9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>hmmctx</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a67c44a95de79cb421fbeed4432686f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>frame</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a160e5fb9670d1870e5b21379a87bace5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_phones</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a7844f45806d19d229504378da16bdc4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 **</type>
      <name>pen_buf</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>ad9233a565738a5097097bab89193e2c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>pen_buf_ptr</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a630510d46979533e7acfd1e70d80ea97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>penalties</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a0d01d1eabc94239673b4040e2a6d84fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>penalty_weight</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>adecb101bb21afd9e2a32c3f59b5abdc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>best_score</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>af6bf0231db2587a3f7ffa3f838b84db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>beam</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a1aa6103c72ce8159bd21bfa4f97feff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pbeam</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>aaace8b677a536e41bb4616e6695b11d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pip</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>ac979bc57a659c7853eec1854dbcbfabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>window</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a28788511ed4729a50c1b475312c7b90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glist_t</type>
      <name>renorm</name>
      <anchorfile>structphone__loop__search__s.html</anchorfile>
      <anchor>a273295fbe1a22ad3ddf7db8695a394ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>phone_t</name>
    <filename>structphone__t.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>ssid</name>
      <anchorfile>structphone__t.html</anchorfile>
      <anchor>af2f31836358c1c29c38a361b3923b859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>tmat</name>
      <anchorfile>structphone__t.html</anchorfile>
      <anchor>acbe38b7fc991bfbcb745fb6131d812f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>rc</name>
      <anchorfile>structphone__t.html</anchorfile>
      <anchor>a334106cbedf3d95a6bdebc4704e028cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>word_posn_t</type>
      <name>wpos</name>
      <anchorfile>structphone__t.html</anchorfile>
      <anchor>a5436db1dd178ef5ead83359c84963c83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>phseg_iter_s</name>
    <filename>structphseg__iter__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>phseg_s</name>
    <filename>structphseg__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>plink_s</name>
    <filename>structplink__s.html</filename>
    <member kind="variable">
      <type>phmm_t *</type>
      <name>phmm</name>
      <anchorfile>structplink__s.html</anchorfile>
      <anchor>a6499a81fb81dd9c295318ad323a0740f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct plink_s *</type>
      <name>next</name>
      <anchorfile>structplink__s.html</anchorfile>
      <anchor>a835ba35ee1605a314eefbef9db68c033</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_alignment_entry_s</name>
    <filename>structps__alignment__entry__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_alignment_iter_s</name>
    <filename>structps__alignment__iter__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_alignment_s</name>
    <filename>structps__alignment__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_alignment_vector_s</name>
    <filename>structps__alignment__vector__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_astar_s</name>
    <filename>structps__astar__s.html</filename>
    <member kind="variable">
      <type>glist_t</type>
      <name>hyps</name>
      <anchorfile>structps__astar__s.html</anchorfile>
      <anchor>ace603617a74a81575519ae1bb94720c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>latpath_alloc</name>
      <anchorfile>structps__astar__s.html</anchorfile>
      <anchor>a754bce124cd92b1b2b6aa6dbbcd73cee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_decoder_s</name>
    <filename>structps__decoder__s.html</filename>
    <member kind="variable">
      <type>cmd_ln_t *</type>
      <name>config</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a0565ed97b32408bd05c8104f020cef05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refcount</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>aa5ab90180288b6c9039eb86b496f76aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>acmod_t *</type>
      <name>acmod</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>af834d2bc1d44c1d9ef607b025413a0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict_t *</type>
      <name>dict</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>aef6228c17907cc1d0cef835b238b5d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict2pid_t *</type>
      <name>d2p</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>ae6515cbc261686f3f3bbd95719f79793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>logmath_t *</type>
      <name>lmath</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>abd17fe329f2fb219c5a534f3217c5b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hash_table_t *</type>
      <name>searches</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a43bca42790684eefb8d01a0aef6fa530</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_search_t *</type>
      <name>search</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>ad337270efc93613cf8dd7594f6515799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_search_t *</type>
      <name>phone_loop</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a0c6d141d7a71a1287be00a1ebcc7643d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pl_window</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a0f0a6681ffd98af789f6bed556c814e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>uttno</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a0f597370dd162c2799efe216c9b991fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ptmr_t</type>
      <name>perf</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>ab42d1d1e300d2a6df5dd3cd796a27d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>n_frame</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a2886b321c576c7def449ebb2f37899fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char const *</type>
      <name>mfclogdir</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a8bb5ef8791798b8dd9bc82b1ec016663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char const *</type>
      <name>rawlogdir</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>aa2610c52a9267ee18ca095169bf34bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char const *</type>
      <name>senlogdir</name>
      <anchorfile>structps__decoder__s.html</anchorfile>
      <anchor>a0ed3476113fe3d63b13ac5e8da3f3b4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_latlink_s</name>
    <filename>structps__latlink__s.html</filename>
    <member kind="variable">
      <type>struct ps_latnode_s *</type>
      <name>from</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>ab0912c26d1472b4c5c07042c19ffb979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ps_latnode_s *</type>
      <name>to</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>a782a15b1aeabf68983ca521e51f2c1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>ascr</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>ae8a94ce1afb49292b044a0d4ba42b46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>path_scr</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>a704fcfbdb57b1461325544c782289599</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>ef</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>a59e2bf9a1c0dd6ce4ac76a17c58fbe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>alpha</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>ad2f031d271f1d875223aae33116d3f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>beta</name>
      <anchorfile>structps__latlink__s.html</anchorfile>
      <anchor>a4c27cd5d4f514832d3d46993e2ee87df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_latnode_s</name>
    <filename>structps__latnode__s.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>id</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a78243b37753f7a209c15d6adf98ee3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>wid</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>afd85dbd410d6e6d970c73088bc6fb97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>basewid</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>ae3b3dc7d14347e6380859c74b9a02589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>fef</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a584ee5a303355d851ac903718998df14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>lef</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a5c7b9114d131151d6ce85228ea9f829d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>sf</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a4171e956043e7856c04d84498f16cf29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>reachable</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>af9c4c69f5f85bbc36818357a52432565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>node_id</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a50d14c033652a4fb387f76881df1c3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>latlink_list_t *</type>
      <name>exits</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a5232eefbc6e800b77e7a3c8ee3f4135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>latlink_list_t *</type>
      <name>entries</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>a051a7eed31e29dd75151d1b34cc4eefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ps_latnode_s *</type>
      <name>alt</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>aa4c0a395c74acbacccde561f92fa89e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ps_latnode_s *</type>
      <name>next</name>
      <anchorfile>structps__latnode__s.html</anchorfile>
      <anchor>aca6f3d543a1712a1ca3bb8ec60f71c84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_latpath_s</name>
    <filename>structps__latpath__s.html</filename>
    <member kind="variable">
      <type>ps_latnode_t *</type>
      <name>node</name>
      <anchorfile>structps__latpath__s.html</anchorfile>
      <anchor>a9672f7a5002d994985039aece2a69250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ps_latpath_s *</type>
      <name>parent</name>
      <anchorfile>structps__latpath__s.html</anchorfile>
      <anchor>a87acd26322fca11aa1432cdf9d1a2128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ps_latpath_s *</type>
      <name>next</name>
      <anchorfile>structps__latpath__s.html</anchorfile>
      <anchor>a614ad4a857fb07f76959d385abf50a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>score</name>
      <anchorfile>structps__latpath__s.html</anchorfile>
      <anchor>a9249fb528f754db992df1d494a69b580</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_lattice_s</name>
    <filename>structps__lattice__s.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>refcount</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a6d66b392dec016b3304da2f53be17dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>logmath_t *</type>
      <name>lmath</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a28f4ff5039e0961d57331d2605801010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_search_t *</type>
      <name>search</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a9ebaeb7be7a83980569f0c544eb6babb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict_t *</type>
      <name>dict</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a71865c59fae65743ef3c6b5aceb17da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>silence</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>acd3f3ab2649f649ba33bf2a422cf12b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>frate</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a5159a2ff1e03a7c9782854bc67e56530</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_latnode_t *</type>
      <name>nodes</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a838bd9223e35d012419e6225b54e393d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_latnode_t *</type>
      <name>start</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a5d936695a3813e117d20b585d48db8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_latnode_t *</type>
      <name>end</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a00f30e2689853d6bcb31c8005a69dc7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>n_frames</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a3a997dc60d28b84d5bfc01f9ce25a891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_nodes</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>adcc3bdadae1f3e3ace2d36548983ae78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>final_node_ascr</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>aba113d4134c72d7405423c77bcc1247e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>norm</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a68c3259613a16628e1dd2e8147705d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>hyp_str</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>ac3844c69f8393b607047bd9b302b979a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>latnode_alloc</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a14e4e87550647d5119cd1cc48ff4f3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>latlink_alloc</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>afa8ca535dc8bf2cc656f6ad477e13b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>listelem_alloc_t *</type>
      <name>latlink_list_alloc</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a8e9cfaf92f9a3588d018578854c61e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>latlink_list_t *</type>
      <name>q_head</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a26c029189074db2f668d5a9d67eb7af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>latlink_list_t *</type>
      <name>q_tail</name>
      <anchorfile>structps__lattice__s.html</anchorfile>
      <anchor>a5a9faf5e4aabd84a868d1bff97dd9814</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_mgau_s</name>
    <filename>structps__mgau__s.html</filename>
    <member kind="variable">
      <type>ps_mgaufuncs_t *</type>
      <name>vt</name>
      <anchorfile>structps__mgau__s.html</anchorfile>
      <anchor>a931f7cbf334b8ed50b0e1c2803a10c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frame_idx</name>
      <anchorfile>structps__mgau__s.html</anchorfile>
      <anchor>a19cc836a740e32d0fa88c46fcdc19d75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_mgaufuncs_s</name>
    <filename>structps__mgaufuncs__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_mllr_s</name>
    <filename>structps__mllr__s.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>refcnt</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>ac138bd81a40d8569d795463ea1ec52bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_class</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>a30b9bb76c5469542d531ead4ad1bdcb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_feat</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>acc9e853a333f4e79b24f3e5af0946e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>veclen</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>a20fae2fc119069371464a6502e00c0e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32 ****</type>
      <name>A</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>a4cfa5d4c6637282b947b525a673cc3d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32 ***</type>
      <name>b</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>a65430ba654d0af5e508715de24077f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32 ***</type>
      <name>h</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>ae92b910e17202389aca99ee5105085b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>cb2mllr</name>
      <anchorfile>structps__mllr__s.html</anchorfile>
      <anchor>a745c4b69be55cef8629abab02f474bb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_search_iter_s</name>
    <filename>structps__search__iter__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_search_s</name>
    <filename>structps__search__s.html</filename>
    <member kind="variable">
      <type>ps_searchfuncs_t *</type>
      <name>vt</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>aa51e88956bbe9c05359d32526180809b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_search_t *</type>
      <name>pls</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a2a33b7698fb237b42e007788f65cd46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cmd_ln_t *</type>
      <name>config</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>aa6e3e18165bbc70084a06575d5703042</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>acmod_t *</type>
      <name>acmod</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a0fdf6fe8c4d9c28f10c48c09517c6b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict_t *</type>
      <name>dict</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a918f243fa966e72c47f697fb9e60089d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict2pid_t *</type>
      <name>d2p</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a81b461e7ef3a080d046039e186134a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>hyp_str</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>aa398c736a887af97e42b2a562359adc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_lattice_t *</type>
      <name>dag</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a897f46c55d17e817ff1364f555b31463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_latlink_t *</type>
      <name>last_link</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>aa3020ef7bd4e56713dfe2fbad52e6e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>post</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a721a656d0e34f7604ea8c52a1bdf14ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_words</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>ad4d98deb905bd664ec44313ea0065b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>start_wid</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>ae1a9fa33bfc851ec91ce96870714b3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>silence_wid</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>ab6851b4675f38ab6b3683d75521f000b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>finish_wid</name>
      <anchorfile>structps__search__s.html</anchorfile>
      <anchor>a0fb4d79f1084bdbbc0a808513f7c1ca7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_searchfuncs_s</name>
    <filename>structps__searchfuncs__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ps_seg_s</name>
    <filename>structps__seg__s.html</filename>
    <member kind="variable">
      <type>ps_segfuncs_t *</type>
      <name>vt</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a510362a2281e374c839397c3e5488515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_search_t *</type>
      <name>search</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a14168ddcb60e094dad36c7c920a79bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char const *</type>
      <name>word</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a97a0dc7db931c7e3f98d23d21ce27f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>sf</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a885a599726cd0efba573d106d016e6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>frame_idx_t</type>
      <name>ef</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>ab25ecc6af8d2695c6097cf7e934eadd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>ascr</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a6f7706ec4c0d0ec8ecafaf0f29f41f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>lscr</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a69e605f422eeed1a9c67437e8ddd8b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>prob</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>ae683244d90d0a5339930b47757778432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>lback</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a4d86c21f1ed2dc3eb3b1b1b37ce9bb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32</type>
      <name>lwf</name>
      <anchorfile>structps__seg__s.html</anchorfile>
      <anchor>a2249c012b83c902f4f8ed8d98ded7d20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ps_segfuncs_s</name>
    <filename>structps__segfuncs__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>ptm_fast_eval_s</name>
    <filename>structptm__fast__eval__s.html</filename>
    <member kind="variable">
      <type>ptm_topn_t ***</type>
      <name>topn</name>
      <anchorfile>structptm__fast__eval__s.html</anchorfile>
      <anchor>a95e382028ed8a0af8b56bfcb797af96b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bitvec_t *</type>
      <name>mgau_active</name>
      <anchorfile>structptm__fast__eval__s.html</anchorfile>
      <anchor>ac5d3b21239d567b395015d7c4fea157c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ptm_mgau_s</name>
    <filename>structptm__mgau__s.html</filename>
    <member kind="variable">
      <type>ps_mgau_t</type>
      <name>base</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>ac7ccb744c03564e3c1b360b3436cb3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cmd_ln_t *</type>
      <name>config</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>aa9cd83ce89052bd6d112ecff54d118f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gauden_t *</type>
      <name>g</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>adfba8a590e8d71812ea8082f485e7ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_sen</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>ab0f6c452efe082383e906ac2a4f75de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 *</type>
      <name>sen2cb</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>a5e677255165b8abda63dd1d6dbed1be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 ***</type>
      <name>mixw</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>af0898f6d5b5b863901a4a4858a10d32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ptm_fast_eval_t *</type>
      <name>hist</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>a68c75460ebffecc786d7eb2840ed7631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ptm_fast_eval_t *</type>
      <name>f</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>aad0c43234e33c2307ce0df2ddb1c05c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_fast_hist</name>
      <anchorfile>structptm__mgau__s.html</anchorfile>
      <anchor>ac491c223199ed5374dfb13fc41854601</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ptm_topn_s</name>
    <filename>structptm__topn__s.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>cw</name>
      <anchorfile>structptm__topn__s.html</anchorfile>
      <anchor>a8a46095488efefa2714214a7a74117b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>score</name>
      <anchorfile>structptm__topn__s.html</anchorfile>
      <anchor>aa2080ad2d4f038cdbfbf46bf90884f56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>root_chan_s</name>
    <filename>structroot__chan__s.html</filename>
    <member kind="variable">
      <type>hmm_t</type>
      <name>hmm</name>
      <anchorfile>structroot__chan__s.html</anchorfile>
      <anchor>a9d4d92ffa8b4079202ddebe3ba0eb290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>chan_t *</type>
      <name>next</name>
      <anchorfile>structroot__chan__s.html</anchorfile>
      <anchor>ae0f0b90a7cb2fcb54cd7b30502dd497e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>this_phn_wid</name>
      <anchorfile>structroot__chan__s.html</anchorfile>
      <anchor>af5bb41f0c9a03211ab90919f65be1564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>ciphone</name>
      <anchorfile>structroot__chan__s.html</anchorfile>
      <anchor>ad67c37bf4183f518acd7760c09a806f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>ci2phone</name>
      <anchorfile>structroot__chan__s.html</anchorfile>
      <anchor>a0c0cf22caf4c97879af86865764f1675</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>s2_semi_mgau_s</name>
    <filename>structs2__semi__mgau__s.html</filename>
    <member kind="variable">
      <type>ps_mgau_t</type>
      <name>base</name>
      <anchorfile>structs2__semi__mgau__s.html</anchorfile>
      <anchor>a9002aae86249006f0b045e5203ec9687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vqFeature_t ***</type>
      <name>topn_hist</name>
      <anchorfile>structs2__semi__mgau__s.html</anchorfile>
      <anchor>a8892e22acbf81b08972cb6d7968ed4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 **</type>
      <name>topn_hist_n</name>
      <anchorfile>structs2__semi__mgau__s.html</anchorfile>
      <anchor>acfe1e5d43a25418ef19afba837f85cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vqFeature_t **</type>
      <name>f</name>
      <anchorfile>structs2__semi__mgau__s.html</anchorfile>
      <anchor>ad8cb7f058bcc7402dd6a41c61f1b26e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_topn_hist</name>
      <anchorfile>structs2__semi__mgau__s.html</anchorfile>
      <anchor>a3cbc9fe683da5b7befe6b2712adae327</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>senone_t</name>
    <filename>structsenone__t.html</filename>
    <member kind="variable">
      <type>senprob_t ***</type>
      <name>pdf</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>aa7e23dc8a18875bad1c1b9c322f3cad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>logmath_t *</type>
      <name>lmath</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>aa8621fab8c5b7a13493cae5549a5e0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>n_sen</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>a769aa6d2fc16b33c0b9a1cbf31592422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>n_feat</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>a6a0aa50b8ff66e06f7305d1c8e4a17be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>n_cw</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>a3c382a37dc9cb650d910bb881c52b336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>n_gauden</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>a71cf7b41b2334216944380296c03c99a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float32</type>
      <name>mixwfloor</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>af3f77493f07dd1740084ea8dc4541cb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32 *</type>
      <name>mgau</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>a5f0eee5a11e7c10b20e0cce10305edfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32 *</type>
      <name>featscr</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>a58af20c262d9d633f53c8c1c7e60459e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>aw</name>
      <anchorfile>structsenone__t.html</anchorfile>
      <anchor>ad9b17f6aecf056fcea0eaaab0c7d35ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>state_align_hist_s</name>
    <filename>structstate__align__hist__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>state_align_search_s</name>
    <filename>structstate__align__search__s.html</filename>
    <member kind="variable">
      <type>ps_search_t</type>
      <name>base</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>ab2a596d687e113c88a271d1397b8d9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_context_t *</type>
      <name>hmmctx</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a683e76dbcc87cde89ca5d45b4b91c1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ps_alignment_t *</type>
      <name>al</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a47b9b509c7416f8952ee452d8ce7dda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hmm_t *</type>
      <name>hmms</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a78ea3ffae6ecc3c004ff60707dc225b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_phones</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>ab248827613cdbc892e35e57d5c43c7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frame</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>aa520abfdb4d0bca2b769f281839637a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>best_score</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a1810f343c6ae382f5ed0a5eb02d33037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_emit_state</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a80c74bac917a8203bb74f5738621ce83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>state_align_hist_t *</type>
      <name>tokens</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a2fae207533462fe6efe19c8a2a3a64e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_fr_alloc</name>
      <anchorfile>structstate__align__search__s.html</anchorfile>
      <anchor>a97956b4924cba2b37470ff17f29c37bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tmat_t</name>
    <filename>structtmat__t.html</filename>
    <member kind="variable">
      <type>uint8 ***</type>
      <name>tp</name>
      <anchorfile>structtmat__t.html</anchorfile>
      <anchor>a9f518c96b30dab9efdb69bd779a7b5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_tmat</name>
      <anchorfile>structtmat__t.html</anchorfile>
      <anchor>ada644af34d54256f1574870d5f7a6788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>n_state</name>
      <anchorfile>structtmat__t.html</anchorfile>
      <anchor>a3633c71659e30cf23bee1f7efb4b4805</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vqFeature_s</name>
    <filename>structvqFeature__s.html</filename>
  </compound>
  <compound kind="struct">
    <name>xwdssid_t</name>
    <filename>structxwdssid__t.html</filename>
    <member kind="variable">
      <type>s3ssid_t *</type>
      <name>ssid</name>
      <anchorfile>structxwdssid__t.html</anchorfile>
      <anchor>adbeeda6e94a51f08626c13414cdad6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s3cipid_t *</type>
      <name>cimap</name>
      <anchorfile>structxwdssid__t.html</anchorfile>
      <anchor>a502f9241a70383aa260d3390e4ff58fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_ssid</name>
      <anchorfile>structxwdssid__t.html</anchorfile>
      <anchor>ab4443c642c5aff57c35abed070112d6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>include</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/include/</path>
    <filename>dir_d44c64559bbebec7f509842c48db8b23.html</filename>
    <file>cmdln_macro.h</file>
    <file>pocketsphinx.h</file>
    <file>pocketsphinx_export.h</file>
    <file>ps_lattice.h</file>
    <file>ps_mllr.h</file>
    <file>ps_search.h</file>
  </compound>
  <compound kind="dir">
    <name>src/libpocketsphinx</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/libpocketsphinx/</path>
    <filename>dir_8d034a1e03e98d9b7ac467250bbebdea.html</filename>
    <file>acmod.c</file>
    <file>acmod.h</file>
    <file>allphone_search.c</file>
    <file>allphone_search.h</file>
    <file>bin_mdef.c</file>
    <file>bin_mdef.h</file>
    <file>blkarray_list.c</file>
    <file>blkarray_list.h</file>
    <file>dict.c</file>
    <file>dict.h</file>
    <file>dict2pid.c</file>
    <file>dict2pid.h</file>
    <file>fsg_history.c</file>
    <file>fsg_history.h</file>
    <file>fsg_lextree.c</file>
    <file>fsg_lextree.h</file>
    <file>fsg_search.c</file>
    <file>fsg_search_internal.h</file>
    <file>hmm.c</file>
    <file>hmm.h</file>
    <file>kws_detections.c</file>
    <file>kws_detections.h</file>
    <file>kws_search.c</file>
    <file>kws_search.h</file>
    <file>mdef.c</file>
    <file>mdef.h</file>
    <file>ms_gauden.c</file>
    <file>ms_gauden.h</file>
    <file>ms_mgau.c</file>
    <file>ms_mgau.h</file>
    <file>ms_senone.c</file>
    <file>ms_senone.h</file>
    <file>ngram_search.c</file>
    <file>ngram_search.h</file>
    <file>ngram_search_fwdflat.c</file>
    <file>ngram_search_fwdflat.h</file>
    <file>ngram_search_fwdtree.c</file>
    <file>ngram_search_fwdtree.h</file>
    <file>phone_loop_search.c</file>
    <file>phone_loop_search.h</file>
    <file>pocketsphinx.c</file>
    <file>pocketsphinx_internal.h</file>
    <file>ps_alignment.c</file>
    <file>ps_alignment.h</file>
    <file>ps_lattice.c</file>
    <file>ps_lattice_internal.h</file>
    <file>ps_mllr.c</file>
    <file>ptm_mgau.c</file>
    <file>ptm_mgau.h</file>
    <file>s2_semi_mgau.c</file>
    <file>s2_semi_mgau.h</file>
    <file>s3types.h</file>
    <file>state_align_search.c</file>
    <file>state_align_search.h</file>
    <file>tied_mgau_common.h</file>
    <file>tmat.c</file>
    <file>tmat.h</file>
    <file>vector.c</file>
    <file>vector.h</file>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/scratch/cluster/rcorona/nlu_pipeline/src/speech/experiments/pocketsphinx/src/</path>
    <filename>dir_68267d1309a1af8e8297ef4c3efbcdba.html</filename>
    <dir>src/libpocketsphinx</dir>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>PocketSphinx API Documentation</title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">intro_sec</docanchor>
  </compound>
</tagfile>
