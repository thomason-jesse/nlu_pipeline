<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="jsgf__internal_8h" kind="file">
    <compoundname>jsgf_internal.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="hash__table_8h" local="no">sphinxbase/hash_table.h</includes>
    <includes refid="glist_8h" local="no">sphinxbase/glist.h</includes>
    <includes refid="fsg__model_8h" local="no">sphinxbase/fsg_model.h</includes>
    <includes refid="logmath_8h" local="no">sphinxbase/logmath.h</includes>
    <includes refid="strfuncs_8h" local="no">sphinxbase/strfuncs.h</includes>
    <includes refid="jsgf_8h" local="no">sphinxbase/jsgf.h</includes>
    <includedby refid="jsgf_8c" local="yes">src/libsphinxbase/lm/jsgf.c</includedby>
    <includedby refid="jsgf__parser_8c" local="yes">src/libsphinxbase/lm/jsgf_parser.c</includedby>
    <includedby refid="jsgf__scanner_8c" local="yes">src/libsphinxbase/lm/jsgf_scanner.c</includedby>
    <incdepgraph>
      <node id="1660">
        <label>stdarg.h</label>
      </node>
      <node id="1648">
        <label>src/libsphinxbase/lm/jsgf_internal.h</label>
        <link refid="jsgf_internal.h"/>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1650" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
      </node>
      <node id="1652">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1653" relation="include">
        </childnode>
      </node>
      <node id="1665">
        <label>sphinxbase/strfuncs.h</label>
        <link refid="strfuncs_8h"/>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
      <node id="1655">
        <label>stdlib.h</label>
      </node>
      <node id="1663">
        <label>setjmp.h</label>
      </node>
      <node id="1650">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
      </node>
      <node id="1654">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
      <node id="1661">
        <label>sphinxbase/bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="1657" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
      </node>
      <node id="1656">
        <label>sphinxbase/fsg_model.h</label>
        <link refid="fsg__model_8h_source"/>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1657" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1650" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
      </node>
      <node id="1662">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
      <node id="1653">
        <label>sphinx_config.h</label>
      </node>
      <node id="1657">
        <label>string.h</label>
      </node>
      <node id="1658">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
        <childnode refid="1659" relation="include">
        </childnode>
      </node>
      <node id="1651">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1659">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
      <node id="1666">
        <label>sphinxbase/jsgf.h</label>
        <link refid="jsgf_8h"/>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1650" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
      </node>
      <node id="1649">
        <label>stdio.h</label>
      </node>
      <node id="1664">
        <label>sphinxbase/listelem_alloc.h</label>
        <link refid="listelem__alloc_8h"/>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1667">
        <label>src/libsphinxbase/lm/jsgf_internal.h</label>
        <link refid="jsgf_internal.h"/>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1670" relation="include">
        </childnode>
      </node>
      <node id="1669">
        <label>src/libsphinxbase/lm/jsgf_parser.c</label>
        <link refid="jsgf__parser_8c_source"/>
      </node>
      <node id="1670">
        <label>src/libsphinxbase/lm/jsgf_scanner.c</label>
        <link refid="jsgf__scanner_8c_source"/>
      </node>
      <node id="1668">
        <label>src/libsphinxbase/lm/jsgf.c</label>
        <link refid="jsgf_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structjsgf__s" prot="public">jsgf_s</innerclass>
    <innerclass refid="structjsgf__rule__stack__s" prot="public">jsgf_rule_stack_s</innerclass>
    <innerclass refid="structjsgf__rule__s" prot="public">jsgf_rule_s</innerclass>
    <innerclass refid="structjsgf__rhs__s" prot="public">jsgf_rhs_s</innerclass>
    <innerclass refid="structjsgf__atom__s" prot="public">jsgf_atom_s</innerclass>
    <innerclass refid="structjsgf__link__s" prot="public">jsgf_link_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jsgf__internal_8h_1a85523a0c7d95c059d251b4e9829947aa" prot="public" static="no">
        <name>YY_NO_INPUT</name>
        <initializer>/* Silence a compiler warning. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="68" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__internal_8h_1ac4452bbb59863e64d73f4fe2d6cd394f" prot="public" static="no">
        <name>jsgf_atom_is_rule</name>
        <param><defname>atom</defname></param>
        <initializer>((atom)-&gt;name[0] == &apos;&lt;&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="122" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jsgf__internal_8h_1ad8fc00ae94c7a558005de3e89c35142f" prot="public" static="no">
        <type>struct <ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_s</ref></type>
        <definition>typedef struct jsgf_rhs_s jsgf_rhs_t</definition>
        <argsstring></argsstring>
        <name>jsgf_rhs_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="937" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jsgf__internal_8h_1a439a04913bdb6a58d86ad152b952f0ee" prot="public" static="no">
        <type>struct <ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_s</ref></type>
        <definition>typedef struct jsgf_atom_s jsgf_atom_t</definition>
        <argsstring></argsstring>
        <name>jsgf_atom_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="937" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jsgf__internal_8h_1a5b84ef71c936d856751f19992a7245eb" prot="public" static="no">
        <type>struct <ref refid="structjsgf__link__s" kindref="compound">jsgf_link_s</ref></type>
        <definition>typedef struct jsgf_link_s jsgf_link_t</definition>
        <argsstring></argsstring>
        <name>jsgf_link_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="937" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jsgf__internal_8h_1a7a1929b39761f5f252c3fb5965e9461b" prot="public" static="no">
        <type>struct <ref refid="structjsgf__rule__stack__s" kindref="compound">jsgf_rule_stack_s</ref></type>
        <definition>typedef struct jsgf_rule_stack_s jsgf_rule_stack_t</definition>
        <argsstring></argsstring>
        <name>jsgf_rule_stack_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="937" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jsgf__internal_8h_1acb5af4a04abc56a8584eba9b937f8154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsgf_add_link</definition>
        <argsstring>(jsgf_t *grammar, jsgf_atom_t *atom, int from, int to)</argsstring>
        <name>jsgf_add_link</name>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>grammar</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref> *</type>
          <declname>atom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="124" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="191" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1a0e59b63784fa8761358bb2bdf568bec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref> *</type>
        <definition>jsgf_atom_t* jsgf_atom_new</definition>
        <argsstring>(char *name, float weight)</argsstring>
        <name>jsgf_atom_new</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="125" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1ab9dc2ab39224cda76c43822150cf7e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref> *</type>
        <definition>jsgf_atom_t* jsgf_kleene_new</definition>
        <argsstring>(jsgf_t *jsgf, jsgf_atom_t *atom, int plus)</argsstring>
        <name>jsgf_kleene_new</name>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref> *</type>
          <declname>atom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="126" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="157" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1a4a07cb0721add8783f0ea24dfacd6c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref> *</type>
        <definition>jsgf_rule_t* jsgf_optional_new</definition>
        <argsstring>(jsgf_t *jsgf, jsgf_rhs_t *exp)</argsstring>
        <name>jsgf_optional_new</name>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref> *</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="127" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1ae7e6644fc37252110c3c0ea0edd229f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref> *</type>
        <definition>jsgf_rule_t* jsgf_define_rule</definition>
        <argsstring>(jsgf_t *jsgf, char *name, jsgf_rhs_t *rhs, int is_public)</argsstring>
        <name>jsgf_define_rule</name>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref> *</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_public</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="128" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="681" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1afe1e47584e4dd80929552ffed77373f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref> *</type>
        <definition>jsgf_rule_t* jsgf_import_rule</definition>
        <argsstring>(jsgf_t *jsgf, char *name)</argsstring>
        <name>jsgf_import_rule</name>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="129" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="759" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1a289d683bf62d1a5aaac6917fa64f54f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jsgf_atom_free</definition>
        <argsstring>(jsgf_atom_t *atom)</argsstring>
        <name>jsgf_atom_free</name>
        <param>
          <type><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref> *</type>
          <declname>atom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="131" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1af2faf6fb74ad1e4d43cf990c1bcec672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jsgf_rule_free</definition>
        <argsstring>(jsgf_rule_t *rule)</argsstring>
        <name>jsgf_rule_free</name>
        <param>
          <type><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref> *</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="132" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="722" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__internal_8h_1ad152a23eb0f0d9af8417919fc93074fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref> *</type>
        <definition>jsgf_rule_t* jsgf_rule_retain</definition>
        <argsstring>(jsgf_rule_t *rule)</argsstring>
        <name>jsgf_rule_retain</name>
        <param>
          <type><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref> *</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h" line="133" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf.c" bodystart="715" bodyend="719"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Internal definitions for JSGF grammar compiler. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2007<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__JSGF_INTERNAL_H__</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__JSGF_INTERNAL_H__</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hash__table_8h" kindref="compound">sphinxbase/hash_table.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="glist_8h" kindref="compound">sphinxbase/glist.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/fsg_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="logmath_8h" kindref="compound">sphinxbase/logmath.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="strfuncs_8h" kindref="compound">sphinxbase/strfuncs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="jsgf_8h" kindref="compound">sphinxbase/jsgf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flex<sp/>uses<sp/>strdup<sp/>which<sp/>is<sp/>missing<sp/>on<sp/>WinCE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(_WIN32_WCE)</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>strdup<sp/>_strdup</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Fool<sp/>Emacs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_NO_INPUT<sp/></highlight><highlight class="comment">/*<sp/>Silence<sp/>a<sp/>compiler<sp/>warning.<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_s</ref><sp/><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_s</ref><sp/><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__link__s" kindref="compound">jsgf_link_s</ref><sp/><ref refid="structjsgf__link__s" kindref="compound">jsgf_link_t</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__rule__stack__s" kindref="compound">jsgf_rule_stack_s</ref><sp/><ref refid="structjsgf__rule__stack__s" kindref="compound">jsgf_rule_stack_t</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structjsgf__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__s" kindref="compound">jsgf_s</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="structjsgf__s_1ad459d19b47134a9670ffa4e8c466c0df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjsgf__s_1ad459d19b47134a9670ffa4e8c466c0df" kindref="member">version</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="structjsgf__s_1ac7cba2982a4c14503afbe1df5f208002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjsgf__s_1ac7cba2982a4c14503afbe1df5f208002" kindref="member">charset</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="structjsgf__s_1a0423fa12efb23c307765d7d010908e0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjsgf__s_1a0423fa12efb23c307765d7d010908e0f" kindref="member">locale</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="structjsgf__s_1ab418c438a9c7f7e8aee029f006897656" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjsgf__s_1ab418c438a9c7f7e8aee029f006897656" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="structjsgf__s_1af257160279ab56ffca65966aeac18ef9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*<ref refid="structjsgf__s_1af257160279ab56ffca65966aeac18ef9" kindref="member">rules</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="structjsgf__s_1a7efd071684d4ef7f077b0b06ce7bbc78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*<ref refid="structjsgf__s_1a7efd071684d4ef7f077b0b06ce7bbc78" kindref="member">imports</ref>;<sp/></highlight></codeline>
<codeline lineno="83" refid="structjsgf__s_1af05b28c1350c76d64539403791522128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*<ref refid="structjsgf__s_1af05b28c1350c76d64539403791522128" kindref="member">parent</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="structjsgf__s_1aabb207f0909c661a831e5f931dd9f60e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="structjsgf__s_1aabb207f0909c661a831e5f931dd9f60e" kindref="member">searchpath</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scratch<sp/>variables<sp/>for<sp/>FSG<sp/>conversion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structjsgf__s_1a380c1b82e1bd776438303159e5129773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjsgf__s_1a380c1b82e1bd776438303159e5129773" kindref="member">nstate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="structjsgf__s_1a6ee31bac19680f01c413969a75ad838a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="structjsgf__s_1a6ee31bac19680f01c413969a75ad838a" kindref="member">links</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="structjsgf__s_1a0980112df6f2f591e64158266eb04b69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="structjsgf__s_1a0980112df6f2f591e64158266eb04b69" kindref="member">rulestack</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>type<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>stack<sp/>of<sp/>rules<sp/>currently<sp/>being<sp/>expanded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structjsgf__rule__stack__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__rule__stack__s" kindref="compound">jsgf_rule_stack_s</ref><sp/>{</highlight></codeline>
<codeline lineno="94" refid="structjsgf__rule__stack__s_1a5fd5facd2b790c949ef2efa80b07148a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*<ref refid="structjsgf__rule__stack__s_1a5fd5facd2b790c949ef2efa80b07148a" kindref="member">rule</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="structjsgf__rule__stack__s_1a56107dc6cc50d45a5c1811785e8169b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjsgf__rule__stack__s_1a56107dc6cc50d45a5c1811785e8169b7" kindref="member">entry</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structjsgf__rule__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_s</ref><sp/>{</highlight></codeline>
<codeline lineno="99" refid="structjsgf__rule__s_1aeb4c05f6daa425a37d362e2c6de1228e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjsgf__rule__s_1aeb4c05f6daa425a37d362e2c6de1228e" kindref="member">refcnt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="structjsgf__rule__s_1a1b1de5afa4c0f27df4e8d51ebc47ca92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjsgf__rule__s_1a1b1de5afa4c0f27df4e8d51ebc47ca92" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="structjsgf__rule__s_1a36478d9850594d6a201c6724ec1f1fa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjsgf__rule__s_1a36478d9850594d6a201c6724ec1f1fa4" kindref="member">is_public</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structjsgf__rule__s_1a6923b74ad72f8b663cc00dfa99490981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref><sp/>*<ref refid="structjsgf__rule__s_1a6923b74ad72f8b663cc00dfa99490981" kindref="member">rhs</ref>;<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structjsgf__rhs__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_s</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="structjsgf__rhs__s_1a53c517a31c83eb357764fb891bba7008" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="structjsgf__rhs__s_1a53c517a31c83eb357764fb891bba7008" kindref="member">atoms</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107" refid="structjsgf__rhs__s_1ad07cf44d48798d86633b37e9e6e67ff5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref><sp/>*<ref refid="structjsgf__rhs__s_1ad07cf44d48798d86633b37e9e6e67ff5" kindref="member">alt</ref>;<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="structjsgf__atom__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_s</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structjsgf__atom__s_1ac7473e48f49258c5e5ef65bbb669b19e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjsgf__atom__s_1ac7473e48f49258c5e5ef65bbb669b19e" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="structjsgf__atom__s_1a4ecab128d84fd748efe52e338e7e2ecb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="structjsgf__atom__s_1a4ecab128d84fd748efe52e338e7e2ecb" kindref="member">tags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="structjsgf__atom__s_1a50672ba6d1e24c55bf8b58b97114effa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structjsgf__atom__s_1a50672ba6d1e24c55bf8b58b97114effa" kindref="member">weight</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="structjsgf__link__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjsgf__link__s" kindref="compound">jsgf_link_s</ref><sp/>{</highlight></codeline>
<codeline lineno="117" refid="structjsgf__link__s_1a140a7cfbe76100928b9c7ea052435ca5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*<ref refid="structjsgf__link__s_1a140a7cfbe76100928b9c7ea052435ca5" kindref="member">atom</ref>;<sp/></highlight></codeline>
<codeline lineno="118" refid="structjsgf__link__s_1a02f9b2bc3b98e802164e80d051923bb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjsgf__link__s_1a02f9b2bc3b98e802164e80d051923bb3" kindref="member">from</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="structjsgf__link__s_1a9da8ad9d87149f0cfca6ca815c581717" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjsgf__link__s_1a9da8ad9d87149f0cfca6ca815c581717" kindref="member">to</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>jsgf_atom_is_rule(atom)<sp/>((atom)-&gt;name[0]<sp/>==<sp/>&apos;&lt;&apos;)</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsgf_add_link(<ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*grammar,<sp/><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*atom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*jsgf_atom_new(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*jsgf_kleene_new(<ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf,<sp/><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*atom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plus);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*jsgf_optional_new(<ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf,<sp/><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref><sp/>*exp);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*jsgf_define_rule(<ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref><sp/>*rhs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_public);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*jsgf_import_rule(<ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jsgf_atom_free(<ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*atom);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jsgf_rule_free(<ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*rule);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*jsgf_rule_retain(<ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*rule);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__JSGF_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_internal.h"/>
  </compounddef>
</doxygen>
