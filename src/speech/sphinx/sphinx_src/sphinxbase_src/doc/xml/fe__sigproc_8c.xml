<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="fe__sigproc_8c" kind="file">
    <compoundname>fe_sigproc.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="prim__type_8h" local="yes">sphinxbase/prim_type.h</includes>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes refid="byteorder_8h" local="yes">sphinxbase/byteorder.h</includes>
    <includes refid="fixpoint_8h" local="yes">sphinxbase/fixpoint.h</includes>
    <includes refid="fe_8h" local="yes">sphinxbase/fe.h</includes>
    <includes refid="genrand_8h" local="yes">sphinxbase/genrand.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="fe__internal_8h" local="yes">fe_internal.h</includes>
    <includes refid="fe__warp_8h" local="yes">fe_warp.h</includes>
    <incdepgraph>
      <node id="1280">
        <label>stdarg.h</label>
      </node>
      <node id="1270">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1271" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>assert.h</label>
      </node>
      <node id="1281">
        <label>sphinxbase/genrand.h</label>
        <link refid="genrand_8h"/>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
      <node id="1268">
        <label>stdlib.h</label>
      </node>
      <node id="1273">
        <label>setjmp.h</label>
      </node>
      <node id="1283">
        <label>errno.h</label>
      </node>
      <node id="1275">
        <label>sphinxbase/byteorder.h</label>
        <link refid="byteorder_8h_source"/>
      </node>
      <node id="1282">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
      <node id="1287">
        <label>fe_prespch_buf.h</label>
        <link refid="fe__prespch__buf_8h_source"/>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>fe_type.h</label>
        <link refid="fe__type_8h_source"/>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1272">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
      </node>
      <node id="1277">
        <label>limits.h</label>
      </node>
      <node id="1264">
        <label>src/libsphinxbase/fe/fe_sigproc.c</label>
        <link refid="fe_sigproc.c"/>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
      </node>
      <node id="1271">
        <label>sphinx_config.h</label>
      </node>
      <node id="1267">
        <label>string.h</label>
      </node>
      <node id="1276">
        <label>sphinxbase/fixpoint.h</label>
        <link refid="fixpoint_8h_source"/>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
      </node>
      <node id="1285">
        <label>fe_noise.h</label>
        <link refid="fe__noise_8h_source"/>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
      </node>
      <node id="1274">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1266">
        <label>math.h</label>
      </node>
      <node id="1279">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
      </node>
      <node id="1288">
        <label>fe_warp.h</label>
        <link refid="fe__warp_8h_source"/>
        <childnode refid="1284" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1284">
        <label>fe_internal.h</label>
        <link refid="fe__internal_8h_source"/>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
      </node>
      <node id="1265">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fe__sigproc_8c_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846</initializer>
        <briefdescription>
<para>Windows math.h does not contain M_PI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="56" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__sigproc_8c_1ad8e12b83038e317e858c517cba5e96c8" prot="public" static="no">
        <name>FLOAT2COS</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="76" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__sigproc_8c_1a1aff74bf10be670a54ad2be58a315bd4" prot="public" static="no">
        <name>COSMUL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)*(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="77" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__sigproc_8c_1a74105b8702dcc90ebb2279dea65eedc8" prot="public" static="no">
        <name>LOG_FLOOR</name>
        <initializer>1e-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1060" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1060" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fe__sigproc_8c_1aefd6c3a1588151b5fe5b2cac5937e25e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32</type>
        <definition>static float32 fe_mel</definition>
        <argsstring>(melfb_t *mel, float32 x)</argsstring>
        <name>fe_mel</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="538" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="538" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a40e25a1131fe07951c2551e622dc9bbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32</type>
        <definition>static float32 fe_melinv</definition>
        <argsstring>(melfb_t *mel, float32 x)</argsstring>
        <name>fe_melinv</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="546" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="546" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a7c9f5b8ebeeb26fee073c9e280afb9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fe_build_melfilters</definition>
        <argsstring>(melfb_t *mel_fb)</argsstring>
        <name>fe_build_melfilters</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel_fb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="553" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="553" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a9afcd1729d06f0ac133a3b82f5e2595a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fe_compute_melcosine</definition>
        <argsstring>(melfb_t *mel_fb)</argsstring>
        <name>fe_compute_melcosine</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel_fb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="687" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="687" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a30c66a11bec6afa52549691ae126d8f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fe_pre_emphasis</definition>
        <argsstring>(int16 const *in, frame_t *out, int32 len, float32 factor, int16 prior)</argsstring>
        <name>fe_pre_emphasis</name>
        <param>
          <type>int16 const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>frame_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>len</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>int16</type>
          <declname>prior</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="728" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="728" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1aec74a4af7d0591be358ef1d8f6b8019d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fe_short_to_frame</definition>
        <argsstring>(int16 const *in, frame_t *out, int32 len)</argsstring>
        <name>fe_short_to_frame</name>
        <param>
          <type>int16 const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>frame_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="747" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="747" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1afa7650620e326a4fbd248afeee4fe96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_create_hamming</definition>
        <argsstring>(window_t *in, int32 in_len)</argsstring>
        <name>fe_create_hamming</name>
        <param>
          <type>window_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>in_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="761" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="761" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a0e5cf19f42a900b13f420f0bda7d705c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fe_hamming_window</definition>
        <argsstring>(frame_t *in, window_t *window, int32 in_len, int32 remove_dc)</argsstring>
        <name>fe_hamming_window</name>
        <param>
          <type>frame_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>window_t *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>in_len</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>remove_dc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="775" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="775" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a8610ba4e33ffd5a98597cf3bfa0ad979" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fe_spch_to_frame</definition>
        <argsstring>(fe_t *fe, int len)</argsstring>
        <name>fe_spch_to_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="797" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="797" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1afe3ac19aeeb52d9e237dd2f4694ec18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fe_read_frame</definition>
        <argsstring>(fe_t *fe, int16 const *in, int32 len)</argsstring>
        <name>fe_read_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="822" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="822" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a1c795ee3f7f930f131147986efd99b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fe_shift_frame</definition>
        <argsstring>(fe_t *fe, int16 const *in, int32 len)</argsstring>
        <name>fe_shift_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="843" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="843" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a733bb20e4cfc3eabe2c59dce81708b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_create_twiddle</definition>
        <argsstring>(fe_t *fe)</argsstring>
        <name>fe_create_twiddle</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <briefdescription>
<para>Create arrays of twiddle factors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="871" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="871" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a83f96292d0e7fdfb4ee3a7a13deb4d05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fe_fft_real</definition>
        <argsstring>(fe_t *fe)</argsstring>
        <name>fe_fft_real</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="889" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="889" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a450a2292e5d0cf6ddc422e8d291ac7b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fe_spec_magnitude</definition>
        <argsstring>(fe_t *fe)</argsstring>
        <name>fe_spec_magnitude</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="987" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="987" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1ae8544b9b6fc5fcd02d61b437204f75e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fe_mel_spec</definition>
        <argsstring>(fe_t *fe)</argsstring>
        <name>fe_mel_spec</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1026" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1026" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a459ea053bc84a0b0230686a13abc1d78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fe_mel_cep</definition>
        <argsstring>(fe_t *fe, mfcc_t *mfcep)</argsstring>
        <name>fe_mel_cep</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1063" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1063" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1ac47cd154d6bc73809b2e1c14d72c8445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_spec2cep</definition>
        <argsstring>(fe_t *fe, const powspec_t *mflogspec, mfcc_t *mfcep)</argsstring>
        <name>fe_spec2cep</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const powspec_t *</type>
          <declname>mflogspec</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1103" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1103" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a6b64dfa19357e33a24169ea0891dba0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_dct2</definition>
        <argsstring>(fe_t *fe, const powspec_t *mflogspec, mfcc_t *mfcep, int htk)</argsstring>
        <name>fe_dct2</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const powspec_t *</type>
          <declname>mflogspec</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>htk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1132" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1132" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1aa424bba7aaed9b9761bf25de826f6db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_lifter</definition>
        <argsstring>(fe_t *fe, mfcc_t *mfcep)</argsstring>
        <name>fe_lifter</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1156" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1156" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a0b22ef2913257234e5486781f01c1e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_dct3</definition>
        <argsstring>(fe_t *fe, const mfcc_t *mfcep, powspec_t *mflogspec)</argsstring>
        <name>fe_dct3</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <param>
          <type>powspec_t *</type>
          <declname>mflogspec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1169" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1169" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1aaa0103590dfe1d7f5ebe1f86edde42f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_write_frame</definition>
        <argsstring>(fe_t *fe, mfcc_t *feat, int32 store_pcm)</argsstring>
        <name>fe_write_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>store_pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1183" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1183" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a1bcb1886d2eead46739efadb77ef4364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* fe_create_2d</definition>
        <argsstring>(int32 d1, int32 d2, int32 elem_size)</argsstring>
        <name>fe_create_2d</name>
        <param>
          <type>int32</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>elem_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1197" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1197" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="fe__sigproc_8c_1a4016eaf4c7da11eaea3625b7e1c8168e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_free_2d</definition>
        <argsstring>(void *arr)</argsstring>
        <name>fe_free_2d</name>
        <param>
          <type>void *</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Free the output pointer returned by fe_process_utt(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" line="1203" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1203" bodyend="1206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1996-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4244)</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/>3.14159265358979323846</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="prim__type_8h" kindref="compound">sphinxbase/prim_type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sphinxbase/byteorder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sphinxbase/fixpoint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sphinxbase/fe.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genrand_8h" kindref="compound">sphinxbase/genrand.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fe_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fe_warp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>extra<sp/>precision<sp/>for<sp/>cosines,<sp/>Hamming<sp/>window,<sp/>pre-emphasis</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>coefficient,<sp/>twiddle<sp/>factors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIXED_POINT</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FLOAT2COS(x)<sp/>FLOAT2FIX_ANY(x,30)</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COSMUL(x,y)<sp/>FIXMUL_ANY(x,y,30)</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FLOAT2COS(x)<sp/>(x)</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COSMUL(x,y)<sp/>((x)*(y))</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIXED_POINT</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>log-addition<sp/>table<sp/>for<sp/>natural<sp/>log<sp/>with<sp/>radix<sp/>point<sp/>at<sp/>8</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>bits.<sp/><sp/>Each<sp/>entry<sp/>is<sp/>256<sp/>*<sp/>log(1<sp/>+<sp/>e^{-n/256}).<sp/><sp/>This<sp/>is<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>log-add<sp/>computation:</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>e^z<sp/>=<sp/>e^x<sp/>+<sp/>e^y</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>e^z<sp/>=<sp/>e^x(1<sp/>+<sp/>e^{y-x})<sp/><sp/><sp/><sp/><sp/>=<sp/>e^y(1<sp/>+<sp/>e^{x-y})</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>z<sp/><sp/><sp/>=<sp/>x<sp/>+<sp/>log(1<sp/>+<sp/>e^{y-x})<sp/>=<sp/>y<sp/>+<sp/>log(1<sp/>+<sp/>e^{x-y})</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>So<sp/>when<sp/>y<sp/>&gt;<sp/>x,<sp/>z<sp/>=<sp/>y<sp/>+<sp/>logadd_table[-(x-y)]</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>when<sp/>x<sp/>&gt;<sp/>y,<sp/>z<sp/>=<sp/>x<sp/>+<sp/>logadd_table[-(y-x)]</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fe_logadd_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>177,<sp/>177,<sp/>176,<sp/>176,<sp/>175,<sp/>175,<sp/>174,<sp/>174,<sp/>173,<sp/>173,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>172,<sp/>172,<sp/>172,<sp/>171,<sp/>171,<sp/>170,<sp/>170,<sp/>169,<sp/>169,<sp/>168,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>168,<sp/>167,<sp/>167,<sp/>166,<sp/>166,<sp/>165,<sp/>165,<sp/>164,<sp/>164,<sp/>163,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>163,<sp/>162,<sp/>162,<sp/>161,<sp/>161,<sp/>161,<sp/>160,<sp/>160,<sp/>159,<sp/>159,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>158,<sp/>158,<sp/>157,<sp/>157,<sp/>156,<sp/>156,<sp/>155,<sp/>155,<sp/>155,<sp/>154,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>154,<sp/>153,<sp/>153,<sp/>152,<sp/>152,<sp/>151,<sp/>151,<sp/>151,<sp/>150,<sp/>150,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>149,<sp/>149,<sp/>148,<sp/>148,<sp/>147,<sp/>147,<sp/>147,<sp/>146,<sp/>146,<sp/>145,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>145,<sp/>144,<sp/>144,<sp/>144,<sp/>143,<sp/>143,<sp/>142,<sp/>142,<sp/>141,<sp/>141,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>141,<sp/>140,<sp/>140,<sp/>139,<sp/>139,<sp/>138,<sp/>138,<sp/>138,<sp/>137,<sp/>137,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>136,<sp/>136,<sp/>136,<sp/>135,<sp/>135,<sp/>134,<sp/>134,<sp/>134,<sp/>133,<sp/>133,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>132,<sp/>132,<sp/>131,<sp/>131,<sp/>131,<sp/>130,<sp/>130,<sp/>129,<sp/>129,<sp/>129,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>128,<sp/>128,<sp/>128,<sp/>127,<sp/>127,<sp/>126,<sp/>126,<sp/>126,<sp/>125,<sp/>125,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>124,<sp/>124,<sp/>124,<sp/>123,<sp/>123,<sp/>123,<sp/>122,<sp/>122,<sp/>121,<sp/>121,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>121,<sp/>120,<sp/>120,<sp/>119,<sp/>119,<sp/>119,<sp/>118,<sp/>118,<sp/>118,<sp/>117,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>117,<sp/>117,<sp/>116,<sp/>116,<sp/>115,<sp/>115,<sp/>115,<sp/>114,<sp/>114,<sp/>114,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>113,<sp/>113,<sp/>113,<sp/>112,<sp/>112,<sp/>112,<sp/>111,<sp/>111,<sp/>110,<sp/>110,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>110,<sp/>109,<sp/>109,<sp/>109,<sp/>108,<sp/>108,<sp/>108,<sp/>107,<sp/>107,<sp/>107,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>106,<sp/>106,<sp/>106,<sp/>105,<sp/>105,<sp/>105,<sp/>104,<sp/>104,<sp/>104,<sp/>103,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>103,<sp/>103,<sp/>102,<sp/>102,<sp/>102,<sp/>101,<sp/>101,<sp/>101,<sp/>100,<sp/>100,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>100,<sp/>99,<sp/>99,<sp/>99,<sp/>98,<sp/>98,<sp/>98,<sp/>97,<sp/>97,<sp/>97,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>96,<sp/>96,<sp/>96,<sp/>96,<sp/>95,<sp/>95,<sp/>95,<sp/>94,<sp/>94,<sp/>94,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>93,<sp/>93,<sp/>93,<sp/>92,<sp/>92,<sp/>92,<sp/>92,<sp/>91,<sp/>91,<sp/>91,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>90,<sp/>90,<sp/>90,<sp/>89,<sp/>89,<sp/>89,<sp/>89,<sp/>88,<sp/>88,<sp/>88,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>87,<sp/>87,<sp/>87,<sp/>87,<sp/>86,<sp/>86,<sp/>86,<sp/>85,<sp/>85,<sp/>85,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>85,<sp/>84,<sp/>84,<sp/>84,<sp/>83,<sp/>83,<sp/>83,<sp/>83,<sp/>82,<sp/>82,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>82,<sp/>82,<sp/>81,<sp/>81,<sp/>81,<sp/>80,<sp/>80,<sp/>80,<sp/>80,<sp/>79,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>79,<sp/>79,<sp/>79,<sp/>78,<sp/>78,<sp/>78,<sp/>78,<sp/>77,<sp/>77,<sp/>77,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>77,<sp/>76,<sp/>76,<sp/>76,<sp/>75,<sp/>75,<sp/>75,<sp/>75,<sp/>74,<sp/>74,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>74,<sp/>74,<sp/>73,<sp/>73,<sp/>73,<sp/>73,<sp/>72,<sp/>72,<sp/>72,<sp/>72,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>71,<sp/>71,<sp/>71,<sp/>71,<sp/>71,<sp/>70,<sp/>70,<sp/>70,<sp/>70,<sp/>69,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>69,<sp/>69,<sp/>69,<sp/>68,<sp/>68,<sp/>68,<sp/>68,<sp/>67,<sp/>67,<sp/>67,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>67,<sp/>67,<sp/>66,<sp/>66,<sp/>66,<sp/>66,<sp/>65,<sp/>65,<sp/>65,<sp/>65,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>64,<sp/>64,<sp/>64,<sp/>64,<sp/>64,<sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>62,<sp/>62,<sp/>62,<sp/>62,<sp/>61,<sp/>61,<sp/>61,<sp/>61,<sp/>61,<sp/>60,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>60,<sp/>60,<sp/>60,<sp/>60,<sp/>59,<sp/>59,<sp/>59,<sp/>59,<sp/>59,<sp/>58,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>58,<sp/>58,<sp/>58,<sp/>58,<sp/>57,<sp/>57,<sp/>57,<sp/>57,<sp/>57,<sp/>56,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>56,<sp/>56,<sp/>56,<sp/>56,<sp/>55,<sp/>55,<sp/>55,<sp/>55,<sp/>55,<sp/>54,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>54,<sp/>54,<sp/>54,<sp/>54,<sp/>53,<sp/>53,<sp/>53,<sp/>53,<sp/>53,<sp/>52,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>52,<sp/>52,<sp/>52,<sp/>52,<sp/>52,<sp/>51,<sp/>51,<sp/>51,<sp/>51,<sp/>51,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>50,<sp/>50,<sp/>50,<sp/>50,<sp/>50,<sp/>50,<sp/>49,<sp/>49,<sp/>49,<sp/>49,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>49,<sp/>49,<sp/>48,<sp/>48,<sp/>48,<sp/>48,<sp/>48,<sp/>48,<sp/>47,<sp/>47,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>47,<sp/>47,<sp/>47,<sp/>47,<sp/>46,<sp/>46,<sp/>46,<sp/>46,<sp/>46,<sp/>46,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>45,<sp/>45,<sp/>45,<sp/>45,<sp/>45,<sp/>45,<sp/>44,<sp/>44,<sp/>44,<sp/>44,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>44,<sp/>44,<sp/>43,<sp/>43,<sp/>43,<sp/>43,<sp/>43,<sp/>43,<sp/>43,<sp/>42,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>42,<sp/>42,<sp/>42,<sp/>42,<sp/>42,<sp/>41,<sp/>41,<sp/>41,<sp/>41,<sp/>41,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>41,<sp/>41,<sp/>40,<sp/>40,<sp/>40,<sp/>40,<sp/>40,<sp/>40,<sp/>40,<sp/>39,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>39,<sp/>39,<sp/>39,<sp/>39,<sp/>39,<sp/>39,<sp/>38,<sp/>38,<sp/>38,<sp/>38,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>38,<sp/>38,<sp/>38,<sp/>37,<sp/>37,<sp/>37,<sp/>37,<sp/>37,<sp/>37,<sp/>37,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>37,<sp/>36,<sp/>36,<sp/>36,<sp/>36,<sp/>36,<sp/>36,<sp/>36,<sp/>35,<sp/>35,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>35,<sp/>35,<sp/>35,<sp/>35,<sp/>35,<sp/>35,<sp/>34,<sp/>34,<sp/>34,<sp/>34,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>34,<sp/>34,<sp/>34,<sp/>34,<sp/>33,<sp/>33,<sp/>33,<sp/>33,<sp/>33,<sp/>33,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>33,<sp/>33,<sp/>32,<sp/>32,<sp/>32,<sp/>32,<sp/>32,<sp/>32,<sp/>32,<sp/>32,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>32,<sp/>31,<sp/>31,<sp/>31,<sp/>31,<sp/>31,<sp/>31,<sp/>31,<sp/>31,<sp/>31,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>30,<sp/>30,<sp/>30,<sp/>30,<sp/>30,<sp/>30,<sp/>30,<sp/>30,<sp/>30,<sp/>29,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>29,<sp/>29,<sp/>29,<sp/>29,<sp/>29,<sp/>29,<sp/>29,<sp/>29,<sp/>28,<sp/>28,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>28,<sp/>28,<sp/>28,<sp/>28,<sp/>28,<sp/>28,<sp/>28,<sp/>28,<sp/>27,<sp/>27,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>27,<sp/>27,<sp/>27,<sp/>27,<sp/>27,<sp/>27,<sp/>27,<sp/>27,<sp/>26,<sp/>26,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>26,<sp/>26,<sp/>26,<sp/>26,<sp/>26,<sp/>26,<sp/>26,<sp/>26,<sp/>25,<sp/>25,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>25,<sp/>25,<sp/>25,<sp/>25,<sp/>25,<sp/>25,<sp/>25,<sp/>25,<sp/>25,<sp/>24,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>23,<sp/>23,<sp/>23,<sp/>23,<sp/>23,<sp/>23,<sp/>23,<sp/>23,<sp/>23,<sp/>23,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>23,<sp/>23,<sp/>22,<sp/>22,<sp/>22,<sp/>22,<sp/>22,<sp/>22,<sp/>22,<sp/>22,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>22,<sp/>22,<sp/>22,<sp/>22,<sp/>21,<sp/>21,<sp/>21,<sp/>21,<sp/>21,<sp/>21,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>21,<sp/>21,<sp/>21,<sp/>21,<sp/>21,<sp/>21,<sp/>21,<sp/>20,<sp/>20,<sp/>20,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>20,<sp/>20,<sp/>20,<sp/>20,<sp/>20,<sp/>20,<sp/>20,<sp/>20,<sp/>20,<sp/>20,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>19,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>19,<sp/>19,<sp/>19,<sp/>19,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>18,<sp/>17,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,<sp/>16,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>16,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>15,<sp/>14,<sp/>14,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>14,<sp/>13,<sp/>13,<sp/>13,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>12,<sp/>12,<sp/>12,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>12,<sp/>11,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,<sp/>11,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>11,<sp/>11,<sp/>11,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>10,<sp/>9,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>9,<sp/>8,<sp/>8,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,<sp/>8,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>7,<sp/>6,<sp/>6,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,<sp/>6,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>6,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>5,<sp/>5,<sp/>5,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>0</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_logadd_table_size<sp/>=</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fe_logadd_table)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fe_logadd_table[0]);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">fixed32</highlight></codeline>
<codeline lineno="260"><highlight class="normal">fe_log_add(fixed32<sp/>x,<sp/>fixed32<sp/>y)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>fixed32<sp/>d,<sp/>r;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(x<sp/>-<sp/>y)<sp/>&gt;&gt;<sp/>(DEFAULT_RADIX<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(y<sp/>-<sp/>x)<sp/>&gt;&gt;<sp/>(DEFAULT_RADIX<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;=<sp/>MIN_FIXLOG)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MIN_FIXLOG;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>fe_logadd_table_size<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>((fixed32)<sp/>fe_logadd_table[d]<sp/>&lt;&lt;<sp/>(DEFAULT_RADIX<sp/>-<sp/>8));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%d<sp/>-<sp/>%d<sp/>=<sp/>%d<sp/>|<sp/>%f<sp/>-<sp/>%f<sp/>=<sp/>%f<sp/>|<sp/>%f<sp/>-<sp/>%f<sp/>=<sp/>%f\n&quot;,</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>r,<sp/>FIX2FLOAT(x),<sp/>FIX2FLOAT(y),<sp/>FIX2FLOAT(r),</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(FIX2FLOAT(x)),<sp/>exp(FIX2FLOAT(y)),<sp/>exp(FIX2FLOAT(r)));</highlight></codeline>
<codeline lineno="282"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>log_sub<sp/>for<sp/>spectral<sp/>subtraction,<sp/>similar<sp/>to<sp/>logadd<sp/>but<sp/>we<sp/>had</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>to<sp/>smooth<sp/>function<sp/>around<sp/>zero<sp/>with<sp/>fixlog<sp/>in<sp/>order<sp/>to<sp/>improve</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>table<sp/>interpolation<sp/>properties</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>The<sp/>table<sp/>is<sp/>created<sp/>with<sp/>the<sp/>file<sp/>included<sp/>into<sp/>distribution</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>e^z<sp/>=<sp/>e^x<sp/>-<sp/>e^y</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>e^z<sp/>=<sp/>e^x<sp/>(1<sp/>-<sp/>e^(-(x<sp/>-<sp/>y)))</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>z<sp/>=<sp/>x<sp/>+<sp/>log(1<sp/>-<sp/>e^(-(x<sp/>-<sp/>y)))</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>z<sp/>=<sp/>x<sp/>+<sp/>fixlog(a)<sp/>+<sp/>(log(1<sp/>-<sp/>e^(-<sp/>a))<sp/>-<sp/>log(a))</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>Input<sp/>radix<sp/>is<sp/>8<sp/>output<sp/>radix<sp/>is<sp/>10</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16<sp/>fe_logsub_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal">1,<sp/>3,<sp/>5,<sp/>7,<sp/>9,<sp/>11,<sp/>13,<sp/>15,<sp/>17,<sp/>19,</highlight></codeline>
<codeline lineno="303"><highlight class="normal">21,<sp/>23,<sp/>25,<sp/>27,<sp/>29,<sp/>31,<sp/>33,<sp/>35,<sp/>37,<sp/>39,</highlight></codeline>
<codeline lineno="304"><highlight class="normal">41,<sp/>43,<sp/>45,<sp/>47,<sp/>49,<sp/>51,<sp/>53,<sp/>55,<sp/>56,<sp/>58,</highlight></codeline>
<codeline lineno="305"><highlight class="normal">60,<sp/>62,<sp/>64,<sp/>66,<sp/>68,<sp/>70,<sp/>72,<sp/>74,<sp/>76,<sp/>78,</highlight></codeline>
<codeline lineno="306"><highlight class="normal">80,<sp/>82,<sp/>84,<sp/>86,<sp/>88,<sp/>90,<sp/>92,<sp/>94,<sp/>95,<sp/>97,</highlight></codeline>
<codeline lineno="307"><highlight class="normal">99,<sp/>101,<sp/>103,<sp/>105,<sp/>107,<sp/>109,<sp/>111,<sp/>113,<sp/>115,<sp/>117,</highlight></codeline>
<codeline lineno="308"><highlight class="normal">119,<sp/>121,<sp/>122,<sp/>124,<sp/>126,<sp/>128,<sp/>130,<sp/>132,<sp/>134,<sp/>136,</highlight></codeline>
<codeline lineno="309"><highlight class="normal">138,<sp/>140,<sp/>142,<sp/>143,<sp/>145,<sp/>147,<sp/>149,<sp/>151,<sp/>153,<sp/>155,</highlight></codeline>
<codeline lineno="310"><highlight class="normal">157,<sp/>159,<sp/>161,<sp/>162,<sp/>164,<sp/>166,<sp/>168,<sp/>170,<sp/>172,<sp/>174,</highlight></codeline>
<codeline lineno="311"><highlight class="normal">176,<sp/>178,<sp/>179,<sp/>181,<sp/>183,<sp/>185,<sp/>187,<sp/>189,<sp/>191,<sp/>193,</highlight></codeline>
<codeline lineno="312"><highlight class="normal">194,<sp/>196,<sp/>198,<sp/>200,<sp/>202,<sp/>204,<sp/>206,<sp/>207,<sp/>209,<sp/>211,</highlight></codeline>
<codeline lineno="313"><highlight class="normal">213,<sp/>215,<sp/>217,<sp/>219,<sp/>220,<sp/>222,<sp/>224,<sp/>226,<sp/>228,<sp/>230,</highlight></codeline>
<codeline lineno="314"><highlight class="normal">232,<sp/>233,<sp/>235,<sp/>237,<sp/>239,<sp/>241,<sp/>243,<sp/>244,<sp/>246,<sp/>248,</highlight></codeline>
<codeline lineno="315"><highlight class="normal">250,<sp/>252,<sp/>254,<sp/>255,<sp/>257,<sp/>259,<sp/>261,<sp/>263,<sp/>265,<sp/>266,</highlight></codeline>
<codeline lineno="316"><highlight class="normal">268,<sp/>270,<sp/>272,<sp/>274,<sp/>275,<sp/>277,<sp/>279,<sp/>281,<sp/>283,<sp/>284,</highlight></codeline>
<codeline lineno="317"><highlight class="normal">286,<sp/>288,<sp/>290,<sp/>292,<sp/>294,<sp/>295,<sp/>297,<sp/>299,<sp/>301,<sp/>302,</highlight></codeline>
<codeline lineno="318"><highlight class="normal">304,<sp/>306,<sp/>308,<sp/>310,<sp/>311,<sp/>313,<sp/>315,<sp/>317,<sp/>319,<sp/>320,</highlight></codeline>
<codeline lineno="319"><highlight class="normal">322,<sp/>324,<sp/>326,<sp/>327,<sp/>329,<sp/>331,<sp/>333,<sp/>335,<sp/>336,<sp/>338,</highlight></codeline>
<codeline lineno="320"><highlight class="normal">340,<sp/>342,<sp/>343,<sp/>345,<sp/>347,<sp/>349,<sp/>350,<sp/>352,<sp/>354,<sp/>356,</highlight></codeline>
<codeline lineno="321"><highlight class="normal">357,<sp/>359,<sp/>361,<sp/>363,<sp/>364,<sp/>366,<sp/>368,<sp/>370,<sp/>371,<sp/>373,</highlight></codeline>
<codeline lineno="322"><highlight class="normal">375,<sp/>377,<sp/>378,<sp/>380,<sp/>382,<sp/>384,<sp/>385,<sp/>387,<sp/>389,<sp/>391,</highlight></codeline>
<codeline lineno="323"><highlight class="normal">392,<sp/>394,<sp/>396,<sp/>397,<sp/>399,<sp/>401,<sp/>403,<sp/>404,<sp/>406,<sp/>408,</highlight></codeline>
<codeline lineno="324"><highlight class="normal">410,<sp/>411,<sp/>413,<sp/>415,<sp/>416,<sp/>418,<sp/>420,<sp/>422,<sp/>423,<sp/>425,</highlight></codeline>
<codeline lineno="325"><highlight class="normal">427,<sp/>428,<sp/>430,<sp/>432,<sp/>433,<sp/>435,<sp/>437,<sp/>439,<sp/>440,<sp/>442,</highlight></codeline>
<codeline lineno="326"><highlight class="normal">444,<sp/>445,<sp/>447,<sp/>449,<sp/>450,<sp/>452,<sp/>454,<sp/>455,<sp/>457,<sp/>459,</highlight></codeline>
<codeline lineno="327"><highlight class="normal">460,<sp/>462,<sp/>464,<sp/>465,<sp/>467,<sp/>469,<sp/>471,<sp/>472,<sp/>474,<sp/>476,</highlight></codeline>
<codeline lineno="328"><highlight class="normal">477,<sp/>479,<sp/>481,<sp/>482,<sp/>484,<sp/>486,<sp/>487,<sp/>489,<sp/>490,<sp/>492,</highlight></codeline>
<codeline lineno="329"><highlight class="normal">494,<sp/>495,<sp/>497,<sp/>499,<sp/>500,<sp/>502,<sp/>504,<sp/>505,<sp/>507,<sp/>509,</highlight></codeline>
<codeline lineno="330"><highlight class="normal">510,<sp/>512,<sp/>514,<sp/>515,<sp/>517,<sp/>518,<sp/>520,<sp/>522,<sp/>523,<sp/>525,</highlight></codeline>
<codeline lineno="331"><highlight class="normal">527,<sp/>528,<sp/>530,<sp/>532,<sp/>533,<sp/>535,<sp/>536,<sp/>538,<sp/>540,<sp/>541,</highlight></codeline>
<codeline lineno="332"><highlight class="normal">543,<sp/>544,<sp/>546,<sp/>548,<sp/>549,<sp/>551,<sp/>553,<sp/>554,<sp/>556,<sp/>557,</highlight></codeline>
<codeline lineno="333"><highlight class="normal">559,<sp/>561,<sp/>562,<sp/>564,<sp/>565,<sp/>567,<sp/>569,<sp/>570,<sp/>572,<sp/>573,</highlight></codeline>
<codeline lineno="334"><highlight class="normal">575,<sp/>577,<sp/>578,<sp/>580,<sp/>581,<sp/>583,<sp/>585,<sp/>586,<sp/>588,<sp/>589,</highlight></codeline>
<codeline lineno="335"><highlight class="normal">591,<sp/>592,<sp/>594,<sp/>596,<sp/>597,<sp/>599,<sp/>600,<sp/>602,<sp/>603,<sp/>605,</highlight></codeline>
<codeline lineno="336"><highlight class="normal">607,<sp/>608,<sp/>610,<sp/>611,<sp/>613,<sp/>614,<sp/>616,<sp/>618,<sp/>619,<sp/>621,</highlight></codeline>
<codeline lineno="337"><highlight class="normal">622,<sp/>624,<sp/>625,<sp/>627,<sp/>628,<sp/>630,<sp/>632,<sp/>633,<sp/>635,<sp/>636,</highlight></codeline>
<codeline lineno="338"><highlight class="normal">638,<sp/>639,<sp/>641,<sp/>642,<sp/>644,<sp/>645,<sp/>647,<sp/>649,<sp/>650,<sp/>652,</highlight></codeline>
<codeline lineno="339"><highlight class="normal">653,<sp/>655,<sp/>656,<sp/>658,<sp/>659,<sp/>661,<sp/>662,<sp/>664,<sp/>665,<sp/>667,</highlight></codeline>
<codeline lineno="340"><highlight class="normal">668,<sp/>670,<sp/>671,<sp/>673,<sp/>674,<sp/>676,<sp/>678,<sp/>679,<sp/>681,<sp/>682,</highlight></codeline>
<codeline lineno="341"><highlight class="normal">684,<sp/>685,<sp/>687,<sp/>688,<sp/>690,<sp/>691,<sp/>693,<sp/>694,<sp/>696,<sp/>697,</highlight></codeline>
<codeline lineno="342"><highlight class="normal">699,<sp/>700,<sp/>702,<sp/>703,<sp/>705,<sp/>706,<sp/>708,<sp/>709,<sp/>711,<sp/>712,</highlight></codeline>
<codeline lineno="343"><highlight class="normal">714,<sp/>715,<sp/>717,<sp/>718,<sp/>719,<sp/>721,<sp/>722,<sp/>724,<sp/>725,<sp/>727,</highlight></codeline>
<codeline lineno="344"><highlight class="normal">728,<sp/>730,<sp/>731,<sp/>733,<sp/>734,<sp/>736,<sp/>737,<sp/>739,<sp/>740,<sp/>742,</highlight></codeline>
<codeline lineno="345"><highlight class="normal">743,<sp/>745,<sp/>746,<sp/>747,<sp/>749,<sp/>750,<sp/>752,<sp/>753,<sp/>755,<sp/>756,</highlight></codeline>
<codeline lineno="346"><highlight class="normal">758,<sp/>759,<sp/>761,<sp/>762,<sp/>763,<sp/>765,<sp/>766,<sp/>768,<sp/>769,<sp/>771,</highlight></codeline>
<codeline lineno="347"><highlight class="normal">772,<sp/>774,<sp/>775,<sp/>776,<sp/>778,<sp/>779,<sp/>781,<sp/>782,<sp/>784,<sp/>785,</highlight></codeline>
<codeline lineno="348"><highlight class="normal">786,<sp/>788,<sp/>789,<sp/>791,<sp/>792,<sp/>794,<sp/>795,<sp/>796,<sp/>798,<sp/>799,</highlight></codeline>
<codeline lineno="349"><highlight class="normal">801,<sp/>802,<sp/>804,<sp/>805,<sp/>806,<sp/>808,<sp/>809,<sp/>811,<sp/>812,<sp/>813,</highlight></codeline>
<codeline lineno="350"><highlight class="normal">815,<sp/>816,<sp/>818,<sp/>819,<sp/>820,<sp/>822,<sp/>823,<sp/>825,<sp/>826,<sp/>827,</highlight></codeline>
<codeline lineno="351"><highlight class="normal">829,<sp/>830,<sp/>832,<sp/>833,<sp/>834,<sp/>836,<sp/>837,<sp/>839,<sp/>840,<sp/>841,</highlight></codeline>
<codeline lineno="352"><highlight class="normal">843,<sp/>844,<sp/>846,<sp/>847,<sp/>848,<sp/>850,<sp/>851,<sp/>852,<sp/>854,<sp/>855,</highlight></codeline>
<codeline lineno="353"><highlight class="normal">857,<sp/>858,<sp/>859,<sp/>861,<sp/>862,<sp/>863,<sp/>865,<sp/>866,<sp/>868,<sp/>869,</highlight></codeline>
<codeline lineno="354"><highlight class="normal">870,<sp/>872,<sp/>873,<sp/>874,<sp/>876,<sp/>877,<sp/>878,<sp/>880,<sp/>881,<sp/>883,</highlight></codeline>
<codeline lineno="355"><highlight class="normal">884,<sp/>885,<sp/>887,<sp/>888,<sp/>889,<sp/>891,<sp/>892,<sp/>893,<sp/>895,<sp/>896,</highlight></codeline>
<codeline lineno="356"><highlight class="normal">897,<sp/>899,<sp/>900,<sp/>901,<sp/>903,<sp/>904,<sp/>905,<sp/>907,<sp/>908,<sp/>909,</highlight></codeline>
<codeline lineno="357"><highlight class="normal">911,<sp/>912,<sp/>913,<sp/>915,<sp/>916,<sp/>917,<sp/>919,<sp/>920,<sp/>921,<sp/>923,</highlight></codeline>
<codeline lineno="358"><highlight class="normal">924,<sp/>925,<sp/>927,<sp/>928,<sp/>929,<sp/>931,<sp/>932,<sp/>933,<sp/>935,<sp/>936,</highlight></codeline>
<codeline lineno="359"><highlight class="normal">937,<sp/>939,<sp/>940,<sp/>941,<sp/>942,<sp/>944,<sp/>945,<sp/>946,<sp/>948,<sp/>949,</highlight></codeline>
<codeline lineno="360"><highlight class="normal">950,<sp/>952,<sp/>953,<sp/>954,<sp/>956,<sp/>957,<sp/>958,<sp/>959,<sp/>961,<sp/>962,</highlight></codeline>
<codeline lineno="361"><highlight class="normal">963,<sp/>965,<sp/>966,<sp/>967,<sp/>968,<sp/>970,<sp/>971,<sp/>972,<sp/>974,<sp/>975,</highlight></codeline>
<codeline lineno="362"><highlight class="normal">976,<sp/>977,<sp/>979,<sp/>980,<sp/>981,<sp/>983,<sp/>984,<sp/>985,<sp/>986,<sp/>988,</highlight></codeline>
<codeline lineno="363"><highlight class="normal">989,<sp/>990,<sp/>991,<sp/>993,<sp/>994,<sp/>995,<sp/>997,<sp/>998,<sp/>999,<sp/>1000,</highlight></codeline>
<codeline lineno="364"><highlight class="normal">1002,<sp/>1003,<sp/>1004,<sp/>1005,<sp/>1007,<sp/>1008,<sp/>1009,<sp/>1010,<sp/>1012,<sp/>1013,</highlight></codeline>
<codeline lineno="365"><highlight class="normal">1014,<sp/>1015,<sp/>1017,<sp/>1018,<sp/>1019,<sp/>1020,<sp/>1022,<sp/>1023,<sp/>1024,<sp/>1025,</highlight></codeline>
<codeline lineno="366"><highlight class="normal">1027,<sp/>1028,<sp/>1029,<sp/>1030,<sp/>1032,<sp/>1033,<sp/>1034,<sp/>1035,<sp/>1037,<sp/>1038,</highlight></codeline>
<codeline lineno="367"><highlight class="normal">1039,<sp/>1040,<sp/>1041,<sp/>1043,<sp/>1044,<sp/>1045,<sp/>1046,<sp/>1048,<sp/>1049,<sp/>1050,</highlight></codeline>
<codeline lineno="368"><highlight class="normal">1051,<sp/>1052,<sp/>1054,<sp/>1055,<sp/>1056,<sp/>1057,<sp/>1059,<sp/>1060,<sp/>1061,<sp/>1062,</highlight></codeline>
<codeline lineno="369"><highlight class="normal">1063,<sp/>1065,<sp/>1066,<sp/>1067,<sp/>1068,<sp/>1069,<sp/>1071,<sp/>1072,<sp/>1073,<sp/>1074,</highlight></codeline>
<codeline lineno="370"><highlight class="normal">1076,<sp/>1077,<sp/>1078,<sp/>1079,<sp/>1080,<sp/>1082,<sp/>1083,<sp/>1084,<sp/>1085,<sp/>1086,</highlight></codeline>
<codeline lineno="371"><highlight class="normal">1087,<sp/>1089,<sp/>1090,<sp/>1091,<sp/>1092,<sp/>1093,<sp/>1095,<sp/>1096,<sp/>1097,<sp/>1098,</highlight></codeline>
<codeline lineno="372"><highlight class="normal">1099,<sp/>1101,<sp/>1102,<sp/>1103,<sp/>1104,<sp/>1105,<sp/>1106,<sp/>1108,<sp/>1109,<sp/>1110,</highlight></codeline>
<codeline lineno="373"><highlight class="normal">1111,<sp/>1112,<sp/>1114,<sp/>1115,<sp/>1116,<sp/>1117,<sp/>1118,<sp/>1119,<sp/>1121,<sp/>1122,</highlight></codeline>
<codeline lineno="374"><highlight class="normal">1123,<sp/>1124,<sp/>1125,<sp/>1126,<sp/>1128,<sp/>1129,<sp/>1130,<sp/>1131,<sp/>1132,<sp/>1133,</highlight></codeline>
<codeline lineno="375"><highlight class="normal">1135,<sp/>1136,<sp/>1137,<sp/>1138,<sp/>1139,<sp/>1140,<sp/>1141,<sp/>1143,<sp/>1144,<sp/>1145,</highlight></codeline>
<codeline lineno="376"><highlight class="normal">1146,<sp/>1147,<sp/>1148,<sp/>1149,<sp/>1151,<sp/>1152,<sp/>1153,<sp/>1154,<sp/>1155,<sp/>1156,</highlight></codeline>
<codeline lineno="377"><highlight class="normal">1157,<sp/>1159,<sp/>1160,<sp/>1161,<sp/>1162,<sp/>1163,<sp/>1164,<sp/>1165,<sp/>1167,<sp/>1168,</highlight></codeline>
<codeline lineno="378"><highlight class="normal">1169,<sp/>1170,<sp/>1171,<sp/>1172,<sp/>1173,<sp/>1174,<sp/>1176,<sp/>1177,<sp/>1178,<sp/>1179,</highlight></codeline>
<codeline lineno="379"><highlight class="normal">1180,<sp/>1181,<sp/>1182,<sp/>1183,<sp/>1185,<sp/>1186,<sp/>1187,<sp/>1188,<sp/>1189,<sp/>1190,</highlight></codeline>
<codeline lineno="380"><highlight class="normal">1191,<sp/>1192,<sp/>1193,<sp/>1195,<sp/>1196,<sp/>1197,<sp/>1198,<sp/>1199,<sp/>1200,<sp/>1201,</highlight></codeline>
<codeline lineno="381"><highlight class="normal">1202,<sp/>1203,<sp/>1205,<sp/>1206,<sp/>1207,<sp/>1208,<sp/>1209,<sp/>1210,<sp/>1211,<sp/>1212,</highlight></codeline>
<codeline lineno="382"><highlight class="normal">1213,<sp/>1214,<sp/>1216,<sp/>1217,<sp/>1218,<sp/>1219,<sp/>1220,<sp/>1221,<sp/>1222,<sp/>1223,</highlight></codeline>
<codeline lineno="383"><highlight class="normal">1224,<sp/>1225,<sp/>1226,<sp/>1228,<sp/>1229,<sp/>1230,<sp/>1231,<sp/>1232,<sp/>1233,<sp/>1234,</highlight></codeline>
<codeline lineno="384"><highlight class="normal">1235,<sp/>1236,<sp/>1237,<sp/>1238,<sp/>1239,<sp/>1240,<sp/>1242,<sp/>1243,<sp/>1244,<sp/>1245,</highlight></codeline>
<codeline lineno="385"><highlight class="normal">1246,<sp/>1247,<sp/>1248,<sp/>1249,<sp/>1250,<sp/>1251,<sp/>1252,<sp/>1253,<sp/>1254,<sp/>1255,</highlight></codeline>
<codeline lineno="386"><highlight class="normal">1256,<sp/>1258,<sp/>1259,<sp/>1260,<sp/>1261,<sp/>1262,<sp/>1263,<sp/>1264,<sp/>1265,<sp/>1266,</highlight></codeline>
<codeline lineno="387"><highlight class="normal">1267,<sp/>1268,<sp/>1269,<sp/>1270,<sp/>1271,<sp/>1272,<sp/>1273,<sp/>1274,<sp/>1275,<sp/>1277,</highlight></codeline>
<codeline lineno="388"><highlight class="normal">1278,<sp/>1279,<sp/>1280,<sp/>1281,<sp/>1282,<sp/>1283,<sp/>1284,<sp/>1285,<sp/>1286,<sp/>1287,</highlight></codeline>
<codeline lineno="389"><highlight class="normal">1288,<sp/>1289,<sp/>1290,<sp/>1291,<sp/>1292,<sp/>1293,<sp/>1294,<sp/>1295,<sp/>1296,<sp/>1297,</highlight></codeline>
<codeline lineno="390"><highlight class="normal">1298,<sp/>1299,<sp/>1300,<sp/>1301,<sp/>1302,<sp/>1303,<sp/>1305,<sp/>1306,<sp/>1307,<sp/>1308,</highlight></codeline>
<codeline lineno="391"><highlight class="normal">1309,<sp/>1310,<sp/>1311,<sp/>1312,<sp/>1313,<sp/>1314,<sp/>1315,<sp/>1316,<sp/>1317,<sp/>1318,</highlight></codeline>
<codeline lineno="392"><highlight class="normal">1319,<sp/>1320,<sp/>1321,<sp/>1322,<sp/>1323,<sp/>1324,<sp/>1325,<sp/>1326,<sp/>1327,<sp/>1328,</highlight></codeline>
<codeline lineno="393"><highlight class="normal">1329,<sp/>1330,<sp/>1331,<sp/>1332,<sp/>1333,<sp/>1334,<sp/>1335,<sp/>1336,<sp/>1337,<sp/>1338,</highlight></codeline>
<codeline lineno="394"><highlight class="normal">1339,<sp/>1340,<sp/>1341,<sp/>1342,<sp/>1343,<sp/>1344,<sp/>1345,<sp/>1346,<sp/>1347,<sp/>1348,</highlight></codeline>
<codeline lineno="395"><highlight class="normal">1349,<sp/>1350,<sp/>1351,<sp/>1352,<sp/>1353,<sp/>1354,<sp/>1355,<sp/>1356,<sp/>1357,<sp/>1358,</highlight></codeline>
<codeline lineno="396"><highlight class="normal">1359,<sp/>1360,<sp/>1361,<sp/>1362,<sp/>1363,<sp/>1364,<sp/>1365,<sp/>1366,<sp/>1367,<sp/>1368,</highlight></codeline>
<codeline lineno="397"><highlight class="normal">1369,<sp/>1370,<sp/>1371,<sp/>1372,<sp/>1372,<sp/>1373,<sp/>1374,<sp/>1375,<sp/>1376,<sp/>1377,</highlight></codeline>
<codeline lineno="398"><highlight class="normal">1378,<sp/>1379,<sp/>1380,<sp/>1381,<sp/>1382,<sp/>1383,<sp/>1384,<sp/>1385,<sp/>1386,<sp/>1387,</highlight></codeline>
<codeline lineno="399"><highlight class="normal">1388,<sp/>1389,<sp/>1390,<sp/>1391,<sp/>1392,<sp/>1393,<sp/>1394,<sp/>1395,<sp/>1396,<sp/>1397,</highlight></codeline>
<codeline lineno="400"><highlight class="normal">1398,<sp/>1399,<sp/>1399,<sp/>1400,<sp/>1401,<sp/>1402,<sp/>1403,<sp/>1404,<sp/>1405,<sp/>1406,</highlight></codeline>
<codeline lineno="401"><highlight class="normal">1407,<sp/>1408,<sp/>1409,<sp/>1410,<sp/>1411,<sp/>1412,<sp/>1413,<sp/>1414,<sp/>1415,<sp/>1416,</highlight></codeline>
<codeline lineno="402"><highlight class="normal">1417,<sp/>1418,<sp/>1418,<sp/>1419,<sp/>1420,<sp/>1421,<sp/>1422,<sp/>1423,<sp/>1424,<sp/>1425,</highlight></codeline>
<codeline lineno="403"><highlight class="normal">1426,<sp/>1427,<sp/>1428,<sp/>1429,<sp/>1430,<sp/>1431,<sp/>1432,<sp/>1432,<sp/>1433,<sp/>1434,</highlight></codeline>
<codeline lineno="404"><highlight class="normal">1435,<sp/>1436,<sp/>1437,<sp/>1438,<sp/>1439,<sp/>1440,<sp/>1441,<sp/>1442,<sp/>1443,<sp/>1444,</highlight></codeline>
<codeline lineno="405"><highlight class="normal">1444,<sp/>1445,<sp/>1446,<sp/>1447,<sp/>1448,<sp/>1449,<sp/>1450,<sp/>1451,<sp/>1452,<sp/>1453,</highlight></codeline>
<codeline lineno="406"><highlight class="normal">1454,<sp/>1455,<sp/>1455,<sp/>1456,<sp/>1457,<sp/>1458,<sp/>1459,<sp/>1460,<sp/>1461,<sp/>1462,</highlight></codeline>
<codeline lineno="407"><highlight class="normal">1463,<sp/>1464,<sp/>1465,<sp/>1466,<sp/>1466,<sp/>1467,<sp/>1468,<sp/>1469,<sp/>1470,<sp/>1471,</highlight></codeline>
<codeline lineno="408"><highlight class="normal">1472,<sp/>1473,<sp/>1474,<sp/>1475,<sp/>1475,<sp/>1476,<sp/>1477,<sp/>1478,<sp/>1479,<sp/>1480,</highlight></codeline>
<codeline lineno="409"><highlight class="normal">1481,<sp/>1482,<sp/>1483,<sp/>1483,<sp/>1484,<sp/>1485,<sp/>1486,<sp/>1487,<sp/>1488,<sp/>1489,</highlight></codeline>
<codeline lineno="410"><highlight class="normal">1490,<sp/>1491,<sp/>1491,<sp/>1492,<sp/>1493,<sp/>1494,<sp/>1495,<sp/>1496,<sp/>1497,<sp/>1498,</highlight></codeline>
<codeline lineno="411"><highlight class="normal">1499,<sp/>1499,<sp/>1500,<sp/>1501,<sp/>1502,<sp/>1503,<sp/>1504,<sp/>1505,<sp/>1506,<sp/>1506,</highlight></codeline>
<codeline lineno="412"><highlight class="normal">1507,<sp/>1508,<sp/>1509,<sp/>1510,<sp/>1511,<sp/>1512,<sp/>1513,<sp/>1513,<sp/>1514,<sp/>1515,</highlight></codeline>
<codeline lineno="413"><highlight class="normal">1516,<sp/>1517,<sp/>1518,<sp/>1519,<sp/>1520,<sp/>1520,<sp/>1521,<sp/>1522,<sp/>1523,<sp/>1524,</highlight></codeline>
<codeline lineno="414"><highlight class="normal">1525,<sp/>1526,<sp/>1526,<sp/>1527,<sp/>1528,<sp/>1529,<sp/>1530,<sp/>1531,<sp/>1532,<sp/>1532,</highlight></codeline>
<codeline lineno="415"><highlight class="normal">1533,<sp/>1534,<sp/>1535,<sp/>1536,<sp/>1537,<sp/>1538,<sp/>1538,<sp/>1539,<sp/>1540,<sp/>1541,</highlight></codeline>
<codeline lineno="416"><highlight class="normal">1542,<sp/>1543,<sp/>1544,<sp/>1544,<sp/>1545,<sp/>1546,<sp/>1547,<sp/>1548,<sp/>1549,<sp/>1550,</highlight></codeline>
<codeline lineno="417"><highlight class="normal">1550,<sp/>1551,<sp/>1552,<sp/>1553,<sp/>1554,<sp/>1555,<sp/>1555,<sp/>1556,<sp/>1557,<sp/>1558,</highlight></codeline>
<codeline lineno="418"><highlight class="normal">1559,<sp/>1560,<sp/>1560,<sp/>1561,<sp/>1562,<sp/>1563,<sp/>1564,<sp/>1565,<sp/>1565,<sp/>1566,</highlight></codeline>
<codeline lineno="419"><highlight class="normal">1567,<sp/>1568,<sp/>1569,<sp/>1570,<sp/>1570,<sp/>1571,<sp/>1572,<sp/>1573,<sp/>1574,<sp/>1575,</highlight></codeline>
<codeline lineno="420"><highlight class="normal">1575,<sp/>1576,<sp/>1577,<sp/>1578,<sp/>1579,<sp/>1580,<sp/>1580,<sp/>1581,<sp/>1582,<sp/>1583,</highlight></codeline>
<codeline lineno="421"><highlight class="normal">1584,<sp/>1584,<sp/>1585,<sp/>1586,<sp/>1587,<sp/>1588,<sp/>1589,<sp/>1589,<sp/>1590,<sp/>1591,</highlight></codeline>
<codeline lineno="422"><highlight class="normal">1592,<sp/>1593,<sp/>1593,<sp/>1594,<sp/>1595,<sp/>1596,<sp/>1597,<sp/>1598,<sp/>1598,<sp/>1599,</highlight></codeline>
<codeline lineno="423"><highlight class="normal">1600,<sp/>1601,<sp/>1602,<sp/>1602,<sp/>1603,<sp/>1604,<sp/>1605,<sp/>1606,<sp/>1606,<sp/>1607,</highlight></codeline>
<codeline lineno="424"><highlight class="normal">1608,<sp/>1609,<sp/>1610,<sp/>1610,<sp/>1611,<sp/>1612,<sp/>1613,<sp/>1614,<sp/>1614,<sp/>1615,</highlight></codeline>
<codeline lineno="425"><highlight class="normal">1616,<sp/>1617,<sp/>1618,<sp/>1618,<sp/>1619,<sp/>1620,<sp/>1621,<sp/>1622,<sp/>1622,<sp/>1623,</highlight></codeline>
<codeline lineno="426"><highlight class="normal">1624,<sp/>1625,<sp/>1626,<sp/>1626,<sp/>1627,<sp/>1628,<sp/>1629,<sp/>1630,<sp/>1630,<sp/>1631,</highlight></codeline>
<codeline lineno="427"><highlight class="normal">1632,<sp/>1633,<sp/>1634,<sp/>1634,<sp/>1635,<sp/>1636,<sp/>1637,<sp/>1637,<sp/>1638,<sp/>1639,</highlight></codeline>
<codeline lineno="428"><highlight class="normal">1640,<sp/>1641,<sp/>1641,<sp/>1642,<sp/>1643,<sp/>1644,<sp/>1645,<sp/>1645,<sp/>1646,<sp/>1647,</highlight></codeline>
<codeline lineno="429"><highlight class="normal">1648,<sp/>1648,<sp/>1649,<sp/>1650,<sp/>1651,<sp/>1652,<sp/>1652,<sp/>1653,<sp/>1654,<sp/>1655,</highlight></codeline>
<codeline lineno="430"><highlight class="normal">1655,<sp/>1656,<sp/>1657,<sp/>1658,<sp/>1658,<sp/>1659,<sp/>1660,<sp/>1661,<sp/>1662,<sp/>1662,</highlight></codeline>
<codeline lineno="431"><highlight class="normal">1663,<sp/>1664,<sp/>1665,<sp/>1665,<sp/>1666,<sp/>1667,<sp/>1668,<sp/>1668,<sp/>1669,<sp/>1670,</highlight></codeline>
<codeline lineno="432"><highlight class="normal">1671,<sp/>1671,<sp/>1672,<sp/>1673,<sp/>1674,<sp/>1675,<sp/>1675,<sp/>1676,<sp/>1677,<sp/>1678,</highlight></codeline>
<codeline lineno="433"><highlight class="normal">1678,<sp/>1679,<sp/>1680,<sp/>1681,<sp/>1681,<sp/>1682,<sp/>1683,<sp/>1684,<sp/>1684,<sp/>1685,</highlight></codeline>
<codeline lineno="434"><highlight class="normal">1686,<sp/>1687,<sp/>1687,<sp/>1688,<sp/>1689,<sp/>1690,<sp/>1690,<sp/>1691,<sp/>1692,<sp/>1693,</highlight></codeline>
<codeline lineno="435"><highlight class="normal">1693,<sp/>1694,<sp/>1695,<sp/>1696,<sp/>1696,<sp/>1697,<sp/>1698,<sp/>1699,<sp/>1699,<sp/>1700,</highlight></codeline>
<codeline lineno="436"><highlight class="normal">1701,<sp/>1702,<sp/>1702,<sp/>1703,<sp/>1704,<sp/>1705,<sp/>1705,<sp/>1706,<sp/>1707,<sp/>1707,</highlight></codeline>
<codeline lineno="437"><highlight class="normal">1708,<sp/>1709,<sp/>1710,<sp/>1710,<sp/>1711,<sp/>1712,<sp/>1713,<sp/>1713,<sp/>1714,<sp/>1715,</highlight></codeline>
<codeline lineno="438"><highlight class="normal">1716,<sp/>1716,<sp/>1717,<sp/>1718,<sp/>1718,<sp/>1719,<sp/>1720,<sp/>1721,<sp/>1721,<sp/>1722,</highlight></codeline>
<codeline lineno="439"><highlight class="normal">1723,<sp/>1724,<sp/>1724,<sp/>1725,<sp/>1726,<sp/>1727,<sp/>1727,<sp/>1728,<sp/>1729,<sp/>1729,</highlight></codeline>
<codeline lineno="440"><highlight class="normal">1730,<sp/>1731,<sp/>1732,<sp/>1732,<sp/>1733,<sp/>1734,<sp/>1734,<sp/>1735,<sp/>1736,<sp/>1737,</highlight></codeline>
<codeline lineno="441"><highlight class="normal">1737,<sp/>1738,<sp/>1739,<sp/>1740,<sp/>1740,<sp/>1741,<sp/>1742,<sp/>1742,<sp/>1743,<sp/>1744,</highlight></codeline>
<codeline lineno="442"><highlight class="normal">1745,<sp/>1745,<sp/>1746,<sp/>1747,<sp/>1747,<sp/>1748,<sp/>1749,<sp/>1749,<sp/>1750,<sp/>1751,</highlight></codeline>
<codeline lineno="443"><highlight class="normal">1752,<sp/>1752,<sp/>1753,<sp/>1754,<sp/>1754,<sp/>1755,<sp/>1756,<sp/>1757,<sp/>1757,<sp/>1758,</highlight></codeline>
<codeline lineno="444"><highlight class="normal">1759,<sp/>1759,<sp/>1760,<sp/>1761,<sp/>1762,<sp/>1762,<sp/>1763,<sp/>1764,<sp/>1764,<sp/>1765,</highlight></codeline>
<codeline lineno="445"><highlight class="normal">1766,<sp/>1766,<sp/>1767,<sp/>1768,<sp/>1769,<sp/>1769,<sp/>1770,<sp/>1771,<sp/>1771,<sp/>1772,</highlight></codeline>
<codeline lineno="446"><highlight class="normal">1773,<sp/>1773,<sp/>1774,<sp/>1775,<sp/>1776,<sp/>1776,<sp/>1777,<sp/>1778,<sp/>1778,<sp/>1779,</highlight></codeline>
<codeline lineno="447"><highlight class="normal">1780,<sp/>1780,<sp/>1781,<sp/>1782,<sp/>1782,<sp/>1783,<sp/>1784,<sp/>1784,<sp/>1785,<sp/>1786,</highlight></codeline>
<codeline lineno="448"><highlight class="normal">1787,<sp/>1787,<sp/>1788,<sp/>1789,<sp/>1789,<sp/>1790,<sp/>1791,<sp/>1791,<sp/>1792,<sp/>1793,</highlight></codeline>
<codeline lineno="449"><highlight class="normal">1793,<sp/>1794,<sp/>1795,<sp/>1795,<sp/>1796,<sp/>1797,<sp/>1798,<sp/>1798,<sp/>1799,<sp/>1800,</highlight></codeline>
<codeline lineno="450"><highlight class="normal">1800,<sp/>1801,<sp/>1802,<sp/>1802,<sp/>1803,<sp/>1804,<sp/>1804,<sp/>1805,<sp/>1806,<sp/>1806,</highlight></codeline>
<codeline lineno="451"><highlight class="normal">1807,<sp/>1808,<sp/>1808,<sp/>1809,<sp/>1810,<sp/>1810,<sp/>1811,<sp/>1812,<sp/>1812,<sp/>1813,</highlight></codeline>
<codeline lineno="452"><highlight class="normal">1814,<sp/>1814,<sp/>1815,<sp/>1816,<sp/>1816,<sp/>1817,<sp/>1818,<sp/>1818,<sp/>1819,<sp/>1820,</highlight></codeline>
<codeline lineno="453"><highlight class="normal">1820,<sp/>1821,<sp/>1822,<sp/>1822,<sp/>1823,<sp/>1824,<sp/>1824,<sp/>1825,<sp/>1826,<sp/>1826,</highlight></codeline>
<codeline lineno="454"><highlight class="normal">1827,<sp/>1828,<sp/>1828,<sp/>1829,<sp/>1830,<sp/>1830,<sp/>1831,<sp/>1832,<sp/>1832,<sp/>1833,</highlight></codeline>
<codeline lineno="455"><highlight class="normal">1834,<sp/>1834,<sp/>1835,<sp/>1836,<sp/>1836,<sp/>1837,<sp/>1838,<sp/>1838,<sp/>1839,<sp/>1840,</highlight></codeline>
<codeline lineno="456"><highlight class="normal">1840,<sp/>1841,<sp/>1842,<sp/>1842,<sp/>1843,<sp/>1844,<sp/>1844,<sp/>1845,<sp/>1845,<sp/>1846,</highlight></codeline>
<codeline lineno="457"><highlight class="normal">1847,<sp/>1847,<sp/>1848,<sp/>1849,<sp/>1849,<sp/>1850,<sp/>1851,<sp/>1851,<sp/>1852,<sp/>1853,</highlight></codeline>
<codeline lineno="458"><highlight class="normal">1853,<sp/>1854,<sp/>1855,<sp/>1855,<sp/>1856,<sp/>1857,<sp/>1857,<sp/>1858,<sp/>1858,<sp/>1859,</highlight></codeline>
<codeline lineno="459"><highlight class="normal">1860,<sp/>1860,<sp/>1861,<sp/>1862,<sp/>1862,<sp/>1863,<sp/>1864,<sp/>1864,<sp/>1865,<sp/>1866,</highlight></codeline>
<codeline lineno="460"><highlight class="normal">1866,<sp/>1867,<sp/>1867,<sp/>1868,<sp/>1869,<sp/>1869,<sp/>1870,<sp/>1871,<sp/>1871,<sp/>1872,</highlight></codeline>
<codeline lineno="461"><highlight class="normal">1873,<sp/>1873,<sp/>1874,<sp/>1874,<sp/>1875,<sp/>1876,<sp/>1876,<sp/>1877,<sp/>1878,<sp/>1878,</highlight></codeline>
<codeline lineno="462"><highlight class="normal">1879,<sp/>1879,<sp/>1880,<sp/>1881,<sp/>1881,<sp/>1882,<sp/>1883,<sp/>1883,<sp/>1884,<sp/>1885,</highlight></codeline>
<codeline lineno="463"><highlight class="normal">1885,<sp/>1886,<sp/>1886,<sp/>1887,<sp/>1888,<sp/>1888,<sp/>1889,<sp/>1890,<sp/>1890,<sp/>1891,</highlight></codeline>
<codeline lineno="464"><highlight class="normal">1891,<sp/>1892,<sp/>1893,<sp/>1893,<sp/>1894,<sp/>1895,<sp/>1895,<sp/>1896,<sp/>1896,<sp/>1897,</highlight></codeline>
<codeline lineno="465"><highlight class="normal">1898,<sp/>1898,<sp/>1899,<sp/>1900,<sp/>1900,<sp/>1901,<sp/>1901,<sp/>1902,<sp/>1903,<sp/>1903,</highlight></codeline>
<codeline lineno="466"><highlight class="normal">1904,<sp/>1904,<sp/>1905,<sp/>1906,<sp/>1906,<sp/>1907,<sp/>1908,<sp/>1908,<sp/>1909,<sp/>1909,</highlight></codeline>
<codeline lineno="467"><highlight class="normal">1910,<sp/>1911,<sp/>1911,<sp/>1912,<sp/>1912,<sp/>1913,<sp/>1914,<sp/>1914,<sp/>1915,<sp/>1916,</highlight></codeline>
<codeline lineno="468"><highlight class="normal">1916,<sp/>1917,<sp/>1917,<sp/>1918,<sp/>1919,<sp/>1919,<sp/>1920,<sp/>1920,<sp/>1921,<sp/>1922,</highlight></codeline>
<codeline lineno="469"><highlight class="normal">1922,<sp/>1923,<sp/>1923,<sp/>1924,<sp/>1925,<sp/>1925,<sp/>1926,<sp/>1926,<sp/>1927,<sp/>1928,</highlight></codeline>
<codeline lineno="470"><highlight class="normal">1928,<sp/>1929,<sp/>1929,<sp/>1930,<sp/>1931,<sp/>1931,<sp/>1932,<sp/>1932,<sp/>1933,<sp/>1934,</highlight></codeline>
<codeline lineno="471"><highlight class="normal">1934,<sp/>1935,<sp/>1935,<sp/>1936,<sp/>1937,<sp/>1937,<sp/>1938,<sp/>1938,<sp/>1939,<sp/>1940,</highlight></codeline>
<codeline lineno="472"><highlight class="normal">1940,<sp/>1941,<sp/>1941,<sp/>1942,<sp/>1943,<sp/>1943,<sp/>1944,<sp/>1944,<sp/>1945,<sp/>1946,</highlight></codeline>
<codeline lineno="473"><highlight class="normal">1946,<sp/>1947,<sp/>1947,<sp/>1948,<sp/>1949,<sp/>1949,<sp/>1950,<sp/>1950,<sp/>1951,<sp/>1952,</highlight></codeline>
<codeline lineno="474"><highlight class="normal">1952,<sp/>1953,<sp/>1953,<sp/>1954,<sp/>1955,<sp/>1955,<sp/>1956,<sp/>1956,<sp/>1957,<sp/>1957,</highlight></codeline>
<codeline lineno="475"><highlight class="normal">1958,<sp/>1959,<sp/>1959,<sp/>1960,<sp/>1960,<sp/>1961,<sp/>1962,<sp/>1962,<sp/>1963,<sp/>1963,</highlight></codeline>
<codeline lineno="476"><highlight class="normal">1964,<sp/>1964,<sp/>1965,<sp/>1966,<sp/>1966,<sp/>1967,<sp/>1967,<sp/>1968,<sp/>1969,<sp/>1969,</highlight></codeline>
<codeline lineno="477"><highlight class="normal">1970,<sp/>1970,<sp/>1971,<sp/>1971,<sp/>1972,<sp/>1973,<sp/>1973,<sp/>1974,<sp/>1974,<sp/>1975,</highlight></codeline>
<codeline lineno="478"><highlight class="normal">1976,<sp/>1976,<sp/>1977,<sp/>1977,<sp/>1978,<sp/>1978,<sp/>1979,<sp/>1980,<sp/>1980,<sp/>1981,</highlight></codeline>
<codeline lineno="479"><highlight class="normal">1981,<sp/>1982,<sp/>1982,<sp/>1983,<sp/>1984,<sp/>1984,<sp/>1985,<sp/>1985,<sp/>1986,<sp/>1986,</highlight></codeline>
<codeline lineno="480"><highlight class="normal">1987,<sp/>1988,<sp/>1988,<sp/>1989,<sp/>1989,<sp/>1990,<sp/>1990,<sp/>1991,<sp/>1992,<sp/>1992,</highlight></codeline>
<codeline lineno="481"><highlight class="normal">1993,<sp/>1993,<sp/>1994,<sp/>1994,<sp/>1995,<sp/>1996,<sp/>1996,<sp/>1997,<sp/>1997,<sp/>1998,</highlight></codeline>
<codeline lineno="482"><highlight class="normal">1998,<sp/>1999,<sp/>1999,<sp/>2000,<sp/>2001,<sp/>2001,<sp/>2002,<sp/>2002,<sp/>2003,<sp/>2003,</highlight></codeline>
<codeline lineno="483"><highlight class="normal">2004,<sp/>2005,<sp/>2005,<sp/>2006,<sp/>2006,<sp/>2007,<sp/>2007,<sp/>2008,<sp/>2008,<sp/>2009,</highlight></codeline>
<codeline lineno="484"><highlight class="normal">2010,<sp/>2010,<sp/>2011,<sp/>2011,<sp/>2012,<sp/>2012,<sp/>2013,<sp/>2014,<sp/>2014,<sp/>2015,</highlight></codeline>
<codeline lineno="485"><highlight class="normal">2015,<sp/>2016,<sp/>2016,<sp/>2017,<sp/>2017,<sp/>2018,<sp/>2019,<sp/>2019,<sp/>2020,<sp/>2020,</highlight></codeline>
<codeline lineno="486"><highlight class="normal">2021,<sp/>2021,<sp/>2022,<sp/>2022,<sp/>2023,<sp/>2023,<sp/>2024,<sp/>2025,<sp/>2025,<sp/>2026,</highlight></codeline>
<codeline lineno="487"><highlight class="normal">2026,<sp/>2027,<sp/>2027,<sp/>2028,<sp/>2028,<sp/>2029,<sp/>2030,<sp/>2030,<sp/>2031,<sp/>2031,</highlight></codeline>
<codeline lineno="488"><highlight class="normal">2032,<sp/>2032,<sp/>2033,<sp/>2033,<sp/>2034,<sp/>2034,<sp/>2035,<sp/>2036,<sp/>2036,<sp/>2037,</highlight></codeline>
<codeline lineno="489"><highlight class="normal">2037,<sp/>2038,<sp/>2038,<sp/>2039,<sp/>2039,<sp/>2040,<sp/>2040,<sp/>2041,<sp/>2042,<sp/>2042,</highlight></codeline>
<codeline lineno="490"><highlight class="normal">2043,<sp/>2043,<sp/>2044,<sp/>2044,<sp/>2045,<sp/>2045,<sp/>2046,<sp/>2046,<sp/>2047,<sp/>2048,</highlight></codeline>
<codeline lineno="491"><highlight class="normal">2048,<sp/>2049,<sp/>2049,<sp/>2050,<sp/>2050,<sp/>2051,<sp/>2051,<sp/>2052,<sp/>2052,<sp/>2053,</highlight></codeline>
<codeline lineno="492"><highlight class="normal">2053,<sp/>2054,<sp/>2054,<sp/>2055,<sp/>2056,<sp/>2056,<sp/>2057,<sp/>2057,<sp/>2058,<sp/>2058,</highlight></codeline>
<codeline lineno="493"><highlight class="normal">2059,<sp/>2059,<sp/>2060,<sp/>2060,<sp/>2061,<sp/>2061,<sp/>2062,<sp/>2062,<sp/>2063,<sp/>2064,</highlight></codeline>
<codeline lineno="494"><highlight class="normal">2064,<sp/>2065,<sp/>2065,<sp/>2066,<sp/>2066,<sp/>2067,<sp/>2067,<sp/>2068,<sp/>2068,<sp/>2069,</highlight></codeline>
<codeline lineno="495"><highlight class="normal">2069,<sp/>2070,<sp/>2070,<sp/>2071,<sp/>2072,<sp/>2072,<sp/>2073,<sp/>2073,<sp/>2074,<sp/>2074,</highlight></codeline>
<codeline lineno="496"><highlight class="normal">2075,<sp/>2075,<sp/>2076,<sp/>2076,<sp/>2077,<sp/>2077,<sp/>2078,<sp/>2078,<sp/>2079,<sp/>2079,</highlight></codeline>
<codeline lineno="497"><highlight class="normal">2080,<sp/>2080,<sp/>2081</highlight></codeline>
<codeline lineno="498"><highlight class="normal">};</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_logsub_table_size<sp/>=</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fe_logsub_table)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fe_logsub_table[0]);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">fixed32</highlight></codeline>
<codeline lineno="504"><highlight class="normal">fe_log_sub(fixed32<sp/>x,<sp/>fixed32<sp/>y)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>fixed32<sp/>d,<sp/>r;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>MIN_FIXLOG<sp/>||<sp/>y<sp/>&gt;=<sp/>x)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MIN_FIXLOG;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(x<sp/>-<sp/>y)<sp/>&gt;&gt;<sp/>(DEFAULT_RADIX<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>fe_logsub_table_size<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>fe_logsub_table[d]<sp/>&lt;&lt;<sp/>(DEFAULT_RADIX<sp/>-<sp/>10);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;diff=%d\n&quot;,<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+<sp/>FIXLN(x-y)<sp/>-<sp/>r<sp/>-</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>+<sp/>FLOAT2FIX(logf(-expm1f(FIX2FLOAT(y<sp/>-<sp/>x))))));</highlight></codeline>
<codeline lineno="521"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>FIXLN(x-y)<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>fixed32</highlight></codeline>
<codeline lineno="526"><highlight class="normal">fe_log(float32<sp/>x)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MIN_FIXLOG;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FLOAT2FIX(log(x));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>float32</highlight></codeline>
<codeline lineno="538"><highlight class="normal">fe_mel(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*<sp/>mel,<sp/>float32<sp/>x)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>warped<sp/>=<sp/>fe_warp_unwarped_to_warped(mel,<sp/>x);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(float32)<sp/>(2595.0<sp/>*<sp/>log10(1.0<sp/>+<sp/>warped<sp/>/<sp/>700.0));</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>float32</highlight></codeline>
<codeline lineno="546"><highlight class="normal">fe_melinv(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*<sp/>mel,<sp/>float32<sp/>x)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>warped<sp/>=<sp/>(float32)<sp/>(700.0<sp/>*<sp/>(pow(10.0,<sp/>x<sp/>/<sp/>2595.0)<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fe_warp_warped_to_unwarped(mel,<sp/>warped);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="553"><highlight class="normal">fe_build_melfilters(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*<sp/>mel_fb)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>melmin,<sp/>melmax,<sp/>melbw,<sp/>fftfreq;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_coeffs,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Filter<sp/>coefficient<sp/>matrix,<sp/>in<sp/>flattened<sp/>form.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;spec_start<sp/>=</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(mel_fb-&gt;num_filters,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mel_fb-&gt;spec_start));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_start<sp/>=</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(mel_fb-&gt;num_filters,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mel_fb-&gt;filt_start));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_width<sp/>=</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(mel_fb-&gt;num_filters,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mel_fb-&gt;filt_width));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>calculate<sp/>the<sp/>widths<sp/>of<sp/>each<sp/>filter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Minimum<sp/>and<sp/>maximum<sp/>frequencies<sp/>in<sp/>mel<sp/>scale.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>melmin<sp/>=<sp/>fe_mel(mel_fb,<sp/>mel_fb-&gt;lower_filt_freq);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>melmax<sp/>=<sp/>fe_mel(mel_fb,<sp/>mel_fb-&gt;upper_filt_freq);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Width<sp/>of<sp/>filters<sp/>in<sp/>mel<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>melbw<sp/>=<sp/>(melmax<sp/>-<sp/>melmin)<sp/>/<sp/>(mel_fb-&gt;num_filters<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;doublewide)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>melmin<sp/>-=<sp/>melbw;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>melmax<sp/>+=<sp/>melbw;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fe_melinv(mel_fb,<sp/>melmin)<sp/>&lt;<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fe_melinv(mel_fb,<sp/>melmax)<sp/>&gt;<sp/>mel_fb-&gt;sampling_rate<sp/>/<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>Range:<sp/>low<sp/><sp/>filter<sp/>edge<sp/>=<sp/>%f<sp/>(%f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_melinv(mel_fb,<sp/>melmin),<sp/>0.0);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>filter<sp/>edge<sp/>=<sp/>%f<sp/>(%f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_melinv(mel_fb,<sp/>melmax),<sp/>mel_fb-&gt;sampling_rate<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FE_INVALID_PARAM_ERROR;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DFT<sp/>point<sp/>spacing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>fftfreq<sp/>=<sp/>mel_fb-&gt;sampling_rate<sp/>/<sp/>(float32)<sp/>mel_fb-&gt;fft_size;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>and<sp/>place<sp/>filter<sp/>coefficients.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>n_coeffs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mel_fb-&gt;num_filters;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>freqs[3];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Left,<sp/>center,<sp/>right<sp/>frequencies<sp/>in<sp/>Hertz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;doublewide)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[j]<sp/>=<sp/>fe_melinv(mel_fb,<sp/>(i<sp/>+<sp/>j<sp/>*<sp/>2)<sp/>*<sp/>melbw<sp/>+<sp/>melmin);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[j]<sp/>=<sp/>fe_melinv(mel_fb,<sp/>(i<sp/>+<sp/>j)<sp/>*<sp/>melbw<sp/>+<sp/>melmin);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Round<sp/>them<sp/>to<sp/>DFT<sp/>points<sp/>if<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;round_filters)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[j]<sp/>=<sp/>((int)<sp/>(freqs[j]<sp/>/<sp/>fftfreq<sp/>+<sp/>0.5))<sp/>*<sp/>fftfreq;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spec_start<sp/>is<sp/>the<sp/>start<sp/>of<sp/>this<sp/>filter<sp/>in<sp/>the<sp/>power<sp/>spectrum.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;spec_start[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>must<sp/>be<sp/>a<sp/>better<sp/>way...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mel_fb-&gt;fft_size<sp/>/<sp/>2<sp/>+<sp/>1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>hz<sp/>=<sp/>j<sp/>*<sp/>fftfreq;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hz<sp/>&lt;<sp/>freqs[0])</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hz<sp/>&gt;<sp/>freqs[2]<sp/>||<sp/>j<sp/>==<sp/>mel_fb-&gt;fft_size<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>filt_width<sp/>is<sp/>the<sp/>width<sp/>in<sp/>DFT<sp/>points<sp/>of<sp/>this<sp/>filter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_width[i]<sp/>=<sp/>j<sp/>-<sp/>mel_fb-&gt;spec_start[i];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>filt_start<sp/>is<sp/>the<sp/>start<sp/>of<sp/>this<sp/>filter<sp/>in<sp/>the<sp/>filt_coeffs<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_start[i]<sp/>=<sp/>n_coeffs;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_coeffs<sp/>+=<sp/>mel_fb-&gt;filt_width[i];</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;spec_start[i]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;spec_start[i]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>go<sp/>back<sp/>and<sp/>allocate<sp/>the<sp/>coefficient<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_coeffs<sp/>=</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8e89a31c3c70710a8e023a177084bff2" kindref="member">ckd_malloc</ref>(n_coeffs<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mel_fb-&gt;filt_coeffs));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>now<sp/>generate<sp/>the<sp/>coefficients.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>n_coeffs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mel_fb-&gt;num_filters;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>freqs[3];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Left,<sp/>center,<sp/>right<sp/>frequencies<sp/>in<sp/>Hertz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;doublewide)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[j]<sp/>=<sp/>fe_melinv(mel_fb,<sp/>(i<sp/>+<sp/>j<sp/>*<sp/>2)<sp/>*<sp/>melbw<sp/>+<sp/>melmin);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[j]<sp/>=<sp/>fe_melinv(mel_fb,<sp/>(i<sp/>+<sp/>j)<sp/>*<sp/>melbw<sp/>+<sp/>melmin);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Round<sp/>them<sp/>to<sp/>DFT<sp/>points<sp/>if<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;round_filters)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[j]<sp/>=<sp/>((int)<sp/>(freqs[j]<sp/>/<sp/>fftfreq<sp/>+<sp/>0.5))<sp/>*<sp/>fftfreq;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mel_fb-&gt;filt_width[i];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>hz,<sp/>loslope,<sp/>hislope;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hz<sp/>=<sp/>(mel_fb-&gt;spec_start[i]<sp/>+<sp/>j)<sp/>*<sp/>fftfreq;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hz<sp/>&lt;<sp/>freqs[0]<sp/>||<sp/>hz<sp/>&gt;<sp/>freqs[2])<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" kindref="member">E_FATAL</ref></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>filterbank,<sp/>frequency<sp/>range<sp/>does<sp/>not<sp/>match.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Sample<sp/>rate<sp/>%f,<sp/>FFT<sp/>size<sp/>%d,<sp/>lowerf<sp/>%f<sp/>&lt;<sp/>freq<sp/>%f<sp/>&gt;<sp/>upperf<sp/>%f.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;sampling_rate,<sp/>mel_fb-&gt;fft_size,<sp/>freqs[0],<sp/>hz,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqs[2]);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loslope<sp/>=<sp/>(hz<sp/>-<sp/>freqs[0])<sp/>/<sp/>(freqs[1]<sp/>-<sp/>freqs[0]);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hislope<sp/>=<sp/>(freqs[2]<sp/>-<sp/>hz)<sp/>/<sp/>(freqs[2]<sp/>-<sp/>freqs[1]);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;unit_area)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loslope<sp/>*=<sp/>2<sp/>/<sp/>(freqs[2]<sp/>-<sp/>freqs[0]);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hislope<sp/>*=<sp/>2<sp/>/<sp/>(freqs[2]<sp/>-<sp/>freqs[0]);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loslope<sp/>&lt;<sp/>hislope)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIXED_POINT</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_coeffs[n_coeffs]<sp/>=<sp/>fe_log(loslope);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_coeffs[n_coeffs]<sp/>=<sp/>loslope;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIXED_POINT</highlight></codeline>
<codeline lineno="674"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_coeffs[n_coeffs]<sp/>=<sp/>fe_log(hislope);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;filt_coeffs[n_coeffs]<sp/>=<sp/>hislope;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_coeffs;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FE_SUCCESS;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="687"><highlight class="normal">fe_compute_melcosine(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*<sp/>mel_fb)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>float64<sp/>freqstep;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;mel_cosine<sp/>=</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mfcc_t<sp/>**)<sp/><ref refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" kindref="member">ckd_calloc_2d</ref>(mel_fb-&gt;num_cepstra,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;num_filters,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mfcc_t));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>freqstep<sp/>=<sp/>M_PI<sp/>/<sp/>mel_fb-&gt;num_filters;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>The<sp/>first<sp/>row<sp/>vector<sp/>is<sp/>actually<sp/>unnecessary<sp/>but<sp/>we<sp/>leave</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>in<sp/>to<sp/>avoid<sp/>confusion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mel_fb-&gt;num_cepstra;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mel_fb-&gt;num_filters;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>cosine;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosine<sp/>=<sp/>cos(freqstep<sp/>*<sp/>i<sp/>*<sp/>(j<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;mel_cosine[i][j]<sp/>=<sp/>FLOAT2COS(cosine);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>precompute<sp/>normalization<sp/>constants<sp/>for<sp/>unitary<sp/>DCT.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;sqrt_inv_n<sp/>=<sp/>FLOAT2COS(sqrt(1.0<sp/>/<sp/>mel_fb-&gt;num_filters));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>mel_fb-&gt;sqrt_inv_2n<sp/>=<sp/>FLOAT2COS(sqrt(2.0<sp/>/<sp/>mel_fb-&gt;num_filters));</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>liftering<sp/>weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mel_fb-&gt;lifter_val)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;lifter<sp/>=</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calloc(mel_fb-&gt;num_cepstra,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mel_fb-&gt;lifter));</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mel_fb-&gt;num_cepstra;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;lifter[i]<sp/>=<sp/>FLOAT2MFCC(1<sp/>+<sp/>mel_fb-&gt;lifter_val<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sin(i<sp/>*<sp/>M_PI<sp/>/</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mel_fb-&gt;lifter_val));</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal">fe_pre_emphasis(int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in,<sp/>frame_t<sp/>*<sp/>out,<sp/>int32<sp/>len,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>factor,<sp/>int16<sp/>prior)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FIXED_POINT)</highlight></codeline>
<codeline lineno="734"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>fixed32<sp/>fxd_alpha<sp/>=<sp/>FLOAT2FIX(factor);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>((fixed32)<sp/>in[0]<sp/>&lt;&lt;<sp/>DEFAULT_RADIX)<sp/>-<sp/>(prior<sp/>*<sp/>fxd_alpha);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>((fixed32)<sp/>in[i]<sp/>&lt;&lt;<sp/>DEFAULT_RADIX)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(fixed32)<sp/>in[i<sp/>-<sp/>1]<sp/>*<sp/>fxd_alpha;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>(frame_t)<sp/>in[0]<sp/>-<sp/>(frame_t)<sp/>prior<sp/>*factor;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>(frame_t)<sp/>in[i]<sp/>-<sp/>(frame_t)<sp/>in[i<sp/>-<sp/>1]<sp/>*<sp/>factor;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="744"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal">fe_short_to_frame(int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in,<sp/>frame_t<sp/>*<sp/>out,<sp/>int32<sp/>len)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FIXED_POINT)</highlight></codeline>
<codeline lineno="752"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>(int32)<sp/>in[i]<sp/>&lt;&lt;<sp/>DEFAULT_RADIX;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXED_POINT<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>(frame_t)<sp/>in[i];</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXED_POINT<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="758"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal">fe_create_hamming(window_t<sp/>*<sp/>in,<sp/>int32<sp/>in_len)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Symmetric,<sp/>so<sp/>we<sp/>only<sp/>create<sp/>the<sp/>first<sp/>half<sp/>of<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>in_len<sp/>/<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>hamm;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hamm<sp/>=<sp/>(0.54<sp/>-<sp/>0.46<sp/>*<sp/>cos(2<sp/>*<sp/>M_PI<sp/>*<sp/>i<sp/>/</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((float64)<sp/>in_len<sp/>-<sp/>1.0)));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[i]<sp/>=<sp/>FLOAT2COS(hamm);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">fe_hamming_window(frame_t<sp/>*<sp/>in,<sp/>window_t<sp/>*<sp/>window,<sp/>int32<sp/>in_len,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>remove_dc)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove_dc)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_t<sp/>mean<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>in_len;<sp/>i++)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>+=<sp/>in[i];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>/=<sp/>in_len;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>in_len;<sp/>i++)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[i]<sp/>-=<sp/>(frame_t)<sp/>mean;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>in_len<sp/>/<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[i]<sp/>=<sp/>COSMUL(in[i],<sp/>window[i]);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[in_len<sp/>-<sp/>1<sp/>-<sp/>i]<sp/>=<sp/>COSMUL(in[in_len<sp/>-<sp/>1<sp/>-<sp/>i],<sp/>window[i]);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">fe_spch_to_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>to<sp/>the<sp/>frame<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;pre_emphasis_alpha<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_pre_emphasis(fe-&gt;spch,<sp/>fe-&gt;frame,<sp/>len,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;pre_emphasis_alpha,<sp/>fe-&gt;prior);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>fe-&gt;frame_shift)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;prior<sp/>=<sp/>fe-&gt;spch[fe-&gt;frame_shift<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;prior<sp/>=<sp/>fe-&gt;spch[len<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_short_to_frame(fe-&gt;spch,<sp/>fe-&gt;frame,<sp/>len);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>pad<sp/>up<sp/>to<sp/>FFT<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(fe-&gt;frame<sp/>+<sp/>len,<sp/>0,<sp/>(fe-&gt;fft_size<sp/>-<sp/>len)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*fe-&gt;frame));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Window.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_hamming_window(fe-&gt;frame,<sp/>fe-&gt;hamming_window,<sp/>fe-&gt;frame_size,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;remove_dc);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal">fe_read_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in,<sp/>int32<sp/>len)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>fe-&gt;frame_size)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>fe-&gt;frame_size;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>it<sp/>into<sp/>the<sp/>raw<sp/>speech<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(fe-&gt;spch,<sp/>in,<sp/>len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*in));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Swap<sp/>and<sp/>dither<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;swap)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;fe-&gt;spch[i]);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;dither)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;spch[i]<sp/>+=<sp/>(int16)<sp/>((!(s3_rand_int31()<sp/>%<sp/>4))<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fe_spch_to_frame(fe,<sp/>len);</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal">fe_shift_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in,<sp/>int32<sp/>len)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/>i;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>fe-&gt;frame_shift)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>fe-&gt;frame_shift;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>fe-&gt;frame_size<sp/>-<sp/>fe-&gt;frame_shift;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shift<sp/>data<sp/>into<sp/>the<sp/>raw<sp/>speech<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(fe-&gt;spch,<sp/>fe-&gt;spch<sp/>+<sp/>fe-&gt;frame_shift,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*fe-&gt;spch));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(fe-&gt;spch<sp/>+<sp/>offset,<sp/>in,<sp/>len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*fe-&gt;spch));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Swap<sp/>and<sp/>dither<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;swap)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWAP_INT16(&amp;fe-&gt;spch[offset<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;dither)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;spch[offset<sp/>+<sp/>i]</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>(int16)<sp/>((!(s3_rand_int31()<sp/>%<sp/>4))<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fe_spch_to_frame(fe,<sp/>offset<sp/>+<sp/>len);</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">fe_create_twiddle(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;fft_size<sp/>/<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>a<sp/>=<sp/>2<sp/>*<sp/>M_PI<sp/>*<sp/>i<sp/>/<sp/>fe-&gt;fft_size;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FIXED_POINT)</highlight></codeline>
<codeline lineno="878"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;ccc[i]<sp/>=<sp/>FLOAT2COS(cos(a));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;sss[i]<sp/>=<sp/>FLOAT2COS(sin(a));</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="881"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;ccc[i]<sp/>=<sp/>cos(a);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;sss[i]<sp/>=<sp/>sin(a);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="884"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">fe_fft_real(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe)</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,<sp/>m,<sp/>n;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_t<sp/>*x,<sp/>xt;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>fe-&gt;frame;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>fe-&gt;fft_order;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>fe-&gt;fft_size;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bit-reverse<sp/>the<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>x[j];</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[j]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>xt;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>n<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;=<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>k;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Basic<sp/>butterflies<sp/>(2-point<sp/>FFT,<sp/>real<sp/>twiddle<sp/>factors):</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>x[i]<sp/><sp/><sp/>=<sp/>x[i]<sp/>+<sp/><sp/>1<sp/>*<sp/>x[i+1]</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>x[i+1]<sp/>=<sp/>x[i]<sp/>+<sp/>-1<sp/>*<sp/>x[i+1]</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>(xt<sp/>+<sp/>x[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i<sp/>+<sp/>1]<sp/>=<sp/>(xt<sp/>-<sp/>x[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>rest<sp/>of<sp/>the<sp/>butterflies,<sp/>in<sp/>stages<sp/>from<sp/>1..m<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>m;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/>n2,<sp/>n4;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n4<sp/>=<sp/>k<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>k<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stride<sp/>over<sp/>each<sp/>(1<sp/>&lt;&lt;<sp/>(k+1))<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>(1<sp/>&lt;&lt;<sp/>n1))<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Basic<sp/>butterfly<sp/>with<sp/>real<sp/>twiddle<sp/>factors:</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>x[i]<sp/>+<sp/><sp/>1<sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k)]</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k)]<sp/>=<sp/>x[i]<sp/>+<sp/>-1<sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k)]</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>(xt<sp/>+<sp/>x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)]);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)]<sp/>=<sp/>(xt<sp/>-<sp/>x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)]);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>other<sp/>ones<sp/>with<sp/>real<sp/>twiddle<sp/>factors:</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k)<sp/>+<sp/>(1&lt;&lt;(k-1))]</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>=<sp/>0<sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k-1)]<sp/>+<sp/>-1<sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k)<sp/>+<sp/>(1&lt;&lt;k-1)]</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;(k-1))]</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>=<sp/>1<sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k-1)]<sp/>+<sp/><sp/>0<sp/>*<sp/>x[i<sp/>+<sp/>(1&lt;&lt;k)<sp/>+<sp/>(1&lt;&lt;k-1)]</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n4)]<sp/>=<sp/>-x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n4)];</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n4)]<sp/>=<sp/>x[i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n4)];</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Butterflies<sp/>with<sp/>complex<sp/>twiddle<sp/>factors.</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>are<sp/>(1&lt;&lt;k-1)<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>n4);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_t<sp/>cc,<sp/>ss,<sp/>t1,<sp/>t2;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>i<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>=<sp/>i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i4<sp/>=<sp/>i<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>n2)<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cc<sp/>=<sp/>real(W[j<sp/>*<sp/>n<sp/>/<sp/>(1&lt;&lt;(k+1))])</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ss<sp/>=<sp/>imag(W[j<sp/>*<sp/>n<sp/>/<sp/>(1&lt;&lt;(k+1))])</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>fe-&gt;ccc[j<sp/>&lt;&lt;<sp/>(m<sp/>-<sp/>n1)];</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>=<sp/>fe-&gt;sss[j<sp/>&lt;&lt;<sp/>(m<sp/>-<sp/>n1)];</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>some<sp/>symmetry<sp/>properties<sp/>which<sp/>allow<sp/>us</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>get<sp/>away<sp/>with<sp/>only<sp/>four<sp/>multiplications<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>COSMUL(x[i3],<sp/>cc)<sp/>+<sp/>COSMUL(x[i4],<sp/>ss);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>COSMUL(x[i3],<sp/>ss)<sp/>-<sp/>COSMUL(x[i4],<sp/>cc);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i4]<sp/>=<sp/>(x[i2]<sp/>-<sp/>t2);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i3]<sp/>=<sp/>(-x[i2]<sp/>-<sp/>t2);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i2]<sp/>=<sp/>(x[i1]<sp/>-<sp/>t1);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i1]<sp/>=<sp/>(x[i1]<sp/>+<sp/>t1);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>isn&apos;t<sp/>used,<sp/>but<sp/>return<sp/>it<sp/>for<sp/>completeness.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal">fe_spec_magnitude(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe)</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_t<sp/>*fft;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>powspec_t<sp/>*spec;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>j,<sp/>scale,<sp/>fftsize;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>FFT<sp/>and<sp/>get<sp/>the<sp/>scaling<sp/>factor<sp/>back<sp/>(only<sp/>actually<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>fixed-point).<sp/><sp/>Note<sp/>the<sp/>scaling<sp/>factor<sp/>is<sp/>expressed<sp/>in<sp/>bits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>fe_fft_real(fe);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenience<sp/>pointers<sp/>to<sp/>make<sp/>things<sp/>less<sp/>awkward<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>fft<sp/>=<sp/>fe-&gt;frame;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>fe-&gt;spec;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>fftsize<sp/>=<sp/>fe-&gt;fft_size;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>scale<sp/>things<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>way<sp/>to<sp/>N.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>fe-&gt;fft_order<sp/>-<sp/>scale;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>point<sp/>(DC<sp/>coefficient)<sp/>has<sp/>no<sp/>imaginary<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FIXED_POINT)</highlight></codeline>
<codeline lineno="1008"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[0]<sp/>=<sp/>FIXLN(abs(fft[0])<sp/>&lt;&lt;<sp/>scale)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1010"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[0]<sp/>=<sp/>fft[0]<sp/>*<sp/>fft[0];</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1012"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>fftsize<sp/>/<sp/>2;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FIXED_POINT)</highlight></codeline>
<codeline lineno="1016"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>rr<sp/>=<sp/>FIXLN(abs(fft[j])<sp/>&lt;&lt;<sp/>scale)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>ii<sp/>=<sp/>FIXLN(abs(fft[fftsize<sp/>-<sp/>j])<sp/>&lt;&lt;<sp/>scale)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[j]<sp/>=<sp/>fe_log_add(rr,<sp/>ii);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1020"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[j]<sp/>=<sp/>fft[j]<sp/>*<sp/>fft[j]<sp/>+<sp/>fft[fftsize<sp/>-<sp/>j]<sp/>*<sp/>fft[fftsize<sp/>-<sp/>j];</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1022"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal">fe_mel_spec(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichfilt;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>powspec_t<sp/>*spec,<sp/>*mfspec;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenience<sp/>poitners.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>fe-&gt;spec;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>mfspec<sp/>=<sp/>fe-&gt;mfspec;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(whichfilt<sp/>=<sp/>0;<sp/>whichfilt<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>whichfilt++)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spec_start,<sp/>filt_start,<sp/>i;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_start<sp/>=<sp/>fe-&gt;mel_fb-&gt;spec_start[whichfilt];</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filt_start<sp/>=<sp/>fe-&gt;mel_fb-&gt;filt_start[whichfilt];</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIXED_POINT</highlight></codeline>
<codeline lineno="1041"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfspec[whichfilt]<sp/>=</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[spec_start]<sp/>+<sp/>fe-&gt;mel_fb-&gt;filt_coeffs[filt_start];</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;filt_width[whichfilt];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfspec[whichfilt]<sp/>=<sp/>fe_log_add(mfspec[whichfilt],</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[spec_start<sp/>+<sp/>i]<sp/>+</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;mel_fb-&gt;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filt_coeffs[filt_start<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!FIXED_POINT<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1050"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfspec[whichfilt]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;filt_width[whichfilt];<sp/>i++)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfspec[whichfilt]<sp/>+=</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[spec_start<sp/>+<sp/>i]<sp/>*<sp/>fe-&gt;mel_fb-&gt;filt_coeffs[filt_start<sp/>+</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i];</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!FIXED_POINT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_FLOOR<sp/>1e-4</highlight></codeline>
<codeline lineno="1061"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal">fe_mel_cep(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/>mfcc_t<sp/>*<sp/>mfcep)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>powspec_t<sp/>*mfspec;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenience<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>mfspec<sp/>=<sp/>fe-&gt;mfspec;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FIXED_POINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>already<sp/>in<sp/>log<sp/>domain<sp/>for<sp/>fixed<sp/>point<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1073"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfspec[i]<sp/>=<sp/>log(mfspec[i]<sp/>+<sp/>LOG_FLOOR);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!FIXED_POINT<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1075"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>doing<sp/>LOG_SPEC,<sp/>then<sp/>do<sp/>nothing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;log_spec<sp/>==<sp/>RAW_LOG_SPEC)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;feature_dimension;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>=<sp/>(mfcc_t)<sp/>mfspec[i];</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>smoothed<sp/>spectrum,<sp/>do<sp/>DCT-II<sp/>followed<sp/>by<sp/>(its<sp/>inverse)<sp/>DCT-III<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;log_spec<sp/>==<sp/>SMOOTH_LOG_SPEC)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>is<sp/>probably<sp/>broken<sp/>for<sp/>fixed-point.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_dct2(fe,<sp/>mfspec,<sp/>mfcep,<sp/>0);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_dct3(fe,<sp/>mfcep,<sp/>mfspec);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;feature_dimension;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>=<sp/>(mfcc_t)<sp/>mfspec[i];</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;transform<sp/>==<sp/>DCT_II)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_dct2(fe,<sp/>mfspec,<sp/>mfcep,<sp/>FALSE);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;transform<sp/>==<sp/>DCT_HTK)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_dct2(fe,<sp/>mfspec,<sp/>mfcep,<sp/>TRUE);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe_spec2cep(fe,<sp/>mfspec,<sp/>mfcep);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal">fe_spec2cep(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>powspec_t<sp/>*<sp/>mflogspec,<sp/>mfcc_t<sp/>*<sp/>mfcep)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j,<sp/>beta;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>C0<sp/>separately<sp/>(its<sp/>basis<sp/>vector<sp/>is<sp/>1)<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>costly<sp/>multiplications.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcep[0]<sp/>=<sp/>mflogspec[0]<sp/>/<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>beta<sp/>=<sp/>0.5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>j++)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[0]<sp/>+=<sp/>mflogspec[j];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>beta<sp/>=<sp/>1.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcep[0]<sp/>/=<sp/>(frame_t)<sp/>fe-&gt;mel_fb-&gt;num_filters;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>fe-&gt;num_cepstra;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0.5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>+=<sp/>COSMUL(mflogspec[j],</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe-&gt;mel_fb-&gt;mel_cosine[i][j])<sp/>*<sp/>beta;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>this<sp/>actually<sp/>normalizes<sp/>by<sp/>num_filters,<sp/>like<sp/>the</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>original<sp/>Sphinx<sp/>front-end,<sp/>due<sp/>to<sp/>the<sp/>doubled<sp/>&apos;beta&apos;<sp/>factor</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>above.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>/=<sp/>(frame_t)<sp/>fe-&gt;mel_fb-&gt;num_filters<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal">fe_dct2(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>powspec_t<sp/>*<sp/>mflogspec,<sp/>mfcc_t<sp/>*<sp/>mfcep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>htk)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>C0<sp/>separately<sp/>(its<sp/>basis<sp/>vector<sp/>is<sp/>1)<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>costly<sp/>multiplications.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcep[0]<sp/>=<sp/>mflogspec[0];</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>j++)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[0]<sp/>+=<sp/>mflogspec[j];</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(htk)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[0]<sp/>=<sp/>COSMUL(mfcep[0],<sp/>fe-&gt;mel_fb-&gt;sqrt_inv_2n);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sqrt(1/N)<sp/>=<sp/>sqrt(2/N)<sp/>*<sp/>1/sqrt(2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[0]<sp/>=<sp/>COSMUL(mfcep[0],<sp/>fe-&gt;mel_fb-&gt;sqrt_inv_n);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>fe-&gt;num_cepstra;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>+=<sp/>COSMUL(mflogspec[j],<sp/>fe-&gt;mel_fb-&gt;mel_cosine[i][j]);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>=<sp/>COSMUL(mfcep[i],<sp/>fe-&gt;mel_fb-&gt;sqrt_inv_2n);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal">fe_lifter(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/>mfcc_t<sp/>*<sp/>mfcep)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fe-&gt;mel_fb-&gt;lifter_val<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;num_cepstra;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcep[i]<sp/>=<sp/>MFCCMUL(mfcep[i],<sp/>fe-&gt;mel_fb-&gt;lifter[i]);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal">fe_dct3(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mfcc_t<sp/>*<sp/>mfcep,<sp/>powspec_t<sp/>*<sp/>mflogspec)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fe-&gt;mel_fb-&gt;num_filters;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mflogspec[i]<sp/>=<sp/>COSMUL(mfcep[0],<sp/>SQRT_HALF);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>fe-&gt;num_cepstra;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mflogspec[i]<sp/>+=<sp/>COSMUL(mfcep[j],<sp/>fe-&gt;mel_fb-&gt;mel_cosine[j][i]);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mflogspec[i]<sp/>=<sp/>COSMUL(mflogspec[i],<sp/>fe-&gt;mel_fb-&gt;sqrt_inv_2n);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">fe_write_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/>mfcc_t<sp/>*<sp/>feat,<sp/>int32<sp/>store_pcm)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>is_speech;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_spec_magnitude(fe);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_mel_spec(fe);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_track_snr(fe,<sp/>&amp;is_speech);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_mel_cep(fe,<sp/>feat);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_lifter(fe,<sp/>feat);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>fe_vad_hangover(fe,<sp/>feat,<sp/>is_speech,<sp/>store_pcm);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">fe_create_2d(int32<sp/>d1,<sp/>int32<sp/>d2,<sp/>int32<sp/>elem_size)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" kindref="member">ckd_calloc_2d</ref>(d1,<sp/>d2,<sp/>elem_size);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal">fe_free_2d(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arr)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" kindref="member">ckd_free_2d</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>arr);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c"/>
  </compounddef>
</doxygen>
