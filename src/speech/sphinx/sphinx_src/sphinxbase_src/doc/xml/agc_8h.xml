<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="agc_8h" kind="file">
    <compoundname>agc.h</compoundname>
    <includes refid="sphinxbase__export_8h" local="no">sphinxbase/sphinxbase_export.h</includes>
    <includes refid="prim__type_8h" local="no">sphinxbase/prim_type.h</includes>
    <includes refid="fe_8h" local="no">sphinxbase/fe.h</includes>
    <includedby refid="feat_8h" local="no">include/sphinxbase/feat.h</includedby>
    <includedby refid="agc_8c" local="yes">src/libsphinxbase/feat/agc.c</includedby>
    <includedby refid="feat_8c" local="yes">src/libsphinxbase/feat/feat.c</includedby>
    <incdepgraph>
      <node id="147">
        <label>stdarg.h</label>
      </node>
      <node id="140">
        <label>include/sphinxbase/agc.h</label>
        <link refid="agc.h"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>limits.h</label>
      </node>
      <node id="143">
        <label>sphinx_config.h</label>
      </node>
      <node id="148">
        <label>sphinxbase/fixpoint.h</label>
        <link refid="fixpoint_8h_source"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="145">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="150">
        <label>include/sphinxbase/agc.h</label>
        <link refid="agc.h"/>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>src/libsphinxbase/feat/agc.c</label>
        <link refid="agc_8c_source"/>
      </node>
      <node id="153">
        <label>src/libsphinxbase/feat/lda.c</label>
        <link refid="lda_8c_source"/>
      </node>
      <node id="152">
        <label>src/libsphinxbase/feat/feat.c</label>
        <link refid="feat_8c_source"/>
      </node>
      <node id="151">
        <label>include/sphinxbase/feat.h</label>
        <link refid="feat_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structagc__s" prot="public">agc_s</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923" prot="public" static="no">
        <name>agc_type_e</name>
        <enumvalue id="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923aa99f202adc14c67d038a6f9b04cc1f54" prot="public">
          <name>AGC_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923a8582bf61aafe07b9144ba2bcfcde4de7" prot="public">
          <name>AGC_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923a0af126cbfacfc3a07ce51623402c81f9" prot="public">
          <name>AGC_EMAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923a98faaf4d5fa6901d0c627385f1eb4270" prot="public">
          <name>AGC_NOISE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of acoustic gain control to apply to the features. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="95" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" bodystart="95" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" prot="public" static="no">
        <type>enum <ref refid="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923" kindref="member">agc_type_e</ref></type>
        <definition>typedef enum agc_type_e  agc_type_t</definition>
        <argsstring></argsstring>
        <name>agc_type_t</name>
        <briefdescription>
<para>Types of acoustic gain control to apply to the features. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="agc_8h_1a4998d40c67716fdea6791f8070642dc5" prot="public" static="no">
        <type>struct <ref refid="structagc__s" kindref="compound">agc_s</ref></type>
        <definition>typedef struct agc_s  agc_t</definition>
        <argsstring></argsstring>
        <name>agc_t</name>
        <briefdescription>
<para>Structure holding data for doing AGC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" prot="public" static="no" mutable="no">
        <type>SPHINXBASE_EXPORT const char *</type>
        <definition>SPHINXBASE_EXPORT const char* agc_type_str[]</definition>
        <argsstring>[]</argsstring>
        <name>agc_type_str</name>
        <briefdescription>
<para>String representations of agc_type_t values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="108" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="70" bodyend="-1"/>
        <referencedby refid="agc_8h_1aebd0689591488378192e13f6d2646bc1" compoundref="agc_8c" startline="79" endline="89">agc_type_from_str</referencedby>
        <referencedby refid="feat_8h_1a7a5e2e02e99e368e1e9e3b1ded35e3dc" compoundref="feat_8c" startline="705" endline="892">feat_init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="agc_8h_1aebd0689591488378192e13f6d2646bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" kindref="member">agc_type_t</ref></type>
        <definition>SPHINXBASE_EXPORT agc_type_t agc_type_from_str</definition>
        <argsstring>(const char *str)</argsstring>
        <name>agc_type_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Convert string representation (from command-line) to agc_type_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="104" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="79" bodyend="89"/>
        <references refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" compoundref="agc_8c" startline="70">agc_type_str</references>
        <references refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" compoundref="err_8h" startline="81">E_FATAL</references>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1a5c7ee7b19f8dcfd0c28b4dc76a283dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT agc_t* agc_init</definition>
        <argsstring>(void)</argsstring>
        <name>agc_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize AGC structure with default values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="126" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="91" bodyend="98"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
        <referencedby refid="feat_8h_1a7a5e2e02e99e368e1e9e3b1ded35e3dc" compoundref="feat_8c" startline="705" endline="892">feat_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1a6a050fc4b079be05b1946636d5d7f3aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_free</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_free</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <briefdescription>
<para>Free AGC structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="132" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="100" bodyend="103"/>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <referencedby refid="feat_8h_1a98463b4ab5fe4265fc817523b0e25ee9" compoundref="feat_8c" startline="1442" endline="1469">feat_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1a29a2a4dd80141af1c3476094c353b739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_max</definition>
        <argsstring>(agc_t *agc, mfcc_t **mfc, int32 n_frame)</argsstring>
        <name>agc_max</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure (not used) </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>mfc</declname>
          <briefdescription><para>In/Out: mfc[f] = cepstrum vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>n_frame</declname>
          <briefdescription><para>In: number of frames of cepstrum vectors supplied </para></briefdescription>
        </param>
        <briefdescription>
<para>Apply AGC to the given mfc vectors (normalize all C0 mfc coefficients in the given input such that the max C0 value is 0, by subtracting the input max C0 from all). </para>        </briefdescription>
        <detaileddescription>
<para>This function operates on an entire utterance at a time. Hence, the entire utterance must be available beforehand (batchmode).</para><para>Apply AGC to the given mfc vectors (normalize all C0 mfc coefficients in the given input such that the max C0 value is 0, by subtracting the input max C0 from all). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="141" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="109" bodyend="126"/>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <references refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" compoundref="agc_8h" startline="116">agc_s::obs_frame</references>
        <references refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" compoundref="agc_8h" startline="115">agc_s::obs_max</references>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1ac2cdd4c519b46824c5b28c5b769b5ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_emax</definition>
        <argsstring>(agc_t *agc, mfcc_t **mfc, int32 n_frame)</argsstring>
        <name>agc_emax</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>mfc</declname>
          <briefdescription><para>In/Out: mfc[f] = cepstrum vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>n_frame</declname>
          <briefdescription><para>In: number of frames of cepstrum vectors supplied </para></briefdescription>
        </param>
        <briefdescription>
<para>Apply AGC to the given block of MFC vectors. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="agc_8h_1a29a2a4dd80141af1c3476094c353b739" kindref="member">agc_max()</ref> this does not require the entire utterance to be available. Call <ref refid="agc_8h_1af47b6004f2f963ae0019a67450b892c2" kindref="member">agc_emax_update()</ref> at the end of each utterance to update the AGC parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="152" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="142" bodyend="155"/>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
        <references refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" compoundref="agc_8h" startline="116">agc_s::obs_frame</references>
        <references refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" compoundref="agc_8h" startline="115">agc_s::obs_max</references>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1af47b6004f2f963ae0019a67450b892c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_emax_update</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_emax_update</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure </para></briefdescription>
        </param>
        <briefdescription>
<para>Update AGC parameters for next utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="161" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="159" bodyend="177"/>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
        <references refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" compoundref="agc_8h" startline="116">agc_s::obs_frame</references>
        <references refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" compoundref="agc_8h" startline="115">agc_s::obs_max</references>
        <references refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" compoundref="agc_8h" startline="117">agc_s::obs_utt</references>
        <referencedby refid="feat_8h_1a1e6aaefc9b1e7a0cf7fee8733e196359" compoundref="feat_8c" startline="1424" endline="1432">feat_update_stats</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1a7b439fb5d36250d09bb9d459c1e28ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT float32</type>
        <definition>SPHINXBASE_EXPORT float32 agc_emax_get</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_emax_get</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <briefdescription>
<para>Get the current AGC maximum estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="168" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="136" bodyend="139"/>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1a4fd17f224b5d8f7bfcaa9389d11716eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_emax_set</definition>
        <argsstring>(agc_t *agc, float32 m)</argsstring>
        <name>agc_emax_set</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Set the current AGC maximum estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="174" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="129" bodyend="133"/>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <referencedby refid="feat_8h_1a7a5e2e02e99e368e1e9e3b1ded35e3dc" compoundref="feat_8c" startline="705" endline="892">feat_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1ae65d4be1d74aea11b7e16e3777272d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_noise</definition>
        <argsstring>(agc_t *agc, mfcc_t **mfc, int32 n_frame)</argsstring>
        <name>agc_noise</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>mfc</declname>
          <briefdescription><para>In/Out: mfc[f] = cepstrum vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>n_frame</declname>
          <briefdescription><para>In: number of frames of cepstrum vectors supplied </para></briefdescription>
        </param>
        <briefdescription>
<para>Apply AGC using noise threshold to the given block of MFC vectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="180" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="180" bodyend="215"/>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1a77d0987174a1b3c6e8fcd63fe82f33ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT float32</type>
        <definition>SPHINXBASE_EXPORT float32 agc_get_threshold</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_get_threshold</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <briefdescription>
<para>Get the current AGC noise threshold. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="189" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="224" bodyend="227"/>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
      </memberdef>
      <memberdef kind="function" id="agc_8h_1aaaa9e15f192c91ad64c343b7c6db6714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void agc_set_threshold</definition>
        <argsstring>(agc_t *agc, float32 threshold)</argsstring>
        <name>agc_set_threshold</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Set the current AGC noise threshold. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h" line="195" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="218" bodyend="221"/>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>routine that implements automatic gain control </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>This function may not be fully compatible with SphinxTrain&apos;s family of AGC.</para></simplesect>
This implements AGC. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>agc.h<sp/>--<sp/>Various<sp/>forms<sp/>of<sp/>automatic<sp/>gain<sp/>control<sp/>(AGC)</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>$Log$</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2006/04/05<sp/><sp/>20:27:30<sp/><sp/>dhdfu</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>A<sp/>Great<sp/>Reorganzation<sp/>of<sp/>header<sp/>files<sp/>and<sp/>executables</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.8<sp/><sp/>2005/06/21<sp/>19:25:41<sp/><sp/>arthchan2003</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>1,<sp/>Fixed<sp/>doxygen<sp/>documentation.<sp/>2,<sp/>Added<sp/>$<sp/>keyword.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.4<sp/><sp/>2005/06/13<sp/>04:02:56<sp/><sp/>archan</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Fixed<sp/>most<sp/>doxygen-style<sp/>documentation<sp/>under<sp/>libs3decoder.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2005/03/30<sp/>01:22:46<sp/><sp/>archan</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>Fixed<sp/>mistakes<sp/>in<sp/>last<sp/>updates.<sp/>Add</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>28-Apr-1999<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copied<sp/>from<sp/>previous<sp/>version.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_S3_AGC_H_</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_S3_AGC_H_</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Win32/WinCE<sp/>DLL<sp/>gunk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/sphinxbase_export.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prim__type_8h" kindref="compound">sphinxbase/prim_type.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/fe.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Fool<sp/>Emacs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="95" refid="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1aef1d2c7e32d37aa84d70c2f3675fc923" kindref="member">agc_type_e</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>AGC_NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>AGC_MAX,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>AGC_EMAX,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>AGC_NOISE</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><ref refid="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" kindref="member">agc_type_t</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" kindref="member">agc_type_t</ref><sp/><ref refid="agc_8h_1aebd0689591488378192e13f6d2646bc1" kindref="member">agc_type_from_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>[];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structagc__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structagc__s" kindref="compound">agc_s</ref><sp/>{</highlight></codeline>
<codeline lineno="114" refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/><ref refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" kindref="member">max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/><ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" kindref="member">obs_frame</ref>;<sp/></highlight></codeline>
<codeline lineno="117" refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/><ref refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" kindref="member">obs_utt</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>obs_max_sum;</highlight></codeline>
<codeline lineno="119" refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/><ref refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" kindref="member">noise_thresh</ref>;<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*<ref refid="agc_8h_1a5c7ee7b19f8dcfd0c28b4dc76a283dc7" kindref="member">agc_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1a6a050fc4b079be05b1946636d5d7f3aa" kindref="member">agc_free</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1a29a2a4dd80141af1c3476094c353b739" kindref="member">agc_max</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**mfc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_frame<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1ac2cdd4c519b46824c5b28c5b769b5ecd" kindref="member">agc_emax</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**mfc,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_frame<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1af47b6004f2f963ae0019a67450b892c2" kindref="member">agc_emax_update</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="168"><highlight class="normal">float32<sp/><ref refid="agc_8h_1a7b439fb5d36250d09bb9d459c1e28ba5" kindref="member">agc_emax_get</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1a4fd17f224b5d8f7bfcaa9389d11716eb" kindref="member">agc_emax_set</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/>float32<sp/>m);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1ae65d4be1d74aea11b7e16e3777272d13" kindref="member">agc_noise</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**mfc,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_frame<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="189"><highlight class="normal">float32<sp/><ref refid="agc_8h_1a77d0987174a1b3c6e8fcd63fe82f33ce" kindref="member">agc_get_threshold</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1aaaa9e15f192c91ad64c343b7c6db6714" kindref="member">agc_set_threshold</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/>float32<sp/>threshold);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/agc.h"/>
  </compounddef>
</doxygen>
