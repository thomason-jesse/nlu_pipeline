<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="agc_8c" kind="file">
    <compoundname>agc.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes refid="agc_8h" local="yes">sphinxbase/agc.h</includes>
    <incdepgraph>
      <node id="1496">
        <label>stdarg.h</label>
      </node>
      <node id="1505">
        <label>sphinxbase/agc.h</label>
        <link refid="agc_8h"/>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
      </node>
      <node id="1503">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1504" relation="include">
        </childnode>
      </node>
      <node id="1498">
        <label>stdlib.h</label>
      </node>
      <node id="1502">
        <label>setjmp.h</label>
      </node>
      <node id="1499">
        <label>errno.h</label>
      </node>
      <node id="1495">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
      </node>
      <node id="1501">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
      </node>
      <node id="1509">
        <label>limits.h</label>
      </node>
      <node id="1504">
        <label>sphinx_config.h</label>
      </node>
      <node id="1494">
        <label>string.h</label>
      </node>
      <node id="1508">
        <label>sphinxbase/fixpoint.h</label>
        <link refid="fixpoint_8h_source"/>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
      </node>
      <node id="1493">
        <label>src/libsphinxbase/feat/agc.c</label>
        <link refid="agc.c"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
      </node>
      <node id="1500">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1507">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
      </node>
      <node id="1506">
        <label>sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
      </node>
      <node id="1497">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="agc_8c_1afd17ca1fc9065837b59cd4fca15ed38d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* agc_type_str[]</definition>
        <argsstring>[]</argsstring>
        <name>agc_type_str</name>
        <initializer>= {
    &quot;none&quot;,
    &quot;max&quot;,
    &quot;emax&quot;,
    &quot;noise&quot;
}</initializer>
        <briefdescription>
<para>String representations of agc_type_t values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="70" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="70" bodyend="-1"/>
        <referencedby refid="agc_8h_1aebd0689591488378192e13f6d2646bc1" compoundref="agc_8c" startline="79" endline="89">agc_type_from_str</referencedby>
        <referencedby refid="feat_8h_1a7a5e2e02e99e368e1e9e3b1ded35e3dc" compoundref="feat_8c" startline="705" endline="892">feat_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="agc_8c_1a8b8893de321f4d982780ab4f7eeea3f5" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int n_agc_type_str</definition>
        <argsstring></argsstring>
        <name>n_agc_type_str</name>
        <initializer>= sizeof(<ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>)/sizeof(<ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="76" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="agc_8c_1abda402d475a8f44da6995240e82d632f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" kindref="member">agc_type_t</ref></type>
        <definition>agc_type_t agc_type_from_str</definition>
        <argsstring>(const char *str)</argsstring>
        <name>agc_type_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Convert string representation (from command-line) to agc_type_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="79" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="79" bodyend="89"/>
        <references refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" compoundref="agc_8c" startline="70">agc_type_str</references>
        <references refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" compoundref="err_8h" startline="81">E_FATAL</references>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1abfe7db34d511cfff36844eb4218ac91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
        <definition>agc_t* agc_init</definition>
        <argsstring>(void)</argsstring>
        <name>agc_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize AGC structure with default values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="91" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="91" bodyend="98"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
        <referencedby refid="feat_8h_1a7a5e2e02e99e368e1e9e3b1ded35e3dc" compoundref="feat_8c" startline="705" endline="892">feat_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1a955196c89ce20bddfc924b546dfe6383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_free</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_free</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <briefdescription>
<para>Free AGC structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="100" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="100" bodyend="103"/>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <referencedby refid="feat_8h_1a98463b4ab5fe4265fc817523b0e25ee9" compoundref="feat_8c" startline="1442" endline="1469">feat_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1ab03d3347293df7a516b29231c6560643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_max</definition>
        <argsstring>(agc_t *agc, mfcc_t **mfc, int32 n_frame)</argsstring>
        <name>agc_max</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure (not used) </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>mfc</declname>
          <briefdescription><para>In/Out: mfc[f] = cepstrum vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>n_frame</declname>
          <briefdescription><para>In: number of frames of cepstrum vectors supplied </para></briefdescription>
        </param>
        <briefdescription>
<para>Normalize c0 for all frames such that max(c0) = 0. </para>        </briefdescription>
        <detaileddescription>
<para>Apply AGC to the given mfc vectors (normalize all C0 mfc coefficients in the given input such that the max C0 value is 0, by subtracting the input max C0 from all). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="109" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="109" bodyend="126"/>
        <references refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" compoundref="agc_8h" startline="115">agc_s::obs_max</references>
        <references refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" compoundref="agc_8h" startline="116">agc_s::obs_frame</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1ad614d7a52196a53addd0c77fd1bbc22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_emax_set</definition>
        <argsstring>(agc_t *agc, float32 m)</argsstring>
        <name>agc_emax_set</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Set the current AGC maximum estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="129" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="129" bodyend="133"/>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <referencedby refid="feat_8h_1a7a5e2e02e99e368e1e9e3b1ded35e3dc" compoundref="feat_8c" startline="705" endline="892">feat_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1a959c83925b46f9057cf34dc944dc3a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32</type>
        <definition>float32 agc_emax_get</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_emax_get</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <briefdescription>
<para>Get the current AGC maximum estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="136" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="136" bodyend="139"/>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1ad2dca673ed162734dd5aecfc04f0eb17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_emax</definition>
        <argsstring>(agc_t *agc, mfcc_t **mfc, int32 n_frame)</argsstring>
        <name>agc_emax</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>mfc</declname>
          <briefdescription><para>In/Out: mfc[f] = cepstrum vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>n_frame</declname>
          <briefdescription><para>In: number of frames of cepstrum vectors supplied </para></briefdescription>
        </param>
        <briefdescription>
<para>Apply AGC to the given block of MFC vectors. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="agc_8h_1a29a2a4dd80141af1c3476094c353b739" kindref="member">agc_max()</ref> this does not require the entire utterance to be available. Call <ref refid="agc_8h_1af47b6004f2f963ae0019a67450b892c2" kindref="member">agc_emax_update()</ref> at the end of each utterance to update the AGC parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="142" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="142" bodyend="155"/>
        <references refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" compoundref="agc_8h" startline="115">agc_s::obs_max</references>
        <references refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" compoundref="agc_8h" startline="116">agc_s::obs_frame</references>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1a8d4b254f41c04b0140a1c8bf2b0dd319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_emax_update</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_emax_update</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure </para></briefdescription>
        </param>
        <briefdescription>
<para>Update AGC parameters for next utterance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="159" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="159" bodyend="177"/>
        <references refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" compoundref="agc_8h" startline="116">agc_s::obs_frame</references>
        <references refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" compoundref="agc_8h" startline="115">agc_s::obs_max</references>
        <references refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" compoundref="agc_8h" startline="117">agc_s::obs_utt</references>
        <references refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" compoundref="agc_8h" startline="114">agc_s::max</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <referencedby refid="feat_8h_1a1e6aaefc9b1e7a0cf7fee8733e196359" compoundref="feat_8c" startline="1424" endline="1432">feat_update_stats</referencedby>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1a0c0e6794310b9a6655194228daa0b765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_noise</definition>
        <argsstring>(agc_t *agc, mfcc_t **cep, int32 nfr)</argsstring>
        <name>agc_noise</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
          <briefdescription><para>In: AGC structure </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>cep</declname>
          <briefdescription><para>In/Out: mfc[f] = cepstrum vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>nfr</declname>
          <briefdescription><para>In: number of frames of cepstrum vectors supplied </para></briefdescription>
        </param>
        <briefdescription>
<para>Apply AGC using noise threshold to the given block of MFC vectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="180" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="180" bodyend="215"/>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1a85e2a5139255984dbfd22b4fc21da36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agc_set_threshold</definition>
        <argsstring>(agc_t *agc, float32 threshold)</argsstring>
        <name>agc_set_threshold</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Set the current AGC noise threshold. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="218" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="218" bodyend="221"/>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
      </memberdef>
      <memberdef kind="function" id="agc_8c_1ab034a530125311ece685dad9f024f0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32</type>
        <definition>float32 agc_get_threshold</definition>
        <argsstring>(agc_t *agc)</argsstring>
        <name>agc_get_threshold</name>
        <param>
          <type><ref refid="agc_8h_1a4998d40c67716fdea6791f8070642dc5" kindref="member">agc_t</ref> *</type>
          <declname>agc</declname>
        </param>
        <briefdescription>
<para>Get the current AGC noise threshold. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" line="224" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c" bodystart="224" bodyend="227"/>
        <references refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" compoundref="agc_8h" startline="119">agc_s::noise_thresh</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>agc.c<sp/>--<sp/>Various<sp/>forms<sp/>of<sp/>automatic<sp/>gain<sp/>control<sp/>(AGC)</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1996<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>$Log$</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.5<sp/><sp/>2005/06/21<sp/><sp/>19:25:41<sp/><sp/>arthchan2003</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>1,<sp/>Fixed<sp/>doxygen<sp/>documentation.<sp/>2,<sp/>Added<sp/>$<sp/>keyword.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2005/03/30<sp/>01:22:46<sp/><sp/>archan</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Fixed<sp/>mistakes<sp/>in<sp/>last<sp/>updates.<sp/>Add</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>04-Nov-95<sp/><sp/><sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Created.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="agc_8h" kindref="compound">sphinxbase/agc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE!<sp/><sp/>These<sp/>must<sp/>match<sp/>the<sp/>enum<sp/>in<sp/>agc.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;emax&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;noise&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_agc_type_str<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>[0]);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" kindref="member">agc_type_t</ref></highlight></codeline>
<codeline lineno="79" refid="agc_8h_1aebd0689591488378192e13f6d2646bc1" refkind="member"><highlight class="normal"><ref refid="agc_8h_1aebd0689591488378192e13f6d2646bc1" kindref="member">agc_type_from_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_agc_type_str;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(str,<sp/><ref refid="agc_8h_1a6ea1b2b3d482cf08eb36084629503c80" kindref="member">agc_type_str</ref>[i]))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="agc_8h_1a5524df49e0425cc6b1c002bc704a8103" kindref="member">agc_type_t</ref>)i;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" kindref="member">E_FATAL</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>AGC<sp/>type<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AGC_NONE;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="agc_8h_1a5c7ee7b19f8dcfd0c28b4dc76a283dc7" refkind="member"><highlight class="normal"><ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*<ref refid="agc_8h_1a5c7ee7b19f8dcfd0c28b4dc76a283dc7" kindref="member">agc_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>agc<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*agc));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" kindref="member">noise_thresh</ref><sp/>=<sp/>FLOAT2MFCC(2.0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agc;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="agc_8h_1a6a050fc4b079be05b1946636d5d7f3aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="agc_8h_1a6a050fc4b079be05b1946636d5d7f3aa" kindref="member">agc_free</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(agc);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="agc_8h_1a29a2a4dd80141af1c3476094c353b739" refkind="member"><highlight class="normal"><ref refid="agc_8h_1a29a2a4dd80141af1c3476094c353b739" kindref="member">agc_max</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/>mfcc_t<sp/>**mfc,<sp/>int32<sp/>n_frame)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_frame<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref><sp/>=<sp/>mfc[0][0];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>n_frame;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mfc[i][0]<sp/>&gt;<sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref><sp/>=<sp/>mfc[i][0];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" kindref="member">obs_frame</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;AGCMax:<sp/>obs=max=<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_frame;<sp/>i++)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfc[i][0]<sp/>-=<sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="agc_8h_1a4fd17f224b5d8f7bfcaa9389d11716eb" refkind="member"><highlight class="normal"><ref refid="agc_8h_1a4fd17f224b5d8f7bfcaa9389d11716eb" kindref="member">agc_emax_set</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/>float32<sp/>m)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" kindref="member">max</ref><sp/>=<sp/>FLOAT2MFCC(m);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;AGCEMax:<sp/>max=<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>m);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">float32</highlight></codeline>
<codeline lineno="136" refid="agc_8h_1a7b439fb5d36250d09bb9d459c1e28ba5" refkind="member"><highlight class="normal"><ref refid="agc_8h_1a7b439fb5d36250d09bb9d459c1e28ba5" kindref="member">agc_emax_get</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MFCC2FLOAT(agc-&gt;<ref refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" kindref="member">max</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="agc_8h_1ac2cdd4c519b46824c5b28c5b769b5ecd" refkind="member"><highlight class="normal"><ref refid="agc_8h_1ac2cdd4c519b46824c5b28c5b769b5ecd" kindref="member">agc_emax</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/>mfcc_t<sp/>**mfc,<sp/>int32<sp/>n_frame)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_frame<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_frame;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mfc[i][0]<sp/>&gt;<sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref><sp/>=<sp/>mfc[i][0];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" kindref="member">obs_frame</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfc[i][0]<sp/>-=<sp/>agc-&gt;<ref refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Update<sp/>estimated<sp/>max<sp/>for<sp/>next<sp/>utterance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="agc_8h_1af47b6004f2f963ae0019a67450b892c2" refkind="member"><highlight class="normal"><ref refid="agc_8h_1af47b6004f2f963ae0019a67450b892c2" kindref="member">agc_emax_update</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agc-&gt;<ref refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" kindref="member">obs_frame</ref>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>only<sp/>if<sp/>some<sp/>data<sp/>observed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;obs_max_sum<sp/>+=<sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" kindref="member">obs_utt</ref>++;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Re-estimate<sp/>max<sp/>over<sp/>past<sp/>history;<sp/>decay<sp/>the<sp/>history<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" kindref="member">max</ref><sp/>=<sp/>agc-&gt;obs_max_sum<sp/>/<sp/>agc-&gt;<ref refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" kindref="member">obs_utt</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agc-&gt;<ref refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" kindref="member">obs_utt</ref><sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;obs_max_sum<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1ae4ce95dcfb26c7f14ea316ac3ab202b2" kindref="member">obs_utt</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;AGCEMax:<sp/>obs=<sp/>%.2f,<sp/>new=<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref>,<sp/>agc-&gt;<ref refid="structagc__s_1a6a55c54c76a2e0373a907d186b89fa8e" kindref="member">max</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>accumulators<sp/>for<sp/>the<sp/>next<sp/>utterance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a5a6c2e967089085bd4f6020876bcb92a" kindref="member">obs_frame</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a20c5289a6328895101e89cc3b418a1e4" kindref="member">obs_max</ref><sp/>=<sp/>FLOAT2MFCC(-1000.0);<sp/></highlight><highlight class="comment">/*<sp/>Less<sp/>than<sp/>any<sp/>real<sp/>C0<sp/>value<sp/>(hopefully!!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="agc_8h_1ae65d4be1d74aea11b7e16e3777272d13" refkind="member"><highlight class="normal"><ref refid="agc_8h_1ae65d4be1d74aea11b7e16e3777272d13" kindref="member">agc_noise</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfcc_t<sp/>**cep,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>nfr)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>min_energy;<sp/></highlight><highlight class="comment">/*<sp/>Minimum<sp/>log-energy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>noise_level;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Average<sp/>noise_level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frame<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>noise_frames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>noise<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>minimum<sp/>log-energy<sp/>in<sp/>utterance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>min_energy<sp/>=<sp/>cep[0][0];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfr;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cep[i][0]<sp/>&lt;<sp/>min_energy)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_energy<sp/>=<sp/>cep[i][0];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Average<sp/>all<sp/>frames<sp/>between<sp/>min_energy<sp/>and<sp/>min_energy<sp/>+<sp/>agc-&gt;noise_thresh<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>noise_frames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>noise_level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>min_energy<sp/>+=<sp/>agc-&gt;<ref refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" kindref="member">noise_thresh</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfr;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cep[i][0]<sp/>&lt;<sp/>min_energy)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_level<sp/>+=<sp/>cep[i][0];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_frames++;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noise_frames<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_level<sp/>/=<sp/>noise_frames;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;AGC<sp/>NOISE:<sp/>max=<sp/>%6.3f\n&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(noise_level));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Subtract<sp/>noise_level<sp/>from<sp/>all<sp/>log_energy<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfr;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cep[i][0]<sp/>-=<sp/>noise_level;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="agc_8h_1aaaa9e15f192c91ad64c343b7c6db6714" refkind="member"><highlight class="normal"><ref refid="agc_8h_1aaaa9e15f192c91ad64c343b7c6db6714" kindref="member">agc_set_threshold</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc,<sp/>float32<sp/>threshold)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>agc-&gt;<ref refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" kindref="member">noise_thresh</ref><sp/>=<sp/>FLOAT2MFCC(threshold);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">float32</highlight></codeline>
<codeline lineno="224" refid="agc_8h_1a77d0987174a1b3c6e8fcd63fe82f33ce" refkind="member"><highlight class="normal"><ref refid="agc_8h_1a77d0987174a1b3c6e8fcd63fe82f33ce" kindref="member">agc_get_threshold</ref>(<ref refid="structagc__s" kindref="compound">agc_t</ref><sp/>*agc)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FLOAT2MFCC(agc-&gt;<ref refid="structagc__s_1a4c896e65da00c79b77b23272474fcffc" kindref="member">noise_thresh</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/agc.c"/>
  </compounddef>
</doxygen>
