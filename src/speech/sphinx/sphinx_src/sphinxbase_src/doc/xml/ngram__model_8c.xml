<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ngram__model_8c" kind="file">
    <compoundname>ngram_model.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="ngram__model_8h" local="yes">sphinxbase/ngram_model.h</includes>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes refid="filename_8h" local="yes">sphinxbase/filename.h</includes>
    <includes refid="pio_8h" local="yes">sphinxbase/pio.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="logmath_8h" local="yes">sphinxbase/logmath.h</includes>
    <includes refid="strfuncs_8h" local="yes">sphinxbase/strfuncs.h</includes>
    <includes refid="case_8h" local="yes">sphinxbase/case.h</includes>
    <includes refid="ngram__model__internal_8h" local="yes">ngram_model_internal.h</includes>
    <includes refid="ngram__model__trie_8h" local="yes">ngram_model_trie.h</includes>
    <incdepgraph>
      <node id="1858">
        <label>sys/stat.h</label>
      </node>
      <node id="1845">
        <label>stdarg.h</label>
      </node>
      <node id="1866">
        <label>ngram_model_trie.h</label>
        <link refid="ngram__model__trie_8h_source"/>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
        <childnode refid="1867" relation="include">
        </childnode>
      </node>
      <node id="1847">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1848" relation="include">
        </childnode>
      </node>
      <node id="1843">
        <label>assert.h</label>
      </node>
      <node id="1861">
        <label>sphinxbase/strfuncs.h</label>
        <link refid="strfuncs_8h"/>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1854">
        <label>stdlib.h</label>
      </node>
      <node id="1855">
        <label>setjmp.h</label>
      </node>
      <node id="1841">
        <label>src/libsphinxbase/lm/ngram_model.c</label>
        <link refid="ngram_model.c"/>
        <childnode refid="1842" relation="include">
        </childnode>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1844" relation="include">
        </childnode>
        <childnode refid="1853" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1861" relation="include">
        </childnode>
        <childnode refid="1862" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
      </node>
      <node id="1860">
        <label>errno.h</label>
      </node>
      <node id="1864">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1865" relation="include">
        </childnode>
      </node>
      <node id="1865">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1859">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1860" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1844">
        <label>sphinxbase/ngram_model.h</label>
        <link refid="ngram__model_8h"/>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
      </node>
      <node id="1853">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1868">
        <label>sphinxbase/bitarr.h</label>
        <link refid="bitarr_8h"/>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1842" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1867">
        <label>lm_trie.h</label>
        <link refid="lm__trie_8h_source"/>
        <childnode refid="1857" relation="include">
        </childnode>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
        <childnode refid="1869" relation="include">
        </childnode>
      </node>
      <node id="1862">
        <label>sphinxbase/case.h</label>
        <link refid="case_8h"/>
        <childnode refid="1842" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1856">
        <label>sphinxbase/filename.h</label>
        <link refid="filename_8h"/>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1848">
        <label>sphinx_config.h</label>
      </node>
      <node id="1857">
        <label>sphinxbase/pio.h</label>
        <link refid="pio_8h"/>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1858" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1842">
        <label>string.h</label>
      </node>
      <node id="1851">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1849" relation="include">
        </childnode>
      </node>
      <node id="1869">
        <label>lm_trie_quant.h</label>
        <link refid="lm__trie__quant_8h_source"/>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1870" relation="include">
        </childnode>
      </node>
      <node id="1870">
        <label>ngrams_raw.h</label>
        <link refid="ngrams__raw_8h_source"/>
        <childnode refid="1864" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
      </node>
      <node id="1846">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1849">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1850" relation="include">
        </childnode>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1852">
        <label>sphinxbase/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1863">
        <label>ngram_model_internal.h</label>
        <link refid="ngram__model__internal_8h_source"/>
        <childnode refid="1844" relation="include">
        </childnode>
        <childnode refid="1864" relation="include">
        </childnode>
      </node>
      <node id="1850">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__model_8c_1a4e1ac39735a911f10d58a9320d8ebe2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref></type>
        <definition>ngram_file_type_t ngram_file_name_to_type</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>ngram_file_name_to_type</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Guess the file type for an N-Gram model from the filename. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the guessed file type, or NGRAM_INVALID if none could be guessed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="63" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="63" bodyend="96"/>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" compoundref="ngram__model_8h" startline="77">NGRAM_INVALID</references>
        <references refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" compoundref="case_8c" startline="94" endline="116">strcmp_nocase</references>
        <references refid="case_8h_1ae7c2a7f29d72b9516a947f5c69a043db" compoundref="case_8c" startline="119" endline="141">strncmp_nocase</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" compoundref="ngram__model_8h" startline="79">NGRAM_ARPA</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" compoundref="ngram__model_8h" startline="80">NGRAM_BIN</references>
        <referencedby refid="ngram__model_8h_1ac8ff04e1bccbef23bde9e81fb61c57fe" compoundref="ngram__model_8c" startline="178" endline="199">ngram_model_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a55003661ca0efe026bd6f2f5f545f7bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref></type>
        <definition>ngram_file_type_t ngram_str_to_type</definition>
        <argsstring>(const char *str_name)</argsstring>
        <name>ngram_str_to_type</name>
        <param>
          <type>const char *</type>
          <declname>str_name</declname>
        </param>
        <briefdescription>
<para>Get the N-Gram file type from a string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>file type, or NGRAM_INVALID if no such file type exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="99" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="99" bodyend="107"/>
        <references refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" compoundref="case_8c" startline="94" endline="116">strcmp_nocase</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" compoundref="ngram__model_8h" startline="79">NGRAM_ARPA</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" compoundref="ngram__model_8h" startline="80">NGRAM_BIN</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" compoundref="ngram__model_8h" startline="77">NGRAM_INVALID</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1abcb488252fd38534fe1418438deee0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const* ngram_type_to_str</definition>
        <argsstring>(int type)</argsstring>
        <name>ngram_type_to_str</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Get the canonical name for an N-Gram file type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>read-only string with the name for this file type, or NULL if no such type exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="110" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="110" bodyend="120"/>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" compoundref="ngram__model_8h" startline="79">NGRAM_ARPA</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" compoundref="ngram__model_8h" startline="80">NGRAM_BIN</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a89ce9afbc2b8b1e9725d50db2e05110d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_read</definition>
        <argsstring>(cmd_ln_t *config, const char *file_name, ngram_file_type_t file_type, logmath_t *lmath)</argsstring>
        <name>ngram_model_read</name>
        <param>
          <type><ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref></type>
          <declname>file_type</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <briefdescription>
<para>Read an N-Gram model from a file on disk. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional pointer to a set of command-line arguments. Recognized arguments are:</para></parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>-mmap (boolean) whether to use memory-mapped I/O</para></listitem><listitem><para>-lw (float32) language weight to apply to the model</para></listitem><listitem><para>-wip (float32) word insertion penalty to apply to the model</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the file to read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the file, or NGRAM_AUTO to determine automatically. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lmath</parametername>
</parameternamelist>
<parameterdescription>
<para>Log-math parameters to use for probability calculations. Ownership of this object is assumed by the newly created ngram_model_t, and you should not attempt to free it manually. If you wish to reuse it elsewhere, you must retain it with <ref refid="logmath_8h_1a1c1b2ba3b137a39e9e835a8f3e27d381" kindref="member">logmath_retain()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>newly created ngram_model_t. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="124" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="124" bodyend="175"/>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a441701bf8ae0a2b79716feb31b5f257a" compoundref="ngram__model_8h" startline="78">NGRAM_AUTO</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" compoundref="ngram__model_8h" startline="79">NGRAM_ARPA</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" compoundref="ngram__model_8h" startline="80">NGRAM_BIN</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
        <references refid="cmd__ln_8h_1ab4ad5ae130e3c2c042590b41768635e3" compoundref="cmd__ln_8c" startline="925" endline="931">cmd_ln_exists_r</references>
        <references refid="ngram__model_8h_1a50f00497f61c104cea77180129d93126" compoundref="ngram__model_8c" startline="360" endline="363">ngram_model_apply_weights</references>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a298eb0859017444b947986db98a98e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_model_write</definition>
        <argsstring>(ngram_model_t *model, const char *file_name, ngram_file_type_t file_type)</argsstring>
        <name>ngram_model_write</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref></type>
          <declname>format</declname>
          <defname>file_type</defname>
        </param>
        <briefdescription>
<para>Write an N-Gram model to disk. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 for success, &lt;0 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="178" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="178" bodyend="199"/>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a441701bf8ae0a2b79716feb31b5f257a" compoundref="ngram__model_8h" startline="78">NGRAM_AUTO</references>
        <references refid="ngram__model_8h_1ad758d3f491d501bdec2ada8088e9b656" compoundref="ngram__model_8c" startline="63" endline="96">ngram_file_name_to_type</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" compoundref="ngram__model_8h" startline="77">NGRAM_INVALID</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" compoundref="ngram__model_8h" startline="79">NGRAM_ARPA</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" compoundref="ngram__model_8h" startline="80">NGRAM_BIN</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1afb4d2c2dbd029d67fae7f5dda5c4060f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_init</definition>
        <argsstring>(ngram_model_t *base, ngram_funcs_t *funcs, logmath_t *lmath, int32 n, int32 n_unigram)</argsstring>
        <name>ngram_model_init</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref> *</type>
          <declname>funcs</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_unigram</declname>
        </param>
        <briefdescription>
<para>Initialize the base ngram_model_t structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="202" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="202" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a8497c2a99fe2803cc3e11d7a5777c7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_retain</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_model_retain</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Retain ownership of an N-Gram model. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to retained model. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="249" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="249" bodyend="253"/>
        <references refid="structngram__model__s_1a3b14986e4dc40ccec1f7e206b7f41d06" compoundref="ngram__model__internal_8h" startline="56">ngram_model_s::refcount</references>
        <referencedby refid="ngram__model__set_8c_1aa4cc619035ac8091759c07d6a3b2fb7c" compoundref="ngram__model__set_8c" startline="124" endline="182">ngram_model_set_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1ad364b862dd63d3c385dbcb5ba682e275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_model_flush</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_model_flush</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Flush any cached N-Gram information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="256" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="256" bodyend="260"/>
        <references refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" compoundref="ngram__model__internal_8h" startline="75">ngram_model_s::funcs</references>
        <references refid="structngram__funcs__s_1a7abf2864db9c8e8d1d5909ea92144ffe" compoundref="ngram__model__internal_8h" startline="148">ngram_funcs_s::flush</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a4f41ada15875db9f8134456e23461294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_model_free</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_model_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Release memory associated with an N-Gram model. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new reference count (0 if freed completely) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="263" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="263" bodyend="305"/>
        <references refid="structngram__model__s_1a3b14986e4dc40ccec1f7e206b7f41d06" compoundref="ngram__model__internal_8h" startline="56">ngram_model_s::refcount</references>
        <references refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" compoundref="ngram__model__internal_8h" startline="75">ngram_model_s::funcs</references>
        <references refid="structngram__funcs__s_1a4211130880131f38e16022985816952f" compoundref="ngram__model__internal_8h" startline="114">ngram_funcs_s::free</references>
        <references refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" compoundref="ngram__model__internal_8h" startline="64">ngram_model_s::writable</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" compoundref="ngram__model__internal_8h" startline="71">ngram_model_s::word_str</references>
        <references refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" compoundref="ngram__model__internal_8h" startline="63">ngram_model_s::n_classes</references>
        <references refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" compoundref="ngram__model__internal_8h" startline="74">ngram_model_s::classes</references>
        <references refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" compoundref="ngram__model__internal_8h" startline="84">ngram_class_s::n_words</references>
        <references refid="structngram__class__s_1a370c88602c7c1f7e3ff1a767c027f5cb" compoundref="ngram__model__internal_8h" startline="83">ngram_class_s::start_wid</references>
        <references refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" compoundref="ngram__model__internal_8h" startline="94">ngram_class_s::n_hash</references>
        <references refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" compoundref="ngram__model__internal_8h" startline="90">ngram_class_s::ngram_hash_s::wid</references>
        <references refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" compoundref="hash__table_8c" startline="695" endline="713">hash_table_free</references>
        <references refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" compoundref="ngram__model__internal_8h" startline="72">ngram_model_s::wid</references>
        <references refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" compoundref="ngram__model__internal_8h" startline="57">ngram_model_s::n_counts</references>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1abbb926bbc91e8b227913a4f9c4945ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_model_casefold</definition>
        <argsstring>(ngram_model_t *model, int kase)</argsstring>
        <name>ngram_model_casefold</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kase</declname>
        </param>
        <briefdescription>
<para>Case-fold word strings in an N-Gram model. </para>        </briefdescription>
        <detaileddescription>
<para>WARNING: This is not Unicode aware, so any non-ASCII characters will not be converted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="308" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="308" bodyend="357"/>
        <references refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" compoundref="ngram__model__internal_8h" startline="64">ngram_model_s::writable</references>
        <references refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" compoundref="hash__table_8c" startline="158" endline="169">hash_table_new</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" compoundref="ngram__model__internal_8h" startline="71">ngram_model_s::word_str</references>
        <references refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" compoundref="ckd__alloc_8h" startline="264">ckd_salloc</references>
        <references refid="case_8h_1a79d99e36b7c2c36dcc6f7f0df746384e">ucase</references>
        <references refid="case_8h_1ac0e30dac40f15762f39270f65bd8cdba">lcase</references>
        <references refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" compoundref="hash__table_8h" startline="228">hash_table_enter_int32</references>
        <references refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" compoundref="err_8h" startline="109">E_WARN</references>
        <references refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" compoundref="hash__table_8c" startline="695" endline="713">hash_table_free</references>
        <references refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" compoundref="ngram__model__internal_8h" startline="72">ngram_model_s::wid</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a785cbe180b549b32e151a194605bdbf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ngram_model_apply_weights</definition>
        <argsstring>(ngram_model_t *model, float32 lw, float32 wip)</argsstring>
        <name>ngram_model_apply_weights</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lw</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>wip</declname>
        </param>
        <briefdescription>
<para>Apply a language weight, insertion penalty, and unigram weight to a language model. </para>        </briefdescription>
        <detaileddescription>
<para>This will change the values output by <ref refid="ngram__model_8h_1a9c23d79885af400e17ac2a1b7169660d" kindref="member">ngram_score()</ref> and friends. This is done for efficiency since in decoding, these are the only values we actually need. Call <ref refid="ngram__model_8h_1a93a57650b27f33eb9478badf1f911501" kindref="member">ngram_prob()</ref> if you want the &quot;raw&quot; N-Gram probability estimate.</para><para>To remove all weighting, call ngram_apply_weights(model, 1.0, 1.0). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="360" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="360" bodyend="363"/>
        <references refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" compoundref="ngram__model__internal_8h" startline="75">ngram_model_s::funcs</references>
        <references refid="structngram__funcs__s_1a20d608dd48e1e612c102e418bc7a9fd7" compoundref="ngram__model__internal_8h" startline="118">ngram_funcs_s::apply_weights</references>
        <referencedby refid="ngram__model_8h_1ab0c840f2bdfc38cea08bb70054f76624" compoundref="ngram__model_8c" startline="124" endline="175">ngram_model_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1aff9f80ff4d06d60ee281e368ce0be187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32</type>
        <definition>float32 ngram_model_get_weights</definition>
        <argsstring>(ngram_model_t *model, int32 *out_log_wip)</argsstring>
        <name>ngram_model_get_weights</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>out_log_wip</declname>
        </param>
        <briefdescription>
<para>Get the current weights from a language model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model in question. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_log_wip</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: (optional) logarithm of word insertion penalty. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>language weight. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="366" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="366" bodyend="371"/>
        <references refid="structngram__model__s_1a3d6bf5632760a16e52cb881d7010d774" compoundref="ngram__model__internal_8h" startline="69">ngram_model_s::log_wip</references>
        <references refid="structngram__model__s_1a76ea0c65b23de80091e7c602bdb43bde" compoundref="ngram__model__internal_8h" startline="68">ngram_model_s::lw</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a7fc5ede9924a32fe00524efba329ea88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_ng_score</definition>
        <argsstring>(ngram_model_t *model, int32 wid, int32 *history, int32 n_hist, int32 *n_used)</argsstring>
        <name>ngram_ng_score</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>history</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_hist</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_used</declname>
        </param>
        <briefdescription>
<para>Quick general N-Gram score lookup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="375" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="375" bodyend="404"/>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <references refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" compoundref="ngram__model__internal_8h" startline="70">ngram_model_s::log_zero</references>
        <references refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" compoundref="ngram__model__internal_8h" startline="74">ngram_model_s::classes</references>
        <references refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" compoundref="ngram__model__internal_8h" startline="82">ngram_class_s::tag_wid</references>
        <references refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" compoundref="ngram__model__internal_8h" startline="75">ngram_model_s::funcs</references>
        <references refid="structngram__funcs__s_1a81b0c7948179c2572fb274401b82278e" compoundref="ngram__model__internal_8h" startline="122">ngram_funcs_s::score</references>
        <referencedby refid="ngram__model_8h_1a9c23d79885af400e17ac2a1b7169660d" compoundref="ngram__model_8c" startline="407" endline="435">ngram_score</referencedby>
        <referencedby refid="ngram__model_8h_1a0f8ad53c1a7cab528113b74aad00f15a" compoundref="ngram__model_8c" startline="438" endline="445">ngram_tg_score</referencedby>
        <referencedby refid="ngram__model_8h_1a8c06698fbcb0ef82420088ace045ae81" compoundref="ngram__model_8c" startline="448" endline="451">ngram_bg_score</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a41dfe4ca2ec09729e649715b49d63e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_score</definition>
        <argsstring>(ngram_model_t *model, const char *word,...)</argsstring>
        <name>ngram_score</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Get the score (scaled, interpolated log-probability) for a general N-Gram. </para>        </briefdescription>
        <detaileddescription>
<para>The argument list consists of the history words (as null-terminated strings) of the N-Gram, <bold>in reverse order</bold>, followed by NULL. Therefore, if you wanted to get the N-Gram score for &quot;a whole joy&quot;, you would call:</para><para><preformatted>
 score = ngram_score(model, &quot;joy&quot;, &quot;whole&quot;, &quot;a&quot;, NULL);
</preformatted></para><para>This is not the function to use in decoding, because it has some overhead for looking up words. Use <ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score()</ref>, <ref refid="ngram__model_8h_1a0f8ad53c1a7cab528113b74aad00f15a" kindref="member">ngram_tg_score()</ref>, or <ref refid="ngram__model_8h_1a8c06698fbcb0ef82420088ace045ae81" kindref="member">ngram_bg_score()</ref> instead. In the future there will probably be a version that takes a general language model state object, to support suffix-array LM and things like that.</para><para>If one of the words is not in the LM&apos;s vocabulary, the result will depend on whether this is an open or closed vocabulary language model. For an open-vocabulary model, unknown words are all mapped to the unigram &lt;UNK&gt; which has a non-zero probability and also participates in higher-order N-Grams. Therefore, you will get a score of some sort in this case.</para><para>For a closed-vocabulary model, unknown words are impossible and thus have zero probability. Therefore, if <computeroutput>word</computeroutput> is unknown, this function will return a &quot;zero&quot; log-probability, i.e. a large negative number. To obtain this number for comparison, call <ref refid="ngram__model_8h_1ae401a87ad55ae64f286dcd83170f7100" kindref="member">ngram_zero()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="407" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="407" bodyend="435"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" compoundref="ngram__model_8c" startline="375" endline="404">ngram_ng_score</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a851bdc8dc9b21a3aea7e68f82ca1063d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_tg_score</definition>
        <argsstring>(ngram_model_t *model, int32 w3, int32 w2, int32 w1, int32 *n_used)</argsstring>
        <name>ngram_tg_score</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_used</declname>
        </param>
        <briefdescription>
<para>Quick trigram score lookup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="438" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="438" bodyend="445"/>
        <references refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" compoundref="ngram__model_8c" startline="375" endline="404">ngram_ng_score</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a23e5ca14916f9547d9e553cf441cf3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_bg_score</definition>
        <argsstring>(ngram_model_t *model, int32 w2, int32 w1, int32 *n_used)</argsstring>
        <name>ngram_bg_score</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_used</declname>
        </param>
        <briefdescription>
<para>Quick bigram score lookup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="448" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="448" bodyend="451"/>
        <references refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" compoundref="ngram__model_8c" startline="375" endline="404">ngram_ng_score</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a08c859cf7186be5a7586fd174fd5a8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_ng_prob</definition>
        <argsstring>(ngram_model_t *model, int32 wid, int32 *history, int32 n_hist, int32 *n_used)</argsstring>
        <name>ngram_ng_prob</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>history</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_hist</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_used</declname>
        </param>
        <briefdescription>
<para>Quick &quot;raw&quot; probability lookup for a general N-Gram. </para>        </briefdescription>
        <detaileddescription>
<para>See documentation for <ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score()</ref> and ngram_apply_weights() for an explanation of this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="454" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="454" bodyend="483"/>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <references refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" compoundref="ngram__model__internal_8h" startline="70">ngram_model_s::log_zero</references>
        <references refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" compoundref="ngram__model__internal_8h" startline="74">ngram_model_s::classes</references>
        <references refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" compoundref="ngram__model__internal_8h" startline="82">ngram_class_s::tag_wid</references>
        <references refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" compoundref="ngram__model__internal_8h" startline="75">ngram_model_s::funcs</references>
        <references refid="structngram__funcs__s_1a2a64c66491914168bd830237cc93b16c" compoundref="ngram__model__internal_8h" startline="129">ngram_funcs_s::raw_score</references>
        <referencedby refid="ngram__model_8h_1a710db3c3e42f6c1d088f2196b9d6c7d1" compoundref="ngram__model_8c" startline="486" endline="514">ngram_probv</referencedby>
        <referencedby refid="ngram__model_8h_1a93a57650b27f33eb9478badf1f911501" compoundref="ngram__model_8c" startline="517" endline="534">ngram_prob</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a6f19a144761a77daadd1f1296bc5ec36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_probv</definition>
        <argsstring>(ngram_model_t *model, const char *word,...)</argsstring>
        <name>ngram_probv</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Get the &quot;raw&quot; log-probability for a general N-Gram. </para>        </briefdescription>
        <detaileddescription>
<para>This returns the log-probability of an N-Gram, as defined in the language model file, before any language weighting, interpolation, or insertion penalty has been applied.</para><para><simplesect kind="note"><para>When backing off to a unigram from a bigram or trigram, the unigram weight (interpolation with uniform) is not removed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="486" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="486" bodyend="514"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" compoundref="ngram__model_8c" startline="454" endline="483">ngram_ng_prob</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a3798a7eaa3cb3c78c788aefdc169b4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_prob</definition>
        <argsstring>(ngram_model_t *model, const char *const *words, int32 n)</argsstring>
        <name>ngram_prob</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>words</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the &quot;raw&quot; log-probability for a general N-Gram. </para>        </briefdescription>
        <detaileddescription>
<para>This returns the log-probability of an N-Gram, as defined in the language model file, before any language weighting, interpolation, or insertion penalty has been applied.</para><para><simplesect kind="note"><para>When backing off to a unigram from a bigram or trigram, the unigram weight (interpolation with uniform) is not removed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="517" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="517" bodyend="534"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" compoundref="ngram__model_8c" startline="454" endline="483">ngram_ng_prob</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a44f81f09b7f93ef522716367c0c5cdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_score_to_prob</definition>
        <argsstring>(ngram_model_t *base, int32 score)</argsstring>
        <name>ngram_score_to_prob</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>int32</type>
          <declname>score</declname>
        </param>
        <briefdescription>
<para>Convert score to &quot;raw&quot; log-probability. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The unigram weight (interpolation with uniform) is not removed, since there is no way to know which order of N-Gram generated <computeroutput>score</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The N-Gram model from which score was obtained. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>score</parametername>
</parameternamelist>
<parameterdescription>
<para>The N-Gram score to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw log-probability value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="537" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="537" bodyend="547"/>
        <references refid="structngram__model__s_1a3d6bf5632760a16e52cb881d7010d774" compoundref="ngram__model__internal_8h" startline="69">ngram_model_s::log_wip</references>
        <references refid="structngram__model__s_1a76ea0c65b23de80091e7c602bdb43bde" compoundref="ngram__model__internal_8h" startline="68">ngram_model_s::lw</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a8e18eef1a2d4231680b7cd67440d5e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_unknown_wid</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_unknown_wid</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Get the unknown word ID for a language model. </para>        </briefdescription>
        <detaileddescription>
<para>Language models can be either &quot;open vocabulary&quot; or &quot;closed
vocabulary&quot;. The difference is that the former assigns a fixed non-zero unigram probability to unknown words, while the latter does not allow unknown words (or, equivalently, it assigns them zero probability). If this is a closed vocabulary model, this function will return NGRAM_INVALID_WID.</para><para><simplesect kind="return"><para>The ID for the unknown word, or NGRAM_INVALID_WID if none exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="550" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="550" bodyend="560"/>
        <references refid="hash__table_8h_1acaf27e8e7e336faf6653649937c42ed8" compoundref="hash__table_8c" startline="329" endline="340">hash_table_lookup_int32</references>
        <references refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" compoundref="ngram__model__internal_8h" startline="72">ngram_model_s::wid</references>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <referencedby refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</referencedby>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
        <referencedby refid="ngram__model__set_8c_1af30197146b9b2d6c143914240dee3c04" compoundref="ngram__model__set_8c" startline="473" endline="490">ngram_model_set_known_wid</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1aa38543bf050c2ac38762ddc98ccbbd8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_zero</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_zero</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Get the &quot;zero&quot; log-probability value for a language model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="563" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="563" bodyend="566"/>
        <references refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" compoundref="ngram__model__internal_8h" startline="70">ngram_model_s::log_zero</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1ac43e3d53134fdf008203f051b4209837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_get_size</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_model_get_size</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Get the order of the N-gram model (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>the &quot;N&quot; in &quot;N-gram&quot;) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="569" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="569" bodyend="574"/>
        <references refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" compoundref="ngram__model__internal_8h" startline="62">ngram_model_s::n</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a0ff8ad46993757f3f165757db0b0c800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32 const *</type>
        <definition>uint32 const* ngram_model_get_counts</definition>
        <argsstring>(ngram_model_t *model)</argsstring>
        <name>ngram_model_get_counts</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Get the counts of the various N-grams in the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="577" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="577" bodyend="582"/>
        <references refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" compoundref="ngram__model__internal_8h" startline="57">ngram_model_s::n_counts</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a7ac7f43ba0a4bee373b731250c4359c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_wid</definition>
        <argsstring>(ngram_model_t *model, const char *word)</argsstring>
        <name>ngram_wid</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>Look up numerical word ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="585" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="585" bodyend="593"/>
        <references refid="hash__table_8h_1acaf27e8e7e336faf6653649937c42ed8" compoundref="hash__table_8c" startline="329" endline="340">hash_table_lookup_int32</references>
        <references refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" compoundref="ngram__model__internal_8h" startline="72">ngram_model_s::wid</references>
        <references refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" compoundref="ngram__model_8c" startline="550" endline="560">ngram_unknown_wid</references>
        <referencedby refid="ngram__model_8h_1a9c23d79885af400e17ac2a1b7169660d" compoundref="ngram__model_8c" startline="407" endline="435">ngram_score</referencedby>
        <referencedby refid="ngram__model_8h_1a710db3c3e42f6c1d088f2196b9d6c7d1" compoundref="ngram__model_8c" startline="486" endline="514">ngram_probv</referencedby>
        <referencedby refid="ngram__model_8h_1a93a57650b27f33eb9478badf1f911501" compoundref="ngram__model_8c" startline="517" endline="534">ngram_prob</referencedby>
        <referencedby refid="ngram__model_8h_1a39eabb4994cf99c4bc2116e12af0c9f1" compoundref="ngram__model_8c" startline="779" endline="828">ngram_model_add_class_word</referencedby>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
        <referencedby refid="ngram__model__set_8c_1a53071575bca9465361740c809666349d" compoundref="ngram__model__set_8c" startline="524" endline="580">ngram_model_set_add</referencedby>
        <referencedby refid="ngram__model__set_8c_1af3ac3bbec3eed0b9638c4e64c8b75949" compoundref="ngram__model__set_8c" startline="639" endline="668">ngram_model_set_map_words</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1ad686ffb40d91e2d9e50b8ca0090c6542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ngram_word</definition>
        <argsstring>(ngram_model_t *model, int32 wid)</argsstring>
        <name>ngram_word</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <briefdescription>
<para>Look up word string for numerical word ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="596" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="596" bodyend="603"/>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" compoundref="ngram__model__internal_8h" startline="71">ngram_model_s::word_str</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a9dcdef871a537c2419e802db627304ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_add_word_internal</definition>
        <argsstring>(ngram_model_t *model, const char *word, int32 classid)</argsstring>
        <name>ngram_add_word_internal</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>classid</declname>
        </param>
        <briefdescription>
<para>Add a word to the word string and ID mapping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="609" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="609" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a5181ec7d874d4cf2c2875b47623cc649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_add_word</definition>
        <argsstring>(ngram_model_t *model, const char *word, float32 weight)</argsstring>
        <name>ngram_model_add_word</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Add a word (unigram) to the language model. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The semantics of this are not particularly well-defined for model sets, and may be subject to change. Currently this will add the word to all of the submodels</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model to add a word to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>Text of the word to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight of this word relative to the uniform distribution. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The word ID for the new word. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="649" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="649" bodyend="674"/>
        <references refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" compoundref="ngram__model__internal_8h" startline="70">ngram_model_s::log_zero</references>
        <references refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" compoundref="ngram__model__internal_8h" startline="64">ngram_model_s::writable</references>
        <references refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" compoundref="err_8h" startline="109">E_WARN</references>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <references refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" compoundref="ngram__model__internal_8h" startline="75">ngram_model_s::funcs</references>
        <references refid="structngram__funcs__s_1a6d553c95c7f4da4993f2b9df757ac016" compoundref="ngram__model__internal_8h" startline="143">ngram_funcs_s::add_ug</references>
        <references refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" compoundref="logmath_8c" startline="447" endline="453">logmath_log</references>
        <references refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" compoundref="ngram__model__internal_8h" startline="67">ngram_model_s::lmath</references>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a5ffbde0fdbf1e67852ba56c8fed604af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1ae36b2f037b2ea751dff23f082379c264" kindref="member">ngram_class_t</ref> *</type>
        <definition>ngram_class_t* ngram_class_new</definition>
        <argsstring>(ngram_model_t *model, int32 tag_wid, int32 start_wid, glist_t classwords)</argsstring>
        <name>ngram_class_new</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>tag_wid</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>start_wid</declname>
        </param>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>classwords</declname>
        </param>
        <briefdescription>
<para>Allocate and initialize an N-Gram class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="677" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="677" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a5b5501fa40e99f1c078d3556b6d07748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_class_add_word</definition>
        <argsstring>(ngram_class_t *lmclass, int32 wid, int32 lweight)</argsstring>
        <name>ngram_class_add_word</name>
        <param>
          <type><ref refid="ngram__model_8h_1ae36b2f037b2ea751dff23f082379c264" kindref="member">ngram_class_t</ref> *</type>
          <declname>lmclass</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>lweight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Next available bucket. </para>        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="711" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="711" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a26f02f1d1128de4b8dc4626a2028b6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_class_free</definition>
        <argsstring>(ngram_class_t *lmclass)</argsstring>
        <name>ngram_class_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1ae36b2f037b2ea751dff23f082379c264" kindref="member">ngram_class_t</ref> *</type>
          <declname>lmclass</declname>
        </param>
        <briefdescription>
<para>Deallocate an N-Gram class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="771" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="771" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1af3014f2327c1d8f560123e061b086557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_add_class_word</definition>
        <argsstring>(ngram_model_t *model, const char *classname, const char *word, float32 weight)</argsstring>
        <name>ngram_model_add_class_word</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Add a word to a class in a language model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model to add a word to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>classname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the class to add this word to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>Text of the word to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight of this word relative to the within-class uniform distribution. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The word ID for the new word. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="779" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="779" bodyend="828"/>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
        <references refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" compoundref="ngram__model__internal_8h" startline="63">ngram_model_s::n_classes</references>
        <references refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" compoundref="ngram__model__internal_8h" startline="74">ngram_model_s::classes</references>
        <references refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" compoundref="ngram__model__internal_8h" startline="82">ngram_class_s::tag_wid</references>
        <references refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" compoundref="ngram__model__internal_8h" startline="84">ngram_class_s::n_words</references>
        <references refid="structngram__class__s_1a79438cd582363800bc05da31a9ca49d6" compoundref="ngram__model__internal_8h" startline="95">ngram_class_s::n_hash_inuse</references>
        <references refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" compoundref="logmath_8c" startline="447" endline="453">logmath_log</references>
        <references refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" compoundref="ngram__model__internal_8h" startline="67">ngram_model_s::lmath</references>
        <references refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" compoundref="ngram__model__internal_8h" startline="85">ngram_class_s::prob1</references>
        <references refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" compoundref="ngram__model__internal_8h" startline="94">ngram_class_s::n_hash</references>
        <references refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" compoundref="ngram__model__internal_8h" startline="90">ngram_class_s::ngram_hash_s::wid</references>
        <references refid="structngram__class__s_1_1ngram__hash__s_1a6ac4c01b0c8d29f770f4780e38ab0923" compoundref="ngram__model__internal_8h" startline="91">ngram_class_s::ngram_hash_s::prob1</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1abb2146169d17e56398a2966b53027068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_add_class</definition>
        <argsstring>(ngram_model_t *model, const char *classname, float32 classweight, char **words, const float32 *weights, int32 n_words)</argsstring>
        <name>ngram_model_add_class</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>classweight</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>words</declname>
        </param>
        <param>
          <type>const float32 *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_words</declname>
        </param>
        <briefdescription>
<para>Add a new class to a language model. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>classname</computeroutput> already exists in the unigram set for <computeroutput>model</computeroutput>, then it will be converted to a class tag, and <computeroutput>classweight</computeroutput> will be ignored. Otherwise, a new unigram will be created as in <ref refid="ngram__model_8h_1a38e034d58ee0d6a4c0dd6f852cb71c3c" kindref="member">ngram_model_add_word()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="831" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="831" bodyend="879"/>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" compoundref="ngram__model_8c" startline="550" endline="560">ngram_unknown_wid</references>
        <references refid="ngram__model_8h_1a38e034d58ee0d6a4c0dd6f852cb71c3c" compoundref="ngram__model_8c" startline="649" endline="674">ngram_model_add_word</references>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <references refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" compoundref="ngram__model__internal_8h" startline="63">ngram_model_s::n_classes</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
        <references refid="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" compoundref="glist_8c" startline="110" endline="118">glist_add_float32</references>
        <references refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" compoundref="glist_8c" startline="169" endline="183">glist_reverse</references>
        <references refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" compoundref="glist_8c" startline="133" endline="142">glist_free</references>
        <references refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" compoundref="ngram__model__internal_8h" startline="74">ngram_model_s::classes</references>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" compoundref="ckd__alloc_8h" startline="258">ckd_realloc</references>
        <referencedby refid="ngram__model_8h_1a9b2a86c23543158754373c5456fe890d" compoundref="ngram__model_8c" startline="1027" endline="1063">ngram_model_read_classdef</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1ae5e598f86038d1767486489f6b6db638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_class_prob</definition>
        <argsstring>(ngram_class_t *lmclass, int32 wid)</argsstring>
        <name>ngram_class_prob</name>
        <param>
          <type><ref refid="ngram__model_8h_1ae36b2f037b2ea751dff23f082379c264" kindref="member">ngram_class_t</ref> *</type>
          <declname>lmclass</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <briefdescription>
<para>Get the in-class log probability for a word in an N-Gram class. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This probability, or 1 if word not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="882" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="882" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1ae200b9537b1b35c95f59ff366a987730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 read_classdef_file</definition>
        <argsstring>(hash_table_t *classes, const char *file_name)</argsstring>
        <name>read_classdef_file</name>
        <param>
          <type><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref> *</type>
          <declname>classes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Read a probdef file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Are we currently reading a list of class words? </para>        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="904" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="904" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1ad91c0d0d71fc2adb89edbb7532763b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void classdef_free</definition>
        <argsstring>(classdef_t *classdef)</argsstring>
        <name>classdef_free</name>
        <param>
          <type><ref refid="structclassdef__s" kindref="compound">classdef_t</ref> *</type>
          <declname>classdef</declname>
        </param>
        <briefdescription>
<para>Free a class definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="1015" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="1015" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model_8c_1a83679229a542cd63673b0401edeef068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_read_classdef</definition>
        <argsstring>(ngram_model_t *model, const char *file_name)</argsstring>
        <name>ngram_model_read_classdef</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Read a class definition file and add classes to a language model. </para>        </briefdescription>
        <detaileddescription>
<para>This function assumes that the class tags have already been defined as unigrams in the language model. All words in the class definition will be added to the vocabulary as special in-class words. For this reason is is necessary that they not have the same names as any words in the general unigram distribution. The convention is to suffix them with &quot;:class_tag&quot;, where class_tag is the class tag minus the enclosing square brackets.</para><para><simplesect kind="return"><para>0 for success, &lt;0 for error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" line="1027" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c" bodystart="1027" bodyend="1063"/>
        <references refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" compoundref="hash__table_8c" startline="158" endline="169">hash_table_new</references>
        <references refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" compoundref="hash__table_8c" startline="695" endline="713">hash_table_free</references>
        <references refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" compoundref="hash__table_8c" startline="623" endline="650">hash_table_tolist</references>
        <references refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" compoundref="glist_8h" startline="109">gnode_ptr</references>
        <references refid="structhash__entry__s_1a0d57012963084fed93886681108aa636" compoundref="hash__table_8h" startline="155">hash_entry_s::val</references>
        <references refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" compoundref="glist_8c" startline="133" endline="142">glist_free</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2007<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>\file<sp/>ngram_model.c<sp/>N-Gram<sp/>language<sp/>models.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Author:<sp/>David<sp/>Huggins-Daines,<sp/>much<sp/>code<sp/>taken<sp/>from<sp/>sphinx3/src/libs3decoder/liblm</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__model_8h" kindref="compound">sphinxbase/ngram_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filename_8h" kindref="compound">sphinxbase/filename.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pio_8h" kindref="compound">sphinxbase/pio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logmath_8h" kindref="compound">sphinxbase/logmath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strfuncs_8h" kindref="compound">sphinxbase/strfuncs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="case_8h" kindref="compound">sphinxbase/case.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngram_model_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngram_model_trie.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref></highlight></codeline>
<codeline lineno="63" refid="ngram__model_8h_1ad758d3f491d501bdec2ada8088e9b656" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1ad758d3f491d501bdec2ada8088e9b656" kindref="member">ngram_file_name_to_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ext;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ext<sp/>=<sp/>strrchr(file_name,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" kindref="member">NGRAM_INVALID</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" kindref="member">strcmp_nocase</ref>(ext,<sp/></highlight><highlight class="stringliteral">&quot;.gz&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--ext<sp/>&gt;=<sp/>file_name)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ext<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext<sp/>&lt;<sp/>file_name)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" kindref="member">NGRAM_INVALID</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" kindref="member">strcmp_nocase</ref>(ext,<sp/></highlight><highlight class="stringliteral">&quot;.bz2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--ext<sp/>&gt;=<sp/>file_name)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ext<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext<sp/>&lt;<sp/>file_name)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" kindref="member">NGRAM_INVALID</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>strncmp<sp/>because<sp/>there<sp/>might<sp/>be<sp/>a<sp/>.gz<sp/>on<sp/>the<sp/>end.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="case_8h_1ae7c2a7f29d72b9516a947f5c69a043db" kindref="member">strncmp_nocase</ref>(ext,<sp/></highlight><highlight class="stringliteral">&quot;.ARPA&quot;</highlight><highlight class="normal">,<sp/>5))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" kindref="member">NGRAM_ARPA</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="case_8h_1ae7c2a7f29d72b9516a947f5c69a043db" kindref="member">strncmp_nocase</ref>(ext,<sp/></highlight><highlight class="stringliteral">&quot;.DMP&quot;</highlight><highlight class="normal">,<sp/>4)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>0<sp/>==<sp/><ref refid="case_8h_1ae7c2a7f29d72b9516a947f5c69a043db" kindref="member">strncmp_nocase</ref>(ext,<sp/></highlight><highlight class="stringliteral">&quot;.BIN&quot;</highlight><highlight class="normal">,<sp/>4))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" kindref="member">NGRAM_BIN</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" kindref="member">NGRAM_INVALID</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref></highlight></codeline>
<codeline lineno="99" refid="ngram__model_8h_1affb3d938049e58c191e72858a7191e9c" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1affb3d938049e58c191e72858a7191e9c" kindref="member">ngram_str_to_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_name)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" kindref="member">strcmp_nocase</ref>(str_name,<sp/></highlight><highlight class="stringliteral">&quot;arpa&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" kindref="member">NGRAM_ARPA</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" kindref="member">strcmp_nocase</ref>(str_name,<sp/></highlight><highlight class="stringliteral">&quot;dmp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>0<sp/>==<sp/><ref refid="case_8h_1ad276a997bd6709d986aa6e1e4e06c210" kindref="member">strcmp_nocase</ref>(str_name,<sp/></highlight><highlight class="stringliteral">&quot;bin&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" kindref="member">NGRAM_BIN</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" kindref="member">NGRAM_INVALID</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="110" refid="ngram__model_8h_1a992b8a8d7f623e2662ae94991f6aec55" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a992b8a8d7f623e2662ae94991f6aec55" kindref="member">ngram_type_to_str</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" kindref="member">NGRAM_ARPA</ref>:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;arpa&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" kindref="member">NGRAM_BIN</ref>:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;dmp/bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="124" refid="ngram__model_8h_1ab0c840f2bdfc38cea08bb70054f76624" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1ab0c840f2bdfc38cea08bb70054f76624" kindref="member">ngram_model_read</ref>(<ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref><sp/>*<sp/>config,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref><sp/>file_type,<sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*<sp/>lmath)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*model<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(file_type)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a441701bf8ae0a2b79716feb31b5f257a" kindref="member">NGRAM_AUTO</ref>:{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((model<sp/>=</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_trie_read_bin(config,<sp/>file_name,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmath))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((model<sp/>=</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_trie_read_arpa(config,<sp/>file_name,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmath))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((model<sp/>=</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_trie_read_dmp(config,<sp/>file_name,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmath))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" kindref="member">NGRAM_ARPA</ref>:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>ngram_model_trie_read_arpa(config,<sp/>file_name,<sp/>lmath);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" kindref="member">NGRAM_BIN</ref>:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((model<sp/>=</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_trie_read_bin(config,<sp/>file_name,<sp/>lmath))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((model<sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_model_trie_read_dmp(config,<sp/>file_name,<sp/>lmath))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;language<sp/>model<sp/>file<sp/>type<sp/>not<sp/>supported\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>set<sp/>weights<sp/>based<sp/>on<sp/>config<sp/>if<sp/>present.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>lw<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>wip<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmd__ln_8h_1ab4ad5ae130e3c2c042590b41768635e3" kindref="member">cmd_ln_exists_r</ref>(config,<sp/></highlight><highlight class="stringliteral">&quot;-lw&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lw<sp/>=<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-lw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmd__ln_8h_1ab4ad5ae130e3c2c042590b41768635e3" kindref="member">cmd_ln_exists_r</ref>(config,<sp/></highlight><highlight class="stringliteral">&quot;-wip&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wip<sp/>=<sp/>cmd_ln_float32_r(config,<sp/></highlight><highlight class="stringliteral">&quot;-wip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a50f00497f61c104cea77180129d93126" kindref="member">ngram_model_apply_weights</ref>(model,<sp/>lw,<sp/>wip);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="ngram__model_8h_1ac8ff04e1bccbef23bde9e81fb61c57fe" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1ac8ff04e1bccbef23bde9e81fb61c57fe" kindref="member">ngram_model_write</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a0e7d02703c48237b2afea436392dcb82" kindref="member">ngram_file_type_t</ref><sp/>file_type)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(file_type)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a441701bf8ae0a2b79716feb31b5f257a" kindref="member">NGRAM_AUTO</ref>:{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_type<sp/>=<sp/><ref refid="ngram__model_8h_1ad758d3f491d501bdec2ada8088e9b656" kindref="member">ngram_file_name_to_type</ref>(file_name);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>to<sp/>ARPA<sp/>(catches<sp/>.lm<sp/>and<sp/>other<sp/>things)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_type<sp/>==<sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a2cf596c8b0c63a3a0ba1fe33326cc796" kindref="member">NGRAM_INVALID</ref>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_type<sp/>=<sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" kindref="member">NGRAM_ARPA</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1ac8ff04e1bccbef23bde9e81fb61c57fe" kindref="member">ngram_model_write</ref>(model,<sp/>file_name,<sp/>file_type);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a77ef2341d826b3cc8b836e3af1efba99" kindref="member">NGRAM_ARPA</ref>:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngram_model_trie_write_arpa(model,<sp/>file_name);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a748d515b444b38b037f3cc90a6bfded4" kindref="member">NGRAM_BIN</ref>:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngram_model_trie_write_bin(model,<sp/>file_name);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;language<sp/>model<sp/>file<sp/>type<sp/>not<sp/>supported\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;language<sp/>model<sp/>file<sp/>type<sp/>not<sp/>supported\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="202"><highlight class="normal">ngram_model_init(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>*<sp/>funcs,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*<sp/>lmath,<sp/>int32<sp/>n,<sp/>int32<sp/>n_unigram)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a3b14986e4dc40ccec1f7e206b7f41d06" kindref="member">refcount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref><sp/>=<sp/>funcs;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>was<sp/>previously<sp/>initialized...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" kindref="member">n_counts</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" kindref="member">n_counts</ref><sp/>=<sp/>(uint32<sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*base-&gt;<ref refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" kindref="member">n_counts</ref>));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>reset<sp/>weights<sp/>if<sp/>logmath<sp/>object<sp/>hasn&apos;t<sp/>changed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref><sp/>!=<sp/>lmath)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>default<sp/>values<sp/>for<sp/>weights.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a76ea0c65b23de80091e7c602bdb43bde" kindref="member">lw</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a3d6bf5632760a16e52cb881d7010d774" kindref="member">log_wip</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i.e.<sp/>1.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref><sp/>=<sp/><ref refid="logmath_8h_1a1c160c28a9e7d25923f391773b1028c0" kindref="member">logmath_get_zero</ref>(lmath);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref><sp/>=<sp/>lmath;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>or<sp/>reallocate<sp/>space<sp/>for<sp/>word<sp/>strings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>all<sp/>previous<sp/>word<sp/>strings<sp/>if<sp/>they<sp/>were<sp/>allocated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref><sp/>=</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_unigram<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_unigram,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>They<sp/>are<sp/>no<sp/>longer<sp/>case-insensitive<sp/>since<sp/>we<sp/>are<sp/>allowing</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>encodings<sp/>for<sp/>word<sp/>strings.<sp/><sp/>Beware.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1acab374d21e25009d397642e3465308c7" kindref="member">hash_table_empty</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref><sp/>=<sp/><ref refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" kindref="member">hash_table_new</ref>(n_unigram,<sp/>FALSE);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" kindref="member">n_counts</ref>[0]<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a3e41109b30668bdfc077614c1ef49960" kindref="member">n_1g_alloc</ref><sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref><sp/>=<sp/>n_unigram;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="249" refid="ngram__model_8h_1a046e6ff8cd8787e412400534a9649a81" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a046e6ff8cd8787e412400534a9649a81" kindref="member">ngram_model_retain</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>++model-&gt;<ref refid="structngram__model__s_1a3b14986e4dc40ccec1f7e206b7f41d06" kindref="member">refcount</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="ngram__model_8h_1a8304f56d82278824b0a94c254d7235aa" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a8304f56d82278824b0a94c254d7235aa" kindref="member">ngram_model_flush</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref><sp/>&amp;&amp;<sp/>model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a7abf2864db9c8e8d1d5909ea92144ffe" kindref="member">flush</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a7abf2864db9c8e8d1d5909ea92144ffe" kindref="member">flush</ref>)<sp/>(model);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--model-&gt;<ref refid="structngram__model__s_1a3b14986e4dc40ccec1f7e206b7f41d06" kindref="member">refcount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a3b14986e4dc40ccec1f7e206b7f41d06" kindref="member">refcount</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref><sp/>&amp;&amp;<sp/>model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a4211130880131f38e16022985816952f" kindref="member">free</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a4211130880131f38e16022985816952f" kindref="member">free</ref>)<sp/>(model);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>all<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>all<sp/>class<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*lmclass;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[i];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>lmclass-&gt;<ref refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" kindref="member">n_words</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[lmclass-&gt;<ref refid="structngram__class__s_1a370c88602c7c1f7e3ff1a767c027f5cb" kindref="member">start_wid</ref><sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass-&gt;nword_hash[j].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[lmclass-&gt;nword_hash[j].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref>]);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngram_class_free(model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[i]);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" kindref="member">hash_table_free</ref>(model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model-&gt;<ref refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" kindref="member">n_counts</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(model);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="ngram__model_8h_1a41b938a2c4b129dc0df37b2312d65506" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a41b938a2c4b129dc0df37b2312d65506" kindref="member">ngram_model_casefold</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kase)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>writable,<sp/>i;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*new_wid;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Were<sp/>word<sp/>strings<sp/>already<sp/>allocated?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>writable<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Either<sp/>way,<sp/>we<sp/>are<sp/>going<sp/>to<sp/>allocate<sp/>some<sp/>word<sp/>strings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And,<sp/>don&apos;t<sp/>forget,<sp/>we<sp/>need<sp/>to<sp/>rebuild<sp/>the<sp/>word<sp/>to<sp/>unigram<sp/>ID</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>mapping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>new_wid<sp/>=<sp/><ref refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" kindref="member">hash_table_new</ref>(model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>,<sp/>FALSE);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*outstr;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writable)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outstr<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outstr<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>case-fold<sp/>&lt;tags&gt;<sp/>or<sp/>[classes]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outstr[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>||<sp/>outstr[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(kase)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NGRAM_UPPER:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="case_8h_1a79d99e36b7c2c36dcc6f7f0df746384e" kindref="member">ucase</ref>(outstr);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NGRAM_LOWER:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="case_8h_1ac0e30dac40f15762f39270f65bd8cdba" kindref="member">lcase</ref>(outstr);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]<sp/>=<sp/>outstr;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>update<sp/>the<sp/>hash<sp/>table.<sp/><sp/>We<sp/>might<sp/>have<sp/>terrible</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>collisions<sp/>here,<sp/>so<sp/>warn<sp/>about<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref>(new_wid,<sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],<sp/>i)<sp/>!=<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Duplicate<sp/>word<sp/>in<sp/>dictionary<sp/>after<sp/>conversion:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Swap<sp/>out<sp/>the<sp/>hash<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" kindref="member">hash_table_free</ref>(model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref><sp/>=<sp/>new_wid;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="ngram__model_8h_1a50f00497f61c104cea77180129d93126" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a50f00497f61c104cea77180129d93126" kindref="member">ngram_model_apply_weights</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>float32<sp/>lw,<sp/>float32<sp/>wip)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a20d608dd48e1e612c102e418bc7a9fd7" kindref="member">apply_weights</ref>)<sp/>(model,<sp/>lw,<sp/>wip);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">float32</highlight></codeline>
<codeline lineno="366" refid="ngram__model_8h_1a451659e63be5f2e17fabdb8cc32aaa2a" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a451659e63be5f2e17fabdb8cc32aaa2a" kindref="member">ngram_model_get_weights</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>*<sp/>out_log_wip)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_log_wip)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_log_wip<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a3d6bf5632760a16e52cb881d7010d774" kindref="member">log_wip</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a76ea0c65b23de80091e7c602bdb43bde" kindref="member">lw</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="375" refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>wid,<sp/>int32<sp/>*<sp/>history,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_hist,<sp/>int32<sp/>*<sp/>n_used)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score,<sp/>class_weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Closed<sp/>vocabulary,<sp/>OOV<sp/>word<sp/>probability<sp/>is<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;Declassify&quot;<sp/>wid<sp/>and<sp/>history<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NGRAM_IS_CLASSWID(wid))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*lmclass<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[NGRAM_CLASSID(wid)];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_weight<sp/>=<sp/>ngram_class_prob(lmclass,<sp/>wid);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_weight<sp/>==<sp/>1)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Meaning,<sp/>not<sp/>found<sp/>in<sp/>class.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>lmclass-&gt;<ref refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" kindref="member">tag_wid</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_hist;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[i]<sp/>!=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>NGRAM_IS_CLASSWID(history[i]))</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history[i]<sp/>=</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[NGRAM_CLASSID(history[i])]-&gt;<ref refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" kindref="member">tag_wid</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>score<sp/>=<sp/>(*model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a81b0c7948179c2572fb274401b82278e" kindref="member">score</ref>)<sp/>(model,<sp/>wid,<sp/>history,<sp/>n_hist,<sp/>n_used);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiply<sp/>by<sp/>unigram<sp/>in-class<sp/>weight.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>score<sp/>+<sp/>class_weight;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="407" refid="ngram__model_8h_1a9c23d79885af400e17ac2a1b7169660d" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a9c23d79885af400e17ac2a1b7169660d" kindref="member">ngram_score</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,<sp/>...)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>history;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hword;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*histid;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_hist;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>prob;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(history,<sp/>word);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((hword<sp/>=<sp/>va_arg(history,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_hist;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(history);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>histid<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_hist,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*histid));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(history,<sp/>word);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((hword<sp/>=<sp/>va_arg(history,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histid[n_hist]<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>hword);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_hist;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(history);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/><ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score</ref>(model,<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>word),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histid,<sp/>n_hist,<sp/>&amp;n_used);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(histid);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="438" refid="ngram__model_8h_1a0f8ad53c1a7cab528113b74aad00f15a" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a0f8ad53c1a7cab528113b74aad00f15a" kindref="member">ngram_tg_score</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>w3,<sp/>int32<sp/>w2,<sp/>int32<sp/>w1,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*<sp/>n_used)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>hist[2];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>hist[0]<sp/>=<sp/>w2;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>hist[1]<sp/>=<sp/>w1;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score</ref>(model,<sp/>w3,<sp/>hist,<sp/>2,<sp/>n_used);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="448" refid="ngram__model_8h_1a8c06698fbcb0ef82420088ace045ae81" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a8c06698fbcb0ef82420088ace045ae81" kindref="member">ngram_bg_score</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>w2,<sp/>int32<sp/>w1,<sp/>int32<sp/>*<sp/>n_used)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score</ref>(model,<sp/>w2,<sp/>&amp;w1,<sp/>1,<sp/>n_used);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="454" refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" kindref="member">ngram_ng_prob</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>wid,<sp/>int32<sp/>*<sp/>history,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_hist,<sp/>int32<sp/>*<sp/>n_used)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>prob,<sp/>class_weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Closed<sp/>vocabulary,<sp/>OOV<sp/>word<sp/>probability<sp/>is<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;Declassify&quot;<sp/>wid<sp/>and<sp/>history<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NGRAM_IS_CLASSWID(wid))<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*lmclass<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[NGRAM_CLASSID(wid)];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_weight<sp/>=<sp/>ngram_class_prob(lmclass,<sp/>wid);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_weight<sp/>==<sp/>1)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Meaning,<sp/>not<sp/>found<sp/>in<sp/>class.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>class_weight;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>lmclass-&gt;<ref refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" kindref="member">tag_wid</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_hist;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[i]<sp/>!=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>NGRAM_IS_CLASSWID(history[i]))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history[i]<sp/>=</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[NGRAM_CLASSID(history[i])]-&gt;<ref refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" kindref="member">tag_wid</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>(*model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a2a64c66491914168bd830237cc93b16c" kindref="member">raw_score</ref>)<sp/>(model,<sp/>wid,<sp/>history,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hist,<sp/>n_used);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiply<sp/>by<sp/>unigram<sp/>in-class<sp/>weight.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob<sp/>+<sp/>class_weight;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="486" refid="ngram__model_8h_1a710db3c3e42f6c1d088f2196b9d6c7d1" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a710db3c3e42f6c1d088f2196b9d6c7d1" kindref="member">ngram_probv</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,<sp/>...)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>history;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hword;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*histid;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_hist;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n_used;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>prob;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(history,<sp/>word);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((hword<sp/>=<sp/>va_arg(history,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_hist;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(history);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>histid<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_hist,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*histid));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(history,<sp/>word);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((hword<sp/>=<sp/>va_arg(history,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histid[n_hist]<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>hword);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_hist;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(history);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/><ref refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" kindref="member">ngram_ng_prob</ref>(model,<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>word),</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histid,<sp/>n_hist,<sp/>&amp;n_used);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(histid);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="517" refid="ngram__model_8h_1a93a57650b27f33eb9478badf1f911501" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a93a57650b27f33eb9478badf1f911501" kindref="member">ngram_prob</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*words,<sp/>int32<sp/>n)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*ctx_id;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>nused;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>prob;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>i;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx_id<sp/>=<sp/>(int32<sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n<sp/>-<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ctx_id));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>(uint32)<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_id[i<sp/>-<sp/>1]<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>words[i]);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>wid<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>*words);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/><ref refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" kindref="member">ngram_ng_prob</ref>(model,<sp/>wid,<sp/>ctx_id,<sp/>n<sp/>-<sp/>1,<sp/>&amp;nused);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(ctx_id);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="537" refid="ngram__model_8h_1ae0cf3a94128927e2be6422d2de34f49b" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1ae0cf3a94128927e2be6422d2de34f49b" kindref="member">ngram_score_to_prob</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>int32<sp/>score)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>prob;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Undo<sp/>insertion<sp/>penalty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>score<sp/>-<sp/>base-&gt;<ref refid="structngram__model__s_1a3d6bf5632760a16e52cb881d7010d774" kindref="member">log_wip</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Undo<sp/>language<sp/>weight.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>(int32)<sp/>(prob<sp/>/<sp/>base-&gt;<ref refid="structngram__model__s_1a76ea0c65b23de80091e7c602bdb43bde" kindref="member">lw</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="550" refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" kindref="member">ngram_unknown_wid</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>val;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>This<sp/>could<sp/>be<sp/>memoized<sp/>for<sp/>speed<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>up<sp/>&lt;UNK&gt;,<sp/>if<sp/>not<sp/>found<sp/>return<sp/>NGRAM_INVALID_WID.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1acaf27e8e7e336faf6653649937c42ed8" kindref="member">hash_table_lookup_int32</ref>(model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;UNK&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;val)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="563" refid="ngram__model_8h_1ae401a87ad55ae64f286dcd83170f7100" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1ae401a87ad55ae64f286dcd83170f7100" kindref="member">ngram_zero</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="569" refid="ngram__model_8h_1a462d374099a4fe8b3c3195b5e2013545" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a462d374099a4fe8b3c3195b5e2013545" kindref="member">ngram_model_get_size</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">uint32<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="577" refid="ngram__model_8h_1a0881c67c0b14cc9b620fc6e7875c7a45" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a0881c67c0b14cc9b620fc6e7875c7a45" kindref="member">ngram_model_get_counts</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1a710daed84ee676f79dcbf510fca238e8" kindref="member">n_counts</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="585" refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>val;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1acaf27e8e7e336faf6653649937c42ed8" kindref="member">hash_table_lookup_int32</ref>(model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>word,<sp/>&amp;val)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" kindref="member">ngram_unknown_wid</ref>(model);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="596" refid="ngram__model_8h_1a96e36290a005c03464ea6c637ccde2f5" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a96e36290a005c03464ea6c637ccde2f5" kindref="member">ngram_word</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>wid)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>any<sp/>class<sp/>tag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>NGRAM_BASEWID(wid);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>&gt;=<sp/>model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wid];</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="609"><highlight class="normal">ngram_add_word_internal(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,<sp/>int32<sp/>classid)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>hash<sp/>collisions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1acaf27e8e7e336faf6653649937c42ed8" kindref="member">hash_table_lookup_int32</ref>(model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>word,<sp/>&amp;wid)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Omit<sp/>duplicate<sp/>word<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>word);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>the<sp/>next<sp/>available<sp/>word<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classid<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>NGRAM_CLASSWID(wid,<sp/>classid);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reallocate<sp/>word_str<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref><sp/>&gt;=<sp/>model-&gt;<ref refid="structngram__model__s_1a3e41109b30668bdfc077614c1ef49960" kindref="member">n_1g_alloc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a3e41109b30668bdfc077614c1ef49960" kindref="member">n_1g_alloc</ref><sp/>+=<sp/>UG_ALLOC_STEP;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>)<sp/>*</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a3e41109b30668bdfc077614c1ef49960" kindref="member">n_1g_alloc</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>the<sp/>word<sp/>string<sp/>in<sp/>the<sp/>appropriate<sp/>manner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Class<sp/>words<sp/>are<sp/>always<sp/>dynamically<sp/>allocated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(word);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>enter<sp/>it<sp/>into<sp/>the<sp/>hash<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(model-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>],<sp/>wid)<sp/>!=<sp/>wid)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Hash<sp/>insertion<sp/>failed<sp/>for<sp/>word<sp/>%s<sp/>=&gt;<sp/>%p<sp/>(should<sp/>not<sp/>happen)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>],<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(wid));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>number<sp/>of<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>++model-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="649" refid="ngram__model_8h_1a38e034d58ee0d6a4c0dd6f852cb71c3c" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a38e034d58ee0d6a4c0dd6f852cb71c3c" kindref="member">ngram_model_add_word</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,<sp/>float32<sp/>weight)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>wid,<sp/>prob<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>add<sp/>word<sp/>to<sp/>unwritable<sp/>model,<sp/>we<sp/>need<sp/>to<sp/>make<sp/>it<sp/>writable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!model-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aed4c99044fd3e70b7b33a0298a2279b4" kindref="member">E_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>add<sp/>word<sp/>&apos;%s&apos;<sp/>to<sp/>read-only<sp/>language<sp/>model.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>mmap<sp/>with<sp/>&apos;-mmap<sp/>no&apos;<sp/>to<sp/>make<sp/>it<sp/>writable\n&quot;</highlight><highlight class="normal">,<sp/>word);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>ngram_add_word_internal(model,<sp/>word,<sp/>-1);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>what<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>to<sp/>add<sp/>the<sp/>word<sp/>to<sp/>the<sp/>unigram.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref><sp/>&amp;&amp;<sp/>model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a6d553c95c7f4da4993f2b9df757ac016" kindref="member">add_ug</ref>)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*model-&gt;<ref refid="structngram__model__s_1ad3d9d8ad9773f958a89534220eda6fb9" kindref="member">funcs</ref>-&gt;<ref refid="structngram__funcs__s_1a6d553c95c7f4da4993f2b9df757ac016" kindref="member">add_ug</ref>)<sp/>(model,<sp/>wid,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>weight));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*</highlight></codeline>
<codeline lineno="677"><highlight class="normal">ngram_class_new(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/>int32<sp/>tag_wid,<sp/>int32<sp/>start_wid,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>classwords)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*lmclass;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>tprob;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lmclass));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" kindref="member">tag_wid</ref><sp/>=<sp/>tag_wid;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wid_base<sp/>is<sp/>the<sp/>wid<sp/>(minus<sp/>class<sp/>tag)<sp/>of<sp/>the<sp/>first<sp/>word<sp/>in<sp/>the<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a370c88602c7c1f7e3ff1a767c027f5cb" kindref="member">start_wid</ref><sp/>=<sp/>start_wid;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" kindref="member">n_words</ref><sp/>=<sp/><ref refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" kindref="member">glist_count</ref>(classwords);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" kindref="member">prob1</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(lmclass-&gt;<ref refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" kindref="member">n_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lmclass-&gt;<ref refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" kindref="member">prob1</ref>));</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>tprob<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>classwords;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tprob<sp/>+=<sp/>gnode_float32(gn);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tprob<sp/>&gt;<sp/>1.1<sp/>||<sp/>tprob<sp/>&lt;<sp/>0.9)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Total<sp/>class<sp/>probability<sp/>is<sp/>%f,<sp/>will<sp/>normalize\n&quot;</highlight><highlight class="normal">,<sp/>tprob);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>classwords;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn-&gt;data.fl<sp/>/=<sp/>tprob;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>gn<sp/>=<sp/>classwords;<sp/>gn;<sp/>++i,<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" kindref="member">prob1</ref>[i]<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>gnode_float32(gn));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lmclass;</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="711"><highlight class="normal">ngram_class_add_word(<ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*<sp/>lmclass,<sp/>int32<sp/>wid,<sp/>int32<sp/>lweight)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>hash;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass-&gt;nword_hash<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>everything<sp/>in<sp/>it<sp/>to<sp/>-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash<sp/>=</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8e89a31c3c70710a8e023a177084bff2" kindref="member">ckd_malloc</ref>(NGRAM_HASH_SIZE<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lmclass-&gt;nword_hash));</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(lmclass-&gt;nword_hash,<sp/>0xff,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAM_HASH_SIZE<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lmclass-&gt;nword_hash));</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>=<sp/>NGRAM_HASH_SIZE;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a79438cd582363800bc05da31a9ca49d6" kindref="member">n_hash_inuse</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stupidest<sp/>possible<sp/>hash<sp/>function.<sp/><sp/>This<sp/>will<sp/>work<sp/>pretty<sp/>well</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>this<sp/>function<sp/>is<sp/>called<sp/>repeatedly<sp/>with<sp/>contiguous<sp/>word</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>IDs,<sp/>though...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>wid<sp/>&amp;<sp/>(lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Good,<sp/>no<sp/>collision.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>=<sp/>wid;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1a6ac4c01b0c8d29f770f4780e38ab0923" kindref="member">prob1</ref><sp/>=<sp/>lweight;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++lmclass-&gt;<ref refid="structngram__class__s_1a79438cd582363800bc05da31a9ca49d6" kindref="member">n_hash_inuse</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>next;<sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collision...<sp/>Find<sp/>the<sp/>end<sp/>of<sp/>the<sp/>hash<sp/>chain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1a88ede5798cadc2bece12c49fa038b090" kindref="member">next</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1a88ede5798cadc2bece12c49fa038b090" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hash<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Does<sp/>we<sp/>has<sp/>any<sp/>more<sp/>bukkit?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass-&gt;<ref refid="structngram__class__s_1a79438cd582363800bc05da31a9ca49d6" kindref="member">n_hash_inuse</ref><sp/>==<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Oh<sp/>noes!<sp/><sp/>Ok,<sp/>we<sp/>makes<sp/>more.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash<sp/>=<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(lmclass-&gt;nword_hash,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>*<sp/>2<sp/>*</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lmclass-&gt;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nword_hash));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(lmclass-&gt;nword_hash<sp/>+<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>,<sp/>0xff,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lmclass-&gt;nword_hash));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>use<sp/>the<sp/>next<sp/>allocated<sp/>one<sp/>(easy)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>any<sp/>available<sp/>bucket.<sp/><sp/>We<sp/>hope<sp/>this<sp/>doesn&apos;t<sp/>happen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(next<sp/>=<sp/>0;<sp/>next<sp/>&lt;<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>;<sp/>++next)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass-&gt;nword_hash[next].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>should<sp/>absolutely<sp/>not<sp/>happen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(next<sp/>!=<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash[next].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>=<sp/>wid;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash[next].<ref refid="structngram__class__s_1_1ngram__hash__s_1a6ac4c01b0c8d29f770f4780e38ab0923" kindref="member">prob1</ref><sp/>=<sp/>lweight;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1a88ede5798cadc2bece12c49fa038b090" kindref="member">next</ref><sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++lmclass-&gt;<ref refid="structngram__class__s_1a79438cd582363800bc05da31a9ca49d6" kindref="member">n_hash_inuse</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">ngram_class_free(<ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*<sp/>lmclass)</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lmclass-&gt;nword_hash);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lmclass-&gt;<ref refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" kindref="member">prob1</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lmclass);</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="779" refid="ngram__model_8h_1a39eabb4994cf99c4bc2116e12af0c9f1" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a39eabb4994cf99c4bc2116e12af0c9f1" kindref="member">ngram_model_add_class_word</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*classname,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,<sp/>float32<sp/>weight)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*lmclass;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>classid,<sp/>tag_wid,<sp/>wid,<sp/>i,<sp/>scale;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>fprob;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>class<sp/>corresponding<sp/>to<sp/>classname.<sp/><sp/>Linear<sp/>search</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>probably<sp/>okay<sp/>here<sp/>since<sp/>there<sp/>won&apos;t<sp/>be<sp/>very<sp/>many<sp/>classes,<sp/>and</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>doesn&apos;t<sp/>have<sp/>to<sp/>be<sp/>fast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>tag_wid<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>classname);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag_wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>word<sp/>or<sp/>class<sp/>tag:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>classname);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tag_wid;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(classid<sp/>=<sp/>0;<sp/>classid<sp/>&lt;<sp/>model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref>;<sp/>++classid)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[classid]-&gt;<ref refid="structngram__class__s_1ab5f3cc0142c9fd91b3c3d0e59906b556" kindref="member">tag_wid</ref><sp/>==<sp/>tag_wid)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmm,<sp/>no<sp/>such<sp/>class.<sp/><sp/>It&apos;s<sp/>probably<sp/>not<sp/>a<sp/>good<sp/>idea<sp/>to<sp/>create<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classid<sp/>==<sp/>model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Word<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>class<sp/>tag<sp/>(call<sp/>ngram_model_add_class()<sp/>first)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classname);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[classid];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>this<sp/>word<sp/>to<sp/>the<sp/>model&apos;s<sp/>set<sp/>of<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>ngram_add_word_internal(model,<sp/>word,<sp/>classid);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wid;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>fixed<sp/>probability<sp/>of<sp/>the<sp/>new<sp/>word.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>fprob<sp/>=<sp/>weight<sp/>*<sp/>1.0f<sp/>/<sp/>(lmclass-&gt;<ref refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" kindref="member">n_words</ref><sp/>+<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a79438cd582363800bc05da31a9ca49d6" kindref="member">n_hash_inuse</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>normalize<sp/>everything<sp/>else<sp/>to<sp/>fit<sp/>it<sp/>in.<sp/><sp/>This<sp/>is</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>accomplished<sp/>by<sp/>simply<sp/>scaling<sp/>all<sp/>the<sp/>other<sp/>probabilities</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>(1-fprob).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>1.0<sp/>-<sp/>fprob);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lmclass-&gt;<ref refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" kindref="member">n_words</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" kindref="member">prob1</ref>[i]<sp/>+=<sp/>scale;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass-&gt;nword_hash[i].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmclass-&gt;nword_hash[i].<ref refid="structngram__class__s_1_1ngram__hash__s_1a6ac4c01b0c8d29f770f4780e38ab0923" kindref="member">prob1</ref><sp/>+=<sp/>scale;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>add<sp/>it<sp/>to<sp/>the<sp/>class<sp/>hash<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngram_class_add_word(lmclass,<sp/>wid,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(model-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>fprob));</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="831" refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" kindref="member">ngram_model_add_class</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*classname,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>classweight,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**words,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32<sp/>*<sp/>weights,<sp/>int32<sp/>n_words)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*lmclass;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>classwords<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>start_wid<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>classid,<sp/>tag_wid;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>classname<sp/>already<sp/>exists<sp/>in<sp/>model.<sp/><sp/>If<sp/>not,<sp/>add<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tag_wid<sp/>=</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>classname))<sp/>==<sp/><ref refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" kindref="member">ngram_unknown_wid</ref>(model))<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag_wid<sp/>=<sp/><ref refid="ngram__model_8h_1a38e034d58ee0d6a4c0dd6f852cb71c3c" kindref="member">ngram_model_add_word</ref>(model,<sp/>classname,<sp/>classweight);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag_wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref><sp/>==<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>classes<sp/>cannot<sp/>exceed<sp/>128<sp/>(sorry)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>classid<sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_words;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wid;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wid<sp/>=<sp/>ngram_add_word_internal(model,<sp/>words[i],<sp/>classid);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_wid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_wid<sp/>=<sp/>NGRAM_BASEWID(wid);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classwords<sp/>=<sp/><ref refid="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" kindref="member">glist_add_float32</ref>(classwords,<sp/>weights[i]);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>classwords<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>(classwords);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>lmclass<sp/>=<sp/>ngram_class_new(model,<sp/>tag_wid,<sp/>start_wid,<sp/>classwords);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(classwords);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmclass<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>++model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1adeb914f8e9f011a5c960f5ee9cd33919" kindref="member">n_classes</ref><sp/>*</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>));</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__s_1a39384af3e6b53591d433436db011ac8d" kindref="member">classes</ref>[classid]<sp/>=<sp/>lmclass;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>classid;</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="882"><highlight class="normal">ngram_class_prob(<ref refid="structngram__class__s" kindref="compound">ngram_class_t</ref><sp/>*<sp/>lmclass,<sp/>int32<sp/>wid)</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>base_wid<sp/>=<sp/>NGRAM_BASEWID(wid);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_wid<sp/>&lt;<sp/>lmclass-&gt;start_wid</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>base_wid<sp/>&gt;<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a370c88602c7c1f7e3ff1a767c027f5cb" kindref="member">start_wid</ref><sp/>+<sp/>lmclass-&gt;<ref refid="structngram__class__s_1af13562cbc44647435f315b18df5688dc" kindref="member">n_words</ref>)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>hash;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>it<sp/>up<sp/>in<sp/>the<sp/>hash<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>wid<sp/>&amp;<sp/>(lmclass-&gt;<ref refid="structngram__class__s_1a7f450019eb6dc2e31b18eb3ab6009920" kindref="member">n_hash</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(hash<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1ad0178b5a86ec23ce790b6b7cb64db0b9" kindref="member">wid</ref><sp/>!=<sp/>wid)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1a88ede5798cadc2bece12c49fa038b090" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lmclass-&gt;nword_hash[hash].<ref refid="structngram__class__s_1_1ngram__hash__s_1a6ac4c01b0c8d29f770f4780e38ab0923" kindref="member">prob1</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lmclass-&gt;<ref refid="structngram__class__s_1a50077f48f135f1c666745a21574e4205" kindref="member">prob1</ref>[base_wid<sp/>-<sp/>lmclass-&gt;<ref refid="structngram__class__s_1a370c88602c7c1f7e3ff1a767c027f5cb" kindref="member">start_wid</ref>];</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="904"><highlight class="normal">read_classdef_file(<ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*<sp/>classes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)</highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>is_pipe;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inclass;<sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>rv<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>classwords<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>classprobs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*classname<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/><ref refid="pio_8h_1aa3d71506049eb49cf03eff1b89ef281f" kindref="member">fopen_comp</ref>(file_name,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>&amp;is_pipe))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>inclass<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!feof(fp))<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[512];</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wptr[2];</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_words;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(line),<sp/>fp)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_words<sp/>=<sp/><ref refid="strfuncs_8h_1a5b520fdebcca599db86faaf75a82173f" kindref="member">str2words</ref>(line,<sp/>wptr,<sp/>2);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_words<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inclass)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>an<sp/>end<sp/>of<sp/>class<sp/>marker.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_words<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>strcmp(wptr[0],<sp/></highlight><highlight class="stringliteral">&quot;END&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclassdef__s" kindref="compound">classdef_t</ref><sp/>*classdef;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*word,<sp/>*weight;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classname<sp/>==<sp/>NULL<sp/>||<sp/>0<sp/>!=<sp/>strcmp(wptr[1],<sp/>classname))</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclass<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>class<sp/>from<sp/>the<sp/>list<sp/>of<sp/>words<sp/>collected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*classdef));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classwords<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>(classwords);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classprobs<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>(classprobs);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;n_words<sp/>=<sp/><ref refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" kindref="member">glist_count</ref>(classwords);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;words<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(classdef-&gt;n_words,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*classdef-&gt;words));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;weights<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(classdef-&gt;n_words,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*classdef-&gt;weights));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>=<sp/>classwords;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>classprobs;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>classdef-&gt;n_words;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;words[i]<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(word);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;weights[i]<sp/>=<sp/>gnode_float32(weight);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>=<sp/>gnode_next(word);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>gnode_next(weight);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>this<sp/>class<sp/>to<sp/>the<sp/>hash<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1aebfe63c3869c271b125a8413ee384412" kindref="member">hash_table_enter</ref>(classes,<sp/>classname,<sp/>classdef)<sp/>!=</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef_free(classdef);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>everything.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(classwords);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(classprobs);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classwords<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classprobs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classname<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>fprob;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_words<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprob<sp/>=<sp/><ref refid="strfuncs_8h_1ab708351fe7308551632a782bfad75a1e" kindref="member">atof_c</ref>(wptr[1]);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprob<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>list<sp/>of<sp/>words<sp/>for<sp/>this<sp/>class.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classwords<sp/>=</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>(classwords,<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(wptr[0]));</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classprobs<sp/>=<sp/><ref refid="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" kindref="member">glist_add_float32</ref>(classprobs,<sp/>fprob);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>a<sp/>new<sp/>LM<sp/>class<sp/>if<sp/>the<sp/>LMCLASS<sp/>marker<sp/>is<sp/>seen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_words<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>strcmp(wptr[0],<sp/></highlight><highlight class="stringliteral">&quot;LMCLASS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inclass)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclass<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classname<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(wptr[1]);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>just<sp/>ignore<sp/>whatever<sp/>junk<sp/>we<sp/>got<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Success.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>error_out:</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>all<sp/>the<sp/>stuff<sp/>we<sp/>might<sp/>have<sp/>allocated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pio_8h_1a87592c3a2d0a00eed9eda014950beb65" kindref="member">fclose_comp</ref>(fp,<sp/>is_pipe);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>classwords;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(<ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(classwords);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(classprobs);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(classname);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal">classdef_free(<ref refid="structclassdef__s" kindref="compound">classdef_t</ref><sp/>*<sp/>classdef)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>classdef-&gt;n_words;<sp/>++i)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(classdef-&gt;words[i]);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(classdef-&gt;words);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(classdef-&gt;weights);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(classdef);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="1027" refid="ngram__model_8h_1a9b2a86c23543158754373c5456fe890d" refkind="member"><highlight class="normal"><ref refid="ngram__model_8h_1a9b2a86c23543158754373c5456fe890d" kindref="member">ngram_model_read_classdef</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*classes;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>hl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>rv<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>classes<sp/>=<sp/><ref refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" kindref="member">hash_table_new</ref>(0,<sp/>FALSE);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_classdef_file(classes,<sp/>file_name)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" kindref="member">hash_table_free</ref>(classes);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>new<sp/>class<sp/>in<sp/>the<sp/>language<sp/>model<sp/>for<sp/>each<sp/>classdef.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>hl<sp/>=<sp/><ref refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" kindref="member">hash_table_tolist</ref>(classes,<sp/>NULL);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>hl;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__entry__s" kindref="compound">hash_entry_t</ref><sp/>*he<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclassdef__s" kindref="compound">classdef_t</ref><sp/>*classdef<sp/>=<sp/>he-&gt;<ref refid="structhash__entry__s_1a0d57012963084fed93886681108aa636" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" kindref="member">ngram_model_add_class</ref>(model,<sp/>he-&gt;key,<sp/>1.0,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;words,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;weights,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;n_words)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>error_out:</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>hl;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__entry__s" kindref="compound">hash_entry_t</ref><sp/>*he<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>he-&gt;key);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef_free(he-&gt;<ref refid="structhash__entry__s_1a0d57012963084fed93886681108aa636" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(hl);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" kindref="member">hash_table_free</ref>(classes);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model.c"/>
  </compounddef>
</doxygen>
