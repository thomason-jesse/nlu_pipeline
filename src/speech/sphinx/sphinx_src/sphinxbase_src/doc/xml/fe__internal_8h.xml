<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="fe__internal_8h" kind="file">
    <compoundname>fe_internal.h</compoundname>
    <includes refid="fe_8h" local="yes">sphinxbase/fe.h</includes>
    <includes refid="fixpoint_8h" local="yes">sphinxbase/fixpoint.h</includes>
    <includes refid="fe__noise_8h" local="yes">fe_noise.h</includes>
    <includes refid="fe__prespch__buf_8h" local="yes">fe_prespch_buf.h</includes>
    <includes refid="fe__type_8h" local="yes">fe_type.h</includes>
    <includedby refid="fe__interface_8c" local="yes">src/libsphinxbase/fe/fe_interface.c</includedby>
    <includedby refid="fe__warp_8h" local="yes">src/libsphinxbase/fe/fe_warp.h</includedby>
    <includedby refid="fe__noise_8c" local="yes">src/libsphinxbase/fe/fe_noise.c</includedby>
    <includedby refid="fe__sigproc_8c" local="yes">src/libsphinxbase/fe/fe_sigproc.c</includedby>
    <includedby refid="fixlog_8c" local="yes">src/libsphinxbase/fe/fixlog.c</includedby>
    <incdepgraph>
      <node id="1161">
        <label>stdarg.h</label>
      </node>
      <node id="1162">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1168">
        <label>fe_prespch_buf.h</label>
        <link refid="fe__prespch__buf_8h_source"/>
        <childnode refid="1157" relation="include">
        </childnode>
      </node>
      <node id="1167">
        <label>fe_type.h</label>
        <link refid="fe__type_8h_source"/>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
      </node>
      <node id="1165">
        <label>limits.h</label>
      </node>
      <node id="1163">
        <label>sphinx_config.h</label>
      </node>
      <node id="1164">
        <label>sphinxbase/fixpoint.h</label>
        <link refid="fixpoint_8h_source"/>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
      </node>
      <node id="1166">
        <label>fe_noise.h</label>
        <link refid="fe__noise_8h_source"/>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
      </node>
      <node id="1158">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1159">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
      </node>
      <node id="1157">
        <label>sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
      </node>
      <node id="1156">
        <label>src/libsphinxbase/fe/fe_internal.h</label>
        <link refid="fe_internal.h"/>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
      </node>
      <node id="1160">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1176">
        <label>src/libsphinxbase/fe/fe_warp_piecewise_linear.c</label>
        <link refid="fe__warp__piecewise__linear_8c_source"/>
      </node>
      <node id="1174">
        <label>src/libsphinxbase/fe/fe_warp_affine.c</label>
        <link refid="fe__warp__affine_8c_source"/>
      </node>
      <node id="1172">
        <label>src/libsphinxbase/fe/fe_sigproc.c</label>
        <link refid="fe__sigproc_8c_source"/>
      </node>
      <node id="1177">
        <label>src/libsphinxbase/fe/fe_noise.c</label>
        <link refid="fe__noise_8c_source"/>
      </node>
      <node id="1173">
        <label>src/libsphinxbase/fe/fe_warp.c</label>
        <link refid="fe__warp_8c_source"/>
      </node>
      <node id="1171">
        <label>src/libsphinxbase/fe/fe_warp.h</label>
        <link refid="fe__warp_8h_source"/>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
      </node>
      <node id="1178">
        <label>src/libsphinxbase/fe/fixlog.c</label>
        <link refid="fixlog_8c_source"/>
      </node>
      <node id="1170">
        <label>src/libsphinxbase/fe/fe_interface.c</label>
        <link refid="fe__interface_8c_source"/>
      </node>
      <node id="1175">
        <label>src/libsphinxbase/fe/fe_warp_inverse_linear.c</label>
        <link refid="fe__warp__inverse__linear_8c_source"/>
      </node>
      <node id="1169">
        <label>src/libsphinxbase/fe/fe_internal.h</label>
        <link refid="fe_internal.h"/>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmelfb__s" prot="public">melfb_s</innerclass>
    <innerclass refid="structvad__data__s" prot="public">vad_data_s</innerclass>
    <innerclass refid="structfe__s" prot="public">fe_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fe__internal_8h_1a54c507ce105117f33725effee267a6a1" prot="public" static="no">
        <name>SQRT_HALF</name>
        <initializer>FLOAT2MFCC(0.707106781186548)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="107" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="fe__internal_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="fe__internal_8h_1a06fc87d81c62e9abb8790b6e5713c55bad4a6831a774f577ea9b138f1cbb752e3" prot="public">
          <name>RAW_LOG_SPEC</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fe__internal_8h_1a06fc87d81c62e9abb8790b6e5713c55badc41fb6007990316a890dd5b734748b3" prot="public">
          <name>SMOOTH_LOG_SPEC</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="61" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="fe__internal_8h_1adf764cbdea00d65edcd07bb9953ad2b7" prot="public" static="no">
        <name>@1</name>
        <enumvalue id="fe__internal_8h_1adf764cbdea00d65edcd07bb9953ad2b7a21e7a155998a6635d59bcd9f53fb4a5c" prot="public">
          <name>LEGACY_DCT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fe__internal_8h_1adf764cbdea00d65edcd07bb9953ad2b7aa9d4777883f8c2a1595ded20953287e2" prot="public">
          <name>DCT_II</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fe__internal_8h_1adf764cbdea00d65edcd07bb9953ad2b7a8a1ba34dc46fe81c2d9df68eb445f2d0" prot="public">
          <name>DCT_HTK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="67" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" bodystart="67" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fe__internal_8h_1ac848e441ab3d26bbbc8b79d439f58228" prot="public" static="no">
        <type>struct <ref refid="structmelfb__s" kindref="compound">melfb_s</ref></type>
        <definition>typedef struct melfb_s melfb_t</definition>
        <argsstring></argsstring>
        <name>melfb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="752" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fe__internal_8h_1adbd9a0cb6670728a7e9526f99d6e3af7" prot="public" static="no">
        <type>struct <ref refid="structvad__data__s" kindref="compound">vad_data_s</ref></type>
        <definition>typedef struct vad_data_s  vad_data_t</definition>
        <argsstring></argsstring>
        <name>vad_data_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fe__internal_8h_1a21754be8bce06a2a9cee3937c2ea716a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_init_dither</definition>
        <argsstring>(int32 seed)</argsstring>
        <name>fe_init_dither</name>
        <param>
          <type>int32</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="175" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_interface.c" bodystart="323" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1a0120031a22488b85cd28df580e1994b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fe_dither</definition>
        <argsstring>(int16 *buffer, int32 nsamps)</argsstring>
        <name>fe_dither</name>
        <param>
          <type>int16 *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>nsamps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1afe3ac19aeeb52d9e237dd2f4694ec18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fe_read_frame</definition>
        <argsstring>(fe_t *fe, int16 const *in, int32 len)</argsstring>
        <name>fe_read_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="181" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="822" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1a1c795ee3f7f930f131147986efd99b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fe_shift_frame</definition>
        <argsstring>(fe_t *fe, int16 const *in, int32 len)</argsstring>
        <name>fe_shift_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>int16 const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="184" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="843" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1aaa0103590dfe1d7f5ebe1f86edde42f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_write_frame</definition>
        <argsstring>(fe_t *fe, mfcc_t *feat, int32 store_pcm)</argsstring>
        <name>fe_write_frame</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>feat</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>store_pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="187" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1183" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1af65d6ee8e5b84143cb3cf86cabb22a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fe_build_melfilters</definition>
        <argsstring>(melfb_t *MEL_FB)</argsstring>
        <name>fe_build_melfilters</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>MEL_FB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="190" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="553" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1a9f8eff7a11e72a8055e9907e62b7adc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fe_compute_melcosine</definition>
        <argsstring>(melfb_t *MEL_FB)</argsstring>
        <name>fe_compute_melcosine</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>MEL_FB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="191" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="687" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1afa7650620e326a4fbd248afeee4fe96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_create_hamming</definition>
        <argsstring>(window_t *in, int32 in_len)</argsstring>
        <name>fe_create_hamming</name>
        <param>
          <type>window_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>in_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="192" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="761" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1a733bb20e4cfc3eabe2c59dce81708b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_create_twiddle</definition>
        <argsstring>(fe_t *fe)</argsstring>
        <name>fe_create_twiddle</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <briefdescription>
<para>Create arrays of twiddle factors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="193" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="871" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1ae2ea0731e352f850dba33446b6849e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fixed32</type>
        <definition>fixed32 fe_log_add</definition>
        <argsstring>(fixed32 x, fixed32 y)</argsstring>
        <name>fe_log_add</name>
        <param>
          <type>fixed32</type>
          <declname>x</declname>
        </param>
        <param>
          <type>fixed32</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1acbb11a73a6514ebbe9c9d6cd238af43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fixed32</type>
        <definition>fixed32 fe_log_sub</definition>
        <argsstring>(fixed32 x, fixed32 y)</argsstring>
        <name>fe_log_sub</name>
        <param>
          <type>fixed32</type>
          <declname>x</declname>
        </param>
        <param>
          <type>fixed32</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1ac47cd154d6bc73809b2e1c14d72c8445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_spec2cep</definition>
        <argsstring>(fe_t *fe, const powspec_t *mflogspec, mfcc_t *mfcep)</argsstring>
        <name>fe_spec2cep</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const powspec_t *</type>
          <declname>mflogspec</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="199" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1103" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1a6b64dfa19357e33a24169ea0891dba0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_dct2</definition>
        <argsstring>(fe_t *fe, const powspec_t *mflogspec, mfcc_t *mfcep, int htk)</argsstring>
        <name>fe_dct2</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const powspec_t *</type>
          <declname>mflogspec</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>htk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="200" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1132" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="fe__internal_8h_1a0b22ef2913257234e5486781f01c1e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_dct3</definition>
        <argsstring>(fe_t *fe, const mfcc_t *mfcep, powspec_t *mflogspec)</argsstring>
        <name>fe_dct3</name>
        <param>
          <type><ref refid="structfe__s" kindref="compound">fe_t</ref> *</type>
          <declname>fe</declname>
        </param>
        <param>
          <type>const mfcc_t *</type>
          <declname>mfcep</declname>
        </param>
        <param>
          <type>powspec_t *</type>
          <declname>mflogspec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h" line="201" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_sigproc.c" bodystart="1169" bodyend="1180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1996-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__FE_INTERNAL_H__</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__FE_INTERNAL_H__</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sphinxbase/fe.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sphinxbase/fixpoint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fe_noise.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fe_prespch_buf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fe_type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Fool<sp/>Emacs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Values<sp/>for<sp/>the<sp/>&apos;logspec&apos;<sp/>field.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAW_LOG_SPEC<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SMOOTH_LOG_SPEC<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Values<sp/>for<sp/>the<sp/>&apos;transform&apos;<sp/>field.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEGACY_DCT<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DCT_II<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DCT_HTK<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmelfb__s" kindref="compound">melfb_s</ref><sp/><ref refid="structmelfb__s" kindref="compound">melfb_t</ref>;</highlight></codeline>
<codeline lineno="75" refid="structmelfb__s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmelfb__s" kindref="compound">melfb_s</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>sampling_rate;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>num_cepstra;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>num_filters;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>fft_size;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>lower_filt_freq;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>upper_filt_freq;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DCT<sp/>coefficients.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>**mel_cosine;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Filter<sp/>coefficients.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>*filt_coeffs;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>*spec_start;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>*filt_start;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>*filt_width;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Luxury<sp/>mobile<sp/>home.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>doublewide;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*warp_type;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*warp_params;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>warp_id;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precomputed<sp/>normalization<sp/>constants<sp/>for<sp/>unitary<sp/>DCT-II/DCT-III<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>sqrt_inv_n,<sp/>sqrt_inv_2n;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>and<sp/>coefficients<sp/>for<sp/>HTK-style<sp/>liftering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>lifter_val;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>*lifter;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>filters<sp/>to<sp/>unit<sp/>area<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>unit_area;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Round<sp/>filter<sp/>frequencies<sp/>to<sp/>DFT<sp/>points<sp/>(hurts<sp/>accuracy,<sp/>but<sp/>is</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useful<sp/>for<sp/>legacy<sp/>purposes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>round_filters;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sqrt(1/2),<sp/>also<sp/>used<sp/>for<sp/>unitary<sp/>DCT-II/DCT-III<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQRT_HALF<sp/>FLOAT2MFCC(0.707106781186548)</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structvad__data__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvad__data__s" kindref="compound">vad_data_s</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>in_speech;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>pre_speech_frames;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>post_speech_frames;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprespch__buf__s" kindref="compound">prespch_buf_t</ref>*<sp/>prespch_buf;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><ref refid="structvad__data__s" kindref="compound">vad_data_t</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structfe__s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfe__s" kindref="compound">fe_s</ref><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref><sp/>*config;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refcount;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>sampling_rate;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>frame_rate;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>frame_shift;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>window_length;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>frame_size;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>fft_size;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>fft_order;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>feature_dimension;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>num_cepstra;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>remove_dc;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>log_spec;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>swap;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>dither;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>transform;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>remove_noise;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>remove_silence;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>pre_emphasis_alpha;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>seed;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sample_counter;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>start_flag;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>reserved;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Twiddle<sp/>factors<sp/>for<sp/>FFT.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_t<sp/>*ccc,<sp/>*sss;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mel<sp/>filter<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel_fb;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Half<sp/>of<sp/>a<sp/>Hamming<sp/>Window.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>window_t<sp/>*hamming_window;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Noise<sp/>removal<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnoise__stats__s" kindref="compound">noise_stats_t</ref><sp/>*noise_stats;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>VAD<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>pre_speech;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>post_speech;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>start_speech;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>vad_threshold;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvad__data__s" kindref="compound">vad_data_t</ref><sp/>*vad_data;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>buffers<sp/>for<sp/>processing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>too<sp/>many<sp/>of<sp/>these.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>*spch;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_t<sp/>*frame;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>powspec_t<sp/>*spec,<sp/>*mfspec;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>*overflow_samps;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>num_overflow_samps;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>prior;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_init_dither(int32<sp/>seed);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Apply<sp/>1/2<sp/>bit<sp/>noise<sp/>to<sp/>a<sp/>buffer<sp/>of<sp/>audio.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">int32<sp/>fe_dither(int16<sp/>*buffer,<sp/>int32<sp/>nsamps);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Load<sp/>a<sp/>frame<sp/>of<sp/>data<sp/>into<sp/>the<sp/>fe.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_read_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*fe,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in,<sp/>int32<sp/>len);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Shift<sp/>the<sp/>input<sp/>buffer<sp/>back<sp/>and<sp/>read<sp/>more<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_shift_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*fe,<sp/>int16<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in,<sp/>int32<sp/>len);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Process<sp/>a<sp/>frame<sp/>of<sp/>data<sp/>into<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_write_frame(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*fe,<sp/>mfcc_t<sp/>*feat,<sp/>int32<sp/>store_pcm);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialization<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">int32<sp/>fe_build_melfilters(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*MEL_FB);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">int32<sp/>fe_compute_melcosine(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*MEL_FB);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_create_hamming(window_t<sp/>*in,<sp/>int32<sp/>in_len);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_create_twiddle(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*fe);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">fixed32<sp/>fe_log_add(fixed32<sp/>x,<sp/>fixed32<sp/>y);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">fixed32<sp/>fe_log_sub(fixed32<sp/>x,<sp/>fixed32<sp/>y);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Miscellaneous<sp/>processing<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_spec2cep(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*<sp/>fe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>powspec_t<sp/>*<sp/>mflogspec,<sp/>mfcc_t<sp/>*<sp/>mfcep);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_dct2(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*fe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>powspec_t<sp/>*mflogspec,<sp/>mfcc_t<sp/>*mfcep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>htk);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_dct3(<ref refid="structfe__s" kindref="compound">fe_t</ref><sp/>*fe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mfcc_t<sp/>*mfcep,<sp/>powspec_t<sp/>*mflogspec);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__FE_INTERNAL_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fe_internal.h"/>
  </compounddef>
</doxygen>
