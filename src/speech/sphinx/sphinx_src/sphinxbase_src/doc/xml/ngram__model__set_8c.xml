<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ngram__model__set_8c" kind="file">
    <compoundname>ngram_model_set.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes refid="strfuncs_8h" local="yes">sphinxbase/strfuncs.h</includes>
    <includes refid="filename_8h" local="yes">sphinxbase/filename.h</includes>
    <includes refid="ngram__model__set_8h" local="yes">ngram_model_set.h</includes>
    <incdepgraph>
      <node id="1899">
        <label>stdarg.h</label>
      </node>
      <node id="1905">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1907">
        <label>sphinxbase/strfuncs.h</label>
        <link refid="strfuncs_8h"/>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1897">
        <label>stdlib.h</label>
      </node>
      <node id="1904">
        <label>setjmp.h</label>
      </node>
      <node id="1901">
        <label>errno.h</label>
      </node>
      <node id="1915">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
      </node>
      <node id="1916">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1898">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1900" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
      </node>
      <node id="1911">
        <label>sphinxbase/ngram_model.h</label>
        <link refid="ngram__model_8h"/>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
      </node>
      <node id="1903">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1908">
        <label>sphinxbase/filename.h</label>
        <link refid="filename_8h"/>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1906">
        <label>sphinx_config.h</label>
      </node>
      <node id="1896">
        <label>string.h</label>
      </node>
      <node id="1913">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1895">
        <label>src/libsphinxbase/lm/ngram_model_set.c</label>
        <link refid="ngram_model_set.c"/>
        <childnode refid="1896" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
      </node>
      <node id="1909">
        <label>ngram_model_set.h</label>
        <link refid="ngram__model__set_8h"/>
        <childnode refid="1910" relation="include">
        </childnode>
      </node>
      <node id="1902">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1912">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1900" relation="include">
        </childnode>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1914">
        <label>sphinxbase/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="1902" relation="include">
        </childnode>
      </node>
      <node id="1910">
        <label>ngram_model_internal.h</label>
        <link refid="ngram__model__internal_8h_source"/>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
      </node>
      <node id="1900">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ngram__model__set_8c_1a28527923d8b6de50fa0053b4eb09edbf" prot="public" static="yes" mutable="no">
        <type><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref></type>
        <definition>static ngram_funcs_t ngram_model_set_funcs</definition>
        <argsstring></argsstring>
        <name>ngram_model_set_funcs</name>
        <initializer>= {
    ngram_model_set_free,       
    ngram_model_set_apply_weights,      
    ngram_model_set_score,      
    ngram_model_set_raw_score,  
    ngram_model_set_add_ug,     
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="52" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ngram__model__set_8c_1a9c8fb6c6f20e242d2b6a87dd4ab59f85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int my_compare</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>my_compare</name>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="55" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a080be77ab1763e59f8a1760e30dea4b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void build_widmap</definition>
        <argsstring>(ngram_model_t *base, logmath_t *lmath, int32 n)</argsstring>
        <name>build_widmap</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="67" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="67" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1aa4cc619035ac8091759c07d6a3b2fb7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_init</definition>
        <argsstring>(cmd_ln_t *config, ngram_model_t **models, char **names, const float32 *weights, int32 n_models)</argsstring>
        <name>ngram_model_set_init</name>
        <param>
          <type><ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> **</type>
          <declname>models</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>names</declname>
        </param>
        <param>
          <type>const float32 *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_models</declname>
        </param>
        <briefdescription>
<para>Create a set of language models sharing a common space of word IDs. </para>        </briefdescription>
        <detaileddescription>
<para>This function creates a meta-language model which groups together a set of language models, synchronizing word IDs between them. To use this language model, you can either select a submodel to use exclusively using <ref refid="ngram__model_8h_1a5e7a3fd20d32783ce07b760781f658f8" kindref="member">ngram_model_set_select()</ref>, or interpolate between scores from all models. To do the latter, you can either pass a non-NULL value of the <computeroutput>weights</computeroutput> parameter, or re-activate interpolation later on by calling <ref refid="ngram__model_8h_1a8a4c853e77c6b48face3a781480e77d6" kindref="member">ngram_model_set_interp()</ref>.</para><para>In order to make this efficient, there are some restrictions on the models that can be grouped together. The most important (and currently the only) one is that they <bold>must</bold> all share the same log-math parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Any configuration parameters to be shared between models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>models</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of pointers to previously created language models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of strings to use as unique identifiers for LMs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of weights to use in interpolating LMs, or NULL for no interpolation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_models</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the arrays passed to this function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="124" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="124" bodyend="182"/>
        <references refid="structngram__model__set__s_1a3b88f17aa148ceac4f32dd4cbf5f4f81" compoundref="ngram__model__set_8h" startline="51">ngram_model_set_s::base</references>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" compoundref="ckd__alloc_8h" startline="264">ckd_salloc</references>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
        <references refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" compoundref="ngram__model__internal_8h" startline="67">ngram_model_s::lmath</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="logmath_8h_1a6114206ec0321d7015c42fc7b81cb83e" compoundref="logmath_8c" startline="368" endline="371">logmath_get_base</references>
        <references refid="logmath_8h_1aed009aca9736612bebdda57444ec63a6" compoundref="logmath_8c" startline="386" endline="389">logmath_get_shift</references>
        <references refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" compoundref="logmath_8c" startline="447" endline="453">logmath_log</references>
        <references refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" compoundref="ngram__model__set_8h" startline="57">ngram_model_set_s::lweights</references>
        <references refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" compoundref="ngram__model__set_8h" startline="59">ngram_model_set_s::maphist</references>
        <references refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" compoundref="ngram__model__internal_8h" startline="62">ngram_model_s::n</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
        <references refid="ngram__model_8h_1a046e6ff8cd8787e412400534a9649a81" compoundref="ngram__model_8c" startline="249" endline="253">ngram_model_retain</references>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_read</definition>
        <argsstring>(cmd_ln_t *config, const char *lmctlfile, logmath_t *lmath)</argsstring>
        <name>ngram_model_set_read</name>
        <param>
          <type><ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lmctlfile</declname>
        </param>
        <param>
          <type><ref refid="logmath_8h_1ae613aa7db1dd40ff56a80a7dadb22cc8" kindref="member">logmath_t</ref> *</type>
          <declname>lmath</declname>
        </param>
        <briefdescription>
<para>Read a set of language models from a control file. </para>        </briefdescription>
        <detaileddescription>
<para>This file creates a language model set from a &quot;control file&quot; of the type used in Sphinx-II and Sphinx-III. File format (optional stuff is indicated by enclosing in []):</para><para><preformatted>
  [{ LMClassFileName LMClassFilename ... }]
  TrigramLMFileName LMName [{ LMClassName LMClassName ... }]
  TrigramLMFileName LMName [{ LMClassName LMClassName ... }]
  ...
(There should be whitespace around the { and } delimiters.)
</preformatted></para><para>This is an extension of the older format that had only TrigramLMFilenName and LMName pairs. The new format allows a set of LMClass files to be read in and referred to by the trigram LMs.</para><para>No &quot;comments&quot; allowed in this file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lmctlfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the language model control file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lmath</parametername>
</parameternamelist>
<parameterdescription>
<para>Log-math parameters to use for probability calculations. Ownership of this object is assumed by the newly created ngram_model_t, and you should not attempt to free it manually. If you wish to reuse it elsewhere, you must retain it with <ref refid="logmath_8h_1a1c1b2ba3b137a39e9e835a8f3e27d381" kindref="member">logmath_retain()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>newly created language model set. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="185" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="185" bodyend="365"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" compoundref="ckd__alloc_8h" startline="264">ckd_salloc</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
        <references refid="err_8h_1add0768056bee50c260c5623b4edd4038" compoundref="err_8h" startline="99">E_ERROR_SYSTEM</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <references refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" compoundref="glist_8c" startline="74" endline="82">glist_add_ptr</references>
        <references refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" compoundref="glist_8c" startline="145" endline="152">glist_count</references>
        <references refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" compoundref="glist_8c" startline="133" endline="142">glist_free</references>
        <references refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" compoundref="glist_8c" startline="169" endline="183">glist_reverse</references>
        <references refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" compoundref="glist_8h" startline="109">gnode_ptr</references>
        <references refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" compoundref="hash__table_8c" startline="695" endline="713">hash_table_free</references>
        <references refid="hash__table_8h_1a9a1e5ed410eb96f514b00fdce770fbd7" compoundref="hash__table_8c" startline="309" endline="326">hash_table_lookup</references>
        <references refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" compoundref="hash__table_8c" startline="158" endline="169">hash_table_new</references>
        <references refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" compoundref="hash__table_8c" startline="623" endline="650">hash_table_tolist</references>
        <references refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a441701bf8ae0a2b79716feb31b5f257a" compoundref="ngram__model_8h" startline="78">NGRAM_AUTO</references>
        <references refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</references>
        <references refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" compoundref="ngram__model_8c" startline="263" endline="305">ngram_model_free</references>
        <references refid="ngram__model_8h_1ab0c840f2bdfc38cea08bb70054f76624" compoundref="ngram__model_8c" startline="124" endline="175">ngram_model_read</references>
        <references refid="ngram__model__set_8c_1aa4cc619035ac8091759c07d6a3b2fb7c" compoundref="ngram__model__set_8c" startline="124" endline="182">ngram_model_set_init</references>
        <references refid="filename_8h_1ac59add2db73b33e81b354de114268e7a" compoundref="filename_8c" startline="105" endline="120">path_is_absolute</references>
        <references refid="strfuncs_8h_1a317522f23d291311e366de34ef86b777" compoundref="strfuncs_8c" startline="70" endline="94">string_join</references>
        <references refid="structhash__entry__s_1a0d57012963084fed93886681108aa636" compoundref="hash__table_8h" startline="155">hash_entry_s::val</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1afa38d4e0f6cd64cc2875000fcef487f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_set_count</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_set_count</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Returns the number of language models in a set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="368" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="368" bodyend="372"/>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a5a1593344017a1210569beb63e4089d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afffd75c5bde8dd84107449468be48547" kindref="member">ngram_model_set_iter_t</ref> *</type>
        <definition>ngram_model_set_iter_t* ngram_model_set_iter</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_set_iter</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <briefdescription>
<para>Begin iterating over language models in a set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator pointing to the first language model, or NULL if no models remain. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="375" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="375" bodyend="385"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a13893e41e56962f6f237aa1305337b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afffd75c5bde8dd84107449468be48547" kindref="member">ngram_model_set_iter_t</ref> *</type>
        <definition>ngram_model_set_iter_t* ngram_model_set_iter_next</definition>
        <argsstring>(ngram_model_set_iter_t *itor)</argsstring>
        <name>ngram_model_set_iter_next</name>
        <param>
          <type><ref refid="ngram__model_8h_1afffd75c5bde8dd84107449468be48547" kindref="member">ngram_model_set_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Move to the next language model in a set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator pointing to the next language model, or NULL if no models remain. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="388" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="388" bodyend="395"/>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="ngram__model__set_8c_1a532787b5b709d0c5f0ad57e3df0d1d73" compoundref="ngram__model__set_8c" startline="398" endline="401">ngram_model_set_iter_free</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a532787b5b709d0c5f0ad57e3df0d1d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_model_set_iter_free</definition>
        <argsstring>(ngram_model_set_iter_t *itor)</argsstring>
        <name>ngram_model_set_iter_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1afffd75c5bde8dd84107449468be48547" kindref="member">ngram_model_set_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
<para>Finish iteration over a langauge model set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="398" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="398" bodyend="401"/>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <referencedby refid="ngram__model__set_8c_1a13893e41e56962f6f237aa1305337b7a" compoundref="ngram__model__set_8c" startline="388" endline="395">ngram_model_set_iter_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1abec0455e59945b910d86c2f825ab0894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_iter_model</definition>
        <argsstring>(ngram_model_set_iter_t *itor, char const **lmname)</argsstring>
        <name>ngram_model_set_iter_model</name>
        <param>
          <type><ref refid="ngram__model_8h_1afffd75c5bde8dd84107449468be48547" kindref="member">ngram_model_set_iter_t</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>char const **</type>
          <declname>lmname</declname>
        </param>
        <briefdescription>
<para>Get language model and associated name from an iterator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itor</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lmname</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: string name associated with this language model. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Language model pointed to by this iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="404" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="404" bodyend="410"/>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a3e06e5d47a9c35186644cc1310924630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_lookup</definition>
        <argsstring>(ngram_model_t *base, const char *name)</argsstring>
        <name>ngram_model_set_lookup</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Look up a language model by name from a set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>language model corresponding to <computeroutput>name</computeroutput>, or NULL if no language model by that name exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="413" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="413" bodyend="432"/>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a2cbeda856dd655c80f8dc6ba91f5d20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_select</definition>
        <argsstring>(ngram_model_t *base, const char *name)</argsstring>
        <name>ngram_model_set_select</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Select a single language model from a set for scoring. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the newly selected language model, or NULL if no language model by that name exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="435" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="435" bodyend="448"/>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a3a4f2bb40d10e9420e6291e2706b6865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ngram_model_set_current</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_set_current</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get the current language model name, if any. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="451" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="451" bodyend="459"/>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1aa6239b58f333177839a15de79bae6146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_set_current_wid</definition>
        <argsstring>(ngram_model_t *base, int32 set_wid)</argsstring>
        <name>ngram_model_set_current_wid</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>int32</type>
          <declname>set_wid</declname>
        </param>
        <briefdescription>
<para>Query the word-ID mapping for the current language model. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the local word ID in the current language model, or NGRAM_INVALID_WID if <computeroutput>set_wid</computeroutput> is invalid or interpolation is enabled. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="462" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="462" bodyend="470"/>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" compoundref="ngram__model_8h" startline="83">NGRAM_INVALID_WID</references>
        <references refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" compoundref="ngram__model__set_8h" startline="58">ngram_model_set_s::widmap</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1af30197146b9b2d6c143914240dee3c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 ngram_model_set_known_wid</definition>
        <argsstring>(ngram_model_t *base, int32 set_wid)</argsstring>
        <name>ngram_model_set_known_wid</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>int32</type>
          <declname>set_wid</declname>
        </param>
        <briefdescription>
<para>Test whether a word ID corresponds to a known word in the current state of the language model set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>If there is a current language model, returns non-zero if <computeroutput>set_wid</computeroutput> corresponds to a known word in that language model. Otherwise, returns non-zero if <computeroutput>set_wid</computeroutput> corresponds to a known word in any language model. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="473" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="473" bodyend="490"/>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" compoundref="ngram__model_8c" startline="550" endline="560">ngram_unknown_wid</references>
        <references refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" compoundref="ngram__model__set_8h" startline="58">ngram_model_set_s::widmap</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a3a926714c60e2b8308d4c88d11d17d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_interp</definition>
        <argsstring>(ngram_model_t *base, const char **names, const float32 *weights)</argsstring>
        <name>ngram_model_set_interp</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>const char **</type>
          <declname>names</declname>
        </param>
        <param>
          <type>const float32 *</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>Set interpolation weights for a set and enables interpolation. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>weights</computeroutput> is NULL, any previously initialized set of weights will be used. If no weights were specified to <ref refid="ngram__model_8h_1a02310e01a48928e1d430aef0ea3c9a99" kindref="member">ngram_model_set_init()</ref>, then a uniform distribution will be used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="493" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="493" bodyend="521"/>
        <references refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" compoundref="ngram__model__set_8h" startline="54">ngram_model_set_s::cur</references>
        <references refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" compoundref="err_8h" startline="104">E_ERROR</references>
        <references refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" compoundref="ngram__model__internal_8h" startline="67">ngram_model_s::lmath</references>
        <references refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" compoundref="logmath_8c" startline="447" endline="453">logmath_log</references>
        <references refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" compoundref="ngram__model__set_8h" startline="57">ngram_model_set_s::lweights</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a53071575bca9465361740c809666349d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_add</definition>
        <argsstring>(ngram_model_t *base, ngram_model_t *model, const char *name, float32 weight, int reuse_widmap)</argsstring>
        <name>ngram_model_set_add</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reuse_widmap</declname>
        </param>
        <briefdescription>
<para>Add a language model to a set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set</parametername>
</parameternamelist>
<parameterdescription>
<para>The language model set to add to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The language model to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to associate with this model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Interpolation weight for this model, relative to the uniform distribution. 1.0 is a safe value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reuse_widmap</parametername>
</parameternamelist>
<parameterdescription>
<para>Reuse the existing word-ID mapping in <computeroutput>set</computeroutput>. Any new words present in <computeroutput>model</computeroutput> will not be added to the word-ID mapping in this case. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="524" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="524" bodyend="580"/>
        <references refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" compoundref="ckd__alloc_8h" startline="270">ckd_calloc_2d</references>
        <references refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" compoundref="ckd__alloc_8c" startline="255" endline="261">ckd_free_2d</references>
        <references refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" compoundref="ckd__alloc_8h" startline="258">ckd_realloc</references>
        <references refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" compoundref="ckd__alloc_8h" startline="264">ckd_salloc</references>
        <references refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" compoundref="ngram__model__internal_8h" startline="67">ngram_model_s::lmath</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" compoundref="logmath_8c" startline="447" endline="453">logmath_log</references>
        <references refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" compoundref="ngram__model__set_8h" startline="57">ngram_model_set_s::lweights</references>
        <references refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" compoundref="ngram__model__set_8h" startline="59">ngram_model_set_s::maphist</references>
        <references refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" compoundref="ngram__model__internal_8h" startline="62">ngram_model_s::n</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" compoundref="ngram__model__set_8h" startline="58">ngram_model_set_s::widmap</references>
        <references refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" compoundref="ngram__model__internal_8h" startline="71">ngram_model_s::word_str</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a1fadaf8cdc6799869b74a39a8652a7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
        <definition>ngram_model_t* ngram_model_set_remove</definition>
        <argsstring>(ngram_model_t *base, const char *name, int reuse_widmap)</argsstring>
        <name>ngram_model_set_remove</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>set</declname>
          <defname>base</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reuse_widmap</declname>
        </param>
        <briefdescription>
<para>Remove a language model from a set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set</parametername>
</parameternamelist>
<parameterdescription>
<para>The language model set to remove from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name associated with the model to remove. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reuse_widmap</parametername>
</parameternamelist>
<parameterdescription>
<para>Reuse the existing word-ID mapping in <computeroutput>set</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="583" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="583" bodyend="636"/>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" compoundref="ngram__model__internal_8h" startline="67">ngram_model_s::lmath</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
        <references refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" compoundref="ngram__model__internal_8h" startline="70">ngram_model_s::log_zero</references>
        <references refid="logmath_8h_1ae8b0a168e29e448c0d6de66dc46e099e" compoundref="logmath_8c" startline="456" endline="459">logmath_exp</references>
        <references refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" compoundref="logmath_8c" startline="447" endline="453">logmath_log</references>
        <references refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" compoundref="ngram__model__set_8h" startline="57">ngram_model_set_s::lweights</references>
        <references refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" compoundref="ngram__model__internal_8h" startline="62">ngram_model_s::n</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" compoundref="ngram__model__set_8h" startline="56">ngram_model_set_s::names</references>
        <references refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" compoundref="ngram__model__set_8h" startline="58">ngram_model_set_s::widmap</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1af3ac3bbec3eed0b9638c4e64c8b75949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngram_model_set_map_words</definition>
        <argsstring>(ngram_model_t *base, const char **words, int32 n_words)</argsstring>
        <name>ngram_model_set_map_words</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>words</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_words</declname>
        </param>
        <briefdescription>
<para>Set the word-to-ID mapping for this model set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="639" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="639" bodyend="668"/>
        <references refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" compoundref="ngram__model__internal_8h" startline="64">ngram_model_s::writable</references>
        <references refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" compoundref="ngram__model__internal_8h" startline="59">ngram_model_s::n_words</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" compoundref="ngram__model__internal_8h" startline="71">ngram_model_s::word_str</references>
        <references refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" compoundref="ckd__alloc_8c" startline="255" endline="261">ckd_free_2d</references>
        <references refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" compoundref="ngram__model__set_8h" startline="58">ngram_model_set_s::widmap</references>
        <references refid="structngram__model__s_1a3e41109b30668bdfc077614c1ef49960" compoundref="ngram__model__internal_8h" startline="58">ngram_model_s::n_1g_alloc</references>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" compoundref="ckd__alloc_8h" startline="270">ckd_calloc_2d</references>
        <references refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" compoundref="ngram__model__set_8h" startline="53">ngram_model_set_s::n_models</references>
        <references refid="hash__table_8h_1acab374d21e25009d397642e3465308c7" compoundref="hash__table_8c" startline="490" endline="504">hash_table_empty</references>
        <references refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" compoundref="ngram__model__internal_8h" startline="72">ngram_model_s::wid</references>
        <references refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" compoundref="ckd__alloc_8h" startline="264">ckd_salloc</references>
        <references refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" compoundref="hash__table_8h" startline="228">hash_table_enter_int32</references>
        <references refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" compoundref="ngram__model_8c" startline="585" endline="593">ngram_wid</references>
        <references refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" compoundref="ngram__model__set_8h" startline="55">ngram_model_set_s::lms</references>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a9697423e99bf43bbcfe87222b0e8649c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ngram_model_set_apply_weights</definition>
        <argsstring>(ngram_model_t *base, float32 lw, float32 wip)</argsstring>
        <name>ngram_model_set_apply_weights</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>lw</declname>
        </param>
        <param>
          <type>float32</type>
          <declname>wip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="671" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="671" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a7f52160fac3716a5b3690e2cf51690df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 ngram_model_set_score</definition>
        <argsstring>(ngram_model_t *base, int32 wid, int32 *history, int32 n_hist, int32 *n_used)</argsstring>
        <name>ngram_model_set_score</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>history</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_hist</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_used</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="684" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="684" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1a271f7b570103fe499357734dd09dd8f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 ngram_model_set_raw_score</definition>
        <argsstring>(ngram_model_t *base, int32 wid, int32 *history, int32 n_hist, int32 *n_used)</argsstring>
        <name>ngram_model_set_raw_score</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>history</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>n_hist</declname>
        </param>
        <param>
          <type>int32 *</type>
          <declname>n_used</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="734" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="734" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1ab256610c0db88e7be9b89fdef6d1a93b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>static int32 ngram_model_set_add_ug</definition>
        <argsstring>(ngram_model_t *base, int32 wid, int32 lweight)</argsstring>
        <name>ngram_model_set_add_ug</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>wid</declname>
        </param>
        <param>
          <type>int32</type>
          <declname>lweight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="784" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="784" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="ngram__model__set_8c_1ae16906388d31c12ed01ee7562dcdb914" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ngram_model_set_free</definition>
        <argsstring>(ngram_model_t *base)</argsstring>
        <name>ngram_model_set_free</name>
        <param>
          <type><ref refid="ngram__model_8h_1afaaf0c00e20056d97efcd97e4cae4ea7" kindref="member">ngram_model_t</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" line="844" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c" bodystart="844" bodyend="858"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Set of language models. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>David Huggins-Daines <ulink url="mailto:dhuggins@cs.cmu.edu">dhuggins@cs.cmu.edu</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strfuncs_8h" kindref="compound">sphinxbase/strfuncs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filename_8h" kindref="compound">sphinxbase/filename.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ngram__model__set_8h" kindref="compound">ngram_model_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>ngram_model_set_funcs;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">my_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>&lt;UNK&gt;<sp/>floats<sp/>to<sp/>the<sp/>beginning.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)<sp/>a,<sp/></highlight><highlight class="stringliteral">&quot;&lt;UNK&gt;&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)<sp/>b,<sp/></highlight><highlight class="stringliteral">&quot;&lt;UNK&gt;&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)<sp/>a,<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)<sp/>b);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">build_widmap(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*<sp/>lmath,<sp/>int32<sp/>n)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>**models<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*vocab;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>hlist;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>merged<sp/>vocabulary<sp/>and<sp/>a<sp/>set<sp/>of<sp/>word-ID<sp/>mappings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>vocab<sp/>=<sp/><ref refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" kindref="member">hash_table_new</ref>(models[0]-&gt;n_words,<sp/>FALSE);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>set<sp/>of<sp/>merged<sp/>words.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>models[i]-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>collisions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref>(vocab,<sp/>models[i]-&gt;word_str[j],</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>array<sp/>of<sp/>words,<sp/>then<sp/>sort<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1a9a1e5ed410eb96f514b00fdce770fbd7" kindref="member">hash_table_lookup</ref>(vocab,<sp/></highlight><highlight class="stringliteral">&quot;&lt;UNK&gt;&quot;</highlight><highlight class="normal">,<sp/>NULL)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref>(vocab,<sp/></highlight><highlight class="stringliteral">&quot;&lt;UNK&gt;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>know<sp/>the<sp/>number<sp/>of<sp/>unigrams,<sp/>initialize<sp/>the<sp/>base<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_init(base,<sp/>&amp;ngram_model_set_funcs,<sp/>lmath,<sp/>n,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_table_inuse(vocab));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref><sp/>=<sp/>FALSE;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>will<sp/>reuse<sp/>the<sp/>pointers<sp/>from<sp/>the<sp/>submodels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>hlist<sp/>=<sp/><ref refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" kindref="member">hash_table_tolist</ref>(vocab,<sp/>NULL);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>hlist;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__entry__s" kindref="compound">hash_entry_t</ref><sp/>*ent<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i++]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ent-&gt;key;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(hlist);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my_compare);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>create<sp/>the<sp/>word<sp/>ID<sp/>mappings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" kindref="member">ckd_free_2d</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref><sp/>=<sp/>(int32<sp/>**)<sp/><ref refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" kindref="member">ckd_calloc_2d</ref>(base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>create<sp/>the<sp/>master<sp/>wid<sp/>mapping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],<sp/>i);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;%s:<sp/>%d<sp/>=&gt;<sp/>&quot;,<sp/>base-&gt;word_str[i],<sp/>i);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[i][j]<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(models[j],<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;%d<sp/>&quot;,<sp/>set-&gt;widmap[i][j]);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" kindref="member">hash_table_free</ref>(vocab);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="124" refid="ngram__model__set_8c_1aa4cc619035ac8091759c07d6a3b2fb7c" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1aa4cc619035ac8091759c07d6a3b2fb7c" kindref="member">ngram_model_set_init</ref>(<ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref><sp/>*<sp/>config,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>**<sp/>models,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32<sp/>*<sp/>weights,<sp/>int32<sp/>n_models)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*model;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*base;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*lmath;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_models<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WTF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>consistency<sp/>checking<sp/>on<sp/>the<sp/>models.<sp/><sp/>They<sp/>must<sp/>all<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>same<sp/>logbase<sp/>and<sp/>shift.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>lmath<sp/>=<sp/>models[0]-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>n_models;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logmath_8h_1a6114206ec0321d7015c42fc7b81cb83e" kindref="member">logmath_get_base</ref>(models[i]-&gt;lmath)<sp/>!=<sp/><ref refid="logmath_8h_1a6114206ec0321d7015c42fc7b81cb83e" kindref="member">logmath_get_base</ref>(lmath)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="logmath_8h_1aed009aca9736612bebdda57444ec63a6" kindref="member">logmath_get_shift</ref>(models[i]-&gt;lmath)<sp/>!=</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logmath_8h_1aed009aca9736612bebdda57444ec63a6" kindref="member">logmath_get_shift</ref>(lmath))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Log-math<sp/>parameters<sp/>don&apos;t<sp/>match,<sp/>will<sp/>not<sp/>create<sp/>LM<sp/>set\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>combined<sp/>model,<sp/>initialize<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>base<sp/>=<sp/>&amp;model-&gt;<ref refid="structngram__model__set__s_1a3b88f17aa148ceac4f32dd4cbf5f4f81" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>=<sp/>n_models;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_models,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_models,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>weights<sp/>to<sp/>a<sp/>uniform<sp/>distribution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_models,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>uniform<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(lmath,<sp/>1.0<sp/>/<sp/>n_models);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_models;<sp/>++i)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>=<sp/>uniform;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>to<sp/>interpolate<sp/>if<sp/>weights<sp/>were<sp/>given.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_models;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i]<sp/>=<sp/><ref refid="ngram__model_8h_1a046e6ff8cd8787e412400534a9649a81" kindref="member">ngram_model_retain</ref>(models[i]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[i]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(names[i]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(lmath,<sp/>weights[i]);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>N<sp/>is<sp/>the<sp/>maximum<sp/>of<sp/>all<sp/>merged<sp/>models.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(models[i]-&gt;n<sp/>&gt;<sp/>n)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>models[i]-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>history<sp/>mapping<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n<sp/>-<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*model-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>build<sp/>the<sp/>word-ID<sp/>mapping<sp/>and<sp/>merged<sp/>vocabulary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>build_widmap(base,<sp/>lmath,<sp/>n);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="185" refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" kindref="member">ngram_model_set_read</ref>(<ref refid="structcmd__ln__t" kindref="compound">cmd_ln_t</ref><sp/>*<sp/>config,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lmctlfile,<sp/><ref refid="structlogmath__s" kindref="compound">logmath_t</ref><sp/>*<sp/>lmath)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*ctlfp;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>lms<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>lmnames<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>__BIGSTACKVARIABLE__<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[1024];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*set<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__table__s" kindref="compound">hash_table_t</ref><sp/>*classes;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basedir,<sp/>*c;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>all<sp/>the<sp/>class<sp/>definition<sp/>files<sp/>to<sp/>accumulate<sp/>a<sp/>mapping<sp/>of</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>classnames<sp/>to<sp/>definitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>classes<sp/>=<sp/><ref refid="hash__table_8h_1a56d93e8c03e066b77377ac6eab50cfae" kindref="member">hash_table_new</ref>(0,<sp/>FALSE);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ctlfp<sp/>=<sp/>fopen(lmctlfile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1add0768056bee50c260c5623b4edd4038" kindref="member">E_ERROR_SYSTEM</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>lmctlfile);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>find<sp/>the<sp/>base<sp/>directory<sp/>to<sp/>append<sp/>to<sp/>relative<sp/>paths<sp/>in</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>lmctl<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>strrchr(lmctlfile,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>||<sp/>(c<sp/>=<sp/>strrchr(lmctlfile,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Include<sp/>the<sp/>trailing<sp/>slash.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basedir<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(c<sp/>-<sp/>lmctlfile<sp/>+<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(basedir,<sp/>lmctlfile,<sp/>c<sp/>-<sp/>lmctlfile<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basedir<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>LM<sp/>control<sp/>file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>lmctlfile);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedir)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Will<sp/>prepend<sp/>&apos;%s&apos;<sp/>to<sp/>unqualified<sp/>paths\n&quot;</highlight><highlight class="normal">,<sp/>basedir);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Load<sp/>LMclass<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*deffile;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedir<sp/>&amp;&amp;<sp/>!<ref refid="filename_8h_1ac59add2db73b33e81b354de114268e7a" kindref="member">path_is_absolute</ref>(str))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deffile<sp/>=<sp/><ref refid="strfuncs_8h_1a317522f23d291311e366de34ef86b777" kindref="member">string_join</ref>(basedir,<sp/>str,<sp/>NULL);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deffile<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(str);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>classdef<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>deffile);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_classdef_file(classes,<sp/>deffile)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(deffile);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(deffile);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>lmctlfile);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>might<sp/>be<sp/>the<sp/>first<sp/>LM<sp/>name.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>in<sp/>one<sp/>LM<sp/>at<sp/>a<sp/>time<sp/>and<sp/>add<sp/>classes<sp/>to<sp/>them<sp/>as<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lmfile;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*lm;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedir<sp/>&amp;&amp;<sp/>str[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>str[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmfile<sp/>=<sp/><ref refid="strfuncs_8h_1a317522f23d291311e366de34ef86b777" kindref="member">string_join</ref>(basedir,<sp/>str,<sp/>NULL);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmfile<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(str);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>lm<sp/>from<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>lmfile);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm<sp/>=<sp/><ref refid="ngram__model_8h_1ab0c840f2bdfc38cea08bb70054f76624" kindref="member">ngram_model_read</ref>(config,<sp/>lmfile,<sp/><ref refid="ngram__model_8h_1a406c0d64c15a9d1749d07c8ab6e0ae74a441701bf8ae0a2b79716feb31b5f257a" kindref="member">NGRAM_AUTO</ref>,<sp/>lmath);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lmfile);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;LMname<sp/>missing<sp/>after<sp/>LMFileName<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>lmfile);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lmfile);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lmfile);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lms<sp/>=<sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>(lms,<sp/>lm);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmnames<sp/>=<sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>(lmnames,<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(str));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LM<sp/>uses<sp/>classes;<sp/>read<sp/>their<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>==<sp/>1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structclassdef__s" kindref="compound">classdef_t</ref><sp/>*classdef;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hash__table_8h_1a9a1e5ed410eb96f514b00fdce770fbd7" kindref="member">hash_table_lookup</ref>(classes,<sp/>str,<sp/>&amp;val)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>class<sp/>%s<sp/>in<sp/>control<sp/>file\n&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" kindref="member">ngram_model_add_class</ref>(lm,<sp/>str,<sp/>1.0,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;words,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;weights,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef-&gt;n_words)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>class<sp/>%s<sp/>containing<sp/>%d<sp/>words\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/>classdef-&gt;n_words);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(str,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>lmctlfile);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_out;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(ctlfp,<sp/></highlight><highlight class="stringliteral">&quot;%1023s&quot;</highlight><highlight class="normal">,<sp/>str)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(ctlfp);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>construct<sp/>arrays<sp/>out<sp/>of<sp/>lms<sp/>and<sp/>lmnames,<sp/>and<sp/>build<sp/>an</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>ngram_model_set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>lms<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>(lms);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>lmnames<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>(lmnames);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>n_models;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>**lm_array;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**name_array;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*lm_node,<sp/>*name_node;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_models<sp/>=<sp/><ref refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" kindref="member">glist_count</ref>(lms);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_array<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_models,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lm_array));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_array<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_models,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*name_array));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_node<sp/>=<sp/>lms;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_node<sp/>=<sp/>lmnames;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_models;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_array[i]<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(lm_node);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_array[i]<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(name_node);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_node<sp/>=<sp/>gnode_next(lm_node);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_node<sp/>=<sp/>gnode_next(name_node);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>=<sp/><ref refid="ngram__model__set_8c_1aa4cc619035ac8091759c07d6a3b2fb7c" kindref="member">ngram_model_set_init</ref>(config,<sp/>lm_array,<sp/>name_array,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>n_models);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_models;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(lm_array[i]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(lm_array);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(name_array);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>error_out:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>hlist;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>lms;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(<ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(lms);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>lmnames;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(<ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(lmnames);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hlist<sp/>=<sp/><ref refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" kindref="member">hash_table_tolist</ref>(classes,<sp/>NULL);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>hlist;<sp/>gn;<sp/>gn<sp/>=<sp/>gnode_next(gn))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__entry__s" kindref="compound">hash_entry_t</ref><sp/>*he<sp/>=<sp/><ref refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" kindref="member">gnode_ptr</ref>(gn);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>he-&gt;key);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classdef_free(he-&gt;<ref refid="structhash__entry__s_1a0d57012963084fed93886681108aa636" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(hlist);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1a0a588c22946f8cc16328973035ed19e3" kindref="member">hash_table_free</ref>(classes);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(basedir);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="368" refid="ngram__model__set_8c_1afa38d4e0f6cd64cc2875000fcef487f0" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1afa38d4e0f6cd64cc2875000fcef487f0" kindref="member">ngram_model_set_count</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="structngram__model__set__iter__s" kindref="compound">ngram_model_set_iter_t</ref><sp/>*</highlight></codeline>
<codeline lineno="375" refid="ngram__model__set_8c_1a5a1593344017a1210569beb63e4089d3" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a5a1593344017a1210569beb63e4089d3" kindref="member">ngram_model_set_iter</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__iter__s" kindref="compound">ngram_model_set_iter_t</ref><sp/>*itor;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set<sp/>==<sp/>NULL<sp/>||<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>itor<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;set<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="structngram__model__set__iter__s" kindref="compound">ngram_model_set_iter_t</ref><sp/>*</highlight></codeline>
<codeline lineno="388" refid="ngram__model__set_8c_1a13893e41e56962f6f237aa1305337b7a" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a13893e41e56962f6f237aa1305337b7a" kindref="member">ngram_model_set_iter_next</ref>(<ref refid="structngram__model__set__iter__s" kindref="compound">ngram_model_set_iter_t</ref><sp/>*<sp/>itor)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++itor-&gt;cur<sp/>==<sp/>itor-&gt;set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model__set_8c_1a532787b5b709d0c5f0ad57e3df0d1d73" kindref="member">ngram_model_set_iter_free</ref>(itor);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="ngram__model__set_8c_1a532787b5b709d0c5f0ad57e3df0d1d73" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a532787b5b709d0c5f0ad57e3df0d1d73" kindref="member">ngram_model_set_iter_free</ref>(<ref refid="structngram__model__set__iter__s" kindref="compound">ngram_model_set_iter_t</ref><sp/>*<sp/>itor)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(itor);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="404" refid="ngram__model__set_8c_1abec0455e59945b910d86c2f825ab0894" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1abec0455e59945b910d86c2f825ab0894" kindref="member">ngram_model_set_iter_model</ref>(<ref refid="structngram__model__set__iter__s" kindref="compound">ngram_model_set_iter_t</ref><sp/>*<sp/>itor,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**lmname)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmname)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lmname<sp/>=<sp/>itor-&gt;set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[itor-&gt;cur];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[itor-&gt;cur];</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="413" refid="ngram__model__set_8c_1a3e06e5d47a9c35186644cc1310924630" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a3e06e5d47a9c35186644cc1310924630" kindref="member">ngram_model_set_lookup</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>probably<sp/>won&apos;t<sp/>be<sp/>very<sp/>many<sp/>submodels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[i],<sp/>name))</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i];</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="435" refid="ngram__model__set_8c_1a2cbeda856dd655c80f8dc6ba91f5d20b" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a2cbeda856dd655c80f8dc6ba91f5d20b" kindref="member">ngram_model_set_select</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>probably<sp/>won&apos;t<sp/>be<sp/>very<sp/>many<sp/>submodels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[i],<sp/>name))</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="451" refid="ngram__model__set_8c_1a3a4f2bb40d10e9420e6291e2706b6865" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a3a4f2bb40d10e9420e6291e2706b6865" kindref="member">ngram_model_set_current</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="462" refid="ngram__model__set_8c_1aa6239b58f333177839a15de79bae6146" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1aa6239b58f333177839a15de79bae6146" kindref="member">ngram_model_set_current_wid</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>int32<sp/>set_wid)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1<sp/>||<sp/>set_wid<sp/>&gt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[set_wid][set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="473" refid="ngram__model__set_8c_1af30197146b9b2d6c143914240dee3c04" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1af30197146b9b2d6c143914240dee3c04" kindref="member">ngram_model_set_known_wid</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>int32<sp/>set_wid)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_wid<sp/>&gt;=<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[set_wid][i]<sp/>!=<sp/><ref refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" kindref="member">ngram_unknown_wid</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i]))</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[set_wid][set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>]</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/><ref refid="ngram__model_8h_1a1469e9e1c8516a77c9ac1e248a61ef4e" kindref="member">ngram_unknown_wid</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>]));</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="493" refid="ngram__model__set_8c_1a3a926714c60e2b8308d4c88d11d17d7e" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a3a926714c60e2b8308d4c88d11d17d7e" kindref="member">ngram_model_set_interp</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32<sp/>*<sp/>weights)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>a<sp/>set<sp/>of<sp/>weights<sp/>here,<sp/>then<sp/>set<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(names<sp/>&amp;&amp;<sp/>weights)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>hope<sp/>there<sp/>aren&apos;t<sp/>many<sp/>models.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(names[i],<sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[j]))</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>LM<sp/>name<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>names[i]);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[j]<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>weights[i]);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>,<sp/>weights,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>just<sp/>enable<sp/>existing<sp/>weights.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="524" refid="ngram__model__set_8c_1a53071575bca9465361740c809666349d" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a53071575bca9465361740c809666349d" kindref="member">ngram_model_set_add</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>model,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>float32<sp/>weight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reuse_widmap)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>fprob;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>scale,<sp/>i;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>array<sp/>of<sp/>lms.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>++set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>1]<sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref><sp/>=</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>1]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(name);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>the<sp/>history<sp/>mapping<sp/>table<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>=<sp/>model-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(model-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>the<sp/>interpolation<sp/>weights.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>fprob<sp/>=<sp/>weight<sp/>*<sp/>1.0f<sp/>/<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>1]<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>fprob);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>normalize<sp/>everything<sp/>else<sp/>to<sp/>fit<sp/>it<sp/>in.<sp/><sp/>This<sp/>is</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>accomplished<sp/>by<sp/>simply<sp/>scaling<sp/>all<sp/>the<sp/>other<sp/>probabilities</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>(1-fprob).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>1.0<sp/>-<sp/>fprob);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>+=<sp/>scale;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reuse<sp/>the<sp/>old<sp/>word<sp/>ID<sp/>mapping<sp/>if<sp/>requested.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(reuse_widmap)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>**new_widmap;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tack<sp/>another<sp/>column<sp/>onto<sp/>the<sp/>widmap<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_widmap<sp/>=<sp/>(int32<sp/>**)<sp/><ref refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" kindref="member">ckd_calloc_2d</ref>(base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**new_widmap));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>all<sp/>the<sp/>existing<sp/>mappings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(new_widmap[i],<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[i],</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**new_widmap));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>new<sp/>mapping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_widmap[i][set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>1]<sp/>=</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(model,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" kindref="member">ckd_free_2d</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref><sp/>=<sp/>new_widmap;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_widmap(base,<sp/>base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*</highlight></codeline>
<codeline lineno="583" refid="ngram__model__set_8c_1a1fadaf8cdc6799869b74a39a8652a7e0" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1a1fadaf8cdc6799869b74a39a8652a7e0" kindref="member">ngram_model_set_remove</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reuse_widmap)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*submodel;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>lmidx,<sp/>scale,<sp/>n,<sp/>i;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>float32<sp/>fprob;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lmidx<sp/>=<sp/>0;<sp/>lmidx<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++lmidx)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(name,<sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[lmidx]))</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmidx<sp/>==<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>submodel<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[lmidx];</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renormalize<sp/>the<sp/>interpolation<sp/>weights<sp/>by<sp/>scaling<sp/>them<sp/>by</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>1/(1-fprob)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>fprob<sp/>=<sp/>(float32)<sp/><ref refid="logmath_8h_1ae8b0a168e29e448c0d6de66dc46e099e" kindref="member">logmath_exp</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[lmidx]);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="logmath_8h_1aebb4711268322fa7aec31e5798fe7e90" kindref="member">logmath_log</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>1.0<sp/>-<sp/>fprob);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>it<sp/>from<sp/>the<sp/>array<sp/>of<sp/>lms,<sp/>renormalize<sp/>remaining<sp/>weights,</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>recalcluate<sp/>n.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>--set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[lmidx]);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[lmidx]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>lmidx)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[i]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>-=<sp/>scale;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i]-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>&gt;<sp/>n)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i]-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There&apos;s<sp/>no<sp/>need<sp/>to<sp/>shrink<sp/>these<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>]<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>to<sp/>shrink<sp/>maphist<sp/>either.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reuse<sp/>the<sp/>existing<sp/>word<sp/>ID<sp/>mapping<sp/>if<sp/>requested.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reuse_widmap)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>go<sp/>through<sp/>and<sp/>shrink<sp/>each<sp/>row.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[i]<sp/>+<sp/>lmidx,<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[i]<sp/>+<sp/>lmidx<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>-<sp/>lmidx)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_widmap(base,<sp/>base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>submodel;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="ngram__model__set_8c_1af3ac3bbec3eed0b9638c4e64c8b75949" refkind="member"><highlight class="normal"><ref refid="ngram__model__set_8c_1af3ac3bbec3eed0b9638c4e64c8b75949" kindref="member">ngram_model_set_map_words</ref>(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**words,<sp/>int32<sp/>n_words)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recreate<sp/>the<sp/>word<sp/>mapping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" kindref="member">ckd_free_2d</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a78a3253febced2cae4732044da466ee6" kindref="member">writable</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref><sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a3e41109b30668bdfc077614c1ef49960" kindref="member">n_1g_alloc</ref><sp/>=<sp/>n_words;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref><sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(n_words,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref><sp/>=</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32<sp/>**)<sp/><ref refid="ckd__alloc_8h_1a949e7b50fcd9697b1563fa57f50e9c4f" kindref="member">ckd_calloc_2d</ref>(n_words,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>));</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__table_8h_1acab374d21e25009d397642e3465308c7" kindref="member">hash_table_empty</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_words;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]<sp/>=<sp/><ref refid="ckd__alloc_8h_1ad313f92478859f9e4ea99d0f6e78c393" kindref="member">ckd_salloc</ref>(words[i]);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="hash__table_8h_1a393c56322e54607a48e6bc61169d92bf" kindref="member">hash_table_enter_int32</ref>(base-&gt;<ref refid="structngram__model__s_1a75567419a8002ef6e916c81f5d9ee9ed" kindref="member">wid</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i],<sp/>i);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[i][j]<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[j],<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[i]);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">ngram_model_set_apply_weights(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>float32<sp/>lw,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>wip)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Apply<sp/>weights<sp/>to<sp/>each<sp/>sub-model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a50f00497f61c104cea77180129d93126" kindref="member">ngram_model_apply_weights</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i],<sp/>lw,<sp/>wip);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="684"><highlight class="normal">ngram_model_set_score(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>int32<sp/>wid,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*<sp/>history,<sp/>int32<sp/>n_hist,<sp/>int32<sp/>*<sp/>n_used)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>mapwid;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Truncate<sp/>the<sp/>history.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_hist<sp/>&gt;<sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interpolate<sp/>if<sp/>there<sp/>is<sp/>no<sp/>current.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>word<sp/>and<sp/>history<sp/>IDs<sp/>for<sp/>each<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[wid][i];</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_hist;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[j]<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[history[j]][i];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="logmath_8h_1a5eb70928578b0115c9c7ac2765396a06" kindref="member">logmath_add</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>score,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>+</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i],</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid,<sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hist,<sp/>n_used));</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>word<sp/>and<sp/>history<sp/>IDs<sp/>(FIXME:<sp/>do<sp/>this<sp/>in<sp/>a<sp/>function?)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[wid][set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_hist;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[j]<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[history[j]][set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="ngram__model_8h_1a6ac5799e78ea4ad82a11e2439016471e" kindref="member">ngram_ng_score</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>],</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid,<sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>,<sp/>n_hist,<sp/>n_used);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="734"><highlight class="normal">ngram_model_set_raw_score(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>int32<sp/>wid,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>*<sp/>history,<sp/>int32<sp/>n_hist,<sp/>int32<sp/>*<sp/>n_used)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>mapwid;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>score;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Truncate<sp/>the<sp/>history.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_hist<sp/>&gt;<sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_hist<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a3c87bc1b678662a2c8930b3b8c33a80f" kindref="member">n</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interpolate<sp/>if<sp/>there<sp/>is<sp/>no<sp/>current.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>word<sp/>and<sp/>history<sp/>IDs<sp/>for<sp/>each<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[wid][i];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_hist;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[j]<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[history[j]][i];</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="logmath_8h_1a5eb70928578b0115c9c7ac2765396a06" kindref="member">logmath_add</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>score,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>+</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" kindref="member">ngram_ng_prob</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i],</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid,<sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>,<sp/>n_hist,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_used));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>j;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>word<sp/>and<sp/>history<sp/>IDs<sp/>(FIXME:<sp/>do<sp/>this<sp/>in<sp/>a<sp/>function?)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[wid][set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_hist;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(history[j]<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>[j]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[history[j]][set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" kindref="member">ngram_ng_prob</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref>],</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapwid,<sp/>set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>,<sp/>n_hist,<sp/>n_used);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32</highlight></codeline>
<codeline lineno="784"><highlight class="normal">ngram_model_set_add_ug(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base,<sp/>int32<sp/>wid,<sp/>int32<sp/>lweight)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>*newwid;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>prob;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>the<sp/>word<sp/>has<sp/>already<sp/>been<sp/>added<sp/>to<sp/>the<sp/>master</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>and<sp/>we<sp/>have<sp/>a<sp/>new<sp/>word<sp/>ID<sp/>for<sp/>it.<sp/><sp/>Add<sp/>it<sp/>to<sp/>active</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>submodels<sp/>and<sp/>track<sp/>the<sp/>word<sp/>IDs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>newwid<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*newwid));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>base-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>wprob,<sp/>n_hist;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>add<sp/>to<sp/>active<sp/>models.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1<sp/>||<sp/>set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Did<sp/>this<sp/>word<sp/>already<sp/>exist?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newwid[i]<sp/>=<sp/><ref refid="ngram__model_8h_1ad03d4355d4ea659815dc25bce8d83880" kindref="member">ngram_wid</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i],<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wid]);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newwid[i]<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>submodel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newwid[i]<sp/>=</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a38e034d58ee0d6a4c0dd6f852cb71c3c" kindref="member">ngram_model_add_word</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i],<sp/>base-&gt;<ref refid="structngram__model__s_1ae625e779e340845f03fb3da164e93039" kindref="member">word_str</ref>[wid],</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float32)<sp/><ref refid="logmath_8h_1ae8b0a168e29e448c0d6de66dc46e099e" kindref="member">logmath_exp</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lweight));</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newwid[i]<sp/>==<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(newwid);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structngram__model__s_1a65425a599c4bcc4dda809d81149b8fc0" kindref="member">log_zero</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>get<sp/>the<sp/>unigram<sp/>probability<sp/>for<sp/>the<sp/>new<sp/>word<sp/>and<sp/>either</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>interpolate<sp/>it<sp/>or<sp/>use<sp/>it<sp/>(if<sp/>this<sp/>is<sp/>the<sp/>current<sp/>model).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wprob<sp/>=</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1a218d8d140b93d3d8008f8933f9e04ec6" kindref="member">ngram_ng_prob</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i],<sp/>newwid[i],<sp/>NULL,<sp/>0,<sp/>&amp;n_hist);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>wprob;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set-&gt;<ref refid="structngram__model__set__s_1a031e7d7dcf1667f69e1cb980f45623cb" kindref="member">cur</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logmath_8h_1a5eb70928578b0115c9c7ac2765396a06" kindref="member">logmath_add</ref>(base-&gt;<ref refid="structngram__model__s_1a2ca373109c651ac998b33153eb38fd95" kindref="member">lmath</ref>,<sp/>prob,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>[i]<sp/>+<sp/>wprob);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newwid[i]<sp/>=<sp/><ref refid="ngram__model_8h_1a3d4b3dddd0ff67e13d30c9bf053d01ab" kindref="member">NGRAM_INVALID_WID</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Okay<sp/>we<sp/>have<sp/>the<sp/>word<sp/>IDs<sp/>for<sp/>this<sp/>in<sp/>all<sp/>the<sp/>submodels.<sp/><sp/>Now</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>some<sp/>complicated<sp/>memory<sp/>mangling<sp/>to<sp/>add<sp/>this<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>widmap.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref><sp/>=</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>,<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[0]<sp/>=</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1afd496738b3e114bd494c5a0955f1bfb3" kindref="member">ckd_realloc</ref>(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[0],</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref><sp/>*<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>));</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base-&gt;<ref refid="structngram__model__s_1a74f85927ef0d5513a1e6c02d13864be3" kindref="member">n_words</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[i]<sp/>=<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[0]<sp/>+<sp/>i<sp/>*<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>[wid],<sp/>newwid,<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*newwid));</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(newwid);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">ngram_model_set_free(<ref refid="structngram__model__s" kindref="compound">ngram_model_t</ref><sp/>*<sp/>base)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*set<sp/>=<sp/>(<ref refid="structngram__model__set__s" kindref="compound">ngram_model_set_t</ref><sp/>*)<sp/>base;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ngram__model_8h_1aec73d28e7285e539a0b44a7ac0cbe489" kindref="member">ngram_model_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>[i]);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1a862d4c4feb5a903101f4a0fdc5ba8a62" kindref="member">lms</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set-&gt;<ref refid="structngram__model__set__s_1a6c28858d5631a9c9dbc7b2c9583f5c5a" kindref="member">n_models</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>[i]);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1aff5e13c45decde4c5bf30d8aa2b1c7d9" kindref="member">names</ref>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1a11068bb0029c788c506bec4507dd6d23" kindref="member">lweights</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>(set-&gt;<ref refid="structngram__model__set__s_1af34ca232338c2d8c7dc8d13869ac09fd" kindref="member">maphist</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a8246c071ac12e98b7e1df9fe6da15aef" kindref="member">ckd_free_2d</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>set-&gt;<ref refid="structngram__model__set__s_1addebde44e2b7aa22dd82032c316fc962" kindref="member">widmap</ref>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structngram__funcs__s" kindref="compound">ngram_funcs_t</ref><sp/>ngram_model_set_funcs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_set_free,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_set_apply_weights,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply_weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_set_score,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_set_raw_score,<sp/><sp/></highlight><highlight class="comment">/*<sp/>raw_score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_model_set_add_ug,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add_ug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/ngram_model_set.c"/>
  </compounddef>
</doxygen>
