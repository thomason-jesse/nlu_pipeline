<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="glist_8c" kind="file">
    <compoundname>glist.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="glist_8h" local="yes">sphinxbase/glist.h</includes>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <incdepgraph>
      <node id="2181">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="2182" relation="include">
        </childnode>
      </node>
      <node id="2178">
        <label>assert.h</label>
      </node>
      <node id="2176">
        <label>stdlib.h</label>
      </node>
      <node id="2184">
        <label>setjmp.h</label>
      </node>
      <node id="2179">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
      </node>
      <node id="2183">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
      </node>
      <node id="2182">
        <label>sphinx_config.h</label>
      </node>
      <node id="2174">
        <label>src/libsphinxbase/util/glist.c</label>
        <link refid="glist.c"/>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
      </node>
      <node id="2177">
        <label>string.h</label>
      </node>
      <node id="2180">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="2175">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="glist_8c_1a55d0e429238169cf2fdf6649bd5d5b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>glist_t glist_add_ptr</definition>
        <argsstring>(glist_t g, void *ptr)</argsstring>
        <name>glist_add_ptr</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
          <briefdescription><para>a pointer </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node, with the given user-defined data, at the HEAD of the given generic list. </para>        </briefdescription>
        <detaileddescription>
<para>Return the new list thus formed. g may be NULL to indicate an initially empty list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="74" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="74" bodyend="82"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
        <referencedby refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" compoundref="hash__table_8c" startline="623" endline="650">hash_table_tolist</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a2b98220b963f68fa22055747f37d9c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>glist_t glist_add_int32</definition>
        <argsstring>(glist_t g, int32 val)</argsstring>
        <name>glist_add_int32</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>val</declname>
          <briefdescription><para>an integer value </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing an integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="86" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="86" bodyend="94"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a17b7c517c4e0ecea433c314ffb5aa627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>glist_t glist_add_uint32</definition>
        <argsstring>(glist_t g, uint32 val)</argsstring>
        <name>glist_add_uint32</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>uint32</type>
          <declname>val</declname>
          <briefdescription><para>an unsigned integer value </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing an unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="98" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="98" bodyend="106"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1afe808c8657a09fa6c826f0ddb0868f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>glist_t glist_add_float32</definition>
        <argsstring>(glist_t g, float32 val)</argsstring>
        <name>glist_add_float32</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>float32</type>
          <declname>val</declname>
          <briefdescription><para>a float32 vlaue </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing a single-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="110" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="110" bodyend="118"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a7eb2ab12fd7a3eb7ead8375ade80443d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>glist_t glist_add_float64</definition>
        <argsstring>(glist_t g, float64 val)</argsstring>
        <name>glist_add_float64</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>float64</type>
          <declname>val</declname>
          <briefdescription><para>a float64 vlaue </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing a double-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="122" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="122" bodyend="130"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1ab00a55fb4ae3553f393cf5a8ea5cae17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glist_free</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_free</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Free the given generic list; user-defined data contained within is not automatically freed. </para>        </briefdescription>
        <detaileddescription>
<para>The caller must have done that already. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="133" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="133" bodyend="142"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
        <referencedby refid="jsgf_8c_1a0a5185af0b0f1c19d85ae553c5ecc51b" compoundref="jsgf_8c" startline="108" endline="139">jsgf_grammar_free</referencedby>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
        <referencedby refid="ngram__model_8h_1a9b2a86c23543158754373c5456fe890d" compoundref="ngram__model_8c" startline="1027" endline="1063">ngram_model_read_classdef</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
        <referencedby refid="cmd__ln_8h_1a26707fc85e87d8999e368a680e7873cd" compoundref="cmd__ln_8c" startline="1042" endline="1075">cmd_ln_free_r</referencedby>
        <referencedby refid="listelem__alloc_8h_1a94c02e93a0abaa2bd79636cbac6cced2" compoundref="listelem__alloc_8c" startline="121" endline="131">listelem_alloc_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1ab0f19e86a259c16fbacdd5fc61b00c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 glist_count</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_count</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>input link list </para></briefdescription>
        </param>
        <briefdescription>
<para>Count the number of element in a given link list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of elements in the given glist_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="145" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="145" bodyend="152"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a37d84102c49c37fa5f281b87cdc4fa59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* glist_tail</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_tail</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Return the last node in the given list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="156" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="156" bodyend="165"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1ab7cc32af8b820bfee7c32d09d0ce4272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>glist_t glist_reverse</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_reverse</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>input link list </para></briefdescription>
        </param>
        <briefdescription>
<para>Reverse the order of the given glist. </para>        </briefdescription>
        <detaileddescription>
<para>(glist_add() adds to the head; one might ultimately want the reverse of that.) NOTE: The list is reversed &quot;in place&quot;; i.e., no new memory is allocated. <simplesect kind="return"><para>: The head of the new list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="169" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="169" bodyend="183"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a162c18e187a13ca56a14e88ad4ae5a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* glist_insert_ptr</definition>
        <argsstring>(gnode_t *gn, void *ptr)</argsstring>
        <name>glist_insert_ptr</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which ptr will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
          <briefdescription><para>pointer inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node, with the given user-defined data, after the given generic node gn. </para>        </briefdescription>
        <detaileddescription>
<para>gn cannot be NULL. Return ptr to the newly created gnode_t. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="187" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="187" bodyend="197"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1ae47a7b1555a719f81441d5b31332da8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* glist_insert_int32</definition>
        <argsstring>(gnode_t *gn, int32 val)</argsstring>
        <name>glist_insert_int32</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>val</declname>
          <briefdescription><para>int32 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing an integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="201" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="201" bodyend="211"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a3a07dce9f688699dbfd0db206d3b77a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* glist_insert_uint32</definition>
        <argsstring>(gnode_t *gn, uint32 val)</argsstring>
        <name>glist_insert_uint32</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>uint32</type>
          <declname>val</declname>
          <briefdescription><para>uint32 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing an unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="215" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="215" bodyend="226"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a619f3833b99f70d8dbb20e14db33b021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* glist_insert_float32</definition>
        <argsstring>(gnode_t *gn, float32 val)</argsstring>
        <name>glist_insert_float32</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>float32</type>
          <declname>val</declname>
          <briefdescription><para>float32 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing a single-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="230" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="230" bodyend="240"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1ad83a5361347815d9fb68d55210216163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* glist_insert_float64</definition>
        <argsstring>(gnode_t *gn, float64 val)</argsstring>
        <name>glist_insert_float64</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>float64</type>
          <declname>val</declname>
          <briefdescription><para>float64 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing a double-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="244" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="244" bodyend="254"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8c_1a43a5d764f07c32b6d74910f5b7c113c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>gnode_t* gnode_free</definition>
        <argsstring>(gnode_t *gn, gnode_t *pred)</argsstring>
        <name>gnode_free</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
        </param>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
<para>Free the given node, gn, of a glist, pred being its predecessor in the list. </para>        </briefdescription>
        <detaileddescription>
<para>Return ptr to the next node in the list after the freed node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" line="257" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="257" bodyend="271"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>glist.h<sp/>--<sp/>Module<sp/>for<sp/>maintaining<sp/>a<sp/>generic,<sp/>linear<sp/>linked-list<sp/>structure.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>glist.c,v<sp/>$</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.8<sp/><sp/>2005/06/22<sp/>03:02:51<sp/><sp/>arthchan2003</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>1,<sp/>Fixed<sp/>doxygen<sp/>documentation,<sp/>2,<sp/>add<sp/><sp/>keyword.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2005/03/30<sp/>01:22:48<sp/><sp/>archan</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Fixed<sp/>mistakes<sp/>in<sp/>last<sp/>updates.<sp/>Add</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>09-Mar-1999<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Added<sp/>glist_chkdup_*().</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>13-Feb-1999<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Created<sp/>from<sp/>earlier<sp/>version.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glist_8h" kindref="compound">sphinxbase/glist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref></highlight></codeline>
<codeline lineno="74" refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>gn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;data.ptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="structgnode__s" kindref="compound">glist_t</ref>)<sp/>gn);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>new<sp/>head<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref></highlight></codeline>
<codeline lineno="86" refid="glist_8h_1a28adfcc24a784aaed1a0b3c4c4de4c42" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a28adfcc24a784aaed1a0b3c4c4de4c42" kindref="member">glist_add_int32</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/>int32<sp/>val)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>gn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;data.i<sp/>=<sp/>(long)val;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="structgnode__s" kindref="compound">glist_t</ref>)<sp/>gn);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>new<sp/>head<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref></highlight></codeline>
<codeline lineno="98" refid="glist_8h_1aeb741d435322f34df5e5d3a99abf00de" refkind="member"><highlight class="normal"><ref refid="glist_8h_1aeb741d435322f34df5e5d3a99abf00de" kindref="member">glist_add_uint32</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/>uint32<sp/>val)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>gn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;data.ui<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)val;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="structgnode__s" kindref="compound">glist_t</ref>)<sp/>gn);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>new<sp/>head<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref></highlight></codeline>
<codeline lineno="110" refid="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" kindref="member">glist_add_float32</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/>float32<sp/>val)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>gn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;data.fl<sp/>=<sp/>(double)val;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="structgnode__s" kindref="compound">glist_t</ref>)<sp/>gn);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>new<sp/>head<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref></highlight></codeline>
<codeline lineno="122" refid="glist_8h_1a5bdd11639ef5846abb7ceb6caf059f4e" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a5bdd11639ef5846abb7ceb6caf059f4e" kindref="member">glist_add_float64</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/>float64<sp/>val)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>gn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;data.fl<sp/>=<sp/>(double)val;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="structgnode__s" kindref="compound">glist_t</ref>)<sp/>gn);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>new<sp/>head<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(g)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn<sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>gn);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">int32</highlight></codeline>
<codeline lineno="145" refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" refkind="member"><highlight class="normal"><ref refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" kindref="member">glist_count</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>n;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>g,<sp/>n<sp/>=<sp/>0;<sp/>gn;<sp/>gn<sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>,<sp/>n++);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="156" refid="glist_8h_1a6921d6b8b11cb9e05fadeaa091e89234" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a6921d6b8b11cb9e05fadeaa091e89234" kindref="member">glist_tail</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>g;<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;<sp/>gn<sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gn;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref></highlight></codeline>
<codeline lineno="169" refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/>*nextgn;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*rev;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>rev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gn<sp/>=<sp/>g;<sp/>gn;<sp/>gn<sp/>=<sp/>nextgn)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextgn<sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>rev;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rev<sp/>=<sp/>gn;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rev;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="187" refid="glist_8h_1a2d641da6b349c1c939e3b954382513ba" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a2d641da6b349c1c939e3b954382513ba" kindref="member">glist_insert_ptr</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>gn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*newgn;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;data.ptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>newgn;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newgn;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="201" refid="glist_8h_1a327b6478ee05ac17e3c3b3189579413e" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a327b6478ee05ac17e3c3b3189579413e" kindref="member">glist_insert_int32</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>gn,<sp/>int32<sp/>val)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*newgn;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;data.i<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>newgn;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newgn;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="215" refid="glist_8h_1ab7e58ee641d3648f047eef70a20a4647" refkind="member"><highlight class="normal"><ref refid="glist_8h_1ab7e58ee641d3648f047eef70a20a4647" kindref="member">glist_insert_uint32</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>gn,<sp/>uint32<sp/>val)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*newgn;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;data.ui<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>newgn;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newgn;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="230" refid="glist_8h_1aff08aed022168872fc9d30cd299df2ce" refkind="member"><highlight class="normal"><ref refid="glist_8h_1aff08aed022168872fc9d30cd299df2ce" kindref="member">glist_insert_float32</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>gn,<sp/>float32<sp/>val)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*newgn;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;data.fl<sp/>=<sp/>(double)val;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>newgn;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newgn;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="244" refid="glist_8h_1a97a682e38319dd8f67765732467110f9" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a97a682e38319dd8f67765732467110f9" kindref="member">glist_insert_float64</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>gn,<sp/>float64<sp/>val)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*newgn;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn<sp/>=<sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*)<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structgnode__s" kindref="compound">gnode_t</ref>));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;data.fl<sp/>=<sp/>(double)val;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>newgn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>newgn;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newgn;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*</highlight></codeline>
<codeline lineno="257" refid="glist_8h_1a68b51aea4de463b284a19668a713d502" refkind="member"><highlight class="normal"><ref refid="glist_8h_1a68b51aea4de463b284a19668a713d502" kindref="member">gnode_free</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>gn,<sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<sp/>pred)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*next;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/>gn-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pred)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(pred-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>==<sp/>gn);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred-&gt;<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref><sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>gn);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c"/>
  </compounddef>
</doxygen>
