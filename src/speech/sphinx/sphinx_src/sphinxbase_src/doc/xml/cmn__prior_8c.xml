<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="cmn__prior_8c" kind="file">
    <compoundname>cmn_prior.c</compoundname>
    <includes refid="ckd__alloc_8h" local="yes">sphinxbase/ckd_alloc.h</includes>
    <includes refid="err_8h" local="yes">sphinxbase/err.h</includes>
    <includes refid="cmn_8h" local="yes">sphinxbase/cmn.h</includes>
    <incdepgraph>
      <node id="1539">
        <label>stdarg.h</label>
      </node>
      <node id="1536">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
      </node>
      <node id="1533">
        <label>stdlib.h</label>
      </node>
      <node id="1534">
        <label>setjmp.h</label>
      </node>
      <node id="1541">
        <label>errno.h</label>
      </node>
      <node id="1538">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
      </node>
      <node id="1532">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
      </node>
      <node id="1546">
        <label>limits.h</label>
      </node>
      <node id="1537">
        <label>sphinx_config.h</label>
      </node>
      <node id="1545">
        <label>sphinxbase/fixpoint.h</label>
        <link refid="fixpoint_8h_source"/>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
      </node>
      <node id="1535">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1544">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
      </node>
      <node id="1542">
        <label>sphinxbase/cmn.h</label>
        <link refid="cmn_8h"/>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
      </node>
      <node id="1543">
        <label>sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1531">
        <label>src/libsphinxbase/feat/cmn_prior.c</label>
        <link refid="cmn_prior.c"/>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
      </node>
      <node id="1540">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cmn__prior_8c_1a19baa0389ae067fb275810cc2a33d61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cmn_prior_set</definition>
        <argsstring>(cmn_t *cmn, mfcc_t const *vec)</argsstring>
        <name>cmn_prior_set</name>
        <param>
          <type><ref refid="structcmn__t" kindref="compound">cmn_t</ref> *</type>
          <declname>cmn</declname>
        </param>
        <param>
          <type>mfcc_t const *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Set the prior mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" line="62" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" bodystart="62" bodyend="81"/>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <references refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" compoundref="cmn_8h" startline="133">cmn_t::veclen</references>
        <references refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" compoundref="err_8h" startline="119">E_INFOCONT</references>
        <references refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" compoundref="cmn_8h" startline="129">cmn_t::cmn_mean</references>
        <references refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" compoundref="cmn_8h" startline="131">cmn_t::sum</references>
        <references refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" compoundref="cmn_8h" startline="132">cmn_t::nframe</references>
      </memberdef>
      <memberdef kind="function" id="cmn__prior_8c_1aec5f5939a744841c5cc0d5ea7ee2f634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cmn_prior_get</definition>
        <argsstring>(cmn_t *cmn, mfcc_t *vec)</argsstring>
        <name>cmn_prior_get</name>
        <param>
          <type><ref refid="structcmn__t" kindref="compound">cmn_t</ref> *</type>
          <declname>cmn</declname>
        </param>
        <param>
          <type>mfcc_t *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Get the prior mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" line="84" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" bodystart="84" bodyend="91"/>
        <references refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" compoundref="cmn_8h" startline="133">cmn_t::veclen</references>
        <references refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" compoundref="cmn_8h" startline="129">cmn_t::cmn_mean</references>
      </memberdef>
      <memberdef kind="function" id="cmn__prior_8c_1a77ab4ac07bf5f950eb82c2464943f22a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cmn_prior_shiftwin</definition>
        <argsstring>(cmn_t *cmn)</argsstring>
        <name>cmn_prior_shiftwin</name>
        <param>
          <type><ref refid="structcmn__t" kindref="compound">cmn_t</ref> *</type>
          <declname>cmn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" line="94" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" bodystart="94" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="cmn__prior_8c_1a720b5c82d1c7aefa177af87d1c295eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cmn_prior_update</definition>
        <argsstring>(cmn_t *cmn)</argsstring>
        <name>cmn_prior_update</name>
        <param>
          <type><ref refid="structcmn__t" kindref="compound">cmn_t</ref> *</type>
          <declname>cmn</declname>
        </param>
        <briefdescription>
<para>Update prior mean based on observed data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" line="123" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" bodystart="123" bodyend="153"/>
        <references refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" compoundref="cmn_8h" startline="132">cmn_t::nframe</references>
        <references refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" compoundref="err_8h" startline="114">E_INFO</references>
        <references refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" compoundref="cmn_8h" startline="133">cmn_t::veclen</references>
        <references refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" compoundref="err_8h" startline="119">E_INFOCONT</references>
        <references refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" compoundref="cmn_8h" startline="129">cmn_t::cmn_mean</references>
        <references refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" compoundref="cmn_8h" startline="131">cmn_t::sum</references>
        <referencedby refid="feat_8h_1a1e6aaefc9b1e7a0cf7fee8733e196359" compoundref="feat_8c" startline="1424" endline="1432">feat_update_stats</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmn__prior_8c_1a96232e33106c31bf572369c3dc2edfde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cmn_prior</definition>
        <argsstring>(cmn_t *cmn, mfcc_t **incep, int32 varnorm, int32 nfr)</argsstring>
        <name>cmn_prior</name>
        <param>
          <type><ref refid="structcmn__t" kindref="compound">cmn_t</ref> *</type>
          <declname>cmn</declname>
          <briefdescription><para>In/Out: cmn normalization, which contains the cmn_mean and cmn_var) </para></briefdescription>
        </param>
        <param>
          <type>mfcc_t **</type>
          <declname>incep</declname>
          <briefdescription><para>In/Out: mfc[f] = mfc vector in frame f </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>varnorm</declname>
          <briefdescription><para>This flag should always be 0 for live </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>nfr</declname>
          <briefdescription><para>Number of incoming frames </para></briefdescription>
        </param>
        <briefdescription>
<para>CMN for one block of data, using prior mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" line="156" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c" bodystart="156" bodyend="184"/>
        <references refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" compoundref="err_8h" startline="81">E_FATAL</references>
        <references refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" compoundref="cmn_8h" startline="133">cmn_t::veclen</references>
        <references refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" compoundref="cmn_8h" startline="131">cmn_t::sum</references>
        <references refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" compoundref="cmn_8h" startline="129">cmn_t::cmn_mean</references>
        <references refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" compoundref="cmn_8h" startline="132">cmn_t::nframe</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2000<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>30-Dec-2000<sp/><sp/>Rita<sp/>Singh<sp/>(rsingh@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Created</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4244)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cmn_8h" kindref="compound">sphinxbase/cmn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="cmn_8h_1a0f6f70d51143d6a33130650b8d4758ab" refkind="member"><highlight class="normal"><ref refid="cmn_8h_1a0f6f70d51143d6a33130650b8d4758ab" kindref="member">cmn_prior_set</ref>(<ref refid="structcmn__t" kindref="compound">cmn_t</ref><sp/>*<ref refid="cmn_8h_1accf10de8ef4d98b4bf591529cf16565e" kindref="member">cmn</ref>,<sp/>mfcc_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vec)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;cmn_prior_set:<sp/>from<sp/>&lt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]<sp/>=<sp/>vec[i];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i]<sp/>=<sp/>vec[i]<sp/>*<sp/>CMN_WIN;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>=<sp/>CMN_WIN;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;cmn_prior_set:<sp/>to<sp/><sp/><sp/>&lt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="cmn_8h_1a4f624f5b805288f66fa05b79b1e4f383" refkind="member"><highlight class="normal"><ref refid="cmn_8h_1a4f624f5b805288f66fa05b79b1e4f383" kindref="member">cmn_prior_get</ref>(<ref refid="structcmn__t" kindref="compound">cmn_t</ref><sp/>*<ref refid="cmn_8h_1accf10de8ef4d98b4bf591529cf16565e" kindref="member">cmn</ref>,<sp/>mfcc_t<sp/>*<sp/>vec)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec[i]<sp/>=<sp/>cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">cmn_prior_shiftwin(<ref refid="structcmn__t" kindref="compound">cmn_t</ref><sp/>*<ref refid="cmn_8h_1accf10de8ef4d98b4bf591529cf16565e" kindref="member">cmn</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>sf;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;cmn_prior_update:<sp/>from<sp/>&lt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>FLOAT2MFCC(1.0)<sp/>/<sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]<sp/>=<sp/>cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i]<sp/>/<sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref>;<sp/></highlight><highlight class="comment">/*<sp/>sum[i]<sp/>*<sp/>sf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>the<sp/>accumulation<sp/>decay<sp/>exponentially<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>&gt;=<sp/>CMN_WIN_HWM)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>CMN_WIN<sp/>*<sp/>sf;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i]<sp/>=<sp/>MFCCMUL(cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i],<sp/>sf);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>=<sp/>CMN_WIN;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;cmn_prior_update:<sp/>to<sp/><sp/><sp/>&lt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="cmn_8h_1aae61df2ec71082520669fc63d94bb1ef" refkind="member"><highlight class="normal"><ref refid="cmn_8h_1aae61df2ec71082520669fc63d94bb1ef" kindref="member">cmn_prior_update</ref>(<ref refid="structcmn__t" kindref="compound">cmn_t</ref><sp/>*cmn)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>mfcc_t<sp/>sf;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;cmn_prior_update:<sp/>from<sp/>&lt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>mean<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>FLOAT2MFCC(1.0)<sp/>/<sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]<sp/>=<sp/>cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i]<sp/>/<sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref>;<sp/></highlight><highlight class="comment">/*<sp/>sum[i]<sp/>*<sp/>sf;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>the<sp/>accumulation<sp/>decay<sp/>exponentially<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>&gt;<sp/>CMN_WIN_HWM)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>CMN_WIN<sp/>*<sp/>sf;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i]<sp/>=<sp/>MFCCMUL(cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[i],<sp/>sf);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>=<sp/>CMN_WIN;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a92dbeb77b8e1facc7b15abab6ad19b73" kindref="member">E_INFO</ref>(</highlight><highlight class="stringliteral">&quot;cmn_prior_update:<sp/>to<sp/><sp/><sp/>&lt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>MFCC2FLOAT(cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[i]));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1aaf6601c7c08a803c55f2d55fcd8d5759" kindref="member">E_INFOCONT</ref>(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="cmn_8h_1aa622cf1b6a1b9a9bffd8f60b903bfc42" refkind="member"><highlight class="normal"><ref refid="cmn_8h_1aa622cf1b6a1b9a9bffd8f60b903bfc42" kindref="member">cmn_prior</ref>(<ref refid="structcmn__t" kindref="compound">cmn_t</ref><sp/>*cmn,<sp/>mfcc_t<sp/>**incep,<sp/>int32<sp/>varnorm,<sp/>int32<sp/>nfr)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfr<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(varnorm)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="err_8h_1abaacffc3c0f14e4dd180b1e38c62c5a0" kindref="member">E_FATAL</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Variance<sp/>normalization<sp/>not<sp/>implemented<sp/>in<sp/>live<sp/>mode<sp/>decode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfr;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>zero<sp/>energy<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incep[i][0]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>cmn-&gt;<ref refid="structcmn__t_1a10472e0ad9272f764b512ade43f37d69" kindref="member">veclen</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn-&gt;<ref refid="structcmn__t_1adb70819b1ca822d5a4ee6dc94b3b48e7" kindref="member">sum</ref>[j]<sp/>+=<sp/>incep[i][j];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incep[i][j]<sp/>-=<sp/>cmn-&gt;<ref refid="structcmn__t_1aef0faa6cd93f1d9cf12659c5980aefd2" kindref="member">cmn_mean</ref>[j];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shift<sp/>buffer<sp/>down<sp/>if<sp/>we<sp/>have<sp/>more<sp/>than<sp/>CMN_WIN_HWM<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmn-&gt;<ref refid="structcmn__t_1a456cc3313e93fa3057b658fef64a0c53" kindref="member">nframe</ref><sp/>&gt;<sp/>CMN_WIN_HWM)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmn_prior_shiftwin(cmn);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/feat/cmn_prior.c"/>
  </compounddef>
</doxygen>
