<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="genrand_8c" kind="file">
    <compoundname>genrand.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="genrand_8h" local="yes">sphinxbase/genrand.h</includes>
    <incdepgraph>
      <node id="2171">
        <label>sphinxbase/genrand.h</label>
        <link refid="genrand_8h"/>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2172" relation="include">
        </childnode>
      </node>
      <node id="2169">
        <label>src/libsphinxbase/util/genrand.c</label>
        <link refid="genrand.c"/>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2171" relation="include">
        </childnode>
      </node>
      <node id="2172">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="2170">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="genrand_8c_1a0240ac851181b84ac374872dc5434ee4" prot="public" static="no">
        <name>N</name>
        <initializer>624</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="121" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="genrand_8c_1a52037c938e3c1b126c6277da5ca689d0" prot="public" static="no">
        <name>M</name>
        <initializer>397</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="122" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="genrand_8c_1a376c3581bae3c2367fc9ce694e5a8949" prot="public" static="no">
        <name>MATRIX_A</name>
        <initializer>0x9908b0dfUL   /* constant vector a */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="123" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="genrand_8c_1a39bc458849360f8f371b54c4365d397f" prot="public" static="no">
        <name>UPPER_MASK</name>
        <initializer>0x80000000UL /* most significant w-r bits */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="124" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="genrand_8c_1a4ddd8cab3564b7a86a4b0e52ba08f70e" prot="public" static="no">
        <name>LOWER_MASK</name>
        <initializer>0x7fffffffUL /* least significant r bits */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="125" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="genrand_8c_1aff3cefd0011b487c57a7af7cb3bc499f" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long mt[N]</definition>
        <argsstring>[N]</argsstring>
        <name>mt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="136" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="genrand_8c_1a0893639c022032e006e5b13378f7b4b2" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int mti</definition>
        <argsstring></argsstring>
        <name>mti</name>
        <initializer>= N + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="137" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="genrand_8c_1a57af1d02a3fb56a949fb4c258f0bc066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_genrand</definition>
        <argsstring>(unsigned long s)</argsstring>
        <name>init_genrand</name>
        <param>
          <type>unsigned long</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="127" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="141" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1afc24594118629834b64b1c31530513f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void genrand_seed</definition>
        <argsstring>(unsigned long s)</argsstring>
        <name>genrand_seed</name>
        <param>
          <type>unsigned long</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Initialize the seed of the random generator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="130" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1a2b30ec504bc40c51320d14da9dfab43b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long genrand_int32</definition>
        <argsstring>(void)</argsstring>
        <name>genrand_int32</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="158" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="158" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1a6339fb46fb539f173518a6367f6616bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long genrand_int31</definition>
        <argsstring>(void)</argsstring>
        <name>genrand_int31</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>generates a random number on [0,0x7fffffff]-interval </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="197" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1ac94ab75771800274ed1a2bedeca86f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double genrand_real1</definition>
        <argsstring>(void)</argsstring>
        <name>genrand_real1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="204" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1a4ee58afbdf91669ff8a15fc19e627bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double genrand_real2</definition>
        <argsstring>(void)</argsstring>
        <name>genrand_real2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="212" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1ab1a90aa68ebfcd712cb05ed9061ecf44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double genrand_real3</definition>
        <argsstring>(void)</argsstring>
        <name>genrand_real3</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>generates a random number on (0,1)-real-interval </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="220" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="220" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="genrand_8c_1ac821d41970276e53e85bde08b24536b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double genrand_res53</definition>
        <argsstring>(void)</argsstring>
        <name>genrand_res53</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>generates a random number on [0,1) with 53-bit resolution </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" line="228" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c" bodystart="228" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>A<sp/>C-program<sp/>for<sp/>MT19937,<sp/>with<sp/>initialization<sp/>improved<sp/>2002/1/26.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>Coded<sp/>by<sp/>Takuji<sp/>Nishimura<sp/>and<sp/>Makoto<sp/>Matsumoto.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>Before<sp/>using,<sp/>initialize<sp/>the<sp/>state<sp/>by<sp/>using<sp/>init_genrand(seed)<sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>or<sp/>init_by_array(init_key,<sp/>key_length).</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>1997<sp/>-<sp/>2002,<sp/>Makoto<sp/>Matsumoto<sp/>and<sp/>Takuji<sp/>Nishimura,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>All<sp/>rights<sp/>reserved.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="55"><highlight class="comment">`<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>3.<sp/>The<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permission.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>Any<sp/>feedback<sp/>is<sp/>very<sp/>welcome.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>http://www.math.keio.ac.jp/matumoto/emt.html</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>email:<sp/>matumoto@math.keio.ac.jp</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>randgen.c<sp/><sp/><sp/>:<sp/>a<sp/>portable<sp/>random<sp/>generator<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>genrand.c,v<sp/>$</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2005/06/22<sp/>03:01:50<sp/><sp/>arthchan2003</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>Added<sp/><sp/>keyword</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2005/03/30<sp/>01:22:48<sp/><sp/>archan</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>Fixed<sp/>mistakes<sp/>in<sp/>last<sp/>updates.<sp/>Add</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>18-Nov-04<sp/>ARCHAN<sp/>(archan@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>First<sp/>incorporated<sp/>from<sp/>the<sp/>Mersenne<sp/>Twister<sp/>Random</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>Generator<sp/>package.<sp/>It<sp/>was<sp/>chosen<sp/>because<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>BSD-license<sp/>and<sp/>its<sp/>performance<sp/>is<sp/>quite</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reasonable.<sp/>Of<sp/>course<sp/>if<sp/>you<sp/>look<sp/>at<sp/>the<sp/>inventors&apos;s</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page.<sp/><sp/>This<sp/>random<sp/>generator<sp/>can<sp/>actually<sp/>gives</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19937-bits<sp/>period.<sp/><sp/>This<sp/>is<sp/>already<sp/>far<sp/>from<sp/>we<sp/>need.<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>will<sp/>possibly<sp/>good<sp/>enough<sp/>for<sp/>the<sp/>next<sp/>10<sp/>years.<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>also<sp/>downgrade<sp/>the<sp/>code<sp/>a<sp/>little<sp/>bit<sp/>to<sp/>avoid<sp/>Sphinx&apos;s</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>developers<sp/>misused<sp/>it.<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genrand_8h" kindref="compound">sphinxbase/genrand.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Period<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>N<sp/>624</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>M<sp/>397</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MATRIX_A<sp/>0x9908b0dfUL<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>constant<sp/>vector<sp/>a<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UPPER_MASK<sp/>0x80000000UL<sp/></highlight><highlight class="comment">/*<sp/>most<sp/>significant<sp/>w-r<sp/>bits<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LOWER_MASK<sp/>0x7fffffffUL<sp/></highlight><highlight class="comment">/*<sp/>least<sp/>significant<sp/>r<sp/>bits<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_genrand(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="genrand_8h_1a2881c7b606d9a2b2852e5946d71d32b7" refkind="member"><highlight class="normal"><ref refid="genrand_8h_1a2881c7b606d9a2b2852e5946d71d32b7" kindref="member">genrand_seed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>init_genrand(s);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mt[N];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>array<sp/>for<sp/>the<sp/>state<sp/>vector<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mti<sp/>=<sp/>N<sp/>+<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mti==N+1<sp/>means<sp/>mt[N]<sp/>is<sp/>not<sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initializes<sp/>mt[N]<sp/>with<sp/>a<sp/>seed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">init_genrand(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>mt[0]<sp/>=<sp/>s<sp/>&amp;<sp/>0xffffffffUL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mti<sp/>=<sp/>1;<sp/>mti<sp/>&lt;<sp/>N;<sp/>mti++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt[mti]<sp/>=</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1812433253UL<sp/>*<sp/>(mt[mti<sp/>-<sp/>1]<sp/>^<sp/>(mt[mti<sp/>-<sp/>1]<sp/>&gt;&gt;<sp/>30))<sp/>+<sp/>mti);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>Knuth<sp/>TAOCP<sp/>Vol2.<sp/>3rd<sp/>Ed.<sp/>P.106<sp/>for<sp/>multiplier.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>previous<sp/>versions,<sp/>MSBs<sp/>of<sp/>the<sp/>seed<sp/>affect<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>MSBs<sp/>of<sp/>the<sp/>array<sp/>mt[].<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2002/01/09<sp/>modified<sp/>by<sp/>Makoto<sp/>Matsumoto<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt[mti]<sp/>&amp;=<sp/>0xffffffffUL;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>&gt;32<sp/>bit<sp/>machines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>a<sp/>random<sp/>number<sp/>on<sp/>[0,0xffffffff]-interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">genrand_int32(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mag01[2]<sp/>=<sp/>{<sp/>0x0UL,<sp/>MATRIX_A<sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mag01[x]<sp/>=<sp/>x<sp/>*<sp/>MATRIX_A<sp/><sp/>for<sp/>x=0,1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mti<sp/>&gt;=<sp/>N)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>N<sp/>words<sp/>at<sp/>one<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mti<sp/>==<sp/>N<sp/>+<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>init_genrand()<sp/>has<sp/>not<sp/>been<sp/>called,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_genrand(5489UL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>default<sp/>initial<sp/>seed<sp/>is<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(kk<sp/>=<sp/>0;<sp/>kk<sp/>&lt;<sp/>N<sp/>-<sp/>M;<sp/>kk++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(mt[kk]<sp/>&amp;<sp/>UPPER_MASK)<sp/>|<sp/>(mt[kk<sp/>+<sp/>1]<sp/>&amp;<sp/>LOWER_MASK);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt[kk]<sp/>=<sp/>mt[kk<sp/>+<sp/>M]<sp/>^<sp/>(y<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>mag01[y<sp/>&amp;<sp/>0x1UL];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>kk<sp/>&lt;<sp/>N<sp/>-<sp/>1;<sp/>kk++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(mt[kk]<sp/>&amp;<sp/>UPPER_MASK)<sp/>|<sp/>(mt[kk<sp/>+<sp/>1]<sp/>&amp;<sp/>LOWER_MASK);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt[kk]<sp/>=<sp/>mt[kk<sp/>+<sp/>(M<sp/>-<sp/>N)]<sp/>^<sp/>(y<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>mag01[y<sp/>&amp;<sp/>0x1UL];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(mt[N<sp/>-<sp/>1]<sp/>&amp;<sp/>UPPER_MASK)<sp/>|<sp/>(mt[0]<sp/>&amp;<sp/>LOWER_MASK);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt[N<sp/>-<sp/>1]<sp/>=<sp/>mt[M<sp/>-<sp/>1]<sp/>^<sp/>(y<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>mag01[y<sp/>&amp;<sp/>0x1UL];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mti<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>mt[mti++];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tempering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>^=<sp/>(y<sp/>&gt;&gt;<sp/>11);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>^=<sp/>(y<sp/>&lt;&lt;<sp/>7)<sp/>&amp;<sp/>0x9d2c5680UL;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>^=<sp/>(y<sp/>&lt;&lt;<sp/>15)<sp/>&amp;<sp/>0xefc60000UL;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>^=<sp/>(y<sp/>&gt;&gt;<sp/>18);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>a<sp/>random<sp/>number<sp/>on<sp/>[0,0x7fffffff]-interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="genrand_8h_1a10263695978c84103fb3526fdae21d4c" refkind="member"><highlight class="normal"><ref refid="genrand_8h_1a10263695978c84103fb3526fdae21d4c" kindref="member">genrand_int31</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(genrand_int32()<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>a<sp/>random<sp/>number<sp/>on<sp/>[0,1]-real-interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">genrand_real1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>genrand_int32()<sp/>*<sp/>(1.0<sp/>/<sp/>4294967295.0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>divided<sp/>by<sp/>2^32-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>a<sp/>random<sp/>number<sp/>on<sp/>[0,1)-real-interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">genrand_real2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>genrand_int32()<sp/>*<sp/>(1.0<sp/>/<sp/>4294967296.0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>divided<sp/>by<sp/>2^32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>a<sp/>random<sp/>number<sp/>on<sp/>(0,1)-real-interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="genrand_8h_1ad5fbfda1cb738d2beff277444bc71b1a" refkind="member"><highlight class="normal"><ref refid="genrand_8h_1ad5fbfda1cb738d2beff277444bc71b1a" kindref="member">genrand_real3</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>genrand_int32())<sp/>+<sp/>0.5)<sp/>*<sp/>(1.0<sp/>/<sp/>4294967296.0);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>divided<sp/>by<sp/>2^32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>a<sp/>random<sp/>number<sp/>on<sp/>[0,1)<sp/>with<sp/>53-bit<sp/>resolution*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="genrand_8h_1a2fca03c5dad1835f55e09c6e66d3b960" refkind="member"><highlight class="normal"><ref refid="genrand_8h_1a2fca03c5dad1835f55e09c6e66d3b960" kindref="member">genrand_res53</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>genrand_int32()<sp/>&gt;&gt;<sp/>5,<sp/>b<sp/>=<sp/>genrand_int32()<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>*<sp/>67108864.0<sp/>+<sp/>b)<sp/>*<sp/>(1.0<sp/>/<sp/>9007199254740992.0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>real<sp/>versions<sp/>are<sp/>due<sp/>to<sp/>Isaku<sp/>Wada,<sp/>2002/01/09<sp/>added<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/genrand.c"/>
  </compounddef>
</doxygen>
