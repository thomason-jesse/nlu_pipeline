<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="jsgf__parser_8c" kind="file">
    <compoundname>jsgf_parser.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="hash__table_8h" local="no">sphinxbase/hash_table.h</includes>
    <includes refid="ckd__alloc_8h" local="no">sphinxbase/ckd_alloc.h</includes>
    <includes refid="err_8h" local="no">sphinxbase/err.h</includes>
    <includes refid="jsgf__internal_8h" local="yes">jsgf_internal.h</includes>
    <includes refid="jsgf__parser_8h" local="yes">jsgf_parser.h</includes>
    <includes refid="jsgf__scanner_8h" local="yes">jsgf_scanner.h</includes>
    <incdepgraph>
      <node id="1683">
        <label>stdarg.h</label>
      </node>
      <node id="1685">
        <label>jsgf_internal.h</label>
        <link refid="jsgf__internal_8h"/>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
      </node>
      <node id="1676">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1677" relation="include">
        </childnode>
      </node>
      <node id="1691">
        <label>sphinxbase/strfuncs.h</label>
        <link refid="strfuncs_8h"/>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1679">
        <label>stdlib.h</label>
      </node>
      <node id="1681">
        <label>setjmp.h</label>
      </node>
      <node id="1684">
        <label>errno.h</label>
      </node>
      <node id="1674">
        <label>sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1678">
        <label>sphinxbase/glist.h</label>
        <link refid="glist_8h"/>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1671">
        <label>src/libsphinxbase/lm/jsgf_parser.c</label>
        <link refid="jsgf_parser.c"/>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
      </node>
      <node id="1682">
        <label>sphinxbase/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
      </node>
      <node id="1693">
        <label>jsgf_parser.h</label>
        <link refid="jsgf__parser_8h_source"/>
      </node>
      <node id="1689">
        <label>sphinxbase/bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
      </node>
      <node id="1686">
        <label>sphinxbase/fsg_model.h</label>
        <link refid="fsg__model_8h_source"/>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
      </node>
      <node id="1680">
        <label>sphinxbase/ckd_alloc.h</label>
        <link refid="ckd__alloc_8h"/>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1677">
        <label>sphinx_config.h</label>
      </node>
      <node id="1673">
        <label>string.h</label>
      </node>
      <node id="1687">
        <label>sphinxbase/logmath.h</label>
        <link refid="logmath_8h"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
      </node>
      <node id="1675">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1688">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1692">
        <label>sphinxbase/jsgf.h</label>
        <link refid="jsgf_8h"/>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>jsgf_scanner.h</label>
        <link refid="jsgf__scanner_8h_source"/>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
      <node id="1672">
        <label>stdio.h</label>
      </node>
      <node id="1690">
        <label>sphinxbase/listelem_alloc.h</label>
        <link refid="listelem__alloc_8h"/>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="unionyyalloc" prot="public">yyalloc</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jsgf__parser_8c_1a9f092f5b1dca6a6249fb2c7c8065b031" prot="public" static="no">
        <name>YYBISON</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="46" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a72ebd0ca5807efcc6a5ae4fb72dd1553" prot="public" static="no">
        <name>YYBISON_VERSION</name>
        <initializer>&quot;2.4.1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="49" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a50db5aef8c2b6f13961b2480b37f84c0" prot="public" static="no">
        <name>YYSKELETON_NAME</name>
        <initializer>&quot;yacc.c&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="52" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a9fa797a1f3c4fc9b12d1e4d569612767" prot="public" static="no">
        <name>YYPURE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="55" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a3aa6e4af11755f8cf8e5ddb26833e918" prot="public" static="no">
        <name>YYPUSH</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="58" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a90f059b8a9d6c30a1e44e1b80d3fd6c8" prot="public" static="no">
        <name>YYPULL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="61" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1abb3943553c2b5e911c89a3ea973d3079" prot="public" static="no">
        <name>YYLSP_NEEDED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="64" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a0943f558a560b9b5fa0593d7e36496c1" prot="public" static="no">
        <name>YYERROR_VERBOSE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="73" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a853b3bfad6d2b2ff693dce81182e0c2e" prot="public" static="no">
        <name>YYDEBUG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="100" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a0943f558a560b9b5fa0593d7e36496c1" prot="public" static="no">
        <name>YYERROR_VERBOSE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="106" column="12" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a3499e31aa832edc82b632ae811286a4b" prot="public" static="no">
        <name>YYTOKEN_TABLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="113" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a69ca0fbcc6d7aa5e8f47b11fc0048208" prot="public" static="no">
        <name>YYTOKENTYPE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="119" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ab7770a7f0d95e67620ff6ed347a07a56" prot="public" static="no">
        <name>HEADER</name>
        <initializer>258</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="134" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a61ec8ecb200937b320d1e427250e169d" prot="public" static="no">
        <name>GRAMMAR</name>
        <initializer>259</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="135" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a773175d74e73776d69c3e538f17de1ee" prot="public" static="no">
        <name>IMPORT</name>
        <initializer>260</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="136" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ad17d551e31d1828c68acf40684849b7e" prot="public" static="no">
        <name>PUBLIC</name>
        <initializer>261</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="137" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a5c3a83864bf5991d09aa5c2abb911bf0" prot="public" static="no">
        <name>TOKEN</name>
        <initializer>262</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="138" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a166a8428aaf9d095254e71812fcdd233" prot="public" static="no">
        <name>RULENAME</name>
        <initializer>263</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="139" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1afc3d101f633a076cc1ca84b85b6224b2" prot="public" static="no">
        <name>TAG</name>
        <initializer>264</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="140" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ac2523bb35f42a8e134775400b70ae47d" prot="public" static="no">
        <name>WEIGHT</name>
        <initializer>265</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="141" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a7d535939e93253736c6eeda569d24de5" prot="public" static="no">
        <name>YYSIZE_T</name>
        <initializer>unsigned int</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="217" column="13" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ab4bb7ad82d4a7e2df49ff6a8fb484109" prot="public" static="no">
        <name>YYSIZE_MAXIMUM</name>
        <initializer>((YYSIZE_T) -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="221" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a86f079016f11f0600f4259f3f03f8d43" prot="public" static="no">
        <name>YY_</name>
        <param><defname>msgid</defname></param>
        <initializer>msgid</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="231" column="11" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ad7d1ef1bbc6adfe69894bc8221f557e1" prot="public" static="no">
        <name>YYUSE</name>
        <param><defname>e</defname></param>
        <initializer>((void) (e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="237" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a0a6ff515042340dd341cf6ca8dd05f2d" prot="public" static="no">
        <name>YYID</name>
        <param><defname>n</defname></param>
        <initializer>(n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="244" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1af45042ce56e04d634420d76caeb2ee73" prot="public" static="no">
        <name>YYSTACK_ALLOC</name>
        <initializer>YYMALLOC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="299" column="13" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a1a9dc526fd390d4808252bd631c4c2f7" prot="public" static="no">
        <name>YYSTACK_FREE</name>
        <initializer>YYFREE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="300" column="11" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a7e55d995c7458f2f4af94a426d0adde8" prot="public" static="no">
        <name>YYSTACK_ALLOC_MAXIMUM</name>
        <initializer>YYSIZE_MAXIMUM</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="302" column="12" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a573b05852d8f080c907dfba725773d7a" prot="public" static="no">
        <name>YYMALLOC</name>
        <initializer>malloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="313" column="12" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ac8adfd73c006c1926f387feb1eced3ca" prot="public" static="no">
        <name>YYFREE</name>
        <initializer>free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="320" column="12" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1afcd15dd0fa87ffba0371c6d6a0cc9631" prot="public" static="no">
        <name>YYSTACK_GAP_MAXIMUM</name>
        <initializer>(sizeof (union <ref refid="unionyyalloc" kindref="compound">yyalloc</ref>) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="342" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a40beb355f2cf230a99e2e2bb54909a5a" prot="public" static="no">
        <name>YYSTACK_BYTES</name>
        <param><defname>N</defname></param>
        <initializer>((N) * (sizeof (yytype_int16) + sizeof (<ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref>)) \
      + YYSTACK_GAP_MAXIMUM)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="346" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ad6586b145b5cddce4eec46f35d59b1dd" prot="public" static="no">
        <name>YYCOPY</name>
        <param><defname>To</defname></param>
        <param><defname>From</defname></param>
        <param><defname>Count</defname></param>
        <initializer>do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi &lt; (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="357" column="15" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ae780b90b638f37309f20dc07f94e8221" prot="public" static="no">
        <name>YYSTACK_RELOCATE</name>
        <param><defname>Stack_alloc</defname></param>
        <param><defname>Stack</defname></param>
        <initializer>do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&amp;yyptr-&gt;Stack_alloc, Stack, yysize);			\
	Stack = &amp;yyptr-&gt;Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="373" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a6419f3fd69ecb6b7e063410fd4e73b2f" prot="public" static="no">
        <name>YYFINAL</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="387" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ae67923760a28e3b7ed3aa2cfaef7f9a2" prot="public" static="no">
        <name>YYLAST</name>
        <initializer>54</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="389" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a75d260730a6c379a94ea28f63a7b9275" prot="public" static="no">
        <name>YYNTOKENS</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="392" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1af54ae9e588f0ecc32eabbfdf1959df10" prot="public" static="no">
        <name>YYNNTS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="394" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1aceaba8997dc3867478ae3b816647eb7c" prot="public" static="no">
        <name>YYNRULES</name>
        <initializer>33</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="396" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a2c387ba2caaade8bf8f78ed30023f79f" prot="public" static="no">
        <name>YYNSTATES</name>
        <initializer>58</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="398" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a926181abd06b6d1df27b6133971c24ce" prot="public" static="no">
        <name>YYUNDEFTOK</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="401" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1af3f5ed4bc4517eff0ef1b17541192a58" prot="public" static="no">
        <name>YYMAXUTOK</name>
        <initializer>265</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="402" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1aad19ee88e33c02c4e720b28f78249bd7" prot="public" static="no">
        <name>YYTRANSLATE</name>
        <param><defname>YYX</defname></param>
        <initializer>((unsigned int) (YYX) &lt;= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="404" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a62bf0ed0c4360b077071b5cf3177823b" prot="public" static="no">
        <name>YYPACT_NINF</name>
        <initializer>-37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="541" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a504faa93b92f37fcc147f68e8d111a1d" prot="public" static="no">
        <name>YYTABLE_NINF</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="563" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a20bf055e53dc4fd5afddfd752a4d1adb" prot="public" static="no">
        <name>yyerrok</name>
        <initializer>(yyerrstatus = 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="596" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a5035d59933b3f5388c44f596145db047" prot="public" static="no">
        <name>yyclearin</name>
        <initializer>(yychar = YYEMPTY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="597" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ae59196b3765411a06cf234cf9bcae2e7" prot="public" static="no">
        <name>YYEMPTY</name>
        <initializer>(-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="598" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a3b1e3628411fabac03abe0a337322016" prot="public" static="no">
        <name>YYEOF</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="599" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1aa6c7a65b580c214b2ea832fd7bdd472e" prot="public" static="no">
        <name>YYACCEPT</name>
        <initializer>goto yyacceptlab</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="601" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a3bcde0b05b9aa4ec5169092d9d211dbd" prot="public" static="no">
        <name>YYABORT</name>
        <initializer>goto yyabortlab</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="602" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1af1eef6197be78122699013d0784acc80" prot="public" static="no">
        <name>YYERROR</name>
        <initializer>goto yyerrorlab</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="603" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a383d9671b1abd97e4c6f3708d1ca32f3" prot="public" static="no">
        <name>YYFAIL</name>
        <initializer>goto yyerrlab</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="610" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ad860e18ca4b79fc589895b531bdb7948" prot="public" static="no">
        <name>YYRECOVERING</name>
        <param></param>
        <initializer>(!!yyerrstatus)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="612" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1adfcaf974b837e3efc130377e9837b4fd" prot="public" static="no">
        <name>YYBACKUP</name>
        <param><defname>Token</defname></param>
        <param><defname>Value</defname></param>
        <initializer>do								\
  if (yychar == YYEMPTY &amp;&amp; yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (yyscanner, jsgf, YY_(&quot;syntax error: cannot back up&quot;)); \
      YYERROR;							\
    }								\
while (YYID (0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="614" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ad2b58b1851184ddb3b60fede50bc7946" prot="public" static="no">
        <name>YYTERROR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="632" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a552f295255821fa7dea11b0237e1d61a" prot="public" static="no">
        <name>YYERRCODE</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="633" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ab2b4f027a2b092ac14ca4464e7b3db60" prot="public" static="no">
        <name>YYRHSLOC</name>
        <param><defname>Rhs</defname></param>
        <param><defname>K</defname></param>
        <initializer>((Rhs)[K])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="640" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a485d38f93de30679900c9cad6e7f3446" prot="public" static="no">
        <name>YYLLOC_DEFAULT</name>
        <param><defname>Current</defname></param>
        <param><defname>Rhs</defname></param>
        <param><defname>N</defname></param>
        <initializer>do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="642" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a52c7d936ca7e6c34687ff71f29b8cfd1" prot="public" static="no">
        <name>YY_LOCATION_PRINT</name>
        <param><defname>File</defname></param>
        <param><defname>Loc</defname></param>
        <initializer>((void) 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="673" column="13" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a0ea34e09602d1ede033f16ba669ef24b" prot="public" static="no">
        <name>YYLEX</name>
        <initializer>yylex (&amp;yylval, yyscanner)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="683" column="11" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1af6d6ca80e87922f90264f1a4a802ea04" prot="public" static="no">
        <name>YYDPRINTF</name>
        <param><defname>Args</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="851" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="851" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a1c510d33cb388afc9411141ba3076a36" prot="public" static="no">
        <name>YY_SYMBOL_PRINT</name>
        <param><defname>Title</defname></param>
        <param><defname>Type</defname></param>
        <param><defname>Value</defname></param>
        <param><defname>Location</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="852" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="852" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a7a52157fbe194e3a347afc4ef750af77" prot="public" static="no">
        <name>YY_STACK_PRINT</name>
        <param><defname>Bottom</defname></param>
        <param><defname>Top</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="853" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="853" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a49ad456240785266cadae498ddae9310" prot="public" static="no">
        <name>YY_REDUCE_PRINT</name>
        <param><defname>Rule</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="854" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1aeb1508a3a38ec5d64c27e8eca25330b5" prot="public" static="no">
        <name>YYINITDEPTH</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="860" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1a14ba2b263c446ffed1c888c4b42ae40c" prot="public" static="no">
        <name>YYMAXDEPTH</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="871" column="10" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="871" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jsgf__parser_8c_1ad2f9773cd9c031026b2ef4c1ee7be1be" prot="public" static="no">
        <name>YYPOPSTACK</name>
        <param><defname>N</defname></param>
        <initializer>(yyvsp -= (N), yyssp -= (N))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="1215" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9" prot="public" static="no">
        <name>yytokentype</name>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9a2e57918a09d25b07a664e505d50a97f6" prot="public">
          <name>HEADER</name>
          <initializer>= 258</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9aeef2bcf12cee481deb3d76ff74a9d729" prot="public">
          <name>GRAMMAR</name>
          <initializer>= 259</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9a846fa6dfbeae8b4be3230d7f2450c996" prot="public">
          <name>IMPORT</name>
          <initializer>= 260</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9ae81e3f79af4b80e22c6b86d63ea397bf" prot="public">
          <name>PUBLIC</name>
          <initializer>= 261</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9a07fe54e18c187cac6548db45a3f3676a" prot="public">
          <name>TOKEN</name>
          <initializer>= 262</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9a2e9354ab94136ef5b19e3c0900e02175" prot="public">
          <name>RULENAME</name>
          <initializer>= 263</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9ab0db3c4898b28269905a7a00a0133812" prot="public">
          <name>TAG</name>
          <initializer>= 264</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8c_1a15c9f7bd2f0e9686df5d9df4f3314aa9a9747ee647b4e8f6329a394f45e4e92aa" prot="public">
          <name>WEIGHT</name>
          <initializer>= 265</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9a2e57918a09d25b07a664e505d50a97f6" prot="public">
          <name>HEADER</name>
          <initializer>= 258</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9aeef2bcf12cee481deb3d76ff74a9d729" prot="public">
          <name>GRAMMAR</name>
          <initializer>= 259</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9a846fa6dfbeae8b4be3230d7f2450c996" prot="public">
          <name>IMPORT</name>
          <initializer>= 260</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9ae81e3f79af4b80e22c6b86d63ea397bf" prot="public">
          <name>PUBLIC</name>
          <initializer>= 261</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9a07fe54e18c187cac6548db45a3f3676a" prot="public">
          <name>TOKEN</name>
          <initializer>= 262</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9a2e9354ab94136ef5b19e3c0900e02175" prot="public">
          <name>RULENAME</name>
          <initializer>= 263</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9ab0db3c4898b28269905a7a00a0133812" prot="public">
          <name>TAG</name>
          <initializer>= 264</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jsgf__parser_8h_1a15c9f7bd2f0e9686df5d9df4f3314aa9a9747ee647b4e8f6329a394f45e4e92aa" prot="public">
          <name>WEIGHT</name>
          <initializer>= 265</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="122" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="122" bodyend="131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jsgf__parser_8c_1a79c09f9dcfd0f7a32f598ea3910d2206" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char yytype_uint8</definition>
        <argsstring></argsstring>
        <name>yytype_uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="183" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jsgf__parser_8c_1afd56a33ef7e59189deccc83706e0becd" prot="public" static="no">
        <type>short int</type>
        <definition>typedef short int yytype_int8</definition>
        <argsstring></argsstring>
        <name>yytype_int8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="192" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jsgf__parser_8c_1a00c27c9da5ed06a830b216c8934e6b28" prot="public" static="no">
        <type>unsigned short int</type>
        <definition>typedef unsigned short int yytype_uint16</definition>
        <argsstring></argsstring>
        <name>yytype_uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="198" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jsgf__parser_8c_1ade5b97f0021a4f6c5922ead3744ab297" prot="public" static="no">
        <type>short int</type>
        <definition>typedef short int yytype_int16</definition>
        <argsstring></argsstring>
        <name>yytype_int16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="204" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="jsgf__parser_8c_1a384fb3797a340a5415c03719ebab9c67" prot="public" static="yes" mutable="no">
        <type>const yytype_uint8</type>
        <definition>const yytype_uint8 yytranslate[]</definition>
        <argsstring>[]</argsstring>
        <name>yytranslate</name>
        <initializer>=
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      14,    15,    18,    19,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,    11,
       2,    12,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,    16,     2,    17,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,    13,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="408" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1ab779f3189fbfd3b164b7802b945d619b" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const yytname[]</definition>
        <argsstring>[]</argsstring>
        <name>yytname</name>
        <initializer>=
{
  &quot;$end&quot;, &quot;error&quot;, &quot;$undefined&quot;, &quot;HEADER&quot;, &quot;GRAMMAR&quot;, &quot;IMPORT&quot;, &quot;PUBLIC&quot;,
  &quot;TOKEN&quot;, &quot;RULENAME&quot;, &quot;TAG&quot;, &quot;WEIGHT&quot;, &quot;&apos;;&apos;&quot;, &quot;&apos;=&apos;&quot;, &quot;&apos;|&apos;&quot;, &quot;&apos;(&apos;&quot;, &quot;&apos;)&apos;&quot;,
  &quot;&apos;[&apos;&quot;, &quot;&apos;]&apos;&quot;, &quot;&apos;*&apos;&quot;, &quot;&apos;+&apos;&quot;, &quot;$accept&quot;, &quot;grammar&quot;, &quot;header&quot;,
  &quot;jsgf_header&quot;, &quot;grammar_header&quot;, &quot;import_header&quot;, &quot;import_statement&quot;,
  &quot;rule_list&quot;, &quot;rule&quot;, &quot;alternate_list&quot;, &quot;rule_expansion&quot;,
  &quot;tagged_rule_item&quot;, &quot;rule_item&quot;, &quot;rule_group&quot;, &quot;rule_optional&quot;,
  &quot;rule_atom&quot;, 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="479" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1a0c34e3be3d497abf630697f406f3cc62" prot="public" static="yes" mutable="no">
        <type>const yytype_uint8</type>
        <definition>const yytype_uint8 yyr1[]</definition>
        <argsstring>[]</argsstring>
        <name>yyr1</name>
        <initializer>=
{
       0,    20,    21,    21,    21,    22,    23,    23,    23,    23,
      24,    25,    25,    26,    27,    27,    28,    28,    29,    29,
      30,    30,    31,    31,    32,    32,    33,    34,    35,    35,
      35,    35,    35,    35
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="502" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1aa6be1bc256e649b3e922410e291bc7a5" prot="public" static="yes" mutable="no">
        <type>const yytype_uint8</type>
        <definition>const yytype_uint8 yyr2[]</definition>
        <argsstring>[]</argsstring>
        <name>yyr2</name>
        <initializer>=
{
       0,     2,     1,     2,     3,     2,     2,     3,     4,     5,
       3,     1,     2,     3,     1,     2,     4,     5,     1,     3,
       1,     2,     1,     2,     1,     2,     3,     3,     1,     1,
       1,     1,     2,     2
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="511" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1af80f4a4ea9a69eb19837849cc7083c77" prot="public" static="yes" mutable="no">
        <type>const yytype_uint8</type>
        <definition>const yytype_uint8 yydefact[]</definition>
        <argsstring>[]</argsstring>
        <name>yydefact</name>
        <initializer>=
{
       0,     0,     0,     2,     0,     0,     6,     1,     0,     0,
       0,     0,    11,     3,    14,     0,     5,     0,     7,     0,
       0,     0,    12,     4,    15,     0,     0,     8,    13,     0,
      28,    29,     0,     0,     0,     0,    18,    20,    22,    30,
      31,    24,    10,     9,     0,    25,     0,     0,    16,     0,
      21,    23,    32,    33,    17,    26,    27,    19
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="522" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1add50b39c93bd000e59c735788074a427" prot="public" static="yes" mutable="no">
        <type>const yytype_int8</type>
        <definition>const yytype_int8 yydefgoto[]</definition>
        <argsstring>[]</argsstring>
        <name>yydefgoto</name>
        <initializer>=
{
      -1,     2,     3,     4,    16,    11,    12,    13,    14,    35,
      36,    37,    38,    39,    40,    41
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="533" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1a5d5f1a7a5182e57a2589f4753bfaddc9" prot="public" static="yes" mutable="no">
        <type>const yytype_int8</type>
        <definition>const yytype_int8 yypact[]</definition>
        <argsstring>[]</argsstring>
        <name>yypact</name>
        <initializer>=
{
      -1,    -2,    36,    22,    35,     8,   -37,   -37,    32,    33,
      30,    22,   -37,    17,   -37,    37,   -37,    13,   -37,    34,
      31,    -4,   -37,    17,   -37,    38,    39,   -37,   -37,    -4,
     -37,   -37,     0,    -4,    -4,    18,    -4,    42,   -37,   -37,
     -37,    19,   -37,   -37,    21,    19,    20,     9,   -37,    -4,
      42,   -37,   -37,   -37,   -37,   -37,   -37,    -4
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="542" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1abb1d1e685ef953f65410be5d32544cfe" prot="public" static="yes" mutable="no">
        <type>const yytype_int8</type>
        <definition>const yytype_int8 yypgoto[]</definition>
        <argsstring>[]</argsstring>
        <name>yypgoto</name>
        <initializer>=
{
     -37,   -37,   -37,   -37,   -37,   -37,    41,    43,   -12,   -16,
      -3,   -36,   -37,   -37,   -37,    15
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="553" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1aebb94255a7d4c72e6f9eea0a8e755c56" prot="public" static="yes" mutable="no">
        <type>const yytype_uint8</type>
        <definition>const yytype_uint8 yytable[]</definition>
        <argsstring>[]</argsstring>
        <name>yytable</name>
        <initializer>=
{
      50,    24,     1,    30,    31,     5,    32,    30,    31,     6,
      33,    24,    34,    44,    33,    17,    34,    46,    47,    18,
      26,    50,    49,     9,    27,    10,    56,     8,     9,    48,
      10,    49,    54,    49,    49,    55,     7,    52,    53,    15,
      19,    20,    21,    29,    25,    28,    57,    45,     0,    42,
      43,    51,    22,     0,    23
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="564" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1a40faef92d80fc0e07e3d399311c5ec88" prot="public" static="yes" mutable="no">
        <type>const yytype_int8</type>
        <definition>const yytype_int8 yycheck[]</definition>
        <argsstring>[]</argsstring>
        <name>yycheck</name>
        <initializer>=
{
      36,    13,     3,     7,     8,     7,    10,     7,     8,    11,
      14,    23,    16,    29,    14,     7,    16,    33,    34,    11,
       7,    57,    13,     6,    11,     8,    17,     5,     6,    11,
       8,    13,    11,    13,    13,    15,     0,    18,    19,     4,
       8,     8,    12,    12,     7,    11,    49,    32,    -1,    11,
      11,     9,    11,    -1,    11
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="574" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jsgf__parser_8c_1abc7e1225b6a8ee7619f19504cbefd97b" prot="public" static="yes" mutable="no">
        <type>const yytype_uint8</type>
        <definition>const yytype_uint8 yystos[]</definition>
        <argsstring>[]</argsstring>
        <name>yystos</name>
        <initializer>=
{
       0,     3,    21,    22,    23,     7,    11,     0,     5,     6,
       8,    25,    26,    27,    28,     4,    24,     7,    11,     8,
       8,    12,    26,    27,    28,     7,     7,    11,    11,    12,
       7,     8,    10,    14,    16,    29,    30,    31,    32,    33,
      34,    35,    11,    11,    29,    35,    29,    29,    11,    13,
      31,     9,    18,    19,    11,    15,    17,    30
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="586" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="586" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jsgf__parser_8c_1aaadde66e1b5f56fd24d2c28cb50cd3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void yyerror</definition>
        <argsstring>(yyscan_t lex, jsgf_t *jsgf, const char *s)</argsstring>
        <name>yyerror</name>
        <param>
          <type>yyscan_t</type>
          <declname>lex</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="91" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="1795" bodyend="1798"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1aaaac26286044c09746e15056fb4886ae" prot="public" static="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>YYSIZE_T</type>
        <definition>static YYSIZE_T yystrlen</definition>
        <argsstring>(char *yystr) const</argsstring>
        <name>yystrlen</name>
        <param>
          <type>char *</type>
          <declname>yystr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="889" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="889" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1a79c0cbb33ee2f626ebdf5933080ea385" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* yystpcpy</definition>
        <argsstring>(char *yydest, const char *yysrc)</argsstring>
        <name>yystpcpy</name>
        <param>
          <type>char *</type>
          <declname>yydest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>yysrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="913" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="913" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1ac4bdbe6f524e68778be5e1717fda3bc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YYSIZE_T</type>
        <definition>static YYSIZE_T yytnamerr</definition>
        <argsstring>(char *yyres, const char *yystr)</argsstring>
        <name>yytnamerr</name>
        <param>
          <type>char *</type>
          <declname>yyres</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>yystr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="938" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="938" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1a74a53251dee1d5e66d839837e446049b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YYSIZE_T</type>
        <definition>static YYSIZE_T yysyntax_error</definition>
        <argsstring>(char *yyresult, int yystate, int yychar)</argsstring>
        <name>yysyntax_error</name>
        <param>
          <type>char *</type>
          <declname>yyresult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yystate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yychar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="985" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="985" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1a84a1b3f9d4728e9445ba67c8ed837253" prot="public" static="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void yydestruct</definition>
        <argsstring>(char *yymsg, int yytype, YYSTYPE *yyvaluep, void *yyscanner, jsgf_t *jsgf) const</argsstring>
        <name>yydestruct</name>
        <param>
          <type>char *</type>
          <declname>yymsg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yytype</declname>
        </param>
        <param>
          <type><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref> *</type>
          <declname>yyvaluep</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>yyscanner</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="1098" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="1098" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1acd8617a8f2ac0de8bc1cc032cf449e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int yyparse</definition>
        <argsstring>()</argsstring>
        <name>yyparse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="1133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jsgf__parser_8c_1af2fa17f8b9a0d0e5bbc907f6a6de5dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int yyparse</definition>
        <argsstring>(void *yyscanner, jsgf_t *jsgf)</argsstring>
        <name>yyparse</name>
        <param>
          <type>void *</type>
          <declname>yyscanner</declname>
        </param>
        <param>
          <type><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref> *</type>
          <declname>jsgf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" line="1162" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c" bodystart="1162" bodyend="1786"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>Bison<sp/>parser,<sp/>made<sp/>by<sp/>GNU<sp/>Bison<sp/>2.4.1.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skeleton<sp/>implementation<sp/>for<sp/>Bison&apos;s<sp/>Yacc-like<sp/>parsers<sp/>in<sp/>C</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>1984,<sp/>1989,<sp/>1990,<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003,<sp/>2004,<sp/>2005,<sp/>2006</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>As<sp/>a<sp/>special<sp/>exception,<sp/>you<sp/>may<sp/>create<sp/>a<sp/>larger<sp/>work<sp/>that<sp/>contains</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>part<sp/>or<sp/>all<sp/>of<sp/>the<sp/>Bison<sp/>parser<sp/>skeleton<sp/>and<sp/>distribute<sp/>that<sp/>work</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>under<sp/>terms<sp/>of<sp/>your<sp/>choice,<sp/>so<sp/>long<sp/>as<sp/>that<sp/>work<sp/>isn&apos;t<sp/>itself<sp/>a</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>parser<sp/>generator<sp/>using<sp/>the<sp/>skeleton<sp/>or<sp/>a<sp/>modified<sp/>version<sp/>thereof</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>as<sp/>a<sp/>parser<sp/>skeleton.<sp/><sp/>Alternatively,<sp/>if<sp/>you<sp/>modify<sp/>or<sp/>redistribute</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>the<sp/>parser<sp/>skeleton<sp/>itself,<sp/>you<sp/>may<sp/>(at<sp/>your<sp/>option)<sp/>remove<sp/>this</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/>special<sp/>exception,<sp/>which<sp/>will<sp/>cause<sp/>the<sp/>skeleton<sp/>and<sp/>the<sp/>resulting</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>Bison<sp/>output<sp/>files<sp/>to<sp/>be<sp/>licensed<sp/>under<sp/>the<sp/>GNU<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>License<sp/>without<sp/>this<sp/>special<sp/>exception.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>This<sp/>special<sp/>exception<sp/>was<sp/>added<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>in</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>version<sp/>2.2<sp/>of<sp/>Bison.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>C<sp/>LALR(1)<sp/>parser<sp/>skeleton<sp/>written<sp/>by<sp/>Richard<sp/>Stallman,<sp/>by</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>simplifying<sp/>the<sp/>original<sp/>so-called<sp/>&quot;semantic&quot;<sp/>parser.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>All<sp/>symbols<sp/>defined<sp/>below<sp/>should<sp/>begin<sp/>with<sp/>yy<sp/>or<sp/>YY,<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>infringing<sp/>on<sp/>user<sp/>name<sp/>space.<sp/><sp/>This<sp/>should<sp/>be<sp/>done<sp/>even<sp/>for<sp/>local</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>variables,<sp/>as<sp/>they<sp/>might<sp/>otherwise<sp/>be<sp/>expanded<sp/>by<sp/>user<sp/>macros.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>There<sp/>are<sp/>some<sp/>unavoidable<sp/>exceptions<sp/>within<sp/>include<sp/>files<sp/>to</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>define<sp/>necessary<sp/>library<sp/>symbols;<sp/>they<sp/>are<sp/>noted<sp/>&quot;INFRINGES<sp/>ON</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>USER<sp/>NAME<sp/>SPACE&quot;<sp/>below.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Identify<sp/>Bison<sp/>output.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYBISON<sp/>1</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bison<sp/>version.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYBISON_VERSION<sp/>&quot;2.4.1&quot;</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skeleton<sp/>name.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYSKELETON_NAME<sp/>&quot;yacc.c&quot;</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pure<sp/>parsers.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYPURE<sp/>1</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Push<sp/>parsers.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYPUSH<sp/>0</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pull<sp/>parsers.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYPULL<sp/>1</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>locations.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYLSP_NEEDED<sp/>0</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>first<sp/>part<sp/>of<sp/>user<sp/>declarations.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>189<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>37<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hash__table_8h" kindref="compound">sphinxbase/hash_table.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ckd__alloc_8h" kindref="compound">sphinxbase/ckd_alloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="err_8h" kindref="compound">sphinxbase/err.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="jsgf__internal_8h" kindref="compound">jsgf_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jsgf_parser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jsgf_scanner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Suppress<sp/>warnings<sp/>from<sp/>generated<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:<sp/>4273)</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyerror(yyscan_t<sp/>lex,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>189<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>97<sp/>&quot;jsgf_parser.c&quot;</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enabling<sp/>traces.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YYDEBUG</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYDEBUG<sp/>0</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enabling<sp/>verbose<sp/>error<sp/>messages.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYERROR_VERBOSE<sp/>1</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYERROR_VERBOSE<sp/>0</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enabling<sp/>the<sp/>token<sp/>table.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YYTOKEN_TABLE</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYTOKEN_TABLE<sp/>0</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Tokens.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YYTOKENTYPE</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYTOKENTYPE</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>tokens<sp/>into<sp/>the<sp/>symbol<sp/>table,<sp/>so<sp/>that<sp/>GDB<sp/>and<sp/>other<sp/>debuggers</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>know<sp/>about<sp/>them.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>yytokentype<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>HEADER<sp/>=<sp/>258,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>GRAMMAR<sp/>=<sp/>259,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>IMPORT<sp/>=<sp/>260,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PUBLIC<sp/>=<sp/>261,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TOKEN<sp/>=<sp/>262,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RULENAME<sp/>=<sp/>263,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TAG<sp/>=<sp/>264,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>WEIGHT<sp/>=<sp/>265</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Tokens.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER<sp/>258</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GRAMMAR<sp/>259</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IMPORT<sp/>260</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PUBLIC<sp/>261</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TOKEN<sp/>262</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RULENAME<sp/>263</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TAG<sp/>264</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WEIGHT<sp/>265</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined<sp/>YYSTYPE<sp/>&amp;&amp;<sp/>!<sp/>defined<sp/>YYSTYPE_IS_DECLARED</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>214<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>65<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjsgf__rule__s" kindref="compound">jsgf_rule_t</ref><sp/>*rule;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjsgf__rhs__s" kindref="compound">jsgf_rhs_t</ref><sp/>*rhs;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjsgf__atom__s" kindref="compound">jsgf_atom_t</ref><sp/>*atom;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>214<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>163<sp/>&quot;jsgf_parser.c&quot;</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYSTYPE_IS_TRIVIAL<sp/>1</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>yystype<sp/>YYSTYPE<sp/></highlight><highlight class="comment">/*<sp/>obsolescent;<sp/>will<sp/>be<sp/>withdrawn<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYSTYPE_IS_DECLARED<sp/>1</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>second<sp/>part<sp/>of<sp/>user<sp/>declarations.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>264<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>175<sp/>&quot;jsgf_parser.c&quot;</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>short</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>short</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYTYPE_UINT8</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>YYTYPE_UINT8<sp/>yytype_uint8;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>yytype_uint8;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYTYPE_INT8</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>YYTYPE_INT8<sp/>yytype_int8;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>yytype_int8;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype_int8;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYTYPE_UINT16</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>YYTYPE_UINT16<sp/>yytype_uint16;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype_uint16;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYTYPE_INT16</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>YYTYPE_INT16<sp/>yytype_int16;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype_int16;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YYSIZE_T</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__SIZE_TYPE__</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSIZE_T<sp/>__SIZE_TYPE__</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined<sp/>size_t</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSIZE_T<sp/>size_t</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>!<sp/>defined<sp/>YYSIZE_T<sp/>&amp;&amp;<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSIZE_T<sp/>size_t</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSIZE_T<sp/>unsigned<sp/>int</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYSIZE_MAXIMUM<sp/>((YYSIZE_T)<sp/>-1)</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>YYENABLE_NLS</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>ENABLE_NLS</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;libintl.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YY_(msgid)<sp/>dgettext<sp/>(&quot;bison-runtime&quot;,<sp/>msgid)</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>YY_</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YY_(msgid)<sp/>msgid</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Suppress<sp/>unused-variable<sp/>warnings<sp/>by<sp/>&quot;using&quot;<sp/>E.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined<sp/>lint<sp/>||<sp/>defined<sp/>__GNUC__</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYUSE(e)<sp/>((void)<sp/>(e))</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYUSE(e)<sp/></highlight><highlight class="comment">/*<sp/>empty<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Identity<sp/>function,<sp/>used<sp/>to<sp/>suppress<sp/>warnings<sp/>about<sp/>constant<sp/>conditions.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>lint</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYID(n)<sp/>(n)</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">YYID<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyi)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">YYID<sp/>(yyi)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>yyi;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yyi;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined<sp/>yyoverflow<sp/>||<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>parser<sp/>invokes<sp/>alloca<sp/>or<sp/>malloc;<sp/>define<sp/>the<sp/>necessary<sp/>symbols.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>YYSTACK_USE_ALLOCA</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>YYSTACK_USE_ALLOCA</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>YYSTACK_ALLOC<sp/>__builtin_alloca</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined<sp/>__BUILTIN_VA_ARG_INCR</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;alloca.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined<sp/>_AIX</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>YYSTACK_ALLOC<sp/>__alloca</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>alloca<sp/>_alloca</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>YYSTACK_ALLOC<sp/>alloca</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>!<sp/>defined<sp/>_ALLOCA_H<sp/>&amp;&amp;<sp/>!<sp/>defined<sp/>_STDLIB_H<sp/>&amp;&amp;<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>ifndef<sp/>_STDLIB_H</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_STDLIB_H<sp/>1</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>YYSTACK_ALLOC</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pacify<sp/>GCC&apos;s<sp/>`empty<sp/>if-body&apos;<sp/>warning.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSTACK_FREE(Ptr)<sp/>do<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>empty<sp/>*/</highlight><highlight class="preprocessor">;<sp/>}<sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>YYSTACK_ALLOC_MAXIMUM</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>OS<sp/>might<sp/>guarantee<sp/>only<sp/>one<sp/>guard<sp/>page<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>stack,</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>a<sp/>page<sp/>size<sp/>can<sp/>be<sp/>as<sp/>small<sp/>as<sp/>4096<sp/>bytes.<sp/><sp/>So<sp/>we<sp/>cannot<sp/>safely</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invoke<sp/>alloca<sp/>(N)<sp/>if<sp/>N<sp/>exceeds<sp/>4096.<sp/><sp/>Use<sp/>a<sp/>slightly<sp/>smaller<sp/>number</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>allow<sp/>for<sp/>a<sp/>few<sp/>compiler-allocated<sp/>temporary<sp/>stack<sp/>slots.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YYSTACK_ALLOC_MAXIMUM<sp/>4032<sp/></highlight><highlight class="comment">/*<sp/>reasonable<sp/>circa<sp/>2006<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSTACK_ALLOC<sp/>YYMALLOC</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYSTACK_FREE<sp/>YYFREE</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>YYSTACK_ALLOC_MAXIMUM</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YYSTACK_ALLOC_MAXIMUM<sp/>YYSIZE_MAXIMUM</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(defined<sp/>__cplusplus<sp/>&amp;&amp;<sp/>!<sp/>defined<sp/>_STDLIB_H<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!<sp/>((defined<sp/>YYMALLOC<sp/>||<sp/>defined<sp/>malloc)<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(defined<sp/>YYFREE<sp/>||<sp/>defined<sp/>free)))</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifndef<sp/>_STDLIB_H</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>_STDLIB_H<sp/>1</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>YYMALLOC</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YYMALLOC<sp/>malloc</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!<sp/>defined<sp/>malloc<sp/>&amp;&amp;<sp/>!<sp/>defined<sp/>_STDLIB_H<sp/>&amp;&amp;<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*malloc<sp/>(YYSIZE_T);<sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>YYFREE</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YYFREE<sp/>free</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!<sp/>defined<sp/>free<sp/>&amp;&amp;<sp/>!<sp/>defined<sp/>_STDLIB_H<sp/>&amp;&amp;<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);<sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>defined<sp/>yyoverflow<sp/>||<sp/>YYERROR_VERBOSE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!<sp/>defined<sp/>yyoverflow<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!<sp/>defined<sp/>__cplusplus<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(defined<sp/>YYSTYPE_IS_TRIVIAL<sp/>&amp;&amp;<sp/>YYSTYPE_IS_TRIVIAL)))</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>type<sp/>that<sp/>is<sp/>properly<sp/>aligned<sp/>for<sp/>any<sp/>stack<sp/>member.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="unionyyalloc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionyyalloc" kindref="compound">yyalloc</ref></highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>yytype_int16<sp/>yyss_alloc;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>yyvs_alloc;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>size<sp/>of<sp/>the<sp/>maximum<sp/>gap<sp/>between<sp/>one<sp/>aligned<sp/>stack<sp/>and<sp/>the<sp/>next.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYSTACK_GAP_MAXIMUM<sp/>(sizeof<sp/>(union<sp/>yyalloc)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>size<sp/>of<sp/>an<sp/>array<sp/>large<sp/>to<sp/>enough<sp/>to<sp/>hold<sp/>all<sp/>stacks,<sp/>each<sp/>with</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>N<sp/>elements.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYSTACK_BYTES(N)<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>((N)<sp/>*<sp/>(sizeof<sp/>(yytype_int16)<sp/>+<sp/>sizeof<sp/>(YYSTYPE))<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>YYSTACK_GAP_MAXIMUM)</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>COUNT<sp/>objects<sp/>from<sp/>FROM<sp/>to<sp/>TO.<sp/><sp/>The<sp/>source<sp/>and<sp/>destination<sp/>do</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>not<sp/>overlap.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>YYCOPY</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined<sp/>__GNUC__<sp/>&amp;&amp;<sp/>1<sp/>&lt;<sp/>__GNUC__</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YYCOPY(To,<sp/>From,<sp/>Count)<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__builtin_memcpy<sp/>(To,<sp/>From,<sp/>(Count)<sp/>*<sp/>sizeof<sp/>(*(From)))</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>YYCOPY(To,<sp/>From,<sp/>Count)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yyi;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(yyi<sp/>=<sp/>0;<sp/>yyi<sp/>&lt;<sp/>(Count);<sp/>yyi++)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(To)[yyi]<sp/>=<sp/>(From)[yyi];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Relocate<sp/>STACK<sp/>from<sp/>its<sp/>old<sp/>location<sp/>to<sp/>the<sp/>new<sp/>one.<sp/><sp/>The</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/>local<sp/>variables<sp/>YYSIZE<sp/>and<sp/>YYSTACKSIZE<sp/>give<sp/>the<sp/>old<sp/>and<sp/>new<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/>elements<sp/>in<sp/>the<sp/>stack,<sp/>and<sp/>YYPTR<sp/>gives<sp/>the<sp/>new<sp/>location<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>stack.<sp/><sp/>Advance<sp/>YYPTR<sp/>to<sp/>a<sp/>properly<sp/>aligned<sp/>location<sp/>for<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>stack.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYSTACK_RELOCATE(Stack_alloc,<sp/>Stack)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yynewbytes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYCOPY<sp/>(&amp;yyptr-&gt;Stack_alloc,<sp/>Stack,<sp/>yysize);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stack<sp/>=<sp/>&amp;yyptr-&gt;Stack_alloc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yynewbytes<sp/>=<sp/>yystacksize<sp/>*<sp/>sizeof<sp/>(*Stack)<sp/>+<sp/>YYSTACK_GAP_MAXIMUM;<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyptr<sp/>+=<sp/>yynewbytes<sp/>/<sp/>sizeof<sp/>(*yyptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYFINAL<sp/>--<sp/>State<sp/>number<sp/>of<sp/>the<sp/>termination<sp/>state.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYFINAL<sp/><sp/>7</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYLAST<sp/>--<sp/>Last<sp/>index<sp/>in<sp/>YYTABLE.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYLAST<sp/><sp/><sp/>54</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYNTOKENS<sp/>--<sp/>Number<sp/>of<sp/>terminals.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYNTOKENS<sp/><sp/>20</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYNNTS<sp/>--<sp/>Number<sp/>of<sp/>nonterminals.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYNNTS<sp/><sp/>16</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYNRULES<sp/>--<sp/>Number<sp/>of<sp/>rules.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYNRULES<sp/><sp/>33</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYNRULES<sp/>--<sp/>Number<sp/>of<sp/>states.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYNSTATES<sp/><sp/>58</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYTRANSLATE(YYLEX)<sp/>--<sp/>Bison<sp/>symbol<sp/>number<sp/>corresponding<sp/>to<sp/>YYLEX.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYUNDEFTOK<sp/><sp/>2</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYMAXUTOK<sp/><sp/><sp/>265</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYTRANSLATE(YYX)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/>((unsigned<sp/>int)<sp/>(YYX)<sp/>&lt;=<sp/>YYMAXUTOK<sp/>?<sp/>yytranslate[YYX]<sp/>:<sp/>YYUNDEFTOK)</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYTRANSLATE[YYLEX]<sp/>--<sp/>Bison<sp/>symbol<sp/>number<sp/>corresponding<sp/>to<sp/>YYLEX.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yytranslate[]<sp/>=</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>11,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>4,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>10</highlight></codeline>
<codeline lineno="437"><highlight class="normal">};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YYDEBUG</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYPRHS[YYN]<sp/>--<sp/>Index<sp/>of<sp/>the<sp/>first<sp/>RHS<sp/>symbol<sp/>of<sp/>rule<sp/>number<sp/>YYN<sp/>in</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/>YYRHS.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yyprhs[]<sp/>=</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>27,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>37,<sp/><sp/><sp/><sp/>39,<sp/><sp/><sp/><sp/>42,<sp/><sp/><sp/><sp/>46,<sp/><sp/><sp/><sp/>48,<sp/><sp/><sp/><sp/>51,<sp/><sp/><sp/><sp/>56,<sp/><sp/><sp/><sp/>62,<sp/><sp/><sp/><sp/>64,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>68,<sp/><sp/><sp/><sp/>70,<sp/><sp/><sp/><sp/>73,<sp/><sp/><sp/><sp/>75,<sp/><sp/><sp/><sp/>78,<sp/><sp/><sp/><sp/>80,<sp/><sp/><sp/><sp/>83,<sp/><sp/><sp/><sp/>87,<sp/><sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>93,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>95,<sp/><sp/><sp/><sp/>97,<sp/><sp/><sp/><sp/>99,<sp/><sp/><sp/>102</highlight></codeline>
<codeline lineno="448"><highlight class="normal">};</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYRHS<sp/>--<sp/>A<sp/>`-1&apos;-separated<sp/>list<sp/>of<sp/>the<sp/>rules&apos;<sp/>RHS.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_int8<sp/>yyrhs[]<sp/>=</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>25,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>7,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>7,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>25,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>28,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>29,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>-1,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>-1,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>17,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>34,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>35,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>-1</highlight></codeline>
<codeline lineno="464"><highlight class="normal">};</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYRLINE[YYN]<sp/>--<sp/>source<sp/>line<sp/>where<sp/>rule<sp/>number<sp/>YYN<sp/>was<sp/>defined.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yyrline[]<sp/>=</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>82,<sp/><sp/><sp/><sp/>82,<sp/><sp/><sp/><sp/>83,<sp/><sp/><sp/><sp/>84,<sp/><sp/><sp/><sp/>87,<sp/><sp/><sp/><sp/>90,<sp/><sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>92,<sp/><sp/><sp/><sp/>93,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>97,<sp/><sp/><sp/>100,<sp/><sp/><sp/>101,<sp/><sp/><sp/>104,<sp/><sp/><sp/>107,<sp/><sp/><sp/>108,<sp/><sp/><sp/>111,<sp/><sp/><sp/>112,<sp/><sp/><sp/>115,<sp/><sp/><sp/>116,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>121,<sp/><sp/><sp/>123,<sp/><sp/><sp/>127,<sp/><sp/><sp/>128,<sp/><sp/><sp/>132,<sp/><sp/><sp/>133,<sp/><sp/><sp/>136,<sp/><sp/><sp/>139,<sp/><sp/><sp/>142,<sp/><sp/><sp/>143,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>144,<sp/><sp/><sp/>145,<sp/><sp/><sp/>146,<sp/><sp/><sp/>147</highlight></codeline>
<codeline lineno="473"><highlight class="normal">};</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YYDEBUG<sp/>||<sp/>YYERROR_VERBOSE<sp/>||<sp/>YYTOKEN_TABLE</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYTNAME[SYMBOL-NUM]<sp/>--<sp/>String<sp/>name<sp/>of<sp/>the<sp/>symbol<sp/>SYMBOL-NUM.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/>First,<sp/>the<sp/>terminals,<sp/>then,<sp/>starting<sp/>at<sp/>YYNTOKENS,<sp/>nonterminals.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytname[]<sp/>=</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;$end&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$undefined&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HEADER&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GRAMMAR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IMPORT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PUBLIC&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;TOKEN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RULENAME&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TAG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WEIGHT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;=&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;|&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;(&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;)&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;[&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;]&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;*&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;+&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$accept&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;grammar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;header&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;jsgf_header&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;grammar_header&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;import_header&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;import_statement&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;rule_list&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rule&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alternate_list&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rule_expansion&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;tagged_rule_item&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rule_item&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rule_group&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rule_optional&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;rule_atom&quot;</highlight><highlight class="normal">,<sp/>0</highlight></codeline>
<codeline lineno="488"><highlight class="normal">};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>YYPRINT</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>YYTOKNUM[YYLEX-NUM]<sp/>--<sp/>Internal<sp/>token<sp/>number<sp/>corresponding<sp/>to</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/>token<sp/>YYLEX-NUM.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint16<sp/>yytoknum[]<sp/>=</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>256,<sp/><sp/><sp/>257,<sp/><sp/><sp/>258,<sp/><sp/><sp/>259,<sp/><sp/><sp/>260,<sp/><sp/><sp/>261,<sp/><sp/><sp/>262,<sp/><sp/><sp/>263,<sp/><sp/><sp/>264,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>265,<sp/><sp/><sp/><sp/>59,<sp/><sp/><sp/><sp/>61,<sp/><sp/><sp/>124,<sp/><sp/><sp/><sp/>40,<sp/><sp/><sp/><sp/>41,<sp/><sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>93,<sp/><sp/><sp/><sp/>42,<sp/><sp/><sp/><sp/>43</highlight></codeline>
<codeline lineno="498"><highlight class="normal">};</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYR1[YYN]<sp/>--<sp/>Symbol<sp/>number<sp/>of<sp/>symbol<sp/>that<sp/>rule<sp/>YYN<sp/>derives.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yyr1[]<sp/>=</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>20,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/>23,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/>25,<sp/><sp/><sp/><sp/>25,<sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>29,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>34,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>35,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>35</highlight></codeline>
<codeline lineno="508"><highlight class="normal">};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYR2[YYN]<sp/>--<sp/>Number<sp/>of<sp/>symbols<sp/>composing<sp/>right<sp/>hand<sp/>side<sp/>of<sp/>rule<sp/>YYN.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yyr2[]<sp/>=</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/>5,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>3,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="517"><highlight class="normal">};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYDEFACT[STATE-NAME]<sp/>--<sp/>Default<sp/>rule<sp/>to<sp/>reduce<sp/>with<sp/>in<sp/>state</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/>STATE-NUM<sp/>when<sp/>YYTABLE<sp/>doesn&apos;t<sp/>specify<sp/>something<sp/>else<sp/>to<sp/>do.<sp/><sp/>Zero</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/>means<sp/>the<sp/>default<sp/>is<sp/>an<sp/>error.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yydefact[]<sp/>=</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>20,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>30,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>25,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>19</highlight></codeline>
<codeline lineno="530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYDEFGOTO[NTERM-NUM].<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_int8<sp/>yydefgoto[]<sp/>=</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>35,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>36,<sp/><sp/><sp/><sp/>37,<sp/><sp/><sp/><sp/>38,<sp/><sp/><sp/><sp/>39,<sp/><sp/><sp/><sp/>40,<sp/><sp/><sp/><sp/>41</highlight></codeline>
<codeline lineno="537"><highlight class="normal">};</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYPACT[STATE-NUM]<sp/>--<sp/>Index<sp/>in<sp/>YYTABLE<sp/>of<sp/>the<sp/>portion<sp/>describing</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/>STATE-NUM.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYPACT_NINF<sp/>-37</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_int8<sp/>yypact[]<sp/>=</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>-2,<sp/><sp/><sp/><sp/>36,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>33,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>34,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>-4,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>38,<sp/><sp/><sp/><sp/>39,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>-4,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>-4,<sp/><sp/><sp/><sp/>-4,<sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>-4,<sp/><sp/><sp/><sp/>42,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>20,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>-4,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>42,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>-4</highlight></codeline>
<codeline lineno="550"><highlight class="normal">};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYPGOTO[NTERM-NUM].<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_int8<sp/>yypgoto[]<sp/>=</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>41,<sp/><sp/><sp/><sp/>43,<sp/><sp/><sp/>-12,<sp/><sp/><sp/>-16,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/><sp/><sp/>-36,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/>-37,<sp/><sp/><sp/><sp/>15</highlight></codeline>
<codeline lineno="557"><highlight class="normal">};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYTABLE[YYPACT[STATE-NUM]].<sp/><sp/>What<sp/>to<sp/>do<sp/>in<sp/>state<sp/>STATE-NUM.<sp/><sp/>If</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/>positive,<sp/>shift<sp/>that<sp/>token.<sp/><sp/>If<sp/>negative,<sp/>reduce<sp/>the<sp/>rule<sp/>which</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/>number<sp/>is<sp/>the<sp/>opposite.<sp/><sp/>If<sp/>zero,<sp/>do<sp/>what<sp/>YYDEFACT<sp/>says.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/>If<sp/>YYTABLE_NINF,<sp/>syntax<sp/>error.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYTABLE_NINF<sp/>-1</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yytable[]<sp/>=</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>50,<sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/><sp/>6,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/>34,<sp/><sp/><sp/><sp/>44,<sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/><sp/>34,<sp/><sp/><sp/><sp/>46,<sp/><sp/><sp/><sp/>47,<sp/><sp/><sp/><sp/>18,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>50,<sp/><sp/><sp/><sp/>49,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>56,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>48,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>49,<sp/><sp/><sp/><sp/>54,<sp/><sp/><sp/><sp/>49,<sp/><sp/><sp/><sp/>49,<sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>52,<sp/><sp/><sp/><sp/>53,<sp/><sp/><sp/><sp/>15,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>20,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>25,<sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/>57,<sp/><sp/><sp/><sp/>45,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>42,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>43,<sp/><sp/><sp/><sp/>51,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>23</highlight></codeline>
<codeline lineno="572"><highlight class="normal">};</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_int8<sp/>yycheck[]<sp/>=</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>36,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>11,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/>33,<sp/><sp/><sp/><sp/>34,<sp/><sp/><sp/><sp/>11,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>57,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/>11,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/><sp/>4,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>49,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>11,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/>11</highlight></codeline>
<codeline lineno="582"><highlight class="normal">};</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYSTOS[STATE-NUM]<sp/>--<sp/>The<sp/>(internal<sp/>number<sp/>of<sp/>the)<sp/>accessing</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>symbol<sp/>of<sp/>state<sp/>STATE-NUM.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yytype_uint8<sp/>yystos[]<sp/>=</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>23,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/>6,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>25,<sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>26,<sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/><sp/>28,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>12,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>30,<sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/>33,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>34,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>35,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>13,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/>17,<sp/><sp/><sp/><sp/>30</highlight></codeline>
<codeline lineno="594"><highlight class="normal">};</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>yyerrok<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yyerrstatus<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>yyclearin<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yychar<sp/>=<sp/>YYEMPTY)</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYEMPTY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-2)</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYEOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYACCEPT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>yyacceptlab</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYABORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>yyabortlab</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>yyerrorlab</highlight></codeline>
<codeline lineno="604"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Like<sp/>YYERROR<sp/>except<sp/>do<sp/>call<sp/>yyerror.<sp/><sp/>This<sp/>remains<sp/>here<sp/>temporarily</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/>to<sp/>ease<sp/>the<sp/>transition<sp/>to<sp/>the<sp/>new<sp/>meaning<sp/>of<sp/>YYERROR,<sp/>for<sp/>GCC.</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/>Once<sp/>GCC<sp/>version<sp/>2<sp/>has<sp/>supplanted<sp/>version<sp/>1,<sp/>this<sp/>can<sp/>go.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYFAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>yyerrlab</highlight></codeline>
<codeline lineno="611"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYRECOVERING()<sp/><sp/>(!!yyerrstatus)</highlight></codeline>
<codeline lineno="613"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYBACKUP(Token,<sp/>Value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor">do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"><sp/><sp/>if<sp/>(yychar<sp/>==<sp/>YYEMPTY<sp/>&amp;&amp;<sp/>yylen<sp/>==<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>yychar<sp/>=<sp/>(Token);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>yylval<sp/>=<sp/>(Value);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>yytoken<sp/>=<sp/>YYTRANSLATE<sp/>(yychar);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="621"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>YYPOPSTACK<sp/>(1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>yybackup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>yyerror<sp/>(yyscanner,<sp/>jsgf,<sp/>YY_(&quot;syntax<sp/>error:<sp/>cannot<sp/>back<sp/>up&quot;));<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>YYERROR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor">while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYTERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYERRCODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>256</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYLLOC_DEFAULT<sp/>--<sp/>Set<sp/>CURRENT<sp/>to<sp/>span<sp/>from<sp/>RHS[1]<sp/>to<sp/>RHS[N].</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/>If<sp/>N<sp/>is<sp/>0,<sp/>then<sp/>set<sp/>CURRENT<sp/>to<sp/>the<sp/>empty<sp/>location<sp/>which<sp/>ends</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/>the<sp/>previous<sp/>symbol:<sp/>RHS[0]<sp/>(always<sp/>defined).<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYRHSLOC(Rhs,<sp/>K)<sp/>((Rhs)[K])</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>YYLLOC_DEFAULT</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYLLOC_DEFAULT(Current,<sp/>Rhs,<sp/>N)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(YYID<sp/>(N))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Current).first_line<sp/><sp/><sp/>=<sp/>YYRHSLOC<sp/>(Rhs,<sp/>1).first_line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Current).first_column<sp/>=<sp/>YYRHSLOC<sp/>(Rhs,<sp/>1).first_column;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Current).last_line<sp/><sp/><sp/><sp/>=<sp/>YYRHSLOC<sp/>(Rhs,<sp/>N).last_line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Current).last_column<sp/><sp/>=<sp/>YYRHSLOC<sp/>(Rhs,<sp/>N).last_column;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Current).first_line<sp/><sp/><sp/>=<sp/>(Current).last_line<sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYRHSLOC<sp/>(Rhs,<sp/>0).last_line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="655"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Current).first_column<sp/>=<sp/>(Current).last_column<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="656"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYRHSLOC<sp/>(Rhs,<sp/>0).last_column;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YY_LOCATION_PRINT<sp/>--<sp/>Print<sp/>the<sp/>location<sp/>on<sp/>the<sp/>stream.</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/>This<sp/>macro<sp/>was<sp/>not<sp/>mandated<sp/>originally:<sp/>define<sp/>only<sp/>if<sp/>we<sp/>know</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/>we<sp/>won&apos;t<sp/>break<sp/>user<sp/>code:<sp/>when<sp/>these<sp/>are<sp/>the<sp/>locations<sp/>we<sp/>know.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_LOCATION_PRINT</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>YYLTYPE_IS_TRIVIAL</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YY_LOCATION_PRINT(File,<sp/>Loc)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/>&quot;%d.%d-%d.%d&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Loc).first_line,<sp/>(Loc).first_column,<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Loc).last_line,<sp/><sp/>(Loc).last_column)</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YY_LOCATION_PRINT(File,<sp/>Loc)<sp/>((void)<sp/>0)</highlight></codeline>
<codeline lineno="674"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYLEX<sp/>--<sp/>calling<sp/>`yylex&apos;<sp/>with<sp/>the<sp/>right<sp/>arguments.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYLEX_PARAM</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYLEX<sp/>yylex<sp/>(&amp;yylval,<sp/>YYLEX_PARAM)</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYLEX<sp/>yylex<sp/>(&amp;yylval,<sp/>yyscanner)</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enable<sp/>debugging<sp/>if<sp/>requested.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YYDEBUG</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>YYFPRINTF</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>INFRINGES<sp/>ON<sp/>USER<sp/>NAME<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>YYFPRINTF<sp/>fprintf</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="693"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYDPRINTF(Args)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="695"><highlight class="preprocessor">do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"><sp/><sp/>if<sp/>(yydebug)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>Args;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="698"><highlight class="preprocessor">}<sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="699"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YY_SYMBOL_PRINT(Title,<sp/>Type,<sp/>Value,<sp/>Location)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="701"><highlight class="preprocessor">do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="702"><highlight class="preprocessor"><sp/><sp/>if<sp/>(yydebug)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/>&quot;%s<sp/>&quot;,<sp/>Title);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>yy_symbol_print<sp/>(stderr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type,<sp/>Value,<sp/>yyscanner,<sp/>jsgf);<sp/>\</highlight></codeline>
<codeline lineno="707"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/>&quot;\n&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="709"><highlight class="preprocessor">}<sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------.</highlight></codeline>
<codeline lineno="713"><highlight class="comment">|<sp/>Print<sp/>this<sp/>symbol<sp/>on<sp/>YYOUTPUT.<sp/><sp/>|</highlight></codeline>
<codeline lineno="714"><highlight class="comment">`--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">/*ARGSUSED*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="719"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal">yy_symbol_value_print<sp/>(FILE<sp/>*yyoutput,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype,<sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yyvaluep,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="722"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">yy_symbol_value_print<sp/>(yyoutput,<sp/>yytype,<sp/>yyvaluep,<sp/>yyscanner,<sp/>jsgf)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*yyoutput;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>const<sp/>*<sp/>const<sp/>yyvaluep;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!yyvaluep)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>YYUSE<sp/>(yyscanner);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>YYUSE<sp/>(jsgf);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>YYPRINT</highlight></codeline>
<codeline lineno="736"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yytype<sp/>&lt;<sp/>YYNTOKENS)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>YYPRINT<sp/>(yyoutput,<sp/>yytoknum[yytype],<sp/>*yyvaluep);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="739"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>YYUSE<sp/>(yyoutput);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="741"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(yytype)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------.</highlight></codeline>
<codeline lineno="750"><highlight class="comment">|<sp/>Print<sp/>this<sp/>symbol<sp/>on<sp/>YYOUTPUT.<sp/><sp/>|</highlight></codeline>
<codeline lineno="751"><highlight class="comment">`--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal">yy_symbol_print<sp/>(FILE<sp/>*yyoutput,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype,<sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yyvaluep,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="758"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal">yy_symbol_print<sp/>(yyoutput,<sp/>yytype,<sp/>yyvaluep,<sp/>yyscanner,<sp/>jsgf)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*yyoutput;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>const<sp/>*<sp/>const<sp/>yyvaluep;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yytype<sp/>&lt;<sp/>YYNTOKENS)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(yyoutput,<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>%s<sp/>(&quot;</highlight><highlight class="normal">,<sp/>yytname[yytype]);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(yyoutput,<sp/></highlight><highlight class="stringliteral">&quot;nterm<sp/>%s<sp/>(&quot;</highlight><highlight class="normal">,<sp/>yytname[yytype]);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>yy_symbol_value_print<sp/>(yyoutput,<sp/>yytype,<sp/>yyvaluep,<sp/>yyscanner,<sp/>jsgf);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>YYFPRINTF<sp/>(yyoutput,<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------.</highlight></codeline>
<codeline lineno="777"><highlight class="comment">|<sp/>yy_stack_print<sp/>--<sp/>Print<sp/>the<sp/>state<sp/>stack<sp/>from<sp/>its<sp/>BOTTOM<sp/>up<sp/>to<sp/>its<sp/>|</highlight></codeline>
<codeline lineno="778"><highlight class="comment">|<sp/>TOP<sp/>(included).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="779"><highlight class="comment">`------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal">yy_stack_print<sp/>(yytype_int16<sp/>*yybottom,<sp/>yytype_int16<sp/>*yytop)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal">yy_stack_print<sp/>(yybottom,<sp/>yytop)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>yytype_int16<sp/>*yybottom;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>yytype_int16<sp/>*yytop;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>yybottom<sp/>&lt;=<sp/>yytop;<sp/>yybottom++)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yybot<sp/>=<sp/>*yybottom;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>yybot);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YY_STACK_PRINT(Bottom,<sp/>Top)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="802"><highlight class="preprocessor">do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="803"><highlight class="preprocessor"><sp/><sp/>if<sp/>(yydebug)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="804"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>yy_stack_print<sp/>((Bottom),<sp/>(Top));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="805"><highlight class="preprocessor">}<sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="806"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------.</highlight></codeline>
<codeline lineno="809"><highlight class="comment">|<sp/>Report<sp/>that<sp/>the<sp/>YYRULE<sp/>is<sp/>going<sp/>to<sp/>be<sp/>reduced.<sp/><sp/>|</highlight></codeline>
<codeline lineno="810"><highlight class="comment">`------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="813"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="814"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal">yy_reduce_print<sp/>(<ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvsp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyrule,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="817"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">yy_reduce_print<sp/>(yyvsp,<sp/>yyrule,<sp/>yyscanner,<sp/>jsgf)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvsp;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyrule;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="824"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yynrhs<sp/>=<sp/>yyr2[yyrule];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyi;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yylno<sp/>=<sp/>yyrline[yyrule];</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Reducing<sp/>stack<sp/>by<sp/>rule<sp/>%d<sp/>(line<sp/>%lu):\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyrule<sp/>-<sp/>1,<sp/>yylno);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>symbols<sp/>being<sp/>reduced.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yyi<sp/>=<sp/>0;<sp/>yyi<sp/>&lt;<sp/>yynrhs;<sp/>yyi++)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>$%d<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>yyi<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy_symbol_print<sp/>(stderr,<sp/>yyrhs[yyprhs[yyrule]<sp/>+<sp/>yyi],</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(yyvsp[(yyi<sp/>+<sp/>1)<sp/>-<sp/>(yynrhs)])</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>yyscanner,<sp/>jsgf);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYFPRINTF<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YY_REDUCE_PRINT(Rule)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="842"><highlight class="preprocessor">do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="843"><highlight class="preprocessor"><sp/><sp/>if<sp/>(yydebug)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="844"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>yy_reduce_print<sp/>(yyvsp,<sp/>Rule,<sp/>yyscanner,<sp/>jsgf);<sp/>\</highlight></codeline>
<codeline lineno="845"><highlight class="preprocessor">}<sp/>while<sp/>(YYID<sp/>(0))</highlight></codeline>
<codeline lineno="846"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Nonzero<sp/>means<sp/>print<sp/>parse<sp/>trace.<sp/><sp/>It<sp/>is<sp/>left<sp/>uninitialized<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/>multiple<sp/>parsers<sp/>can<sp/>coexist.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yydebug;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!YYDEBUG<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="851"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYDPRINTF(Args)</highlight></codeline>
<codeline lineno="852"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YY_SYMBOL_PRINT(Title,<sp/>Type,<sp/>Value,<sp/>Location)</highlight></codeline>
<codeline lineno="853"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YY_STACK_PRINT(Bottom,<sp/>Top)</highlight></codeline>
<codeline lineno="854"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YY_REDUCE_PRINT(Rule)</highlight></codeline>
<codeline lineno="855"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!YYDEBUG<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="856"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYINITDEPTH<sp/>--<sp/>initial<sp/>size<sp/>of<sp/>the<sp/>parser&apos;s<sp/>stacks.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YYINITDEPTH</highlight></codeline>
<codeline lineno="860"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYINITDEPTH<sp/>200</highlight></codeline>
<codeline lineno="861"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="862"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>YYMAXDEPTH<sp/>--<sp/>maximum<sp/>size<sp/>the<sp/>stacks<sp/>can<sp/>grow<sp/>to<sp/>(effective<sp/>only</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/>if<sp/>the<sp/>built-in<sp/>stack<sp/>extension<sp/>method<sp/>is<sp/>used).</highlight></codeline>
<codeline lineno="865"><highlight class="comment"></highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/>Do<sp/>not<sp/>make<sp/>this<sp/>value<sp/>too<sp/>large;<sp/>the<sp/>results<sp/>are<sp/>undefined<sp/>if</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/><sp/><sp/>YYSTACK_ALLOC_MAXIMUM<sp/>&lt;<sp/>YYSTACK_BYTES<sp/>(YYMAXDEPTH)</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/>evaluated<sp/>with<sp/>infinite-precision<sp/>integer<sp/>arithmetic.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YYMAXDEPTH</highlight></codeline>
<codeline lineno="871"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>YYMAXDEPTH<sp/>10000</highlight></codeline>
<codeline lineno="872"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="873"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="877"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>yystrlen</highlight></codeline>
<codeline lineno="879"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined<sp/>__GLIBC__<sp/>&amp;&amp;<sp/>defined<sp/>_STRING_H</highlight></codeline>
<codeline lineno="880"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>yystrlen<sp/>strlen</highlight></codeline>
<codeline lineno="881"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="882"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>length<sp/>of<sp/>YYSTR.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="884"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="885"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>YYSIZE_T</highlight></codeline>
<codeline lineno="886"><highlight class="normal">yystrlen<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yystr)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="888"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>YYSIZE_T</highlight></codeline>
<codeline lineno="889"><highlight class="normal">yystrlen<sp/>(yystr)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yystr;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="892"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>YYSIZE_T<sp/>yylen;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yylen<sp/>=<sp/>0;<sp/>yystr[yylen];<sp/>yylen++)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yylen;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="899"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="900"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>yystpcpy</highlight></codeline>
<codeline lineno="902"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined<sp/>__GLIBC__<sp/>&amp;&amp;<sp/>defined<sp/>_STRING_H<sp/>&amp;&amp;<sp/>defined<sp/>_GNU_SOURCE</highlight></codeline>
<codeline lineno="903"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>yystpcpy<sp/>stpcpy</highlight></codeline>
<codeline lineno="904"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="905"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Copy<sp/>YYSRC<sp/>to<sp/>YYDEST,<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>the<sp/>terminating<sp/>&apos;\0&apos;<sp/>in</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/><sp/><sp/>YYDEST.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="909"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="910"><highlight class="normal">yystpcpy<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yydest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yysrc)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="912"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="913"><highlight class="normal">yystpcpy<sp/>(yydest,<sp/>yysrc)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>char<sp/>*yydest;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yysrc;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="917"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yyd<sp/>=<sp/>yydest;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yys<sp/>=<sp/>yysrc;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*yyd++<sp/>=<sp/>*yys++)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yyd<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="927"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="928"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>yytnamerr</highlight></codeline>
<codeline lineno="930"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Copy<sp/>to<sp/>YYRES<sp/>the<sp/>contents<sp/>of<sp/>YYSTR<sp/>after<sp/>stripping<sp/>away<sp/>unnecessary</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/>quotes<sp/>and<sp/>backslashes,<sp/>so<sp/>that<sp/>it&apos;s<sp/>suitable<sp/>for<sp/>yyerror.<sp/><sp/>The</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/>heuristic<sp/>is<sp/>that<sp/>double-quoting<sp/>is<sp/>unnecessary<sp/>unless<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/>contains<sp/>an<sp/>apostrophe,<sp/>a<sp/>comma,<sp/>or<sp/>backslash<sp/>(other<sp/>than</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/><sp/><sp/>backslash-backslash).<sp/><sp/>YYSTR<sp/>is<sp/>taken<sp/>from<sp/>yytname.<sp/><sp/>If<sp/>YYRES<sp/>is</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/>null,<sp/>do<sp/>not<sp/>copy;<sp/>instead,<sp/>return<sp/>the<sp/>length<sp/>of<sp/>what<sp/>the<sp/>result</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/>would<sp/>have<sp/>been.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>YYSIZE_T</highlight></codeline>
<codeline lineno="938"><highlight class="normal">yytnamerr<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yyres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yystr)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*yystr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yyn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*yyp<sp/>=<sp/>yystr;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*++yyp)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>do_not_strip_quotes;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*++yyp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>do_not_strip_quotes;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyres)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyres[yyn]<sp/>=<sp/>*yyp;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyn++;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyres)</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyres[yyn]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yyn;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>do_not_strip_quotes:<sp/>;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>yyres)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yystrlen<sp/>(yystr);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yystpcpy<sp/>(yyres,<sp/>yystr)<sp/>-<sp/>yyres;</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="976"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>into<sp/>YYRESULT<sp/>an<sp/>error<sp/>message<sp/>about<sp/>the<sp/>unexpected<sp/>token</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/><sp/><sp/>YYCHAR<sp/>while<sp/>in<sp/>state<sp/>YYSTATE.<sp/><sp/>Return<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>copied,</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/>including<sp/>the<sp/>terminating<sp/>null<sp/>byte.<sp/><sp/>If<sp/>YYRESULT<sp/>is<sp/>null,<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/>copy<sp/>anything;<sp/>just<sp/>return<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>that<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/>copied.<sp/><sp/>As<sp/>a<sp/>special<sp/>case,<sp/>return<sp/>0<sp/>if<sp/>an<sp/>ordinary<sp/>&quot;syntax<sp/>error&quot;</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/>message<sp/>will<sp/>do.<sp/><sp/>Return<sp/>YYSIZE_MAXIMUM<sp/>if<sp/>overflow<sp/>occurs<sp/>during</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/>size<sp/>calculation.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>YYSIZE_T</highlight></codeline>
<codeline lineno="985"><highlight class="normal">yysyntax_error<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yyresult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yystate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yychar)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyn<sp/>=<sp/>yypact[yystate];</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(YYPACT_NINF<sp/>&lt;<sp/>yyn<sp/>&amp;&amp;<sp/>yyn<sp/>&lt;=<sp/>YYLAST))</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype<sp/>=<sp/>YYTRANSLATE<sp/>(yychar);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yysize0<sp/>=<sp/>yytnamerr<sp/>(0,<sp/>yytname[yytype]);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yysize<sp/>=<sp/>yysize0;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yysize1;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yysize_overflow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>YYERROR_VERBOSE_ARGS_MAXIMUM<sp/>=<sp/>5<sp/>};</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyx;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>0</highlight></codeline>
<codeline lineno="1003"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>so<sp/>xgettext<sp/>sees<sp/>the<sp/>translatable<sp/>formats<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructed<sp/>on<sp/>the<sp/>fly.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error,<sp/>unexpected<sp/>%s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error,<sp/>unexpected<sp/>%s,<sp/>expecting<sp/>%s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error,<sp/>unexpected<sp/>%s,<sp/>expecting<sp/>%s<sp/>or<sp/>%s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error,<sp/>unexpected<sp/>%s,<sp/>expecting<sp/>%s<sp/>or<sp/>%s<sp/>or<sp/>%s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error,<sp/>unexpected<sp/>%s,<sp/>expecting<sp/>%s<sp/>or<sp/>%s<sp/>or<sp/>%s<sp/>or<sp/>%s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="1011"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yyfmt;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*yyf;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yyunexpected[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;syntax<sp/>error,<sp/>unexpected<sp/>%s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yyexpecting[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>expecting<sp/>%s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>yyor[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>%s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>yyformat[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>yyunexpected</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>yyexpecting<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((YYERROR_VERBOSE_ARGS_MAXIMUM<sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>yyor<sp/>-<sp/>1))];</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*yyprefix<sp/>=<sp/>yyexpecting;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>YYX<sp/>at<sp/>-YYN<sp/>if<sp/>negative<sp/>to<sp/>avoid<sp/>negative<sp/>indexes<sp/>in</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYCHECK.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyxbegin<sp/>=<sp/>yyn<sp/>&lt;<sp/>0<sp/>?<sp/>-yyn<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stay<sp/>within<sp/>bounds<sp/>of<sp/>both<sp/>yycheck<sp/>and<sp/>yytname.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yychecklim<sp/>=<sp/>YYLAST<sp/>-<sp/>yyn<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyxend<sp/>=<sp/>yychecklim<sp/>&lt;<sp/>YYNTOKENS<sp/>?<sp/>yychecklim<sp/>:<sp/>YYNTOKENS;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yycount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyarg[0]<sp/>=<sp/>yytname[yytype];</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyfmt<sp/>=<sp/>yystpcpy<sp/>(yyformat,<sp/>yyunexpected);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yyx<sp/>=<sp/>yyxbegin;<sp/>yyx<sp/>&lt;<sp/>yyxend;<sp/>++yyx)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yycheck[yyx<sp/>+<sp/>yyn]<sp/>==<sp/>yyx<sp/>&amp;&amp;<sp/>yyx<sp/>!=<sp/>YYTERROR)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yycount<sp/>==<sp/>YYERROR_VERBOSE_ARGS_MAXIMUM)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yycount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yysize<sp/>=<sp/>yysize0;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyformat[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>yyunexpected<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyarg[yycount++]<sp/>=<sp/>yytname[yyx];</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yysize1<sp/>=<sp/>yysize<sp/>+<sp/>yytnamerr<sp/>(0,<sp/>yytname[yyx]);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yysize_overflow<sp/>|=<sp/>(yysize1<sp/>&lt;<sp/>yysize);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yysize<sp/>=<sp/>yysize1;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyfmt<sp/>=<sp/>yystpcpy<sp/>(yyfmt,<sp/>yyprefix);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyprefix<sp/>=<sp/>yyor;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyf<sp/>=<sp/>YY_(yyformat);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yysize1<sp/>=<sp/>yysize<sp/>+<sp/>yystrlen<sp/>(yyf);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yysize_overflow<sp/>|=<sp/>(yysize1<sp/>&lt;<sp/>yysize);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yysize<sp/>=<sp/>yysize1;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yysize_overflow)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>YYSIZE_MAXIMUM;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyresult)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Avoid<sp/>sprintf,<sp/>as<sp/>that<sp/>infringes<sp/>on<sp/>the<sp/>user&apos;s<sp/>name<sp/>space.</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Don&apos;t<sp/>have<sp/>undefined<sp/>behavior<sp/>even<sp/>if<sp/>the<sp/>translation</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>produced<sp/>a<sp/>string<sp/>with<sp/>the<sp/>wrong<sp/>number<sp/>of<sp/>&quot;%s&quot;s.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yyp<sp/>=<sp/>yyresult;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*yyp<sp/>=<sp/>*yyf)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*yyp<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>yyf[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>yyi<sp/>&lt;<sp/>yycount)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyp<sp/>+=<sp/>yytnamerr<sp/>(yyp,<sp/>yyarg[yyi++]);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyf<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyp++;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyf++;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yysize;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>YYERROR_VERBOSE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1085"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------.</highlight></codeline>
<codeline lineno="1088"><highlight class="comment">|<sp/>Release<sp/>the<sp/>memory<sp/>associated<sp/>to<sp/>this<sp/>symbol.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1089"><highlight class="comment">`-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment">/*ARGSUSED*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="1093"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="1094"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal">yydestruct<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yymsg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype,<sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvaluep,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1097"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal">yydestruct<sp/>(yymsg,<sp/>yytype,<sp/>yyvaluep,<sp/>yyscanner,<sp/>jsgf)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yymsg;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytype;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvaluep;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1105"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>YYUSE<sp/>(yyvaluep);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>YYUSE<sp/>(yyscanner);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>YYUSE<sp/>(jsgf);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!yymsg)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>yymsg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Deleting&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>YY_SYMBOL_PRINT<sp/>(yymsg,<sp/>yytype,<sp/>yyvaluep,<sp/>yylocationp);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(yytype)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Prevent<sp/>warnings<sp/>from<sp/>-Wmissing-prototypes.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYPARSE_PARAM</highlight></codeline>
<codeline lineno="1124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__cplusplus</highlight></codeline>
<codeline lineno="1125"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyparse<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*YYPARSE_PARAM);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1127"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyparse<sp/>();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1129"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>YYPARSE_PARAM<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__cplusplus</highlight></codeline>
<codeline lineno="1131"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyparse<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1133"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyparse<sp/>();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>YYPARSE_PARAM<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1136"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------.</highlight></codeline>
<codeline lineno="1142"><highlight class="comment">|<sp/>yyparse<sp/>or<sp/>yypush_parse.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1143"><highlight class="comment">`-------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YYPARSE_PARAM</highlight></codeline>
<codeline lineno="1146"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="1147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="1148"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal">yyparse<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*YYPARSE_PARAM)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1151"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal">yyparse<sp/>(YYPARSE_PARAM)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>*YYPARSE_PARAM;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1155"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>YYPARSE_PARAM<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1156"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__STDC__<sp/>||<sp/>defined<sp/>__C99__FUNC__<sp/>\</highlight></codeline>
<codeline lineno="1157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>||<sp/>defined<sp/>__cplusplus<sp/>||<sp/>defined<sp/>_MSC_VER)</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal">yyparse<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>yyscanner,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1161"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal">yyparse<sp/>(yyscanner,<sp/>jsgf)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>void*<sp/>yyscanner;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1166"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1167"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>lookahead<sp/>symbol.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yychar;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>semantic<sp/>value<sp/>of<sp/>the<sp/>lookahead<sp/>symbol.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>yylval;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>syntax<sp/>errors<sp/>so<sp/>far.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yynerrs;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yystate;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>tokens<sp/>to<sp/>shift<sp/>before<sp/>error<sp/>messages<sp/>enabled.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyerrstatus;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>stacks<sp/>and<sp/>their<sp/>tools:</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`yyss&apos;:<sp/>related<sp/>to<sp/>states.</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`yyvs&apos;:<sp/>related<sp/>to<sp/>semantic<sp/>values.</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"></highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Refer<sp/>to<sp/>the<sp/>stacks<sp/>thru<sp/>separate<sp/>pointers,<sp/>to<sp/>allow<sp/>yyoverflow</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>reallocate<sp/>them<sp/>elsewhere.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>state<sp/>stack.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>yytype_int16<sp/>yyssa[YYINITDEPTH];</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>yytype_int16<sp/>*yyss;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>yytype_int16<sp/>*yyssp;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>semantic<sp/>value<sp/>stack.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>yyvsa[YYINITDEPTH];</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvs;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvsp;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yystacksize;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyn;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyresult;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lookahead<sp/>token<sp/>as<sp/>an<sp/>internal<sp/>(translated)<sp/>token<sp/>number.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yytoken;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>variables<sp/>used<sp/>to<sp/>return<sp/>semantic<sp/>value<sp/>and<sp/>location<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>action<sp/>routines.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>yyval;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="1209"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Buffer<sp/>for<sp/>error<sp/>messages,<sp/>and<sp/>its<sp/>allocated<sp/>size.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>yymsgbuf[128];</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yymsg<sp/>=<sp/>yymsgbuf;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>YYSIZE_T<sp/>yymsg_alloc<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>yymsgbuf;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1214"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YYPOPSTACK(N)<sp/><sp/><sp/>(yyvsp<sp/>-=<sp/>(N),<sp/>yyssp<sp/>-=<sp/>(N))</highlight></codeline>
<codeline lineno="1216"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>symbols<sp/>on<sp/>the<sp/>RHS<sp/>of<sp/>the<sp/>reduced<sp/>rule.</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Keep<sp/>to<sp/>zero<sp/>when<sp/>no<sp/>symbol<sp/>should<sp/>be<sp/>popped.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yylen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>yytoken<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>yyss<sp/>=<sp/>yyssa;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>yyvs<sp/>=<sp/>yyvsa;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>yystacksize<sp/>=<sp/>YYINITDEPTH;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>YYDPRINTF<sp/>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>parse\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>yystate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>yyerrstatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>yynerrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>yychar<sp/>=<sp/>YYEMPTY;<sp/></highlight><highlight class="comment">/*<sp/>Cause<sp/>a<sp/>token<sp/>to<sp/>be<sp/>read.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>stack<sp/>pointers.</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Waste<sp/>one<sp/>element<sp/>of<sp/>value<sp/>and<sp/>location<sp/>stack</highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>so<sp/>that<sp/>they<sp/>stay<sp/>on<sp/>the<sp/>same<sp/>level<sp/>as<sp/>the<sp/>state<sp/>stack.</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>The<sp/>wasted<sp/>elements<sp/>are<sp/>never<sp/>initialized.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>yyssp<sp/>=<sp/>yyss;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>yyvsp<sp/>=<sp/>yyvs;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yysetstate;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------.</highlight></codeline>
<codeline lineno="1243"><highlight class="comment">|<sp/>yynewstate<sp/>--<sp/>Push<sp/>a<sp/>new<sp/>state,<sp/>which<sp/>is<sp/>found<sp/>in<sp/>yystate.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1244"><highlight class="comment">`------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/>yynewstate:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>all<sp/>cases,<sp/>when<sp/>you<sp/>get<sp/>here,<sp/>the<sp/>value<sp/>and<sp/>location<sp/>stacks</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>have<sp/>just<sp/>been<sp/>pushed.<sp/><sp/>So<sp/>pushing<sp/>a<sp/>state<sp/>here<sp/>evens<sp/>the<sp/>stacks.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>yyssp++;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/>yysetstate:</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>*yyssp<sp/>=<sp/>yystate;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyss<sp/>+<sp/>yystacksize<sp/>-<sp/>1<sp/>&lt;=<sp/>yyssp)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>current<sp/>used<sp/>size<sp/>of<sp/>the<sp/>three<sp/>stacks,<sp/>in<sp/>elements.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yysize<sp/>=<sp/>yyssp<sp/>-<sp/>yyss<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>yyoverflow</highlight></codeline>
<codeline lineno="1259"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>user<sp/>a<sp/>chance<sp/>to<sp/>reallocate<sp/>the<sp/>stack.<sp/><sp/>Use<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these<sp/>so<sp/>that<sp/>the<sp/>&amp;&apos;s<sp/>don&apos;t<sp/>force<sp/>the<sp/>real<sp/>ones<sp/>into</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionYYSTYPE" kindref="compound">YYSTYPE</ref><sp/>*yyvs1<sp/>=<sp/>yyvs;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yytype_int16<sp/>*yyss1<sp/>=<sp/>yyss;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Each<sp/>stack<sp/>pointer<sp/>address<sp/>is<sp/>followed<sp/>by<sp/>the<sp/>size<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>in<sp/>use<sp/>in<sp/>that<sp/>stack,<sp/>in<sp/>bytes.<sp/><sp/>This<sp/>used<sp/>to<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditional<sp/>around<sp/>just<sp/>the<sp/>two<sp/>extra<sp/>args,<sp/>but<sp/>that<sp/>might</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>undefined<sp/>if<sp/>yyoverflow<sp/>is<sp/>a<sp/>macro.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyoverflow<sp/>(YY_(</highlight><highlight class="stringliteral">&quot;memory<sp/>exhausted&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;yyss1,<sp/>yysize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*yyssp),</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;yyvs1,<sp/>yysize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*yyvsp),</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;yystacksize);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyss<sp/>=<sp/>yyss1;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyvs<sp/>=<sp/>yyvs1;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>yyoverflow<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1279"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>YYSTACK_RELOCATE</highlight></codeline>
<codeline lineno="1280"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyexhaustedlab;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="1282"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extend<sp/>the<sp/>stack<sp/>our<sp/>own<sp/>way.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(YYMAXDEPTH<sp/>&lt;=<sp/>yystacksize)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyexhaustedlab;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yystacksize<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(YYMAXDEPTH<sp/>&lt;<sp/>yystacksize)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yystacksize<sp/>=<sp/>YYMAXDEPTH;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yytype_int16<sp/>*yyss1<sp/>=<sp/>yyss;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionyyalloc" kindref="compound">yyalloc</ref><sp/>*yyptr<sp/>=</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionyyalloc" kindref="compound">yyalloc</ref><sp/>*)<sp/>YYSTACK_ALLOC<sp/>(YYSTACK_BYTES<sp/>(yystacksize));</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>yyptr)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyexhaustedlab;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSTACK_RELOCATE<sp/>(yyss_alloc,<sp/>yyss);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSTACK_RELOCATE<sp/>(yyvs_alloc,<sp/>yyvs);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>undef<sp/>YYSTACK_RELOCATE</highlight></codeline>
<codeline lineno="1298"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyss1<sp/>!=<sp/>yyssa)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSTACK_FREE<sp/>(yyss1);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="1302"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>yyoverflow<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1303"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyssp<sp/>=<sp/>yyss<sp/>+<sp/>yysize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyvsp<sp/>=<sp/>yyvs<sp/>+<sp/>yysize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYDPRINTF<sp/>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>size<sp/>increased<sp/>to<sp/>%lu\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>yystacksize));</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyss<sp/>+<sp/>yystacksize<sp/>-<sp/>1<sp/>&lt;=<sp/>yyssp)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYABORT;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>YYDPRINTF<sp/>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;Entering<sp/>state<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>yystate));</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yystate<sp/>==<sp/>YYFINAL)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>YYACCEPT;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yybackup;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">/*-----------.</highlight></codeline>
<codeline lineno="1322"><highlight class="comment">|<sp/>yybackup.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1323"><highlight class="comment">`-----------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal">yybackup:</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>appropriate<sp/>processing<sp/>given<sp/>the<sp/>current<sp/>state.<sp/><sp/>Read<sp/>a</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>lookahead<sp/>token<sp/>if<sp/>we<sp/>need<sp/>one<sp/>and<sp/>don&apos;t<sp/>already<sp/>have<sp/>one.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>try<sp/>to<sp/>decide<sp/>what<sp/>to<sp/>do<sp/>without<sp/>reference<sp/>to<sp/>lookahead<sp/>token.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>yyn<sp/>=<sp/>yypact[yystate];</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyn<sp/>==<sp/>YYPACT_NINF)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yydefault;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>known<sp/>=&gt;<sp/>get<sp/>a<sp/>lookahead<sp/>token<sp/>if<sp/>don&apos;t<sp/>already<sp/>have<sp/>one.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>YYCHAR<sp/>is<sp/>either<sp/>YYEMPTY<sp/>or<sp/>YYEOF<sp/>or<sp/>a<sp/>valid<sp/>lookahead<sp/>symbol.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yychar<sp/>==<sp/>YYEMPTY)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYDPRINTF<sp/>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>a<sp/>token:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yychar<sp/>=<sp/>YYLEX;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yychar<sp/>&lt;=<sp/>YYEOF)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yychar<sp/>=<sp/>yytoken<sp/>=<sp/>YYEOF;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYDPRINTF<sp/>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;Now<sp/>at<sp/>end<sp/>of<sp/>input.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yytoken<sp/>=<sp/>YYTRANSLATE<sp/>(yychar);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_SYMBOL_PRINT<sp/>(</highlight><highlight class="stringliteral">&quot;Next<sp/>token<sp/>is&quot;</highlight><highlight class="normal">,<sp/>yytoken,<sp/>&amp;yylval,<sp/>&amp;yylloc);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>proper<sp/>action<sp/>on<sp/>seeing<sp/>token<sp/>YYTOKEN<sp/>is<sp/>to<sp/>reduce<sp/>or<sp/>to</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>detect<sp/>an<sp/>error,<sp/>take<sp/>that<sp/>action.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>yyn<sp/>+=<sp/>yytoken;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyn<sp/>&lt;<sp/>0<sp/>||<sp/>YYLAST<sp/>&lt;<sp/>yyn<sp/>||<sp/>yycheck[yyn]<sp/>!=<sp/>yytoken)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yydefault;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>yyn<sp/>=<sp/>yytable[yyn];</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyn<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyn<sp/>==<sp/>0<sp/>||<sp/>yyn<sp/>==<sp/>YYTABLE_NINF)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyerrlab;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyn<sp/>=<sp/>-yyn;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyreduce;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>tokens<sp/>shifted<sp/>since<sp/>error;<sp/>after<sp/>three,<sp/>turn<sp/>off<sp/>error</highlight></codeline>
<codeline lineno="1369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>status.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyerrstatus)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>yyerrstatus--;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shift<sp/>the<sp/>lookahead<sp/>token.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>YY_SYMBOL_PRINT<sp/>(</highlight><highlight class="stringliteral">&quot;Shifting&quot;</highlight><highlight class="normal">,<sp/>yytoken,<sp/>&amp;yylval,<sp/>&amp;yylloc);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>shifted<sp/>token.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>yychar<sp/>=<sp/>YYEMPTY;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>yystate<sp/>=<sp/>yyn;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>*++yyvsp<sp/>=<sp/>yylval;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yynewstate;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------.</highlight></codeline>
<codeline lineno="1386"><highlight class="comment">|<sp/>yydefault<sp/>--<sp/>do<sp/>the<sp/>default<sp/>action<sp/>for<sp/>the<sp/>current<sp/>state.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1387"><highlight class="comment">`-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal">yydefault:</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>yyn<sp/>=<sp/>yydefact[yystate];</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyn<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyerrlab;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyreduce;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------.</highlight></codeline>
<codeline lineno="1396"><highlight class="comment">|<sp/>yyreduce<sp/>--<sp/>Do<sp/>a<sp/>reduction.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1397"><highlight class="comment">`-----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal">yyreduce:</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>yyn<sp/>is<sp/>the<sp/>number<sp/>of<sp/>a<sp/>rule<sp/>to<sp/>reduce<sp/>with.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>yylen<sp/>=<sp/>yyr2[yyn];</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>YYLEN<sp/>is<sp/>nonzero,<sp/>implement<sp/>the<sp/>default<sp/>value<sp/>of<sp/>the<sp/>action:</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>`$$<sp/>=<sp/>$1&apos;.</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"></highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>the<sp/>following<sp/>line<sp/>sets<sp/>YYVAL<sp/>to<sp/>garbage.</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>This<sp/>behavior<sp/>is<sp/>undocumented<sp/>and<sp/>Bison</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>users<sp/>should<sp/>not<sp/>rely<sp/>upon<sp/>it.<sp/><sp/>Assigning<sp/>to<sp/>YYVAL</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>unconditionally<sp/>makes<sp/>the<sp/>parser<sp/>a<sp/>bit<sp/>smaller,<sp/>and<sp/>it<sp/>avoids<sp/>a</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>GCC<sp/>warning<sp/>that<sp/>YYVAL<sp/>may<sp/>be<sp/>used<sp/>uninitialized.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>yyval<sp/>=<sp/>yyvsp[1-yylen];</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>YY_REDUCE_PRINT<sp/>(yyn);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(yyn)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>87<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1420"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf-&gt;<ref refid="structjsgf__s_1ab418c438a9c7f7e8aee029f006897656" kindref="member">name</ref><sp/>=<sp/>(yyvsp[(2)<sp/>-<sp/>(2)].name);<sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>91<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1427"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf-&gt;<ref refid="structjsgf__s_1ad459d19b47134a9670ffa4e8c466c0df" kindref="member">version</ref><sp/>=<sp/>(yyvsp[(2)<sp/>-<sp/>(3)].name);<sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>92<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1434"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf-&gt;<ref refid="structjsgf__s_1ad459d19b47134a9670ffa4e8c466c0df" kindref="member">version</ref><sp/>=<sp/>(yyvsp[(2)<sp/>-<sp/>(4)].name);<sp/>jsgf-&gt;<ref refid="structjsgf__s_1ac7cba2982a4c14503afbe1df5f208002" kindref="member">charset</ref><sp/>=<sp/>(yyvsp[(3)<sp/>-<sp/>(4)].name);<sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>93<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1441"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf-&gt;<ref refid="structjsgf__s_1ad459d19b47134a9670ffa4e8c466c0df" kindref="member">version</ref><sp/>=<sp/>(yyvsp[(2)<sp/>-<sp/>(5)].name);<sp/>jsgf-&gt;<ref refid="structjsgf__s_1ac7cba2982a4c14503afbe1df5f208002" kindref="member">charset</ref><sp/>=<sp/>(yyvsp[(3)<sp/>-<sp/>(5)].name);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsgf-&gt;<ref refid="structjsgf__s_1a0423fa12efb23c307765d7d010908e0f" kindref="member">locale</ref><sp/>=<sp/>(yyvsp[(4)<sp/>-<sp/>(5)].name);<sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>97<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.name)<sp/>=<sp/>(yyvsp[(2)<sp/>-<sp/>(3)].name);<sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>104<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1456"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf_import_rule(jsgf,<sp/>(yyvsp[(2)<sp/>-<sp/>(3)].name));<sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((yyvsp[(2)<sp/>-<sp/>(3)].name));<sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>111<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1463"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf_define_rule(jsgf,<sp/>(yyvsp[(1)<sp/>-<sp/>(4)].name),<sp/>(yyvsp[(3)<sp/>-<sp/>(4)].rhs),<sp/>0);<sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((yyvsp[(1)<sp/>-<sp/>(4)].name));<sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>17:</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>112<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1470"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>jsgf_define_rule(jsgf,<sp/>(yyvsp[(2)<sp/>-<sp/>(5)].name),<sp/>(yyvsp[(4)<sp/>-<sp/>(5)].rhs),<sp/>1);<sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((yyvsp[(2)<sp/>-<sp/>(5)].name));<sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>18:</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>115<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1477"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.rhs)<sp/>=<sp/>(yyvsp[(1)<sp/>-<sp/>(1)].rhs);<sp/>(yyval.rhs)-&gt;atoms<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>((yyval.rhs)-&gt;atoms);<sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>19:</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>116<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1484"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.rhs)<sp/>=<sp/>(yyvsp[(3)<sp/>-<sp/>(3)].rhs);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yyval.rhs)-&gt;atoms<sp/>=<sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref>((yyval.rhs)-&gt;atoms);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yyval.rhs)-&gt;alt<sp/>=<sp/>(yyvsp[(1)<sp/>-<sp/>(3)].rhs);<sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>20:</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>121<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1493"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.rhs)<sp/>=<sp/><ref refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" kindref="member">ckd_calloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*(yyval.rhs)));</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yyval.rhs)-&gt;atoms<sp/>=<sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>((yyval.rhs)-&gt;atoms,<sp/>(yyvsp[(1)<sp/>-<sp/>(1)].atom));<sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>21:</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>123<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1501"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.rhs)<sp/>=<sp/>(yyvsp[(1)<sp/>-<sp/>(2)].rhs);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yyval.rhs)-&gt;atoms<sp/>=<sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>((yyval.rhs)-&gt;atoms,<sp/>(yyvsp[(2)<sp/>-<sp/>(2)].atom));<sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>23:</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>128<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1509"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>(yyvsp[(1)<sp/>-<sp/>(2)].atom);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(yyval.atom)-&gt;tags<sp/>=<sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref>((yyval.atom)-&gt;tags,<sp/>(yyvsp[(2)<sp/>-<sp/>(2)].name));<sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>25:</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>133<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1517"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>(yyvsp[(2)<sp/>-<sp/>(2)].atom);<sp/>(yyval.atom)-&gt;weight<sp/>=<sp/>(yyvsp[(1)<sp/>-<sp/>(2)].weight);<sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>26:</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>136<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1524"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.rule)<sp/>=<sp/>jsgf_define_rule(jsgf,<sp/>NULL,<sp/>(yyvsp[(2)<sp/>-<sp/>(3)].rhs),<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>27:</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>139<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1531"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.rule)<sp/>=<sp/>jsgf_optional_new(jsgf,<sp/>(yyvsp[(2)<sp/>-<sp/>(3)].rhs));<sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>28:</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>142<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1538"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>jsgf_atom_new((yyvsp[(1)<sp/>-<sp/>(1)].name),<sp/>1.0);<sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((yyvsp[(1)<sp/>-<sp/>(1)].name));<sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>29:</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>143<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1545"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>jsgf_atom_new((yyvsp[(1)<sp/>-<sp/>(1)].name),<sp/>1.0);<sp/><ref refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" kindref="member">ckd_free</ref>((yyvsp[(1)<sp/>-<sp/>(1)].name));<sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>30:</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>144<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1552"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>jsgf_atom_new((yyvsp[(1)<sp/>-<sp/>(1)].rule)-&gt;name,<sp/>1.0);<sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>31:</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>145<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1559"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>jsgf_atom_new((yyvsp[(1)<sp/>-<sp/>(1)].rule)-&gt;name,<sp/>1.0);<sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32:</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>146<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1566"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>jsgf_kleene_new(jsgf,<sp/>(yyvsp[(1)<sp/>-<sp/>(2)].atom),<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>33:</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>147<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1573"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(yyval.atom)<sp/>=<sp/>jsgf_kleene_new(jsgf,<sp/>(yyvsp[(1)<sp/>-<sp/>(2)].atom),<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1455<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>1580<sp/>&quot;jsgf_parser.c&quot;</highlight></codeline>
<codeline lineno="1580"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>YY_SYMBOL_PRINT<sp/>(</highlight><highlight class="stringliteral">&quot;-&gt;<sp/>$$<sp/>=&quot;</highlight><highlight class="normal">,<sp/>yyr1[yyn],<sp/>&amp;yyval,<sp/>&amp;yyloc);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>YYPOPSTACK<sp/>(yylen);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>yylen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>YY_STACK_PRINT<sp/>(yyss,<sp/>yyssp);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>*++yyvsp<sp/>=<sp/>yyval;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>`shift&apos;<sp/>the<sp/>result<sp/>of<sp/>the<sp/>reduction.<sp/><sp/>Determine<sp/>what<sp/>state</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>that<sp/>goes<sp/>to,<sp/>based<sp/>on<sp/>the<sp/>state<sp/>we<sp/>popped<sp/>back<sp/>to<sp/>and<sp/>the<sp/>rule</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>number<sp/>reduced<sp/>by.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>yyn<sp/>=<sp/>yyr1[yyn];</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>yystate<sp/>=<sp/>yypgoto[yyn<sp/>-<sp/>YYNTOKENS]<sp/>+<sp/>*yyssp;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;=<sp/>yystate<sp/>&amp;&amp;<sp/>yystate<sp/>&lt;=<sp/>YYLAST<sp/>&amp;&amp;<sp/>yycheck[yystate]<sp/>==<sp/>*yyssp)</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>yystate<sp/>=<sp/>yytable[yystate];</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>yystate<sp/>=<sp/>yydefgoto[yyn<sp/>-<sp/>YYNTOKENS];</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yynewstate;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------.</highlight></codeline>
<codeline lineno="1606"><highlight class="comment">|<sp/>yyerrlab<sp/>--<sp/>here<sp/>on<sp/>detecting<sp/>error<sp/>|</highlight></codeline>
<codeline lineno="1607"><highlight class="comment">`------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal">yyerrlab:</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>not<sp/>already<sp/>recovering<sp/>from<sp/>an<sp/>error,<sp/>report<sp/>this<sp/>error.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!yyerrstatus)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++yynerrs;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="1614"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyerror<sp/>(yyscanner,<sp/>jsgf,<sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1616"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/>yysize<sp/>=<sp/>yysyntax_error<sp/>(0,<sp/>yystate,<sp/>yychar);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yymsg_alloc<sp/>&lt;<sp/>yysize<sp/>&amp;&amp;<sp/>yymsg_alloc<sp/>&lt;<sp/>YYSTACK_ALLOC_MAXIMUM)</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSIZE_T<sp/><ref refid="unionyyalloc" kindref="compound">yyalloc</ref><sp/>=<sp/>2<sp/>*<sp/>yysize;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(yysize<sp/>&lt;=<sp/>yyalloc<sp/>&amp;&amp;<sp/>yyalloc<sp/>&lt;=<sp/>YYSTACK_ALLOC_MAXIMUM))</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyalloc<sp/>=<sp/>YYSTACK_ALLOC_MAXIMUM;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yymsg<sp/>!=<sp/>yymsgbuf)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYSTACK_FREE<sp/>(yymsg);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yymsg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>YYSTACK_ALLOC<sp/>(yyalloc);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yymsg)</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yymsg_alloc<sp/>=<sp/>yyalloc;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yymsg<sp/>=<sp/>yymsgbuf;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yymsg_alloc<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>yymsgbuf;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>yysize<sp/>&amp;&amp;<sp/>yysize<sp/>&lt;=<sp/>yymsg_alloc)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>yysyntax_error<sp/>(yymsg,<sp/>yystate,<sp/>yychar);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyerror<sp/>(yyscanner,<sp/>jsgf,<sp/>yymsg);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyerror<sp/>(yyscanner,<sp/>jsgf,<sp/>YY_(</highlight><highlight class="stringliteral">&quot;syntax<sp/>error&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yysize<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyexhaustedlab;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1648"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyerrstatus<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>just<sp/>tried<sp/>and<sp/>failed<sp/>to<sp/>reuse<sp/>lookahead<sp/>token<sp/>after<sp/>an</highlight></codeline>
<codeline lineno="1655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error,<sp/>discard<sp/>it.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yychar<sp/>&lt;=<sp/>YYEOF)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>failure<sp/>if<sp/>at<sp/>end<sp/>of<sp/>input.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yychar<sp/>==<sp/>YYEOF)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYABORT;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yydestruct<sp/>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>discarding&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yytoken,<sp/>&amp;yylval,<sp/>yyscanner,<sp/>jsgf);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yychar<sp/>=<sp/>YYEMPTY;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Else<sp/>will<sp/>try<sp/>to<sp/>reuse<sp/>lookahead<sp/>token<sp/>after<sp/>shifting<sp/>the<sp/>error</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>token.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyerrlab1;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------.</highlight></codeline>
<codeline lineno="1677"><highlight class="comment">|<sp/>yyerrorlab<sp/>--<sp/>error<sp/>raised<sp/>explicitly<sp/>by<sp/>YYERROR.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1678"><highlight class="comment">`---------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal">yyerrorlab:</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pacify<sp/>compilers<sp/>like<sp/>GCC<sp/>when<sp/>the<sp/>user<sp/>code<sp/>never<sp/>invokes</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>YYERROR<sp/>and<sp/>the<sp/>label<sp/>yyerrorlab<sp/>therefore<sp/>never<sp/>appears<sp/>in<sp/>user</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>code.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="comment">/*CONSTCOND*/</highlight><highlight class="normal"><sp/>0)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyerrorlab;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>not<sp/>reclaim<sp/>the<sp/>symbols<sp/>of<sp/>the<sp/>rule<sp/>which<sp/>action<sp/>triggered</highlight></codeline>
<codeline lineno="1688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>this<sp/>YYERROR.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>YYPOPSTACK<sp/>(yylen);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/>yylen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/>YY_STACK_PRINT<sp/>(yyss,<sp/>yyssp);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/>yystate<sp/>=<sp/>*yyssp;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyerrlab1;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------.</highlight></codeline>
<codeline lineno="1697"><highlight class="comment">|<sp/>yyerrlab1<sp/>--<sp/>common<sp/>code<sp/>for<sp/>both<sp/>syntax<sp/>error<sp/>and<sp/>YYERROR.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1698"><highlight class="comment">`-------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal">yyerrlab1:</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>yyerrstatus<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Each<sp/>real<sp/>token<sp/>shifted<sp/>decrements<sp/>this.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yyn<sp/>=<sp/>yypact[yystate];</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyn<sp/>!=<sp/>YYPACT_NINF)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyn<sp/>+=<sp/>YYTERROR;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;=<sp/>yyn<sp/>&amp;&amp;<sp/>yyn<sp/>&lt;=<sp/>YYLAST<sp/>&amp;&amp;<sp/>yycheck[yyn]<sp/>==<sp/>YYTERROR)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyn<sp/>=<sp/>yytable[yyn];</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>yyn)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pop<sp/>the<sp/>current<sp/>state<sp/>because<sp/>it<sp/>cannot<sp/>handle<sp/>the<sp/>error<sp/>token.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyssp<sp/>==<sp/>yyss)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YYABORT;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yydestruct<sp/>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>popping&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yystos[yystate],<sp/>yyvsp,<sp/>yyscanner,<sp/>jsgf);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYPOPSTACK<sp/>(1);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yystate<sp/>=<sp/>*yyssp;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YY_STACK_PRINT<sp/>(yyss,<sp/>yyssp);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>*++yyvsp<sp/>=<sp/>yylval;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shift<sp/>the<sp/>error<sp/>token.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>YY_SYMBOL_PRINT<sp/>(</highlight><highlight class="stringliteral">&quot;Shifting&quot;</highlight><highlight class="normal">,<sp/>yystos[yyn],<sp/>yyvsp,<sp/>yylsp);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/>yystate<sp/>=<sp/>yyn;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yynewstate;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------.</highlight></codeline>
<codeline lineno="1739"><highlight class="comment">|<sp/>yyacceptlab<sp/>--<sp/>YYACCEPT<sp/>comes<sp/>here.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1740"><highlight class="comment">`-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal">yyacceptlab:</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/>yyresult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyreturn;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------.</highlight></codeline>
<codeline lineno="1746"><highlight class="comment">|<sp/>yyabortlab<sp/>--<sp/>YYABORT<sp/>comes<sp/>here.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1747"><highlight class="comment">`-----------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal">yyabortlab:</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>yyresult<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yyreturn;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(yyoverflow)<sp/>||<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="1753"><highlight class="preprocessor"></highlight><highlight class="comment">/*-------------------------------------------------.</highlight></codeline>
<codeline lineno="1754"><highlight class="comment">|<sp/>yyexhaustedlab<sp/>--<sp/>memory<sp/>exhaustion<sp/>comes<sp/>here.<sp/><sp/>|</highlight></codeline>
<codeline lineno="1755"><highlight class="comment">`-------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal">yyexhaustedlab:</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/>yyerror<sp/>(yyscanner,<sp/>jsgf,<sp/>YY_(</highlight><highlight class="stringliteral">&quot;memory<sp/>exhausted&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/>yyresult<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1761"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal">yyreturn:</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yychar<sp/>!=<sp/>YYEMPTY)</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>yydestruct<sp/>(</highlight><highlight class="stringliteral">&quot;Cleanup:<sp/>discarding<sp/>lookahead&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yytoken,<sp/>&amp;yylval,<sp/>yyscanner,<sp/>jsgf);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>not<sp/>reclaim<sp/>the<sp/>symbols<sp/>of<sp/>the<sp/>rule<sp/>which<sp/>action<sp/>triggered</highlight></codeline>
<codeline lineno="1767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>this<sp/>YYABORT<sp/>or<sp/>YYACCEPT.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>YYPOPSTACK<sp/>(yylen);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>YY_STACK_PRINT<sp/>(yyss,<sp/>yyssp);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yyssp<sp/>!=<sp/>yyss)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yydestruct<sp/>(</highlight><highlight class="stringliteral">&quot;Cleanup:<sp/>popping&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yystos[*yyssp],<sp/>yyvsp,<sp/>yyscanner,<sp/>jsgf);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YYPOPSTACK<sp/>(1);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>yyoverflow</highlight></codeline>
<codeline lineno="1777"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyss<sp/>!=<sp/>yyssa)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>YYSTACK_FREE<sp/>(yyss);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1780"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>YYERROR_VERBOSE</highlight></codeline>
<codeline lineno="1781"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yymsg<sp/>!=<sp/>yymsgbuf)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>YYSTACK_FREE<sp/>(yymsg);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1784"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>YYID<sp/>is<sp/>used.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>YYID<sp/>(yyresult);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Line<sp/>1675<sp/>of<sp/>yacc.c<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>150<sp/>&quot;jsgf_parser.y&quot;</highlight></codeline>
<codeline lineno="1792"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal">yyerror(yyscan_t<sp/>lex,<sp/><ref refid="structjsgf__s" kindref="compound">jsgf_t</ref><sp/>*jsgf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="err_8h_1a87a0a12135a290cf16d06b63fcfa0ccf" kindref="member">E_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>at<sp/>line<sp/>%d<sp/>current<sp/>token<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>yyget_lineno(lex),<sp/>yyget_text(lex));</highlight></codeline>
<codeline lineno="1798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/lm/jsgf_parser.c"/>
  </compounddef>
</doxygen>
