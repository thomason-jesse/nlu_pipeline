<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="fixpoint_8h" kind="file">
    <compoundname>fixpoint.h</compoundname>
    <includes local="no">limits.h</includes>
    <includes refid="sphinxbase__export_8h" local="no">sphinxbase/sphinxbase_export.h</includes>
    <includes refid="prim__type_8h" local="no">sphinxbase/prim_type.h</includes>
    <includedby refid="fe_8h" local="no">include/sphinxbase/fe.h</includedby>
    <includedby refid="fe__interface_8c" local="yes">src/libsphinxbase/fe/fe_interface.c</includedby>
    <includedby refid="fe__internal_8h" local="yes">src/libsphinxbase/fe/fe_internal.h</includedby>
    <includedby refid="fe__noise_8h" local="yes">src/libsphinxbase/fe/fe_noise.h</includedby>
    <includedby refid="fe__type_8h" local="yes">src/libsphinxbase/fe/fe_type.h</includedby>
    <includedby refid="fe__sigproc_8c" local="yes">src/libsphinxbase/fe/fe_sigproc.c</includedby>
    <includedby refid="fixlog_8c" local="yes">src/libsphinxbase/fe/fixlog.c</includedby>
    <includedby refid="yin_8c" local="yes">src/libsphinxbase/fe/yin.c</includedby>
    <incdepgraph>
      <node id="498">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>limits.h</label>
      </node>
      <node id="499">
        <label>sphinx_config.h</label>
      </node>
      <node id="495">
        <label>include/sphinxbase/fixpoint.h</label>
        <link refid="fixpoint.h"/>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
      </node>
      <node id="497">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="502">
        <label>include/sphinxbase/agc.h</label>
        <link refid="agc_8h"/>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
      </node>
      <node id="517">
        <label>src/libsphinxbase/fe/fe_warp_piecewise_linear.c</label>
        <link refid="fe__warp__piecewise__linear_8c_source"/>
      </node>
      <node id="526">
        <label>src/libsphinxbase/fe/fe_warp_piecewise_linear.h</label>
        <link refid="fe__warp__piecewise__linear_8h_source"/>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>src/libsphinxbase/fe/fe_warp_affine.c</label>
        <link refid="fe__warp__affine_8c_source"/>
      </node>
      <node id="525">
        <label>src/libsphinxbase/fe/fe_warp_affine.h</label>
        <link refid="fe__warp__affine_8h_source"/>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
      </node>
      <node id="529">
        <label>src/sphinx_fe/sphinx_fe.c</label>
        <link refid="sphinx__fe_8c_source"/>
      </node>
      <node id="523">
        <label>src/libsphinxbase/fe/fe_prespch_buf.c</label>
        <link refid="fe__prespch__buf_8c_source"/>
      </node>
      <node id="522">
        <label>src/libsphinxbase/fe/fe_prespch_buf.h</label>
        <link refid="fe__prespch__buf_8h_source"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>src/libsphinxbase/fe/fe_type.h</label>
        <link refid="fe__type_8h_source"/>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>src/libsphinxbase/fe/fe_sigproc.c</label>
        <link refid="fe__sigproc_8c_source"/>
      </node>
      <node id="518">
        <label>src/libsphinxbase/fe/fe_noise.c</label>
        <link refid="fe__noise_8c_source"/>
      </node>
      <node id="500">
        <label>include/sphinxbase/fixpoint.h</label>
        <link refid="fixpoint.h"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
      </node>
      <node id="520">
        <label>src/libsphinxbase/fe/fe_noise.h</label>
        <link refid="fe__noise_8h_source"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
      </node>
      <node id="527">
        <label>src/sphinx_adtools/cont_seg.c</label>
        <link refid="cont__seg_8c_source"/>
      </node>
      <node id="506">
        <label>src/libsphinxbase/feat/agc.c</label>
        <link refid="agc_8c_source"/>
      </node>
      <node id="507">
        <label>include/sphinxbase/cmn.h</label>
        <link refid="cmn_8h"/>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
      </node>
      <node id="514">
        <label>src/libsphinxbase/fe/fe_warp.c</label>
        <link refid="fe__warp_8c_source"/>
      </node>
      <node id="512">
        <label>src/libsphinxbase/fe/fe_warp.h</label>
        <link refid="fe__warp_8h_source"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
      </node>
      <node id="505">
        <label>src/libsphinxbase/feat/lda.c</label>
        <link refid="lda_8c_source"/>
      </node>
      <node id="519">
        <label>src/libsphinxbase/fe/fixlog.c</label>
        <link refid="fixlog_8c_source"/>
      </node>
      <node id="501">
        <label>include/sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>src/libsphinxbase/feat/cmn.c</label>
        <link refid="cmn_8c_source"/>
      </node>
      <node id="504">
        <label>src/libsphinxbase/feat/feat.c</label>
        <link refid="feat_8c_source"/>
      </node>
      <node id="511">
        <label>src/libsphinxbase/fe/fe_interface.c</label>
        <link refid="fe__interface_8c_source"/>
      </node>
      <node id="516">
        <label>src/libsphinxbase/fe/fe_warp_inverse_linear.c</label>
        <link refid="fe__warp__inverse__linear_8c_source"/>
      </node>
      <node id="530">
        <label>src/libsphinxbase/fe/yin.c</label>
        <link refid="yin_8c"/>
      </node>
      <node id="524">
        <label>src/libsphinxbase/fe/fe_warp_inverse_linear.h</label>
        <link refid="fe__warp__inverse__linear_8h_source"/>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>src/libsphinxbase/feat/cmn_prior.c</label>
        <link refid="cmn__prior_8c_source"/>
      </node>
      <node id="528">
        <label>src/sphinx_fe/cmd_ln_defn.h</label>
        <link refid="cmd__ln__defn_8h_source"/>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>src/libsphinxbase/fe/fe_internal.h</label>
        <link refid="fe__internal_8h_source"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>include/sphinxbase/feat.h</label>
        <link refid="feat_8h"/>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fixpoint_8h_1ad79f9fd4d879838fd99528711b86261d" prot="public" static="no">
        <name>DEFAULT_RADIX</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="59" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1a4e52ca995b0bbaf6ec0f2fd0c1e288c0" prot="public" static="no">
        <name>FLOAT2FIX_ANY</name>
        <param><defname>x</defname></param>
        <param><defname>radix</defname></param>
        <initializer>(((x)&lt;0.0) ? \
	((fixed32)((x)*(float32)(1&lt;&lt;(radix)) - 0.5)) \
	: ((fixed32)((x)*(float32)(1&lt;&lt;(radix)) + 0.5)))</initializer>
        <briefdescription>
<para>Convert floating point to fixed point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="66" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1ac61af2281f0e3783c525521965ab3d5e" prot="public" static="no">
        <name>FLOAT2FIX</name>
        <param><defname>x</defname></param>
        <initializer>FLOAT2FIX_ANY(x,DEFAULT_RADIX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="70" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1ad3e36db317de32df806af13c913efe5e" prot="public" static="no">
        <name>FIX2FLOAT_ANY</name>
        <param><defname>x</defname></param>
        <param><defname>radix</defname></param>
        <initializer>((float32)(x)/(1&lt;&lt;(radix)))</initializer>
        <briefdescription>
<para>Convert fixed point to floating point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="72" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1aba306b71baa14d745ec2b66e9dde0cb9" prot="public" static="no">
        <name>FIX2FLOAT</name>
        <param><defname>x</defname></param>
        <initializer>FIX2FLOAT_ANY(x,DEFAULT_RADIX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="73" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1af7b8ef5662b9a5c1f670e21c6065d879" prot="public" static="no">
        <name>FIXMUL</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>FIXMUL_ANY(a,b,DEFAULT_RADIX)</initializer>
        <briefdescription>
<para>Multiply two fixed point numbers with an arbitrary radix point. </para>        </briefdescription>
        <detaileddescription>
<para>A veritable multiplicity of implementations exist, starting with the fastest ones... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="105" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1a34727956beb286225e5433c5f9d19317" prot="public" static="no">
        <name>FIXMUL_ANY</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>radix</defname></param>
        <initializer>({ \
	int32 _ah, _bh; \
	uint32 _al, _bl, _t, c; \
	_ah = ((int32)(a)) &gt;&gt; 16; \
	_bh = ((int32)(b)) &gt;&gt; 16; \
	_al = ((uint32)(a)) &amp; 0xffff; \
	_bl = ((uint32)(b)) &amp; 0xffff; \
	_t = _ah * _bl + _al * _bh; \
	c = (fixed32)(((_al * _bl) &gt;&gt; (radix)) \
		      + ((_ah * _bh) &lt;&lt; (32 - (radix))) \
		      + ((radix) &gt; 16 ? (_t &gt;&gt; (radix - 16)) : (_t &lt;&lt; (16 - radix)))); \
	c;})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="106" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1aad315c28d903cf311f6a2b788f9fbf82" prot="public" static="no">
        <name>MIN_FIXLOG</name>
        <initializer>-2829416  /* log(1e-300) * (1&lt;&lt;DEFAULT_RADIX) */</initializer>
        <briefdescription>
<para>Minimum value representable in log format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="122" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1a63a72390ed8960200261a45ee11e1223" prot="public" static="no">
        <name>MIN_FIXLOG2</name>
        <initializer>-4081985 /* log2(1e-300) * (1&lt;&lt;DEFAULT_RADIX) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="123" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1aed18e9309cd0bd44008dc8b84a8278fe" prot="public" static="no">
        <name>FIXLN_2</name>
        <initializer>((fixed32)(0.693147180559945 * (1&lt;&lt;DEFAULT_RADIX)))</initializer>
        <briefdescription>
<para>Fixed-point representation of log(2) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="125" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fixpoint_8h_1af1836d31f1d25cfecdecb0abeee41e40" prot="public" static="no">
        <name>FIXLN</name>
        <param><defname>x</defname></param>
        <initializer>(fixlog(x) - (FIXLN_2 * DEFAULT_RADIX))</initializer>
        <briefdescription>
<para>Take natural logarithm of a fixedpoint number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="127" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fixpoint_8h_1a27c554ddc65d9370be4e6cee795351dc" prot="public" static="no">
        <type>int32</type>
        <definition>typedef int32 fixed32</definition>
        <argsstring></argsstring>
        <name>fixed32</name>
        <briefdescription>
<para>Fixed-point computation type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="63" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fixpoint_8h_1af1b93bf6736f884072d462868b18216e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fixlog</definition>
        <argsstring>(uint32 x)</argsstring>
        <name>fixlog</name>
        <param>
          <type>uint32</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Take natural logarithm of an integer, yielding a fixedpoint number with DEFAULT_RADIX as radix point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="133" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fixlog.c" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="fixpoint_8h_1ad4af1aa819366bcee1aed8a428b7f56d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32</type>
        <definition>int32 fixlog2</definition>
        <argsstring>(uint32 x)</argsstring>
        <name>fixlog2</name>
        <param>
          <type>uint32</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Take base-2 logarithm of an integer, yielding a fixedpoint number with DEFAULT_RADIX as radix point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h" line="138" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/fe/fixlog.c" bodystart="189" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2005<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fixed-point<sp/>arithmetic<sp/>macros.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Author:<sp/>David<sp/>Huggins-Daines<sp/>&lt;dhuggins@cs.cmu.edu&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_FIXPOINT_H_</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_FIXPOINT_H_</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Win32/WinCE<sp/>DLL<sp/>gunk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/sphinxbase_export.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prim__type_8h" kindref="compound">sphinxbase/prim_type.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Fool<sp/>Emacs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEFAULT_RADIX</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_RADIX<sp/>12</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="63"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32<sp/>fixed32;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">#define<sp/>FLOAT2FIX_ANY(x,radix)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)&lt;0.0)<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((fixed32)((x)*(float32)(1&lt;&lt;(radix))<sp/>-<sp/>0.5))<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((fixed32)((x)*(float32)(1&lt;&lt;(radix))<sp/>+<sp/>0.5)))</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FLOAT2FIX(x)<sp/>FLOAT2FIX_ANY(x,DEFAULT_RADIX)</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">#define<sp/>FIX2FLOAT_ANY(x,radix)<sp/>((float32)(x)/(1&lt;&lt;(radix)))</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FIX2FLOAT(x)<sp/>FIX2FLOAT_ANY(x,DEFAULT_RADIX)</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor">#if<sp/>defined(__arm__)<sp/>&amp;&amp;<sp/>!defined(__thumb__)</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>This<sp/>works<sp/>on<sp/>most<sp/>modern<sp/>ARMs<sp/>but<sp/>*only*<sp/>in<sp/>ARM<sp/>mode<sp/>(for<sp/>obvious</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>reasons),<sp/>so<sp/>don&apos;t<sp/>use<sp/>it<sp/>in<sp/>Thumb<sp/>mode<sp/>(but<sp/>why<sp/>are<sp/>you<sp/>building</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>signal<sp/>processing<sp/>code<sp/>in<sp/>Thumb<sp/>mode?!)</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIXMUL(a,b)<sp/>FIXMUL_ANY(a,b,DEFAULT_RADIX)</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FIXMUL_ANY(a,b,r)<sp/>({<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>cl,<sp/>ch,<sp/>_a<sp/>=<sp/>a,<sp/>_b<sp/>=<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>(&quot;smull<sp/>%0,<sp/>%1,<sp/>%2,<sp/>%3\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;mov<sp/>%0,<sp/>%0,<sp/>lsr<sp/>%4\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;orr<sp/>%0,<sp/>%0,<sp/>%1,<sp/>lsl<sp/>%5\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;=&amp;r&quot;<sp/>(cl),<sp/>&quot;=&amp;r&quot;<sp/>(ch)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;r&quot;<sp/>(_a),<sp/>&quot;r&quot;<sp/>(_b),<sp/>&quot;i&quot;<sp/>(r),<sp/>&quot;i&quot;<sp/>(32-(r)));\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>cl;<sp/>})</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)<sp/>||<sp/>(defined(HAVE_LONG_LONG)<sp/>&amp;&amp;<sp/>SIZEOF_LONG_LONG<sp/>==<sp/>8)<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Standard<sp/>systems*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIXMUL(a,b)<sp/>FIXMUL_ANY(a,b,DEFAULT_RADIX)</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FIXMUL_ANY(a,b,radix)<sp/>((fixed32)(((int64)(a)*(b))&gt;&gt;(radix)))</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Most<sp/>general<sp/>case<sp/>where<sp/>&apos;long<sp/>long&apos;<sp/>doesn&apos;t<sp/>exist<sp/>or<sp/>is<sp/>slow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIXMUL(a,b)<sp/>FIXMUL_ANY(a,b,DEFAULT_RADIX)</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FIXMUL_ANY(a,b,radix)<sp/>({<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>_ah,<sp/>_bh;<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>_al,<sp/>_bl,<sp/>_t,<sp/>c;<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ah<sp/>=<sp/>((int32)(a))<sp/>&gt;&gt;<sp/>16;<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bh<sp/>=<sp/>((int32)(b))<sp/>&gt;&gt;<sp/>16;<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_al<sp/>=<sp/>((uint32)(a))<sp/>&amp;<sp/>0xffff;<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bl<sp/>=<sp/>((uint32)(b))<sp/>&amp;<sp/>0xffff;<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_t<sp/>=<sp/>_ah<sp/>*<sp/>_bl<sp/>+<sp/>_al<sp/>*<sp/>_bh;<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(fixed32)(((_al<sp/>*<sp/>_bl)<sp/>&gt;&gt;<sp/>(radix))<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((_ah<sp/>*<sp/>_bh)<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>(radix)))<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((radix)<sp/>&gt;<sp/>16<sp/>?<sp/>(_t<sp/>&gt;&gt;<sp/>(radix<sp/>-<sp/>16))<sp/>:<sp/>(_t<sp/>&lt;&lt;<sp/>(16<sp/>-<sp/>radix))));<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c;})</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Various<sp/>fixed-point<sp/>logarithmic<sp/>functions<sp/>that<sp/>we<sp/>need.<sp/>*/</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor">#define<sp/>MIN_FIXLOG<sp/>-2829416<sp/><sp/></highlight><highlight class="comment">/*<sp/>log(1e-300)<sp/>*<sp/>(1&lt;&lt;DEFAULT_RADIX)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MIN_FIXLOG2<sp/>-4081985<sp/></highlight><highlight class="comment">/*<sp/>log2(1e-300)<sp/>*<sp/>(1&lt;&lt;DEFAULT_RADIX)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor">#define<sp/>FIXLN_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((fixed32)(0.693147180559945<sp/>*<sp/>(1&lt;&lt;DEFAULT_RADIX)))</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor">#define<sp/>FIXLN(x)<sp/>(fixlog(x)<sp/>-<sp/>(FIXLN_2<sp/>*<sp/>DEFAULT_RADIX))</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">int32<sp/>fixlog(uint32<sp/>x);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">int32<sp/>fixlog2(uint32<sp/>x);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_FIXPOINT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/fixpoint.h"/>
  </compounddef>
</doxygen>
