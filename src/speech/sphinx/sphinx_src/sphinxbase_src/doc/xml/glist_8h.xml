<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="glist_8h" kind="file">
    <compoundname>glist.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="sphinxbase__export_8h" local="no">sphinxbase/sphinxbase_export.h</includes>
    <includes refid="prim__type_8h" local="no">sphinxbase/prim_type.h</includes>
    <includedby refid="fsg__model_8h" local="no">include/sphinxbase/fsg_model.h</includedby>
    <includedby refid="hash__table_8h" local="no">include/sphinxbase/hash_table.h</includedby>
    <includedby refid="feat_8c" local="yes">src/libsphinxbase/feat/feat.c</includedby>
    <includedby refid="jsgf__internal_8h" local="no">src/libsphinxbase/lm/jsgf_internal.h</includedby>
    <includedby refid="glist_8c" local="yes">src/libsphinxbase/util/glist.c</includedby>
    <includedby refid="listelem__alloc_8c" local="yes">src/libsphinxbase/util/listelem_alloc.c</includedby>
    <incdepgraph>
      <node id="565">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="566" relation="include">
        </childnode>
      </node>
      <node id="563">
        <label>stdlib.h</label>
      </node>
      <node id="562">
        <label>include/sphinxbase/glist.h</label>
        <link refid="glist.h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
      </node>
      <node id="566">
        <label>sphinx_config.h</label>
      </node>
      <node id="564">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="571">
        <label>src/libsphinxbase/lm/jsgf_internal.h</label>
        <link refid="jsgf__internal_8h"/>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="572" relation="include">
        </childnode>
        <childnode refid="573" relation="include">
        </childnode>
      </node>
      <node id="589">
        <label>src/libsphinxbase/util/cmd_ln.c</label>
        <link refid="cmd__ln_8c_source"/>
      </node>
      <node id="582">
        <label>src/libsphinxbase/lm/ngram_model_trie.c</label>
        <link refid="ngram__model__trie_8c_source"/>
      </node>
      <node id="580">
        <label>src/libsphinxbase/lm/ngram_model_trie.h</label>
        <link refid="ngram__model__trie_8h_source"/>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
      </node>
      <node id="581">
        <label>src/libsphinxbase/lm/ngram_model.c</label>
        <link refid="ngram__model_8c_source"/>
      </node>
      <node id="576">
        <label>include/sphinxbase/hash_table.h</label>
        <link refid="hash__table_8h"/>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="572" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
      </node>
      <node id="590">
        <label>src/libsphinxbase/util/hash_table.c</label>
        <link refid="hash__table_8c_source"/>
      </node>
      <node id="567">
        <label>include/sphinxbase/glist.h</label>
        <link refid="glist.h"/>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="575">
        <label>src/libsphinxbase/lm/fsg_model.c</label>
        <link refid="fsg__model_8c_source"/>
      </node>
      <node id="591">
        <label>src/sphinx_fe/sphinx_fe.c</label>
        <link refid="sphinx__fe_8c_source"/>
      </node>
      <node id="572">
        <label>src/libsphinxbase/lm/jsgf_parser.c</label>
        <link refid="jsgf__parser_8c_source"/>
      </node>
      <node id="568">
        <label>include/sphinxbase/fsg_model.h</label>
        <link refid="fsg__model_8h_source"/>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
      </node>
      <node id="594">
        <label>src/libsphinxbase/util/listelem_alloc.c</label>
        <link refid="listelem__alloc_8c_source"/>
      </node>
      <node id="579">
        <label>src/libsphinxbase/lm/lm_trie.c</label>
        <link refid="lm__trie_8c_source"/>
      </node>
      <node id="578">
        <label>src/libsphinxbase/lm/lm_trie.h</label>
        <link refid="lm__trie_8h_source"/>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
      </node>
      <node id="593">
        <label>src/libsphinxbase/util/glist.c</label>
        <link refid="glist_8c_source"/>
      </node>
      <node id="583">
        <label>src/libsphinxbase/lm/lm_trie_quant.c</label>
        <link refid="lm__trie__quant_8c_source"/>
      </node>
      <node id="588">
        <label>src/libsphinxbase/lm/lm_trie_quant.h</label>
        <link refid="lm__trie__quant_8h_source"/>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
      </node>
      <node id="585">
        <label>src/libsphinxbase/lm/ngram_model_set.c</label>
        <link refid="ngram__model__set_8c"/>
      </node>
      <node id="584">
        <label>src/libsphinxbase/lm/ngram_model_set.h</label>
        <link refid="ngram__model__set_8h"/>
        <childnode refid="585" relation="include">
        </childnode>
      </node>
      <node id="586">
        <label>src/libsphinxbase/lm/ngrams_raw.c</label>
        <link refid="ngrams__raw_8c_source"/>
      </node>
      <node id="587">
        <label>src/libsphinxbase/lm/ngrams_raw.h</label>
        <link refid="ngrams__raw_8h_source"/>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
      </node>
      <node id="569">
        <label>include/sphinxbase/jsgf.h</label>
        <link refid="jsgf_8h"/>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
      </node>
      <node id="592">
        <label>src/libsphinxbase/feat/feat.c</label>
        <link refid="feat_8c_source"/>
      </node>
      <node id="573">
        <label>src/libsphinxbase/lm/jsgf_scanner.c</label>
        <link refid="jsgf__scanner_8c_source"/>
      </node>
      <node id="577">
        <label>src/libsphinxbase/lm/ngram_model_internal.h</label>
        <link refid="ngram__model__internal_8h_source"/>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
      </node>
      <node id="574">
        <label>src/sphinx_jsgf2fsg/main.c</label>
        <link refid="main_8c_source"/>
      </node>
      <node id="570">
        <label>src/libsphinxbase/lm/jsgf.c</label>
        <link refid="jsgf_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structgnode__s" prot="public">gnode_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="glist_8h_1ace56682f14d84cc456c805d26fd86734" prot="public" static="no">
        <name>gnode_ptr</name>
        <param><defname>g</defname></param>
        <initializer>((g)-&gt;data.ptr)</initializer>
        <briefdescription>
<para>Head of a list of gnodes. </para>        </briefdescription>
        <detaileddescription>
<para>Access macros, for convenience </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="109" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="cmd__ln_8h_1a26707fc85e87d8999e368a680e7873cd" compoundref="cmd__ln_8c" startline="1042" endline="1075">cmd_ln_free_r</referencedby>
        <referencedby refid="jsgf_8c_1a0a5185af0b0f1c19d85ae553c5ecc51b" compoundref="jsgf_8c" startline="108" endline="139">jsgf_grammar_free</referencedby>
        <referencedby refid="listelem__alloc_8h_1a94c02e93a0abaa2bd79636cbac6cced2" compoundref="listelem__alloc_8c" startline="121" endline="131">listelem_alloc_free</referencedby>
        <referencedby refid="listelem__alloc_8h_1a74e610ac90e2b0696b2aedef4289d8f3" compoundref="listelem__alloc_8c" startline="233" endline="254">listelem_get_item</referencedby>
        <referencedby refid="listelem__alloc_8h_1a838d9361ba76a89a834a7ea6a185b57d" compoundref="listelem__alloc_8c" startline="273" endline="294">listelem_stats</referencedby>
        <referencedby refid="ngram__model_8h_1a9b2a86c23543158754373c5456fe890d" compoundref="ngram__model_8c" startline="1027" endline="1063">ngram_model_read_classdef</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
      </memberdef>
      <memberdef kind="define" id="glist_8h_1a7daab0205c40d1b449529ee4cc54522b" prot="public" static="no">
        <name>gnode_int32</name>
        <param><defname>g</defname></param>
        <initializer>((g)-&gt;data.i)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="110" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glist_8h_1a3af0cc8d5d612e85fa433ac3edf42fd6" prot="public" static="no">
        <name>gnode_uint32</name>
        <param><defname>g</defname></param>
        <initializer>((g)-&gt;data.ui)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="111" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glist_8h_1aaf6a2bdc69642303426c20fc0bdfa5f6" prot="public" static="no">
        <name>gnode_float32</name>
        <param><defname>g</defname></param>
        <initializer>((float32)(g)-&gt;data.fl)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="112" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glist_8h_1abfea8eee77afc1e3046ef33ae6c0f5b4" prot="public" static="no">
        <name>gnode_float64</name>
        <param><defname>g</defname></param>
        <initializer>((g)-&gt;data.fl)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="113" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glist_8h_1a33fc794db097ba2a5a36eba12c418993" prot="public" static="no">
        <name>gnode_next</name>
        <param><defname>g</defname></param>
        <initializer>((g)-&gt;next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="114" column="9" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="glist_8h_1a35eee566c2974c9a3e3055daf1611793" prot="public" static="no">
        <type>struct <ref refid="structgnode__s" kindref="compound">gnode_s</ref></type>
        <definition>typedef struct gnode_s  gnode_t</definition>
        <argsstring></argsstring>
        <name>gnode_t</name>
        <briefdescription>
<para>A node in a generic list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="glist_8h_1a576a9ce77a5af8b912e75b32bce607f2" prot="public" static="no">
        <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>typedef gnode_t* glist_t</definition>
        <argsstring></argsstring>
        <name>glist_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="104" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="glist_8h_1a77a9c20b7df5a289477af405ab778377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>SPHINXBASE_EXPORT glist_t glist_add_ptr</definition>
        <argsstring>(glist_t g, void *ptr)</argsstring>
        <name>glist_add_ptr</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
          <briefdescription><para>a pointer </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node, with the given user-defined data, at the HEAD of the given generic list. </para>        </briefdescription>
        <detaileddescription>
<para>Return the new list thus formed. g may be NULL to indicate an initially empty list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="123" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="74" bodyend="82"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="hash__table_8h_1a61f59389f05d8871003da4692a9c2acc" compoundref="hash__table_8c" startline="623" endline="650">hash_table_tolist</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a28adfcc24a784aaed1a0b3c4c4de4c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>SPHINXBASE_EXPORT glist_t glist_add_int32</definition>
        <argsstring>(glist_t g, int32 val)</argsstring>
        <name>glist_add_int32</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>val</declname>
          <briefdescription><para>an integer value </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing an integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="131" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="86" bodyend="94"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1aeb741d435322f34df5e5d3a99abf00de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>SPHINXBASE_EXPORT glist_t glist_add_uint32</definition>
        <argsstring>(glist_t g, uint32 val)</argsstring>
        <name>glist_add_uint32</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>uint32</type>
          <declname>val</declname>
          <briefdescription><para>an unsigned integer value </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing an unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="138" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="98" bodyend="106"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>SPHINXBASE_EXPORT glist_t glist_add_float32</definition>
        <argsstring>(glist_t g, float32 val)</argsstring>
        <name>glist_add_float32</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>float32</type>
          <declname>val</declname>
          <briefdescription><para>a float32 vlaue </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing a single-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="145" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="110" bodyend="118"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a5bdd11639ef5846abb7ceb6caf059f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>SPHINXBASE_EXPORT glist_t glist_add_float64</definition>
        <argsstring>(glist_t g, float64 val)</argsstring>
        <name>glist_add_float64</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>a link list </para></briefdescription>
        </param>
        <param>
          <type>float64</type>
          <declname>val</declname>
          <briefdescription><para>a float64 vlaue </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and prepend a new list node containing a double-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="152" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="122" bodyend="130"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a2d641da6b349c1c939e3b954382513ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* glist_insert_ptr</definition>
        <argsstring>(gnode_t *gn, void *ptr)</argsstring>
        <name>glist_insert_ptr</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which ptr will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
          <briefdescription><para>pointer inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node, with the given user-defined data, after the given generic node gn. </para>        </briefdescription>
        <detaileddescription>
<para>gn cannot be NULL. Return ptr to the newly created gnode_t. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="164" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="187" bodyend="197"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a327b6478ee05ac17e3c3b3189579413e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* glist_insert_int32</definition>
        <argsstring>(gnode_t *gn, int32 val)</argsstring>
        <name>glist_insert_int32</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>int32</type>
          <declname>val</declname>
          <briefdescription><para>int32 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing an integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="171" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="201" bodyend="211"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1ab7e58ee641d3648f047eef70a20a4647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* glist_insert_uint32</definition>
        <argsstring>(gnode_t *gn, uint32 val)</argsstring>
        <name>glist_insert_uint32</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>uint32</type>
          <declname>val</declname>
          <briefdescription><para>uint32 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing an unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="178" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="215" bodyend="226"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1aff08aed022168872fc9d30cd299df2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* glist_insert_float32</definition>
        <argsstring>(gnode_t *gn, float32 val)</argsstring>
        <name>glist_insert_float32</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>float32</type>
          <declname>val</declname>
          <briefdescription><para>float32 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing a single-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="185" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="230" bodyend="240"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a97a682e38319dd8f67765732467110f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* glist_insert_float64</definition>
        <argsstring>(gnode_t *gn, float64 val)</argsstring>
        <name>glist_insert_float64</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
          <briefdescription><para>a generic node which a value will be inserted after it </para></briefdescription>
        </param>
        <param>
          <type>float64</type>
          <declname>val</declname>
          <briefdescription><para>float64 inserted </para></briefdescription>
        </param>
        <briefdescription>
<para>Create and insert a new list node containing a double-precision float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="192" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="244" bodyend="254"/>
        <references refid="ckd__alloc_8h_1aa00ef21903bc4f8a972488417adc8d2e" compoundref="ckd__alloc_8h" startline="248">ckd_calloc</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
        <definition>SPHINXBASE_EXPORT glist_t glist_reverse</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_reverse</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>input link list </para></briefdescription>
        </param>
        <briefdescription>
<para>Reverse the order of the given glist. </para>        </briefdescription>
        <detaileddescription>
<para>(glist_add() adds to the head; one might ultimately want the reverse of that.) NOTE: The list is reversed &quot;in place&quot;; i.e., no new memory is allocated. <simplesect kind="return"><para>: The head of the new list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="203" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="169" bodyend="183"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT int32</type>
        <definition>SPHINXBASE_EXPORT int32 glist_count</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_count</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
          <briefdescription><para>input link list </para></briefdescription>
        </param>
        <briefdescription>
<para>Count the number of element in a given link list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of elements in the given glist_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="212" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="145" bodyend="152"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a45380e15d2c33afc554fd60a8828580c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT void</type>
        <definition>SPHINXBASE_EXPORT void glist_free</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_free</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Free the given generic list; user-defined data contained within is not automatically freed. </para>        </briefdescription>
        <detaileddescription>
<para>The caller must have done that already. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="220" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="133" bodyend="142"/>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
        <referencedby refid="cmd__ln_8h_1a26707fc85e87d8999e368a680e7873cd" compoundref="cmd__ln_8c" startline="1042" endline="1075">cmd_ln_free_r</referencedby>
        <referencedby refid="jsgf_8c_1a0a5185af0b0f1c19d85ae553c5ecc51b" compoundref="jsgf_8c" startline="108" endline="139">jsgf_grammar_free</referencedby>
        <referencedby refid="listelem__alloc_8h_1a94c02e93a0abaa2bd79636cbac6cced2" compoundref="listelem__alloc_8c" startline="121" endline="131">listelem_alloc_free</referencedby>
        <referencedby refid="ngram__model_8h_1a0481b03a2bf03ef0a197da0a1f7d1caa" compoundref="ngram__model_8c" startline="831" endline="879">ngram_model_add_class</referencedby>
        <referencedby refid="ngram__model_8h_1a9b2a86c23543158754373c5456fe890d" compoundref="ngram__model_8c" startline="1027" endline="1063">ngram_model_read_classdef</referencedby>
        <referencedby refid="ngram__model__set_8c_1a1389a90bf32110fd7e56a73b6d39fa07" compoundref="ngram__model__set_8c" startline="185" endline="365">ngram_model_set_read</referencedby>
        <referencedby refid="feat_8h_1a613aca09a7f45f5ddc550efe685cb83b" compoundref="feat_8c" startline="169" endline="264">parse_subvecs</referencedby>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a68b51aea4de463b284a19668a713d502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* gnode_free</definition>
        <argsstring>(gnode_t *gn, gnode_t *pred)</argsstring>
        <name>gnode_free</name>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>gn</declname>
        </param>
        <param>
          <type><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
<para>Free the given node, gn, of a glist, pred being its predecessor in the list. </para>        </briefdescription>
        <detaileddescription>
<para>Return ptr to the next node in the list after the freed node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="228" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="257" bodyend="271"/>
        <references refid="ckd__alloc_8h_1a31c6b405558620ac37599737b5722fbf" compoundref="ckd__alloc_8c" startline="244" endline="252">ckd_free</references>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      <memberdef kind="function" id="glist_8h_1a6921d6b8b11cb9e05fadeaa091e89234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SPHINXBASE_EXPORT <ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref> *</type>
        <definition>SPHINXBASE_EXPORT gnode_t* glist_tail</definition>
        <argsstring>(glist_t g)</argsstring>
        <name>glist_tail</name>
        <param>
          <type><ref refid="structgnode__s" kindref="compound">glist_t</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Return the last node in the given list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h" line="236" column="1" bodyfile="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/src/libsphinxbase/util/glist.c" bodystart="156" bodyend="165"/>
        <references refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" compoundref="glist_8h" startline="102">gnode_s::next</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic linked-lists maintenance. </para>    </briefdescription>
    <detaileddescription>
<para>Only insert at the head of the list. A convenient little linked-list package, but a double-edged sword: the user must keep track of the data type within the linked list elements. When it was first written, there was no selective deletions except to destroy the entire list. This is modified in later version.</para><para>(C++ would be good for this, but that&apos;s a double-edged sword as well.) </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>glist.h<sp/>--<sp/>Module<sp/>for<sp/>maintaining<sp/>a<sp/>generic,<sp/>linear<sp/>linked-list<sp/>structure.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>CMU<sp/>ARPA<sp/>Speech<sp/>Project</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999<sp/>Carnegie<sp/>Mellon<sp/>University.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>**********************************************</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HISTORY</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>glist.h,v<sp/>$</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.9<sp/><sp/>2005/06/22<sp/>03:02:51<sp/><sp/>arthchan2003</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>1,<sp/>Fixed<sp/>doxygen<sp/>documentation,<sp/>2,<sp/>add<sp/><sp/>keyword.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.4<sp/><sp/>2005/05/03<sp/>04:09:11<sp/><sp/>archan</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Implemented<sp/>the<sp/>heart<sp/>of<sp/>word<sp/>copy<sp/>search.<sp/>For<sp/>every<sp/>ci-phone,<sp/>every<sp/>word<sp/>end,<sp/>a<sp/>tree<sp/>will<sp/>be<sp/>allocated<sp/>to<sp/>preserve<sp/>its<sp/>pathscore.<sp/><sp/>This<sp/>is<sp/>different<sp/>from<sp/>3.5<sp/>or<sp/>below,<sp/>only<sp/>the<sp/>best<sp/>score<sp/>for<sp/>a<sp/>particular<sp/>ci-phone,<sp/>regardless<sp/>of<sp/>the<sp/>word-ends<sp/>will<sp/>be<sp/>preserved<sp/>at<sp/>every<sp/>frame.<sp/><sp/>The<sp/>graph<sp/>propagation<sp/>will<sp/>not<sp/>collect<sp/>unused<sp/>word<sp/>tree<sp/>at<sp/>this<sp/>point.<sp/>srch_WST_propagate_wd_lv2<sp/>is<sp/>also<sp/>as<sp/>the<sp/>most<sp/>stupid<sp/>in<sp/>the<sp/>century.<sp/><sp/>But<sp/>well,<sp/>after<sp/>all,<sp/>everything<sp/>needs<sp/>a<sp/>start.<sp/><sp/>I<sp/>will<sp/>then<sp/>really<sp/>get<sp/>the<sp/>results<sp/>from<sp/>the<sp/>search<sp/>and<sp/>see<sp/>how<sp/>it<sp/>looks.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2005/03/30<sp/>01:22:48<sp/><sp/>archan</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Fixed<sp/>mistakes<sp/>in<sp/>last<sp/>updates.<sp/>Add</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>09-Mar-1999<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Added<sp/>glist_chkdup_*().</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>13-Feb-1999<sp/><sp/>M<sp/>K<sp/>Ravishankar<sp/>(rkm@cs.cmu.edu)<sp/>at<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Created<sp/>from<sp/>earlier<sp/>version.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor">#ifndef<sp/>_LIBUTIL_GLIST_H_</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_LIBUTIL_GLIST_H_</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Win32/WinCE<sp/>DLL<sp/>gunk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sphinxbase/sphinxbase_export.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prim__type_8h" kindref="compound">sphinxbase/prim_type.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Fool<sp/>Emacs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="100" refid="structgnode__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_s</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionanytype__s" kindref="compound">anytype_t</ref><sp/>data;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_s</ref><sp/>*<ref refid="structgnode__s_1a24798080e363f9ecf9f348022c582757" kindref="member">next</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="glist_8h_1a35eee566c2974c9a3e3055daf1611793" kindref="member">gnode_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="structgnode__s" kindref="compound">glist_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="glist_8h_1ace56682f14d84cc456c805d26fd86734" refkind="member"><highlight class="preprocessor">#define<sp/>gnode_ptr(g)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((g)-&gt;data.ptr)</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>gnode_int32(g)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((g)-&gt;data.i)</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>gnode_uint32(g)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((g)-&gt;data.ui)</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>gnode_float32(g)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((float32)(g)-&gt;data.fl)</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>gnode_float64(g)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((g)-&gt;data.fl)</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>gnode_next(g)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((g)-&gt;next)</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="glist_8h_1a77a9c20b7df5a289477af405ab778377" kindref="member">glist_add_ptr</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="glist_8h_1a28adfcc24a784aaed1a0b3c4c4de4c42" kindref="member">glist_add_int32</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>val<sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="glist_8h_1aeb741d435322f34df5e5d3a99abf00de" kindref="member">glist_add_uint32</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>val<sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="glist_8h_1a4fc4db2fbebd7b659554227d411f6737" kindref="member">glist_add_float32</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>val<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="glist_8h_1a5bdd11639ef5846abb7ceb6caf059f4e" kindref="member">glist_add_float64</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g,<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>val<sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1a2d641da6b349c1c939e3b954382513ba" kindref="member">glist_insert_ptr</ref><sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1a327b6478ee05ac17e3c3b3189579413e" kindref="member">glist_insert_int32</ref><sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32<sp/>val<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1ab7e58ee641d3648f047eef70a20a4647" kindref="member">glist_insert_uint32</ref><sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>val<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1aff08aed022168872fc9d30cd299df2ce" kindref="member">glist_insert_float32</ref><sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32<sp/>val<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1a97a682e38319dd8f67765732467110f9" kindref="member">glist_insert_float64</ref><sp/>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>val<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/><ref refid="glist_8h_1a399a2a093c6c4ce1012762e4c25c8185" kindref="member">glist_reverse</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="212"><highlight class="normal">int32<sp/><ref refid="glist_8h_1aeb046e39c540d2f5f792119ea0d24c48" kindref="member">glist_count</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glist_8h_1a45380e15d2c33afc554fd60a8828580c" kindref="member">glist_free</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1a68b51aea4de463b284a19668a713d502" kindref="member">gnode_free</ref>(<ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*gn,<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*pred</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">SPHINXBASE_EXPORT</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="structgnode__s" kindref="compound">gnode_t</ref><sp/>*<ref refid="glist_8h_1a6921d6b8b11cb9e05fadeaa091e89234" kindref="member">glist_tail</ref><sp/>(<ref refid="structgnode__s" kindref="compound">glist_t</ref><sp/>g);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/scratch/cluster/rcorona/nlu_pipeline/src/speech/libs/sphinxbase/include/sphinxbase/glist.h"/>
  </compounddef>
</doxygen>
